

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jul 04 21:51:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F876A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	strings
   192  0800                     __pstrings:	
   193  0800                     stringtab:	
   194  0800                     __stringtab:	
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197  0800  1BFF               	btfsc	btemp+1,7
   198  0801  280A               	ljmp	stringcode
   199  0802  1383               	bcf	3,7
   200  0803  187F               	btfsc	btemp+1,0
   201  0804  1783               	bsf	3,7
   202  0805  0800               	movf	0,w
   203  0806  0A84               	incf	4,f
   204  0807  1903               	skipnz
   205  0808  0AFF               	incf	btemp+1,f
   206  0809  0008               	return
   207  080A                     stringcode:	
   208  080A                     stringdir:	
   209  080A  3008               	movlw	high stringdir
   210  080B  008A               	movwf	10
   211  080C  0804               	movf	4,w
   212  080D  0A84               	incf	4,f
   213  080E  0782               	addwf	2,f
   214  080F                     __stringbase:	
   215  080F  3400               	retlw	0
   216  0810                     __end_of__stringtab:	
   217  0810                     __powers_:	
   218  0810  3400               	retlw	0
   219  0811  3400               	retlw	0
   220  0812  3480               	retlw	128
   221  0813  343F               	retlw	63
   222  0814  3400               	retlw	0
   223  0815  3400               	retlw	0
   224  0816  3420               	retlw	32
   225  0817  3441               	retlw	65
   226  0818  3400               	retlw	0
   227  0819  3400               	retlw	0
   228  081A  34C8               	retlw	200
   229  081B  3442               	retlw	66
   230  081C  3400               	retlw	0
   231  081D  3400               	retlw	0
   232  081E  347A               	retlw	122
   233  081F  3444               	retlw	68
   234  0820  3400               	retlw	0
   235  0821  3440               	retlw	64
   236  0822  341C               	retlw	28
   237  0823  3446               	retlw	70
   238  0824  3400               	retlw	0
   239  0825  3450               	retlw	80
   240  0826  34C3               	retlw	195
   241  0827  3447               	retlw	71
   242  0828  3400               	retlw	0
   243  0829  3424               	retlw	36
   244  082A  3474               	retlw	116
   245  082B  3449               	retlw	73
   246  082C  3480               	retlw	128
   247  082D  3496               	retlw	150
   248  082E  3418               	retlw	24
   249  082F  344B               	retlw	75
   250  0830  3420               	retlw	32
   251  0831  34BC               	retlw	188
   252  0832  34BE               	retlw	190
   253  0833  344C               	retlw	76
   254  0834  3428               	retlw	40
   255  0835  346B               	retlw	107
   256  0836  346E               	retlw	110
   257  0837  344E               	retlw	78
   258  0838  34F9               	retlw	249
   259  0839  3402               	retlw	2
   260  083A  3415               	retlw	21
   261  083B  3450               	retlw	80
   262  083C  34EC               	retlw	236
   263  083D  3478               	retlw	120
   264  083E  34AD               	retlw	173
   265  083F  3460               	retlw	96
   266  0840  34CA               	retlw	202
   267  0841  34F2               	retlw	242
   268  0842  3449               	retlw	73
   269  0843  3471               	retlw	113
   270  0844                     __end_of__powers_:	
   271  0844                     __npowers_:	
   272  0844  3400               	retlw	0
   273  0845  3400               	retlw	0
   274  0846  3480               	retlw	128
   275  0847  343F               	retlw	63
   276  0848  34CD               	retlw	205
   277  0849  34CC               	retlw	204
   278  084A  34CC               	retlw	204
   279  084B  343D               	retlw	61
   280  084C  340A               	retlw	10
   281  084D  34D7               	retlw	215
   282  084E  3423               	retlw	35
   283  084F  343C               	retlw	60
   284  0850  346F               	retlw	111
   285  0851  3412               	retlw	18
   286  0852  3483               	retlw	131
   287  0853  343A               	retlw	58
   288  0854  3417               	retlw	23
   289  0855  34B7               	retlw	183
   290  0856  34D1               	retlw	209
   291  0857  3438               	retlw	56
   292  0858  34AC               	retlw	172
   293  0859  34C5               	retlw	197
   294  085A  3427               	retlw	39
   295  085B  3437               	retlw	55
   296  085C  34BD               	retlw	189
   297  085D  3437               	retlw	55
   298  085E  3486               	retlw	134
   299  085F  3435               	retlw	53
   300  0860  3495               	retlw	149
   301  0861  34BF               	retlw	191
   302  0862  34D6               	retlw	214
   303  0863  3433               	retlw	51
   304  0864  3477               	retlw	119
   305  0865  34CC               	retlw	204
   306  0866  342B               	retlw	43
   307  0867  3432               	retlw	50
   308  0868  345F               	retlw	95
   309  0869  3470               	retlw	112
   310  086A  3489               	retlw	137
   311  086B  3430               	retlw	48
   312  086C  34FF               	retlw	255
   313  086D  34E6               	retlw	230
   314  086E  34DB               	retlw	219
   315  086F  342E               	retlw	46
   316  0870  3408               	retlw	8
   317  0871  34E5               	retlw	229
   318  0872  343C               	retlw	60
   319  0873  341E               	retlw	30
   320  0874  3460               	retlw	96
   321  0875  3442               	retlw	66
   322  0876  34A2               	retlw	162
   323  0877  340D               	retlw	13
   324  0878                     __end_of__npowers_:	
   325  0878                     _dpowers:	
   326  0878  3401               	retlw	1
   327  0879  3400               	retlw	0
   328  087A  3400               	retlw	0
   329  087B  3400               	retlw	0
   330  087C  340A               	retlw	10
   331  087D  3400               	retlw	0
   332  087E  3400               	retlw	0
   333  087F  3400               	retlw	0
   334  0880  3464               	retlw	100
   335  0881  3400               	retlw	0
   336  0882  3400               	retlw	0
   337  0883  3400               	retlw	0
   338  0884  34E8               	retlw	232
   339  0885  3403               	retlw	3
   340  0886  3400               	retlw	0
   341  0887  3400               	retlw	0
   342  0888  3410               	retlw	16
   343  0889  3427               	retlw	39
   344  088A  3400               	retlw	0
   345  088B  3400               	retlw	0
   346  088C  34A0               	retlw	160
   347  088D  3486               	retlw	134
   348  088E  3401               	retlw	1
   349  088F  3400               	retlw	0
   350  0890  3440               	retlw	64
   351  0891  3442               	retlw	66
   352  0892  340F               	retlw	15
   353  0893  3400               	retlw	0
   354  0894  3480               	retlw	128
   355  0895  3496               	retlw	150
   356  0896  3498               	retlw	152
   357  0897  3400               	retlw	0
   358  0898  3400               	retlw	0
   359  0899  34E1               	retlw	225
   360  089A  34F5               	retlw	245
   361  089B  3405               	retlw	5
   362  089C  3400               	retlw	0
   363  089D  34CA               	retlw	202
   364  089E  349A               	retlw	154
   365  089F  343B               	retlw	59
   366  08A0                     __end_of_dpowers:	
   367  001E                     _ADRESH	set	30
   368  001F                     _ADCON0	set	31
   369  00FA                     _GO_nDONE	set	250
   370  0032                     _RB2	set	50
   371  0031                     _RB1	set	49
   372  0037                     _RB7	set	55
   373  0036                     _RB6	set	54
   374  0035                     _RB5	set	53
   375  0034                     _RB4	set	52
   376  0086                     _TRISB	set	134
   377  009E                     _ADRESL	set	158
   378  009F                     _ADCON1	set	159
   379  08A0                     STR_5:	
   380  08A0  3443               	retlw	67	;'C'
   381  08A1  3475               	retlw	117	;'u'
   382  08A2  3472               	retlw	114	;'r'
   383  08A3  3472               	retlw	114	;'r'
   384  08A4  3420               	retlw	32	;' '
   385  08A5  344C               	retlw	76	;'L'
   386  08A6  3469               	retlw	105	;'i'
   387  08A7  346D               	retlw	109	;'m'
   388  08A8  3469               	retlw	105	;'i'
   389  08A9  3474               	retlw	116	;'t'
   390  08AA  3420               	retlw	32	;' '
   391  08AB  3400               	retlw	0
   392  08AC                     STR_2:	
   393  08AC  3420               	retlw	32	;' '
   394  08AD  3456               	retlw	86	;'V'
   395  08AE  3420               	retlw	32	;' '
   396  08AF  3420               	retlw	32	;' '
   397  08B0  3420               	retlw	32	;' '
   398  08B1  3420               	retlw	32	;' '
   399  08B2  3400               	retlw	0
   400  08B3                     STR_6:	
   401  08B3  3425               	retlw	37	;'%'
   402  08B4  342E               	retlw	46	;'.'
   403  08B5  3431               	retlw	49	;'1'
   404  08B6  3466               	retlw	102	;'f'
   405  08B7  3400               	retlw	0
   406  08B8                     STR_1:	
   407  08B8  3425               	retlw	37	;'%'
   408  08B9  342E               	retlw	46	;'.'
   409  08BA  3432               	retlw	50	;'2'
   410  08BB  3466               	retlw	102	;'f'
   411  08BC  3400               	retlw	0
   412  08BD                     STR_4:	
   413  08BD  3420               	retlw	32	;' '
   414  08BE  3441               	retlw	65	;'A'
   415  08BF  3420               	retlw	32	;' '
   416  08C0  3400               	retlw	0
   417  08C1                     STR_7:	
   418  08C1  3420               	retlw	32	;' '
   419  08C2  3441               	retlw	65	;'A'
   420  08C3  3400               	retlw	0
   421  08B8                     
   422                           ; #config settings
   423  0000                     
   424                           	psect	cinit
   425  07FC                     start_initialization:	
   426  07FC                     __initialization:	
   427  07FC                     end_of_initialization:	
   428                           ;End of C runtime variable initialization code
   429                           
   430  07FC                     __end_of__initialization:	
   431  07FC  0183               	clrf	3
   432  07FD  160A  118A  2BFC   	ljmp	_main	;jump to C main() function
   433                           
   434                           	psect	cstackBANK1
   435  00A0                     __pcstackBANK1:	
   436  00A0                     ?_sprintf:	
   437  00A0                     sprintf@f:	
   438                           ; 2 bytes @ 0x0
   439                           
   440                           
   441                           ; 1 bytes @ 0x0
   442  00A0                     	ds	5
   443  00A5                     ??_sprintf:	
   444                           
   445                           ; 1 bytes @ 0x5
   446  00A5                     	ds	5
   447  00AA                     _sprintf$798:	
   448                           
   449                           ; 4 bytes @ 0xA
   450  00AA                     	ds	4
   451  00AE                     sprintf@ap:	
   452                           
   453                           ; 1 bytes @ 0xE
   454  00AE                     	ds	1
   455  00AF                     sprintf@flag:	
   456                           
   457                           ; 2 bytes @ 0xF
   458  00AF                     	ds	2
   459  00B1                     sprintf@val:	
   460                           
   461                           ; 4 bytes @ 0x11
   462  00B1                     	ds	4
   463  00B5                     sprintf@eexp:	
   464                           
   465                           ; 2 bytes @ 0x15
   466  00B5                     	ds	2
   467  00B7                     sprintf@tmpval:	
   468                           
   469                           ; 4 bytes @ 0x17
   470  00B7                     	ds	4
   471  00BB                     sprintf@prec:	
   472                           
   473                           ; 2 bytes @ 0x1B
   474  00BB                     	ds	2
   475  00BD                     sprintf@sp:	
   476                           
   477                           ; 1 bytes @ 0x1D
   478  00BD                     	ds	1
   479  00BE                     sprintf@fval:	
   480                           
   481                           ; 4 bytes @ 0x1E
   482  00BE                     	ds	4
   483  00C2                     sprintf@c:	
   484                           
   485                           ; 1 bytes @ 0x22
   486  00C2                     	ds	1
   487  00C3                     ??_main:	
   488                           
   489                           ; 1 bytes @ 0x23
   490  00C3                     	ds	3
   491  00C6                     main@voltage:	
   492                           
   493                           ; 8 bytes @ 0x26
   494  00C6                     	ds	8
   495  00CE                     main@current:	
   496                           
   497                           ; 8 bytes @ 0x2E
   498  00CE                     	ds	8
   499  00D6                     main@current_limit:	
   500                           
   501                           ; 8 bytes @ 0x36
   502  00D6                     	ds	8
   503  00DE                     main@f:	
   504                           
   505                           ; 4 bytes @ 0x3E
   506  00DE                     	ds	4
   507  00E2                     main@adc:	
   508                           
   509                           ; 2 bytes @ 0x42
   510  00E2                     	ds	2
   511                           
   512                           	psect	cstackCOMMON
   513  0070                     __pcstackCOMMON:	
   514  0070                     ?_isdigit:	
   515  0070                     ?___fleq:	
   516                           ; 1 bit 
   517                           
   518  0070                     ?___flge:	
   519                           ; 1 bit 
   520                           
   521  0070                     ??_isdigit:	
   522                           ; 1 bit 
   523                           
   524  0070                     ?_Lcd_SetBit:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ??_Lcd_SetBit:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_Lcd_Cmd:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_Lcd_Start:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_Lcd_Print_Char:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_ADC_Initialize:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ??_ADC_Initialize:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?__Umul8_16:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_Lcd_Clear:	
   549                           ; 2 bytes @ 0x0
   550                           
   551  0070                     ?_ADC_Read:	
   552                           ; 2 bytes @ 0x0
   553                           
   554  0070                     ?_main:	
   555                           ; 2 bytes @ 0x0
   556                           
   557  0070                     ?___wmul:	
   558                           ; 2 bytes @ 0x0
   559                           
   560  0070                     ?___awmod:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     ?___lwmod:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ?__tdiv_to_l_:	
   567                           ; 2 bytes @ 0x0
   568                           
   569  0070                     ?__div_to_l_:	
   570                           ; 4 bytes @ 0x0
   571                           
   572  0070                     ?___lldiv:	
   573                           ; 4 bytes @ 0x0
   574                           
   575  0070                     ?___flneg:	
   576                           ; 4 bytes @ 0x0
   577                           
   578  0070                     ?___llmod:	
   579                           ; 4 bytes @ 0x0
   580                           
   581  0070                     ?___xxtofl:	
   582                           ; 4 bytes @ 0x0
   583                           
   584  0070                     Lcd_SetBit@data_bit:	
   585                           ; 4 bytes @ 0x0
   586                           
   587  0070                     _isdigit$606:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     __Umul8_16@multiplicand:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ___wmul@multiplier:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ___awmod@divisor:	
   597                           ; 2 bytes @ 0x0
   598                           
   599  0070                     ___lwmod@divisor:	
   600                           ; 2 bytes @ 0x0
   601                           
   602  0070                     ___lldiv@divisor:	
   603                           ; 2 bytes @ 0x0
   604                           
   605  0070                     __div_to_l_@f1:	
   606                           ; 4 bytes @ 0x0
   607                           
   608  0070                     ___fleq@ff1:	
   609                           ; 4 bytes @ 0x0
   610                           
   611  0070                     ___flge@ff1:	
   612                           ; 4 bytes @ 0x0
   613                           
   614  0070                     ___flneg@f1:	
   615                           ; 4 bytes @ 0x0
   616                           
   617  0070                     __tdiv_to_l_@f1:	
   618                           ; 4 bytes @ 0x0
   619                           
   620  0070                     ___llmod@divisor:	
   621                           ; 4 bytes @ 0x0
   622                           
   623  0070                     ___xxtofl@val:	
   624                           ; 4 bytes @ 0x0
   625                           
   626                           
   627                           ; 4 bytes @ 0x0
   628  0070                     	ds	1
   629  0071                     ??_Lcd_Cmd:	
   630  0071                     ??_Lcd_Print_Char:	
   631                           ; 1 bytes @ 0x1
   632                           
   633  0071                     isdigit@c:	
   634                           ; 1 bytes @ 0x1
   635                           
   636                           
   637                           ; 1 bytes @ 0x1
   638  0071                     	ds	1
   639  0072                     ??__Umul8_16:	
   640  0072                     ??_ADC_Read:	
   641                           ; 1 bytes @ 0x2
   642                           
   643  0072                     Lcd_Print_Char@Lower_Nibble:	
   644                           ; 1 bytes @ 0x2
   645                           
   646  0072                     ___wmul@multiplicand:	
   647                           ; 1 bytes @ 0x2
   648                           
   649  0072                     ___awmod@dividend:	
   650                           ; 2 bytes @ 0x2
   651                           
   652  0072                     ___lwmod@dividend:	
   653                           ; 2 bytes @ 0x2
   654                           
   655                           
   656                           ; 2 bytes @ 0x2
   657  0072                     	ds	1
   658  0073                     Lcd_Cmd@a:	
   659  0073                     Lcd_Print_Char@Upper_Nibble:	
   660                           ; 1 bytes @ 0x3
   661                           
   662                           
   663                           ; 1 bytes @ 0x3
   664  0073                     	ds	1
   665  0074                     ??_Lcd_Clear:	
   666  0074                     ?_Lcd_Set_Cursor:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     ??_Lcd_Start:	
   670                           ; 1 bytes @ 0x4
   671                           
   672  0074                     ??___wmul:	
   673                           ; 1 bytes @ 0x4
   674                           
   675  0074                     ??___awmod:	
   676                           ; 1 bytes @ 0x4
   677                           
   678  0074                     ??___flneg:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0074                     ??___lwmod:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  0074                     ??___xxtofl:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0074                     Lcd_Set_Cursor@b:	
   688                           ; 1 bytes @ 0x4
   689                           
   690  0074                     Lcd_Print_Char@data:	
   691                           ; 1 bytes @ 0x4
   692                           
   693  0074                     ADC_Read@channel:	
   694                           ; 1 bytes @ 0x4
   695                           
   696  0074                     ___wmul@product:	
   697                           ; 1 bytes @ 0x4
   698                           
   699  0074                     __Umul8_16@product:	
   700                           ; 2 bytes @ 0x4
   701                           
   702  0074                     ___lldiv@dividend:	
   703                           ; 2 bytes @ 0x4
   704                           
   705  0074                     __div_to_l_@f2:	
   706                           ; 4 bytes @ 0x4
   707                           
   708  0074                     ___fleq@ff2:	
   709                           ; 4 bytes @ 0x4
   710                           
   711  0074                     ___flge@ff2:	
   712                           ; 4 bytes @ 0x4
   713                           
   714  0074                     __tdiv_to_l_@f2:	
   715                           ; 4 bytes @ 0x4
   716                           
   717  0074                     ___llmod@dividend:	
   718                           ; 4 bytes @ 0x4
   719                           
   720                           
   721                           ; 4 bytes @ 0x4
   722  0074                     	ds	1
   723  0075                     ??_Lcd_Set_Cursor:	
   724  0075                     ___awmod@counter:	
   725                           ; 1 bytes @ 0x5
   726                           
   727  0075                     ___lwmod@counter:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     Lcd_Print_Char@i:	
   731                           ; 1 bytes @ 0x5
   732                           
   733                           
   734                           ; 2 bytes @ 0x5
   735  0075                     	ds	1
   736  0076                     ?___lwdiv:	
   737  0076                     ___awmod@sign:	
   738                           ; 2 bytes @ 0x6
   739                           
   740  0076                     ___lwdiv@divisor:	
   741                           ; 1 bytes @ 0x6
   742                           
   743  0076                     __Umul8_16@word_mpld:	
   744                           ; 2 bytes @ 0x6
   745                           
   746                           
   747                           ; 2 bytes @ 0x6
   748  0076                     	ds	1
   749  0077                     ?___awdiv:	
   750  0077                     Lcd_Set_Cursor@a:	
   751                           ; 2 bytes @ 0x7
   752                           
   753  0077                     Lcd_Print_Char@i_70:	
   754                           ; 1 bytes @ 0x7
   755                           
   756  0077                     ___awdiv@divisor:	
   757                           ; 2 bytes @ 0x7
   758                           
   759                           
   760                           ; 2 bytes @ 0x7
   761  0077                     	ds	1
   762  0078                     ??__tdiv_to_l_:	
   763  0078                     ??__div_to_l_:	
   764                           ; 1 bytes @ 0x8
   765                           
   766  0078                     ??___lldiv:	
   767                           ; 1 bytes @ 0x8
   768                           
   769  0078                     ??___fleq:	
   770                           ; 1 bytes @ 0x8
   771                           
   772  0078                     ??___flge:	
   773                           ; 1 bytes @ 0x8
   774                           
   775  0078                     ??___llmod:	
   776                           ; 1 bytes @ 0x8
   777                           
   778  0078                     Lcd_Set_Cursor@z:	
   779                           ; 1 bytes @ 0x8
   780                           
   781  0078                     ___xxtofl@sign:	
   782                           ; 1 bytes @ 0x8
   783                           
   784  0078                     __Umul8_16@multiplier:	
   785                           ; 1 bytes @ 0x8
   786                           
   787  0078                     ___lwdiv@dividend:	
   788                           ; 1 bytes @ 0x8
   789                           
   790                           
   791                           ; 2 bytes @ 0x8
   792  0078                     	ds	1
   793  0079                     ?_Lcd_Print_String:	
   794  0079                     Lcd_Set_Cursor@y:	
   795                           ; 1 bytes @ 0x9
   796                           
   797  0079                     ___llmod@counter:	
   798                           ; 1 bytes @ 0x9
   799                           
   800  0079                     ___xxtofl@exp:	
   801                           ; 1 bytes @ 0x9
   802                           
   803  0079                     Lcd_Print_String@a:	
   804                           ; 1 bytes @ 0x9
   805                           
   806  0079                     ___awdiv@dividend:	
   807                           ; 2 bytes @ 0x9
   808                           
   809  0079                     ___lldiv@quotient:	
   810                           ; 2 bytes @ 0x9
   811                           
   812                           
   813                           ; 4 bytes @ 0x9
   814  0079                     	ds	1
   815  007A                     ??___lwdiv:	
   816  007A                     Lcd_Set_Cursor@temp:	
   817                           ; 1 bytes @ 0xA
   818                           
   819  007A                     ___xxtofl@arg:	
   820                           ; 1 bytes @ 0xA
   821                           
   822                           
   823                           ; 4 bytes @ 0xA
   824  007A                     	ds	1
   825  007B                     ??_Lcd_Print_String:	
   826  007B                     ??___awdiv:	
   827                           ; 1 bytes @ 0xB
   828                           
   829  007B                     ___lwdiv@quotient:	
   830                           ; 1 bytes @ 0xB
   831                           
   832                           
   833                           ; 2 bytes @ 0xB
   834  007B                     	ds	2
   835  007D                     ___lldiv@counter:	
   836  007D                     ___lwdiv@counter:	
   837                           ; 1 bytes @ 0xD
   838                           
   839                           
   840                           ; 1 bytes @ 0xD
   841  007D                     	ds	1
   842  007E                     ??___flsub:	
   843                           
   844                           	psect	cstackBANK0
   845  0020                     __pcstackBANK0:	
   846                           ; 1 bytes @ 0xE
   847                           
   848  0020                     ___awdiv@counter:	
   849  0020                     Lcd_Print_String@i:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     __div_to_l_@quot:	
   853                           ; 2 bytes @ 0x0
   854                           
   855  0020                     __tdiv_to_l_@quot:	
   856                           ; 4 bytes @ 0x0
   857                           
   858                           
   859                           ; 4 bytes @ 0x0
   860  0020                     	ds	1
   861  0021                     ___awdiv@sign:	
   862                           
   863                           ; 1 bytes @ 0x1
   864  0021                     	ds	1
   865  0022                     ___awdiv@quotient:	
   866                           
   867                           ; 2 bytes @ 0x2
   868  0022                     	ds	2
   869  0024                     ?___flmul:	
   870  0024                     __div_to_l_@cntr:	
   871                           ; 4 bytes @ 0x4
   872                           
   873  0024                     __tdiv_to_l_@cntr:	
   874                           ; 1 bytes @ 0x4
   875                           
   876  0024                     ___flmul@b:	
   877                           ; 1 bytes @ 0x4
   878                           
   879                           
   880                           ; 4 bytes @ 0x4
   881  0024                     	ds	1
   882  0025                     __div_to_l_@exp1:	
   883  0025                     __tdiv_to_l_@exp1:	
   884                           ; 1 bytes @ 0x5
   885                           
   886                           
   887                           ; 1 bytes @ 0x5
   888  0025                     	ds	3
   889  0028                     ___flmul@a:	
   890                           
   891                           ; 4 bytes @ 0x8
   892  0028                     	ds	4
   893  002C                     ??___flmul:	
   894                           
   895                           ; 1 bytes @ 0xC
   896  002C                     	ds	5
   897  0031                     ___flmul@sign:	
   898                           
   899                           ; 1 bytes @ 0x11
   900  0031                     	ds	1
   901  0032                     ___flmul@grs:	
   902                           
   903                           ; 4 bytes @ 0x12
   904  0032                     	ds	4
   905  0036                     ___flmul@aexp:	
   906                           
   907                           ; 1 bytes @ 0x16
   908  0036                     	ds	1
   909  0037                     ___flmul@bexp:	
   910                           
   911                           ; 1 bytes @ 0x17
   912  0037                     	ds	1
   913  0038                     ___flmul@prod:	
   914                           
   915                           ; 4 bytes @ 0x18
   916  0038                     	ds	4
   917  003C                     ___flmul@temp:	
   918                           
   919                           ; 2 bytes @ 0x1C
   920  003C                     	ds	2
   921  003E                     ?_fround:	
   922  003E                     ?_scale:	
   923                           ; 4 bytes @ 0x1E
   924                           
   925  003E                     ?___fldiv:	
   926                           ; 4 bytes @ 0x1E
   927                           
   928  003E                     ___fldiv@a:	
   929                           ; 4 bytes @ 0x1E
   930                           
   931                           
   932                           ; 4 bytes @ 0x1E
   933  003E                     	ds	4
   934  0042                     ??_fround:	
   935  0042                     ??_scale:	
   936                           ; 1 bytes @ 0x22
   937                           
   938  0042                     ___fldiv@b:	
   939                           ; 1 bytes @ 0x22
   940                           
   941                           
   942                           ; 4 bytes @ 0x22
   943  0042                     	ds	4
   944  0046                     ??___fldiv:	
   945                           
   946                           ; 1 bytes @ 0x26
   947  0046                     	ds	3
   948  0049                     _fround$796:	
   949                           
   950                           ; 4 bytes @ 0x29
   951  0049                     	ds	2
   952  004B                     ___fldiv@rem:	
   953                           
   954                           ; 4 bytes @ 0x2B
   955  004B                     	ds	1
   956  004C                     _scale$797:	
   957                           
   958                           ; 4 bytes @ 0x2C
   959  004C                     	ds	1
   960  004D                     _fround$795:	
   961                           
   962                           ; 4 bytes @ 0x2D
   963  004D                     	ds	2
   964  004F                     ___fldiv@sign:	
   965                           
   966                           ; 1 bytes @ 0x2F
   967  004F                     	ds	1
   968  0050                     scale@scl:	
   969  0050                     ___fldiv@new_exp:	
   970                           ; 1 bytes @ 0x30
   971                           
   972                           
   973                           ; 2 bytes @ 0x30
   974  0050                     	ds	1
   975  0051                     ?___fltol:	
   976  0051                     fround@prec:	
   977                           ; 4 bytes @ 0x31
   978                           
   979  0051                     ___fltol@f1:	
   980                           ; 1 bytes @ 0x31
   981                           
   982                           
   983                           ; 4 bytes @ 0x31
   984  0051                     	ds	1
   985  0052                     ?___fladd:	
   986  0052                     ___fladd@b:	
   987                           ; 4 bytes @ 0x32
   988                           
   989  0052                     ___fldiv@grs:	
   990                           ; 4 bytes @ 0x32
   991                           
   992                           
   993                           ; 4 bytes @ 0x32
   994  0052                     	ds	3
   995  0055                     ??___fltol:	
   996                           
   997                           ; 1 bytes @ 0x35
   998  0055                     	ds	1
   999  0056                     ___fldiv@bexp:	
  1000  0056                     ___fladd@a:	
  1001                           ; 1 bytes @ 0x36
  1002                           
  1003                           
  1004                           ; 4 bytes @ 0x36
  1005  0056                     	ds	1
  1006  0057                     ___fldiv@aexp:	
  1007                           
  1008                           ; 1 bytes @ 0x37
  1009  0057                     	ds	3
  1010  005A                     ??___fladd:	
  1011  005A                     ___fltol@sign1:	
  1012                           ; 1 bytes @ 0x3A
  1013                           
  1014                           
  1015                           ; 1 bytes @ 0x3A
  1016  005A                     	ds	1
  1017  005B                     ___fltol@exp1:	
  1018                           
  1019                           ; 1 bytes @ 0x3B
  1020  005B                     	ds	7
  1021  0062                     ___fladd@signs:	
  1022                           
  1023                           ; 1 bytes @ 0x42
  1024  0062                     	ds	1
  1025  0063                     ___fladd@aexp:	
  1026                           
  1027                           ; 1 bytes @ 0x43
  1028  0063                     	ds	1
  1029  0064                     ___fladd@bexp:	
  1030                           
  1031                           ; 1 bytes @ 0x44
  1032  0064                     	ds	1
  1033  0065                     ___fladd@grs:	
  1034                           
  1035                           ; 1 bytes @ 0x45
  1036  0065                     	ds	1
  1037  0066                     ?___flsub:	
  1038  0066                     ___flsub@a:	
  1039                           ; 4 bytes @ 0x46
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x46
  1043  0066                     	ds	4
  1044  006A                     ___flsub@b:	
  1045                           
  1046                           ; 4 bytes @ 0x4A
  1047  006A                     	ds	4
  1048                           
  1049                           	psect	maintext
  1050  13FC                     __pmaintext:	
  1051 ;;
  1052 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1053 ;;
  1054 ;; *************** function _main *****************
  1055 ;; Defined at:
  1056 ;;		line 147 in file "main.c"
  1057 ;; Parameters:    Size  Location     Type
  1058 ;;		None
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  f               4   62[BANK1 ] float 
  1061 ;;  adc             2   66[BANK1 ] int 
  1062 ;;  current_limi    8   54[BANK1 ] unsigned char [8]
  1063 ;;  current         8   46[BANK1 ] unsigned char [8]
  1064 ;;  voltage         8   38[BANK1 ] unsigned char [8]
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  2   84[None  ] int 
  1067 ;; Registers used:
  1068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1069 ;; Tracked objects:
  1070 ;;		On entry : B00/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         0       0      30       0       0
  1076 ;;      Temps:          0       0       3       0       0
  1077 ;;      Totals:         0       0      33       0       0
  1078 ;;Total ram usage:       33 bytes
  1079 ;; Hardware stack levels required when called:    4
  1080 ;; This function calls:
  1081 ;;		_ADC_Initialize
  1082 ;;		_ADC_Read
  1083 ;;		_Lcd_Clear
  1084 ;;		_Lcd_Print_String
  1085 ;;		_Lcd_Set_Cursor
  1086 ;;		_Lcd_Start
  1087 ;;		___fldiv
  1088 ;;		___flmul
  1089 ;;		___xxtofl
  1090 ;;		_sprintf
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _main
  1098  13FC                     _main:	
  1099                           
  1100                           ;main.c: 149:     TRISB = 0x00;
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1104  13FC  1683               	bsf	3,5	;RP0=1, select bank1
  1105  13FD  1303               	bcf	3,6	;RP1=0, select bank1
  1106  13FE  0186               	clrf	6	;volatile
  1107                           
  1108                           ;main.c: 150:     Lcd_Start();
  1109  13FF  160A  158A  269A  160A  118A  	fcall	_Lcd_Start
  1110                           
  1111                           ;main.c: 151:     Lcd_Clear();
  1112  1404  160A  118A  2002  160A  118A  	fcall	_Lcd_Clear
  1113                           
  1114                           ;main.c: 153:     char voltage[8];;main.c: 154:     char current[8];;main.c: 155:     ch
      +                          ar current_limit[8];;main.c: 157:     ADC_Initialize();
  1115  1409  160A  158A  2411  160A  118A  	fcall	_ADC_Initialize
  1116  140E                     l3552:	
  1117                           
  1118                           ;main.c: 160:     {;main.c: 161:         Lcd_Set_Cursor(1,1);
  1119  140E  01F4               	clrf	Lcd_Set_Cursor@b
  1120  140F  0AF4               	incf	Lcd_Set_Cursor@b,f
  1121  1410  3001               	movlw	1
  1122  1411  160A  158A  25B9  160A  118A  	fcall	_Lcd_Set_Cursor
  1123                           
  1124                           ;main.c: 162:         int adc = (ADC_Read(0));
  1125  1416  3000               	movlw	0
  1126  1417  160A  158A  24CB  160A  118A  	fcall	_ADC_Read
  1127  141C  0871               	movf	?_ADC_Read+1,w
  1128  141D  1683               	bsf	3,5	;RP0=1, select bank1
  1129  141E  1303               	bcf	3,6	;RP1=0, select bank1
  1130  141F  00E3               	movwf	(main@adc+1)^(0+128)
  1131  1420  0870               	movf	?_ADC_Read,w
  1132  1421  00E2               	movwf	main@adc^(0+128)
  1133                           
  1134                           ;main.c: 163:         float f = adc*0.488281/100;
  1135  1422  3042               	movlw	66
  1136  1423  1283               	bcf	3,5	;RP0=0, select bank0
  1137  1424  1303               	bcf	3,6	;RP1=0, select bank0
  1138  1425  00C1               	movwf	___fldiv@a+3
  1139  1426  30C8               	movlw	200
  1140  1427  00C0               	movwf	___fldiv@a+2
  1141  1428  3000               	movlw	0
  1142  1429  00BF               	movwf	___fldiv@a+1
  1143  142A  3000               	movlw	0
  1144  142B  00BE               	movwf	___fldiv@a
  1145  142C  303E               	movlw	62
  1146  142D  00A7               	movwf	___flmul@b+3
  1147  142E  30F9               	movlw	249
  1148  142F  00A6               	movwf	___flmul@b+2
  1149  1430  30FF               	movlw	255
  1150  1431  00A5               	movwf	___flmul@b+1
  1151  1432  30F8               	movlw	248
  1152  1433  00A4               	movwf	___flmul@b
  1153  1434  1683               	bsf	3,5	;RP0=1, select bank1
  1154  1435  1303               	bcf	3,6	;RP1=0, select bank1
  1155  1436  0862               	movf	main@adc^(0+128),w
  1156  1437  00F0               	movwf	___xxtofl@val
  1157  1438  0863               	movf	(main@adc+1)^(0+128),w
  1158  1439  00F1               	movwf	___xxtofl@val+1
  1159  143A  3000               	movlw	0
  1160  143B  1BF1               	btfsc	___xxtofl@val+1,7
  1161  143C  30FF               	movlw	255
  1162  143D  00F2               	movwf	___xxtofl@val+2
  1163  143E  00F3               	movwf	___xxtofl@val+3
  1164  143F  3001               	movlw	1
  1165  1440  160A  118A  210D  160A  118A  	fcall	___xxtofl
  1166  1445  0873               	movf	?___xxtofl+3,w
  1167  1446  1283               	bcf	3,5	;RP0=0, select bank0
  1168  1447  1303               	bcf	3,6	;RP1=0, select bank0
  1169  1448  00AB               	movwf	___flmul@a+3
  1170  1449  0872               	movf	?___xxtofl+2,w
  1171  144A  00AA               	movwf	___flmul@a+2
  1172  144B  0871               	movf	?___xxtofl+1,w
  1173  144C  00A9               	movwf	___flmul@a+1
  1174  144D  0870               	movf	?___xxtofl,w
  1175  144E  00A8               	movwf	___flmul@a
  1176  144F  120A  158A  21A2  160A  118A  	fcall	___flmul
  1177  1454  1283               	bcf	3,5	;RP0=0, select bank0
  1178  1455  1303               	bcf	3,6	;RP1=0, select bank0
  1179  1456  0827               	movf	?___flmul+3,w
  1180  1457  00C5               	movwf	___fldiv@b+3
  1181  1458  0826               	movf	?___flmul+2,w
  1182  1459  00C4               	movwf	___fldiv@b+2
  1183  145A  0825               	movf	?___flmul+1,w
  1184  145B  00C3               	movwf	___fldiv@b+1
  1185  145C  0824               	movf	?___flmul,w
  1186  145D  00C2               	movwf	___fldiv@b
  1187  145E  160A  118A  2259  160A  118A  	fcall	___fldiv
  1188  1463  1283               	bcf	3,5	;RP0=0, select bank0
  1189  1464  1303               	bcf	3,6	;RP1=0, select bank0
  1190  1465  0841               	movf	?___fldiv+3,w
  1191  1466  1683               	bsf	3,5	;RP0=1, select bank1
  1192  1467  1303               	bcf	3,6	;RP1=0, select bank1
  1193  1468  00E1               	movwf	(main@f+3)^(0+128)
  1194  1469  1283               	bcf	3,5	;RP0=0, select bank0
  1195  146A  1303               	bcf	3,6	;RP1=0, select bank0
  1196  146B  0840               	movf	?___fldiv+2,w
  1197  146C  1683               	bsf	3,5	;RP0=1, select bank1
  1198  146D  1303               	bcf	3,6	;RP1=0, select bank1
  1199  146E  00E0               	movwf	(main@f+2)^(0+128)
  1200  146F  1283               	bcf	3,5	;RP0=0, select bank0
  1201  1470  1303               	bcf	3,6	;RP1=0, select bank0
  1202  1471  083F               	movf	?___fldiv+1,w
  1203  1472  1683               	bsf	3,5	;RP0=1, select bank1
  1204  1473  1303               	bcf	3,6	;RP1=0, select bank1
  1205  1474  00DF               	movwf	(main@f+1)^(0+128)
  1206  1475  1283               	bcf	3,5	;RP0=0, select bank0
  1207  1476  1303               	bcf	3,6	;RP1=0, select bank0
  1208  1477  083E               	movf	?___fldiv,w
  1209  1478  1683               	bsf	3,5	;RP0=1, select bank1
  1210  1479  1303               	bcf	3,6	;RP1=0, select bank1
  1211  147A  00DE               	movwf	main@f^(0+128)
  1212                           
  1213                           ;main.c: 164:         sprintf(voltage, "%.2f", (float) f);
  1214  147B  30A9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1215  147C  00C3               	movwf	??_main^(0+128)
  1216  147D  0843               	movf	??_main^(0+128),w
  1217  147E  00A0               	movwf	sprintf@f^(0+128)
  1218  147F  0861               	movf	(main@f+3)^(0+128),w
  1219  1480  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1220  1481  0860               	movf	(main@f+2)^(0+128),w
  1221  1482  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1222  1483  085F               	movf	(main@f+1)^(0+128),w
  1223  1484  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1224  1485  085E               	movf	main@f^(0+128),w
  1225  1486  00A1               	movwf	(?_sprintf^(0+128)+1)
  1226  1487  30C6               	movlw	(low (main@voltage| 0))& (0+255)
  1227  1488  120A  118A  2205  160A  118A  	fcall	_sprintf
  1228                           
  1229                           ;main.c: 165:         Lcd_Print_String(voltage);
  1230  148D  30C6               	movlw	(low (main@voltage| 0))& (0+255)
  1231  148E  00F9               	movwf	Lcd_Print_String@a
  1232  148F  3000               	movlw	0
  1233  1490  00FA               	movwf	Lcd_Print_String@a+1
  1234  1491  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1235                           
  1236                           ;main.c: 166:         Lcd_Print_String(" V    ");
  1237  1496  309D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1238  1497  00F9               	movwf	Lcd_Print_String@a
  1239  1498  3080               	movlw	128
  1240  1499  00FA               	movwf	Lcd_Print_String@a+1
  1241  149A  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1242                           
  1243                           ;main.c: 167:         adc = (ADC_Read(1));
  1244  149F  3001               	movlw	1
  1245  14A0  160A  158A  24CB  160A  118A  	fcall	_ADC_Read
  1246  14A5  0871               	movf	?_ADC_Read+1,w
  1247  14A6  1683               	bsf	3,5	;RP0=1, select bank1
  1248  14A7  1303               	bcf	3,6	;RP1=0, select bank1
  1249  14A8  00E3               	movwf	(main@adc+1)^(0+128)
  1250  14A9  0870               	movf	?_ADC_Read,w
  1251  14AA  00E2               	movwf	main@adc^(0+128)
  1252                           
  1253                           ;main.c: 168:         f = adc*0.488281/100;
  1254  14AB  3042               	movlw	66
  1255  14AC  1283               	bcf	3,5	;RP0=0, select bank0
  1256  14AD  1303               	bcf	3,6	;RP1=0, select bank0
  1257  14AE  00C1               	movwf	___fldiv@a+3
  1258  14AF  30C8               	movlw	200
  1259  14B0  00C0               	movwf	___fldiv@a+2
  1260  14B1  3000               	movlw	0
  1261  14B2  00BF               	movwf	___fldiv@a+1
  1262  14B3  3000               	movlw	0
  1263  14B4  00BE               	movwf	___fldiv@a
  1264  14B5  303E               	movlw	62
  1265  14B6  00A7               	movwf	___flmul@b+3
  1266  14B7  30F9               	movlw	249
  1267  14B8  00A6               	movwf	___flmul@b+2
  1268  14B9  30FF               	movlw	255
  1269  14BA  00A5               	movwf	___flmul@b+1
  1270  14BB  30F8               	movlw	248
  1271  14BC  00A4               	movwf	___flmul@b
  1272  14BD  1683               	bsf	3,5	;RP0=1, select bank1
  1273  14BE  1303               	bcf	3,6	;RP1=0, select bank1
  1274  14BF  0862               	movf	main@adc^(0+128),w
  1275  14C0  00F0               	movwf	___xxtofl@val
  1276  14C1  0863               	movf	(main@adc+1)^(0+128),w
  1277  14C2  00F1               	movwf	___xxtofl@val+1
  1278  14C3  3000               	movlw	0
  1279  14C4  1BF1               	btfsc	___xxtofl@val+1,7
  1280  14C5  30FF               	movlw	255
  1281  14C6  00F2               	movwf	___xxtofl@val+2
  1282  14C7  00F3               	movwf	___xxtofl@val+3
  1283  14C8  3001               	movlw	1
  1284  14C9  160A  118A  210D  160A  118A  	fcall	___xxtofl
  1285  14CE  0873               	movf	?___xxtofl+3,w
  1286  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  1287  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  1288  14D1  00AB               	movwf	___flmul@a+3
  1289  14D2  0872               	movf	?___xxtofl+2,w
  1290  14D3  00AA               	movwf	___flmul@a+2
  1291  14D4  0871               	movf	?___xxtofl+1,w
  1292  14D5  00A9               	movwf	___flmul@a+1
  1293  14D6  0870               	movf	?___xxtofl,w
  1294  14D7  00A8               	movwf	___flmul@a
  1295  14D8  120A  158A  21A2  160A  118A  	fcall	___flmul
  1296  14DD  1283               	bcf	3,5	;RP0=0, select bank0
  1297  14DE  1303               	bcf	3,6	;RP1=0, select bank0
  1298  14DF  0827               	movf	?___flmul+3,w
  1299  14E0  00C5               	movwf	___fldiv@b+3
  1300  14E1  0826               	movf	?___flmul+2,w
  1301  14E2  00C4               	movwf	___fldiv@b+2
  1302  14E3  0825               	movf	?___flmul+1,w
  1303  14E4  00C3               	movwf	___fldiv@b+1
  1304  14E5  0824               	movf	?___flmul,w
  1305  14E6  00C2               	movwf	___fldiv@b
  1306  14E7  160A  118A  2259  160A  118A  	fcall	___fldiv
  1307  14EC  1283               	bcf	3,5	;RP0=0, select bank0
  1308  14ED  1303               	bcf	3,6	;RP1=0, select bank0
  1309  14EE  0841               	movf	?___fldiv+3,w
  1310  14EF  1683               	bsf	3,5	;RP0=1, select bank1
  1311  14F0  1303               	bcf	3,6	;RP1=0, select bank1
  1312  14F1  00E1               	movwf	(main@f+3)^(0+128)
  1313  14F2  1283               	bcf	3,5	;RP0=0, select bank0
  1314  14F3  1303               	bcf	3,6	;RP1=0, select bank0
  1315  14F4  0840               	movf	?___fldiv+2,w
  1316  14F5  1683               	bsf	3,5	;RP0=1, select bank1
  1317  14F6  1303               	bcf	3,6	;RP1=0, select bank1
  1318  14F7  00E0               	movwf	(main@f+2)^(0+128)
  1319  14F8  1283               	bcf	3,5	;RP0=0, select bank0
  1320  14F9  1303               	bcf	3,6	;RP1=0, select bank0
  1321  14FA  083F               	movf	?___fldiv+1,w
  1322  14FB  1683               	bsf	3,5	;RP0=1, select bank1
  1323  14FC  1303               	bcf	3,6	;RP1=0, select bank1
  1324  14FD  00DF               	movwf	(main@f+1)^(0+128)
  1325  14FE  1283               	bcf	3,5	;RP0=0, select bank0
  1326  14FF  1303               	bcf	3,6	;RP1=0, select bank0
  1327  1500  083E               	movf	?___fldiv,w
  1328  1501  1683               	bsf	3,5	;RP0=1, select bank1
  1329  1502  1303               	bcf	3,6	;RP1=0, select bank1
  1330  1503  00DE               	movwf	main@f^(0+128)
  1331                           
  1332                           ;main.c: 169:         sprintf(current, "%.2f", (float) f);
  1333  1504  30A9               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1334  1505  00C3               	movwf	??_main^(0+128)
  1335  1506  0843               	movf	??_main^(0+128),w
  1336  1507  00A0               	movwf	sprintf@f^(0+128)
  1337  1508  0861               	movf	(main@f+3)^(0+128),w
  1338  1509  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1339  150A  0860               	movf	(main@f+2)^(0+128),w
  1340  150B  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1341  150C  085F               	movf	(main@f+1)^(0+128),w
  1342  150D  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1343  150E  085E               	movf	main@f^(0+128),w
  1344  150F  00A1               	movwf	(?_sprintf^(0+128)+1)
  1345  1510  30CE               	movlw	(low (main@current| 0))& (0+255)
  1346  1511  120A  118A  2205  160A  118A  	fcall	_sprintf
  1347                           
  1348                           ;main.c: 170:         Lcd_Print_String(current);
  1349  1516  30CE               	movlw	(low (main@current| 0))& (0+255)
  1350  1517  00F9               	movwf	Lcd_Print_String@a
  1351  1518  3000               	movlw	0
  1352  1519  00FA               	movwf	Lcd_Print_String@a+1
  1353  151A  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1354                           
  1355                           ;main.c: 171:         Lcd_Print_String(" A ");
  1356  151F  30AE               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1357  1520  00F9               	movwf	Lcd_Print_String@a
  1358  1521  3080               	movlw	128
  1359  1522  00FA               	movwf	Lcd_Print_String@a+1
  1360  1523  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1361                           
  1362                           ;main.c: 172:         Lcd_Set_Cursor(2,1);
  1363  1528  01F4               	clrf	Lcd_Set_Cursor@b
  1364  1529  0AF4               	incf	Lcd_Set_Cursor@b,f
  1365  152A  3002               	movlw	2
  1366  152B  160A  158A  25B9  160A  118A  	fcall	_Lcd_Set_Cursor
  1367                           
  1368                           ;main.c: 173:         Lcd_Print_String("Curr Limit ");
  1369  1530  3091               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1370  1531  00F9               	movwf	Lcd_Print_String@a
  1371  1532  3080               	movlw	128
  1372  1533  00FA               	movwf	Lcd_Print_String@a+1
  1373  1534  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1374                           
  1375                           ;main.c: 174:         adc = (ADC_Read(2));
  1376  1539  3002               	movlw	2
  1377  153A  160A  158A  24CB  160A  118A  	fcall	_ADC_Read
  1378  153F  0871               	movf	?_ADC_Read+1,w
  1379  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1380  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1381  1542  00E3               	movwf	(main@adc+1)^(0+128)
  1382  1543  0870               	movf	?_ADC_Read,w
  1383  1544  00E2               	movwf	main@adc^(0+128)
  1384                           
  1385                           ;main.c: 175:         f = adc*0.488281/100;
  1386  1545  3042               	movlw	66
  1387  1546  1283               	bcf	3,5	;RP0=0, select bank0
  1388  1547  1303               	bcf	3,6	;RP1=0, select bank0
  1389  1548  00C1               	movwf	___fldiv@a+3
  1390  1549  30C8               	movlw	200
  1391  154A  00C0               	movwf	___fldiv@a+2
  1392  154B  3000               	movlw	0
  1393  154C  00BF               	movwf	___fldiv@a+1
  1394  154D  3000               	movlw	0
  1395  154E  00BE               	movwf	___fldiv@a
  1396  154F  303E               	movlw	62
  1397  1550  00A7               	movwf	___flmul@b+3
  1398  1551  30F9               	movlw	249
  1399  1552  00A6               	movwf	___flmul@b+2
  1400  1553  30FF               	movlw	255
  1401  1554  00A5               	movwf	___flmul@b+1
  1402  1555  30F8               	movlw	248
  1403  1556  00A4               	movwf	___flmul@b
  1404  1557  1683               	bsf	3,5	;RP0=1, select bank1
  1405  1558  1303               	bcf	3,6	;RP1=0, select bank1
  1406  1559  0862               	movf	main@adc^(0+128),w
  1407  155A  00F0               	movwf	___xxtofl@val
  1408  155B  0863               	movf	(main@adc+1)^(0+128),w
  1409  155C  00F1               	movwf	___xxtofl@val+1
  1410  155D  3000               	movlw	0
  1411  155E  1BF1               	btfsc	___xxtofl@val+1,7
  1412  155F  30FF               	movlw	255
  1413  1560  00F2               	movwf	___xxtofl@val+2
  1414  1561  00F3               	movwf	___xxtofl@val+3
  1415  1562  3001               	movlw	1
  1416  1563  160A  118A  210D  160A  118A  	fcall	___xxtofl
  1417  1568  0873               	movf	?___xxtofl+3,w
  1418  1569  1283               	bcf	3,5	;RP0=0, select bank0
  1419  156A  1303               	bcf	3,6	;RP1=0, select bank0
  1420  156B  00AB               	movwf	___flmul@a+3
  1421  156C  0872               	movf	?___xxtofl+2,w
  1422  156D  00AA               	movwf	___flmul@a+2
  1423  156E  0871               	movf	?___xxtofl+1,w
  1424  156F  00A9               	movwf	___flmul@a+1
  1425  1570  0870               	movf	?___xxtofl,w
  1426  1571  00A8               	movwf	___flmul@a
  1427  1572  120A  158A  21A2  160A  118A  	fcall	___flmul
  1428  1577  1283               	bcf	3,5	;RP0=0, select bank0
  1429  1578  1303               	bcf	3,6	;RP1=0, select bank0
  1430  1579  0827               	movf	?___flmul+3,w
  1431  157A  00C5               	movwf	___fldiv@b+3
  1432  157B  0826               	movf	?___flmul+2,w
  1433  157C  00C4               	movwf	___fldiv@b+2
  1434  157D  0825               	movf	?___flmul+1,w
  1435  157E  00C3               	movwf	___fldiv@b+1
  1436  157F  0824               	movf	?___flmul,w
  1437  1580  00C2               	movwf	___fldiv@b
  1438  1581  160A  118A  2259  160A  118A  	fcall	___fldiv
  1439  1586  1283               	bcf	3,5	;RP0=0, select bank0
  1440  1587  1303               	bcf	3,6	;RP1=0, select bank0
  1441  1588  0841               	movf	?___fldiv+3,w
  1442  1589  1683               	bsf	3,5	;RP0=1, select bank1
  1443  158A  1303               	bcf	3,6	;RP1=0, select bank1
  1444  158B  00E1               	movwf	(main@f+3)^(0+128)
  1445  158C  1283               	bcf	3,5	;RP0=0, select bank0
  1446  158D  1303               	bcf	3,6	;RP1=0, select bank0
  1447  158E  0840               	movf	?___fldiv+2,w
  1448  158F  1683               	bsf	3,5	;RP0=1, select bank1
  1449  1590  1303               	bcf	3,6	;RP1=0, select bank1
  1450  1591  00E0               	movwf	(main@f+2)^(0+128)
  1451  1592  1283               	bcf	3,5	;RP0=0, select bank0
  1452  1593  1303               	bcf	3,6	;RP1=0, select bank0
  1453  1594  083F               	movf	?___fldiv+1,w
  1454  1595  1683               	bsf	3,5	;RP0=1, select bank1
  1455  1596  1303               	bcf	3,6	;RP1=0, select bank1
  1456  1597  00DF               	movwf	(main@f+1)^(0+128)
  1457  1598  1283               	bcf	3,5	;RP0=0, select bank0
  1458  1599  1303               	bcf	3,6	;RP1=0, select bank0
  1459  159A  083E               	movf	?___fldiv,w
  1460  159B  1683               	bsf	3,5	;RP0=1, select bank1
  1461  159C  1303               	bcf	3,6	;RP1=0, select bank1
  1462  159D  00DE               	movwf	main@f^(0+128)
  1463                           
  1464                           ;main.c: 176:         sprintf(current_limit, "%.1f", (float) f);
  1465  159E  30A4               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1466  159F  00C3               	movwf	??_main^(0+128)
  1467  15A0  0843               	movf	??_main^(0+128),w
  1468  15A1  00A0               	movwf	sprintf@f^(0+128)
  1469  15A2  0861               	movf	(main@f+3)^(0+128),w
  1470  15A3  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1471  15A4  0860               	movf	(main@f+2)^(0+128),w
  1472  15A5  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1473  15A6  085F               	movf	(main@f+1)^(0+128),w
  1474  15A7  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1475  15A8  085E               	movf	main@f^(0+128),w
  1476  15A9  00A1               	movwf	(?_sprintf^(0+128)+1)
  1477  15AA  30D6               	movlw	(low (main@current_limit| 0))& (0+255)
  1478  15AB  120A  118A  2205  160A  118A  	fcall	_sprintf
  1479                           
  1480                           ;main.c: 177:         Lcd_Print_String(current_limit);
  1481  15B0  30D6               	movlw	(low (main@current_limit| 0))& (0+255)
  1482  15B1  00F9               	movwf	Lcd_Print_String@a
  1483  15B2  3000               	movlw	0
  1484  15B3  00FA               	movwf	Lcd_Print_String@a+1
  1485  15B4  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1486                           
  1487                           ;main.c: 178:         Lcd_Print_String(" A");
  1488  15B9  30B2               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1489  15BA  00F9               	movwf	Lcd_Print_String@a
  1490  15BB  3080               	movlw	128
  1491  15BC  00FA               	movwf	Lcd_Print_String@a+1
  1492  15BD  160A  158A  2530  160A  118A  	fcall	_Lcd_Print_String
  1493                           
  1494                           ;main.c: 179:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1495  15C2  300B               	movlw	11
  1496  15C3  1683               	bsf	3,5	;RP0=1, select bank1
  1497  15C4  1303               	bcf	3,6	;RP1=0, select bank1
  1498  15C5  00C5               	movwf	(??_main^(0+128)+2)
  1499  15C6  3026               	movlw	38
  1500  15C7  00C4               	movwf	(??_main^(0+128)+1)
  1501  15C8  305D               	movlw	93
  1502  15C9  00C3               	movwf	??_main^(0+128)
  1503  15CA                     u6077:	
  1504  15CA  0BC3               	decfsz	??_main^(0+128),f
  1505  15CB  2DCA               	goto	u6077
  1506  15CC  0BC4               	decfsz	(??_main^(0+128)+1),f
  1507  15CD  2DCA               	goto	u6077
  1508  15CE  0BC5               	decfsz	(??_main^(0+128)+2),f
  1509  15CF  2DCA               	goto	u6077
  1510  15D0  2C0E               	goto	l3552
  1511  15D1                     __end_of_main:	
  1512                           
  1513                           	psect	text1
  1514  0205                     __ptext1:	
  1515 ;; *************** function _sprintf *****************
  1516 ;; Defined at:
  1517 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1518 ;; Parameters:    Size  Location     Type
  1519 ;;  sp              1    wreg     PTR unsigned char 
  1520 ;;		 -> main@current_limit(8), main@current(8), main@voltage(8), 
  1521 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1522 ;;		 -> STR_6(5), STR_3(5), STR_1(5), 
  1523 ;; Auto vars:     Size  Location     Type
  1524 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1525 ;;		 -> main@current_limit(8), main@current(8), main@voltage(8), 
  1526 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1527 ;;  tmpval          4   23[BANK1 ] struct .
  1528 ;;  val             4   17[BANK1 ] unsigned long 
  1529 ;;  prec            2   27[BANK1 ] int 
  1530 ;;  eexp            2   21[BANK1 ] int 
  1531 ;;  flag            2   15[BANK1 ] unsigned short 
  1532 ;;  cp              2    0        PTR const unsigned char 
  1533 ;;  len             2    0        unsigned int 
  1534 ;;  width           2    0        int 
  1535 ;;  c               1   34[BANK1 ] unsigned char 
  1536 ;;  ap              1   14[BANK1 ] PTR void [1]
  1537 ;;		 -> ?_sprintf(2), 
  1538 ;;  d               1    0        unsigned char 
  1539 ;; Return value:  Size  Location     Type
  1540 ;;                  2    0[BANK1 ] int 
  1541 ;; Registers used:
  1542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1543 ;; Tracked objects:
  1544 ;;		On entry : 0/0
  1545 ;;		On exit  : 0/0
  1546 ;;		Unchanged: 0/0
  1547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1548 ;;      Params:         0       0       5       0       0
  1549 ;;      Locals:         0       0      25       0       0
  1550 ;;      Temps:          0       0       5       0       0
  1551 ;;      Totals:         0       0      35       0       0
  1552 ;;Total ram usage:       35 bytes
  1553 ;; Hardware stack levels used:    1
  1554 ;; Hardware stack levels required when called:    3
  1555 ;; This function calls:
  1556 ;;		___awdiv
  1557 ;;		___fladd
  1558 ;;		___fleq
  1559 ;;		___flge
  1560 ;;		___flmul
  1561 ;;		___flneg
  1562 ;;		___flsub
  1563 ;;		___fltol
  1564 ;;		___lldiv
  1565 ;;		___llmod
  1566 ;;		___wmul
  1567 ;;		___xxtofl
  1568 ;;		__div_to_l_
  1569 ;;		__tdiv_to_l_
  1570 ;;		_fround
  1571 ;;		_isdigit
  1572 ;;		_scale
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           
  1578                           
  1579                           ;psect for function _sprintf
  1580  0205                     _sprintf:	
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1584                           ;sprintf@sp stored from wreg
  1585  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1586  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1587  0207  00BD               	movwf	sprintf@sp^(0+128)
  1588                           
  1589                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1590  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1591  0209  00A5               	movwf	??_sprintf^(0+128)
  1592  020A  0825               	movf	??_sprintf^(0+128),w
  1593  020B  00AE               	movwf	sprintf@ap^(0+128)
  1594  020C                     l3390:	
  1595                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1596                           
  1597                           
  1598                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1599  020C  3001               	movlw	1
  1600  020D  07A0               	addwf	sprintf@f^(0+128),f
  1601  020E  30FF               	movlw	-1
  1602  020F  0720               	addwf	sprintf@f^(0+128),w
  1603  0210  0084               	movwf	4
  1604  0211  120A  158A  200A  120A  118A  	fcall	stringdir
  1605  0216  00A5               	movwf	??_sprintf^(0+128)
  1606  0217  0825               	movf	??_sprintf^(0+128),w
  1607  0218  00C2               	movwf	sprintf@c^(0+128)
  1608  0219  0842               	movf	sprintf@c^(0+128),w
  1609  021A  1903               	btfsc	3,2
  1610  021B  2FF7               	goto	l3392
  1611                           
  1612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1613  021C  3025               	movlw	37
  1614  021D  0642               	xorwf	sprintf@c^(0+128),w
  1615  021E  1903               	btfsc	3,2
  1616  021F  2A22               	goto	l3206
  1617                           
  1618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1619  0220  0842               	movf	sprintf@c^(0+128),w
  1620  0221  2FEC               	goto	L6
  1621  0222                     l3206:	
  1622                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1623                           
  1624                           
  1625                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1626  0222  01AF               	clrf	sprintf@flag^(0+128)
  1627  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1628                           
  1629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1630  0224  0820               	movf	sprintf@f^(0+128),w
  1631  0225  0084               	movwf	4
  1632  0226  120A  158A  200A  120A  118A  	fcall	stringdir
  1633  022B  3A2E               	xorlw	46
  1634  022C  1D03               	skipz
  1635  022D  2A6F               	goto	l3222
  1636                           
  1637                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1638  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1639                           
  1640                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1641  022F  3001               	movlw	1
  1642  0230  00A5               	movwf	??_sprintf^(0+128)
  1643  0231  0825               	movf	??_sprintf^(0+128),w
  1644  0232  07A0               	addwf	sprintf@f^(0+128),f
  1645                           
  1646                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1647  0233  01BB               	clrf	sprintf@prec^(0+128)
  1648  0234  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1649  0235                     l3220:	
  1650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1651                           
  1652                           
  1653                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1654  0235  0820               	movf	sprintf@f^(0+128),w
  1655  0236  0084               	movwf	4
  1656  0237  120A  158A  200A  120A  118A  	fcall	stringdir
  1657  023C  160A  158A  2423  120A  118A  	fcall	_isdigit
  1658  0241  1C03               	btfss	3,0
  1659  0242  2A75               	goto	l3228
  1660                           
  1661                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1662  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1663  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1664  0245  083C               	movf	(sprintf@prec+1)^(0+128),w
  1665  0246  00F1               	movwf	___wmul@multiplier+1
  1666  0247  083B               	movf	sprintf@prec^(0+128),w
  1667  0248  00F0               	movwf	___wmul@multiplier
  1668  0249  300A               	movlw	10
  1669  024A  00F2               	movwf	___wmul@multiplicand
  1670  024B  3000               	movlw	0
  1671  024C  00F3               	movwf	___wmul@multiplicand+1
  1672  024D  160A  158A  2465  120A  118A  	fcall	___wmul
  1673  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0254  0820               	movf	sprintf@f^(0+128),w
  1676  0255  0084               	movwf	4
  1677  0256  120A  158A  200A  120A  118A  	fcall	stringdir
  1678  025B  0770               	addwf	?___wmul,w
  1679  025C  00A5               	movwf	??_sprintf^(0+128)
  1680  025D  3000               	movlw	0
  1681  025E  1803               	skipnc
  1682  025F  3001               	movlw	1
  1683  0260  0771               	addwf	?___wmul+1,w
  1684  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1685  0262  0825               	movf	??_sprintf^(0+128),w
  1686  0263  3ED0               	addlw	208
  1687  0264  00BB               	movwf	sprintf@prec^(0+128)
  1688  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1689  0266  1803               	skipnc
  1690  0267  3E01               	addlw	1
  1691  0268  3EFF               	addlw	255
  1692  0269  00BC               	movwf	(sprintf@prec+1)^(0+128)
  1693  026A  3001               	movlw	1
  1694  026B  00A5               	movwf	??_sprintf^(0+128)
  1695  026C  0825               	movf	??_sprintf^(0+128),w
  1696  026D  07A0               	addwf	sprintf@f^(0+128),f
  1697  026E  2A35               	goto	l3220
  1698  026F                     l3222:	
  1699                           
  1700                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1701  026F  01BB               	clrf	sprintf@prec^(0+128)
  1702  0270  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1703                           
  1704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1705  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1706  0272  2A75               	goto	l3228
  1707  0273                     l216:	
  1708                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1709                           
  1710                           
  1711                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1712  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1713                           
  1714                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1715  0274  2A91               	goto	l3230
  1716  0275                     l3228:	
  1717  0275  3001               	movlw	1
  1718  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1720  0278  07A0               	addwf	sprintf@f^(0+128),f
  1721  0279  30FF               	movlw	-1
  1722  027A  0720               	addwf	sprintf@f^(0+128),w
  1723  027B  0084               	movwf	4
  1724  027C  120A  158A  200A  120A  118A  	fcall	stringdir
  1725  0281  00C2               	movwf	sprintf@c^(0+128)
  1726  0282  00A5               	movwf	??_sprintf^(0+128)
  1727  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1728                           
  1729                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1730                           ; Switch size 1, requested type "simple"
  1731                           ; Number of cases is 1, Range of values is 0 to 0
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte            4     3 (average)
  1735                           ; direct_byte           11     8 (fixed)
  1736                           ; jumptable            260     6 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1739  0285  3A00               	xorlw	0	; case 0
  1740  0286  1903               	skipnz
  1741  0287  2A89               	goto	l3620
  1742  0288  2A0C               	goto	l3390
  1743  0289                     l3620:	
  1744                           
  1745                           ; Switch size 1, requested type "simple"
  1746                           ; Number of cases is 2, Range of values is 0 to 102
  1747                           ; switch strategies available:
  1748                           ; Name         Instructions Cycles
  1749                           ; simple_byte            7     4 (average)
  1750                           ; jumptable            260     6 (fixed)
  1751                           ;	Chosen strategy is simple_byte
  1752  0289  0825               	movf	??_sprintf^(0+128),w
  1753  028A  3A00               	xorlw	0	; case 0
  1754  028B  1903               	skipnz
  1755  028C  2FF7               	goto	l3392
  1756  028D  3A66               	xorlw	102	; case 102
  1757  028E  1903               	skipnz
  1758  028F  2A73               	goto	l216
  1759  0290  2A0C               	goto	l3390
  1760  0291                     l3230:	
  1761                           
  1762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1763  0291  3000               	movlw	0
  1764  0292  052F               	andwf	sprintf@flag^(0+128),w
  1765  0293  00A5               	movwf	??_sprintf^(0+128)
  1766  0294  3007               	movlw	7
  1767  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1768  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1769  0297  0825               	movf	??_sprintf^(0+128),w
  1770  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1771  0299  1903               	btfsc	3,2
  1772  029A  2FB9               	goto	l3372
  1773                           
  1774                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1775  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1776  029C  2AA1               	goto	l3236
  1777                           
  1778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1779  029D  3006               	movlw	6
  1780  029E  00BB               	movwf	sprintf@prec^(0+128)
  1781  029F  3000               	movlw	0
  1782  02A0  00BC               	movwf	(sprintf@prec^(0+128)+1)
  1783  02A1                     l3236:	
  1784                           
  1785                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1786  02A1  082E               	movf	sprintf@ap^(0+128),w
  1787  02A2  0084               	movwf	4
  1788  02A3  1383               	bcf	3,7	;select IRP bank0
  1789  02A4  0800               	movf	0,w
  1790  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1791  02A6  0A84               	incf	4,f
  1792  02A7  0800               	movf	0,w
  1793  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1794  02A9  0A84               	incf	4,f
  1795  02AA  0800               	movf	0,w
  1796  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1797  02AC  0A84               	incf	4,f
  1798  02AD  0800               	movf	0,w
  1799  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1800  02AF  3004               	movlw	4
  1801  02B0  00A5               	movwf	??_sprintf^(0+128)
  1802  02B1  0825               	movf	??_sprintf^(0+128),w
  1803  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1804                           
  1805                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1806  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1807  02B4  00F3               	movwf	___flge@ff1+3
  1808  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1809  02B6  00F2               	movwf	___flge@ff1+2
  1810  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1811  02B8  00F1               	movwf	___flge@ff1+1
  1812  02B9  083E               	movf	sprintf@fval^(0+128),w
  1813  02BA  00F0               	movwf	___flge@ff1
  1814  02BB  3000               	movlw	0
  1815  02BC  00F7               	movwf	___flge@ff2+3
  1816  02BD  3000               	movlw	0
  1817  02BE  00F6               	movwf	___flge@ff2+2
  1818  02BF  3000               	movlw	0
  1819  02C0  00F5               	movwf	___flge@ff2+1
  1820  02C1  3000               	movlw	0
  1821  02C2  00F4               	movwf	___flge@ff2
  1822  02C3  160A  118A  207A  120A  118A  	fcall	___flge
  1823  02C8  1803               	btfsc	3,0
  1824  02C9  2AE7               	goto	l3246
  1825                           
  1826                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1827  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1828  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1829  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1830  02CD  00F3               	movwf	___flneg@f1+3
  1831  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1832  02CF  00F2               	movwf	___flneg@f1+2
  1833  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1834  02D1  00F1               	movwf	___flneg@f1+1
  1835  02D2  083E               	movf	sprintf@fval^(0+128),w
  1836  02D3  00F0               	movwf	___flneg@f1
  1837  02D4  160A  158A  241A  120A  118A  	fcall	___flneg
  1838  02D9  0873               	movf	?___flneg+3,w
  1839  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1840  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1841  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1842  02DD  0872               	movf	?___flneg+2,w
  1843  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1844  02DF  0871               	movf	?___flneg+1,w
  1845  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1846  02E1  0870               	movf	?___flneg,w
  1847  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1848                           
  1849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1850  02E3  3003               	movlw	3
  1851  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1852  02E5  3000               	movlw	0
  1853  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1854  02E7                     l3246:	
  1855                           
  1856                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1857  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1858  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1859  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1860  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1861                           
  1862                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1863  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1864  02EC  00F3               	movwf	___fleq@ff1+3
  1865  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1866  02EE  00F2               	movwf	___fleq@ff1+2
  1867  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1868  02F0  00F1               	movwf	___fleq@ff1+1
  1869  02F1  083E               	movf	sprintf@fval^(0+128),w
  1870  02F2  00F0               	movwf	___fleq@ff1
  1871  02F3  3000               	movlw	0
  1872  02F4  00F7               	movwf	___fleq@ff2+3
  1873  02F5  3000               	movlw	0
  1874  02F6  00F6               	movwf	___fleq@ff2+2
  1875  02F7  3000               	movlw	0
  1876  02F8  00F5               	movwf	___fleq@ff2+1
  1877  02F9  3000               	movlw	0
  1878  02FA  00F4               	movwf	___fleq@ff2
  1879  02FB  160A  158A  2571  120A  118A  	fcall	___fleq
  1880  0300  1803               	btfsc	3,0
  1881  0301  2BEB               	goto	l3274
  1882                           
  1883                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1884  0302  1003               	clrc
  1885  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1886  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1887  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1888  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1889  0307  3E82               	addlw	130
  1890  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1891  0309  30FF               	movlw	255
  1892  030A  1803               	skipnc
  1893  030B  3000               	movlw	0
  1894  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1895                           
  1896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1897  030D  30FF               	movlw	255
  1898  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1899  030F  1803               	skipnc
  1900  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1901  0311  30FF               	movlw	255
  1902  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1903                           
  1904                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1905  0313  3003               	movlw	3
  1906  0314  00F0               	movwf	___wmul@multiplier
  1907  0315  3000               	movlw	0
  1908  0316  00F1               	movwf	___wmul@multiplier+1
  1909  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1910  0318  00F3               	movwf	___wmul@multiplicand+1
  1911  0319  0835               	movf	sprintf@eexp^(0+128),w
  1912  031A  00F2               	movwf	___wmul@multiplicand
  1913  031B  160A  158A  2465  120A  118A  	fcall	___wmul
  1914  0320  0871               	movf	?___wmul+1,w
  1915  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1916  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1917  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1918  0324  0870               	movf	?___wmul,w
  1919  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1920                           
  1921                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1922  0326  300A               	movlw	10
  1923  0327  00F7               	movwf	___awdiv@divisor
  1924  0328  3000               	movlw	0
  1925  0329  00F8               	movwf	___awdiv@divisor+1
  1926  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1927  032B  00FA               	movwf	___awdiv@dividend+1
  1928  032C  0835               	movf	sprintf@eexp^(0+128),w
  1929  032D  00F9               	movwf	___awdiv@dividend
  1930  032E  160A  158A  2747  120A  118A  	fcall	___awdiv
  1931  0333  0878               	movf	?___awdiv+1,w
  1932  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1933  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1934  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1935  0337  0877               	movf	?___awdiv,w
  1936  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1937                           
  1938                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1939  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1940  033A  2B41               	goto	l3262
  1941                           
  1942                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1943  033B  30FF               	movlw	255
  1944  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1945  033D  1803               	skipnc
  1946  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1947  033F  30FF               	movlw	255
  1948  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1949  0341                     l3262:	
  1950                           
  1951                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1952  0341  0335               	decf	sprintf@eexp^(0+128),w
  1953  0342  3AFF               	xorlw	255
  1954  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1955  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1956  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1957  034A  0841               	movf	?_scale+3,w
  1958  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1959  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1960  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1961  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1962  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0350  0840               	movf	?_scale+2,w
  1964  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1965  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1966  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1967  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0356  083F               	movf	?_scale+1,w
  1970  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1971  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1972  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1973  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1974  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1975  035C  083E               	movf	?_scale,w
  1976  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1977  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1978  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1979                           
  1980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1981  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1982  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0363  00A7               	movwf	___flmul@b+3
  1985  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1986  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1987  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1988  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1989  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1990  0369  00A6               	movwf	___flmul@b+2
  1991  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1992  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1993  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1994  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1995  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1996  036F  00A5               	movwf	___flmul@b+1
  1997  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1998  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1999  0372  083E               	movf	sprintf@fval^(0+128),w
  2000  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0375  00A4               	movwf	___flmul@b
  2003  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2004  0377  1303               	bcf	3,6	;RP1=0, select bank1
  2005  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2006  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2007  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2008  037B  00AB               	movwf	___flmul@a+3
  2009  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2010  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2011  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2012  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2014  0381  00AA               	movwf	___flmul@a+2
  2015  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2018  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2019  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0387  00A9               	movwf	___flmul@a+1
  2021  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2022  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2023  038A  0837               	movf	sprintf@tmpval^(0+128),w
  2024  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2025  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2026  038D  00A8               	movwf	___flmul@a
  2027  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  2028  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2029  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2030  0395  0827               	movf	?___flmul+3,w
  2031  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2032  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2033  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2034  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2035  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2036  039B  0826               	movf	?___flmul+2,w
  2037  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2038  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2039  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2040  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2041  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2042  03A1  0825               	movf	?___flmul+1,w
  2043  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2044  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2045  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2046  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2047  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2048  03A7  0824               	movf	?___flmul,w
  2049  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2050  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2051  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  2052                           
  2053                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2054  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2055  03AC  00F3               	movwf	___flge@ff1+3
  2056  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2057  03AE  00F2               	movwf	___flge@ff1+2
  2058  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2059  03B0  00F1               	movwf	___flge@ff1+1
  2060  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  2061  03B2  00F0               	movwf	___flge@ff1
  2062  03B3  303F               	movlw	63
  2063  03B4  00F7               	movwf	___flge@ff2+3
  2064  03B5  3080               	movlw	128
  2065  03B6  00F6               	movwf	___flge@ff2+2
  2066  03B7  3000               	movlw	0
  2067  03B8  00F5               	movwf	___flge@ff2+1
  2068  03B9  3000               	movlw	0
  2069  03BA  00F4               	movwf	___flge@ff2
  2070  03BB  160A  118A  207A  120A  118A  	fcall	___flge
  2071  03C0  1803               	btfsc	3,0
  2072  03C1  2BCA               	goto	l3270
  2073                           
  2074                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2075  03C2  30FF               	movlw	255
  2076  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2077  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2078  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  2079  03C6  1803               	skipnc
  2080  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2081  03C8  30FF               	movlw	255
  2082  03C9  2BEA               	goto	L1
  2083  03CA                     l3270:	
  2084  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2085  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2086  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2087  03CD  00F3               	movwf	___flge@ff1+3
  2088  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2089  03CF  00F2               	movwf	___flge@ff1+2
  2090  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2091  03D1  00F1               	movwf	___flge@ff1+1
  2092  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  2093  03D3  00F0               	movwf	___flge@ff1
  2094  03D4  3041               	movlw	65
  2095  03D5  00F7               	movwf	___flge@ff2+3
  2096  03D6  3020               	movlw	32
  2097  03D7  00F6               	movwf	___flge@ff2+2
  2098  03D8  3000               	movlw	0
  2099  03D9  00F5               	movwf	___flge@ff2+1
  2100  03DA  3000               	movlw	0
  2101  03DB  00F4               	movwf	___flge@ff2
  2102  03DC  160A  118A  207A  120A  118A  	fcall	___flge
  2103  03E1  1C03               	btfss	3,0
  2104  03E2  2BEB               	goto	l3274
  2105                           
  2106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2107  03E3  3001               	movlw	1
  2108  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2109  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2110  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  2111  03E7  1803               	skipnc
  2112  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2113  03E9  3000               	movlw	0
  2114  03EA                     L1:	
  2115  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2116  03EB                     l3274:	
  2117                           
  2118                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2119  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2120  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2121  03ED  083C               	movf	(sprintf@prec+1)^(0+128),w
  2122  03EE  3A80               	xorlw	128
  2123  03EF  00FF               	movwf	127
  2124  03F0  3080               	movlw	128
  2125  03F1  027F               	subwf	127,w
  2126  03F2  1D03               	skipz
  2127  03F3  2BF6               	goto	u5535
  2128  03F4  300D               	movlw	13
  2129  03F5  023B               	subwf	sprintf@prec^(0+128),w
  2130  03F6                     u5535:	
  2131  03F6  1803               	skipnc
  2132  03F7  2C3F               	goto	l3278
  2133                           
  2134                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2135  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2136  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2137  03FA  083B               	movf	sprintf@prec^(0+128),w
  2138  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  2139  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0402  0841               	movf	?_fround+3,w
  2142  0403  00D5               	movwf	___fladd@b+3
  2143  0404  0840               	movf	?_fround+2,w
  2144  0405  00D4               	movwf	___fladd@b+2
  2145  0406  083F               	movf	?_fround+1,w
  2146  0407  00D3               	movwf	___fladd@b+1
  2147  0408  083E               	movf	?_fround,w
  2148  0409  00D2               	movwf	___fladd@b
  2149  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2150  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2151  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2152  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2153  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2154  040F  00D9               	movwf	___fladd@a+3
  2155  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2156  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2157  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  2158  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2159  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2160  0415  00D8               	movwf	___fladd@a+2
  2161  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2162  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2163  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  2164  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2165  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2166  041B  00D7               	movwf	___fladd@a+1
  2167  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2168  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2169  041E  083E               	movf	sprintf@fval^(0+128),w
  2170  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0421  00D6               	movwf	___fladd@a
  2173  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  2174  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0429  0855               	movf	?___fladd+3,w
  2177  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2178  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2179  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2180  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2181  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2182  042F  0854               	movf	?___fladd+2,w
  2183  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2184  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2185  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2186  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2187  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2188  0435  0853               	movf	?___fladd+1,w
  2189  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2190  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2191  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2192  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2193  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2194  043B  0852               	movf	?___fladd,w
  2195  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2196  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2197  043E  00BE               	movwf	sprintf@fval^(0+128)
  2198  043F                     l3278:	
  2199                           
  2200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2201  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2202  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2203  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2204  0442  3A80               	xorlw	128
  2205  0443  00FF               	movwf	127
  2206  0444  3080               	movlw	128
  2207  0445  027F               	subwf	127,w
  2208  0446  1D03               	skipz
  2209  0447  2C4A               	goto	u5545
  2210  0448  300A               	movlw	10
  2211  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2212  044A                     u5545:	
  2213  044A  1803               	skipnc
  2214  044B  2C97               	goto	l3286
  2215  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2216  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2217  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2218  044F  00F3               	movwf	___fleq@ff1+3
  2219  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  2220  0451  00F2               	movwf	___fleq@ff1+2
  2221  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  2222  0453  00F1               	movwf	___fleq@ff1+1
  2223  0454  083E               	movf	sprintf@fval^(0+128),w
  2224  0455  00F0               	movwf	___fleq@ff1
  2225  0456  3000               	movlw	0
  2226  0457  00F7               	movwf	___fleq@ff2+3
  2227  0458  3000               	movlw	0
  2228  0459  00F6               	movwf	___fleq@ff2+2
  2229  045A  3000               	movlw	0
  2230  045B  00F5               	movwf	___fleq@ff2+1
  2231  045C  3000               	movlw	0
  2232  045D  00F4               	movwf	___fleq@ff2
  2233  045E  160A  158A  2571  120A  118A  	fcall	___fleq
  2234  0463  1803               	btfsc	3,0
  2235  0464  2D00               	goto	l3300
  2236  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2237  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2238  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  2239  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2240  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2241  046A  00D4               	movwf	___fltol@f1+3
  2242  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2243  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2244  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  2245  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2246  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0470  00D3               	movwf	___fltol@f1+2
  2248  0471  1683               	bsf	3,5	;RP0=1, select bank1
  2249  0472  1303               	bcf	3,6	;RP1=0, select bank1
  2250  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  2251  0474  1283               	bcf	3,5	;RP0=0, select bank0
  2252  0475  1303               	bcf	3,6	;RP1=0, select bank0
  2253  0476  00D2               	movwf	___fltol@f1+1
  2254  0477  1683               	bsf	3,5	;RP0=1, select bank1
  2255  0478  1303               	bcf	3,6	;RP1=0, select bank1
  2256  0479  083E               	movf	sprintf@fval^(0+128),w
  2257  047A  1283               	bcf	3,5	;RP0=0, select bank0
  2258  047B  1303               	bcf	3,6	;RP1=0, select bank0
  2259  047C  00D1               	movwf	___fltol@f1
  2260  047D  160A  118A  200D  120A  118A  	fcall	___fltol
  2261  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2262  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2263  0484  0854               	movf	?___fltol+3,w
  2264  0485  0453               	iorwf	?___fltol+2,w
  2265  0486  0452               	iorwf	?___fltol+1,w
  2266  0487  0451               	iorwf	?___fltol,w
  2267  0488  1D03               	skipz
  2268  0489  2D00               	goto	l3300
  2269  048A  1683               	bsf	3,5	;RP0=1, select bank1
  2270  048B  1303               	bcf	3,6	;RP1=0, select bank1
  2271  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2272  048D  3A80               	xorlw	128
  2273  048E  00FF               	movwf	127
  2274  048F  3080               	movlw	128
  2275  0490  027F               	subwf	127,w
  2276  0491  1D03               	skipz
  2277  0492  2C95               	goto	u5575
  2278  0493  3002               	movlw	2
  2279  0494  0235               	subwf	sprintf@eexp^(0+128),w
  2280  0495                     u5575:	
  2281  0495  1C03               	skipc
  2282  0496  2D00               	goto	l3300
  2283  0497                     l3286:	
  2284                           
  2285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  2286  0497  1683               	bsf	3,5	;RP0=1, select bank1
  2287  0498  1303               	bcf	3,6	;RP1=0, select bank1
  2288  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2289  049A  00F3               	movwf	___flge@ff1+3
  2290  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2291  049C  00F2               	movwf	___flge@ff1+2
  2292  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2293  049E  00F1               	movwf	___flge@ff1+1
  2294  049F  0837               	movf	sprintf@tmpval^(0+128),w
  2295  04A0  00F0               	movwf	___flge@ff1
  2296  04A1  3040               	movlw	64
  2297  04A2  00F7               	movwf	___flge@ff2+3
  2298  04A3  3089               	movlw	137
  2299  04A4  00F6               	movwf	___flge@ff2+2
  2300  04A5  3070               	movlw	112
  2301  04A6  00F5               	movwf	___flge@ff2+1
  2302  04A7  305F               	movlw	95
  2303  04A8  00F4               	movwf	___flge@ff2
  2304  04A9  160A  118A  207A  120A  118A  	fcall	___flge
  2305  04AE  1803               	btfsc	3,0
  2306  04AF  2CB2               	goto	l3290
  2307                           
  2308                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2309  04B0  30F7               	movlw	247
  2310  04B1  2CB3               	goto	L2
  2311  04B2                     l3290:	
  2312                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2313                           
  2314                           
  2315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2316  04B2  30F8               	movlw	248
  2317  04B3                     L2:	
  2318  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2319  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2320  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2321  04B6  1803               	skipnc
  2322  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2323  04B8  30FF               	movlw	255
  2324  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2325                           
  2326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2327  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2328  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2329  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2330  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2331  04C2  0841               	movf	?_scale+3,w
  2332  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2333  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2334  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2335  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2336  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2337  04C8  0840               	movf	?_scale+2,w
  2338  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2339  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2340  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2341  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2342  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2343  04CE  083F               	movf	?_scale+1,w
  2344  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2345  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2346  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2347  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2348  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2349  04D4  083E               	movf	?_scale,w
  2350  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2351  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2352  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2353  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2354  04D9  00F3               	movwf	__div_to_l_@f1+3
  2355  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2356  04DB  00F2               	movwf	__div_to_l_@f1+2
  2357  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2358  04DD  00F1               	movwf	__div_to_l_@f1+1
  2359  04DE  083E               	movf	sprintf@fval^(0+128),w
  2360  04DF  00F0               	movwf	__div_to_l_@f1
  2361  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2362  04E1  00F7               	movwf	__div_to_l_@f2+3
  2363  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2364  04E3  00F6               	movwf	__div_to_l_@f2+2
  2365  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2366  04E5  00F5               	movwf	__div_to_l_@f2+1
  2367  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2368  04E7  00F4               	movwf	__div_to_l_@f2
  2369  04E8  120A  158A  20F8  120A  118A  	fcall	__div_to_l_
  2370  04ED  0873               	movf	?__div_to_l_+3,w
  2371  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2372  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2373  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2374  04F1  0872               	movf	?__div_to_l_+2,w
  2375  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2376  04F3  0871               	movf	?__div_to_l_+1,w
  2377  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2378  04F5  0870               	movf	?__div_to_l_,w
  2379  04F6  00B1               	movwf	sprintf@val^(0+128)
  2380                           
  2381                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2382  04F7  3000               	movlw	0
  2383  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2384  04F9  3000               	movlw	0
  2385  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2386  04FB  3000               	movlw	0
  2387  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2388  04FD  3000               	movlw	0
  2389  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2390                           
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2392  04FF  2D84               	goto	l3306
  2393  0500                     l3300:	
  2394                           
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2396  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2397  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2398  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2399  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0505  00D4               	movwf	___fltol@f1+3
  2402  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2404  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2405  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2406  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2407  050B  00D3               	movwf	___fltol@f1+2
  2408  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2409  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2410  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2411  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0511  00D2               	movwf	___fltol@f1+1
  2414  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0514  083E               	movf	sprintf@fval^(0+128),w
  2417  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0517  00D1               	movwf	___fltol@f1
  2420  0518  160A  118A  200D  120A  118A  	fcall	___fltol
  2421  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2422  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2423  051F  0854               	movf	?___fltol+3,w
  2424  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2425  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2426  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2427  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2428  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0525  0853               	movf	?___fltol+2,w
  2430  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2433  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2434  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2435  052B  0852               	movf	?___fltol+1,w
  2436  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2437  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2438  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2439  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2440  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2441  0531  0851               	movf	?___fltol,w
  2442  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0534  00B1               	movwf	sprintf@val^(0+128)
  2445                           
  2446                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2447  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2448  0536  00F3               	movwf	___xxtofl@val+3
  2449  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2450  0538  00F2               	movwf	___xxtofl@val+2
  2451  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2452  053A  00F1               	movwf	___xxtofl@val+1
  2453  053B  0831               	movf	sprintf@val^(0+128),w
  2454  053C  00F0               	movwf	___xxtofl@val
  2455  053D  3000               	movlw	0
  2456  053E  160A  118A  210D  120A  118A  	fcall	___xxtofl
  2457  0543  0873               	movf	?___xxtofl+3,w
  2458  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2459  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2460  0546  00E9               	movwf	___flsub@a+3
  2461  0547  0872               	movf	?___xxtofl+2,w
  2462  0548  00E8               	movwf	___flsub@a+2
  2463  0549  0871               	movf	?___xxtofl+1,w
  2464  054A  00E7               	movwf	___flsub@a+1
  2465  054B  0870               	movf	?___xxtofl,w
  2466  054C  00E6               	movwf	___flsub@a
  2467  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2468  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2469  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2470  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0552  00ED               	movwf	___flsub@b+3
  2473  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2474  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2475  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2476  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2477  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2478  0558  00EC               	movwf	___flsub@b+2
  2479  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2480  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2481  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2482  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2483  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2484  055E  00EB               	movwf	___flsub@b+1
  2485  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2486  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2487  0561  083E               	movf	sprintf@fval^(0+128),w
  2488  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2489  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2490  0564  00EA               	movwf	___flsub@b
  2491  0565  160A  158A  2486  120A  118A  	fcall	___flsub
  2492  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2493  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2494  056C  0869               	movf	?___flsub+3,w
  2495  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2496  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2497  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2498  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2499  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2500  0572  0868               	movf	?___flsub+2,w
  2501  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2502  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2503  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2504  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2505  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2506  0578  0867               	movf	?___flsub+1,w
  2507  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2508  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2509  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2510  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2511  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2512  057E  0866               	movf	?___flsub,w
  2513  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2514  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2515  0581  00BE               	movwf	sprintf@fval^(0+128)
  2516                           
  2517                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2518  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2519  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2520  0584                     l3306:	
  2521                           
  2522                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2523  0584  01C2               	clrf	sprintf@c^(0+128)
  2524  0585  0AC2               	incf	sprintf@c^(0+128),f
  2525  0586                     l3312:	
  2526                           
  2527                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2528  0586  0842               	movf	sprintf@c^(0+128),w
  2529  0587  00A5               	movwf	??_sprintf^(0+128)
  2530  0588  3001               	movlw	1
  2531  0589                     u5595:	
  2532  0589  1003               	clrc
  2533  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2534  058B  3EFF               	addlw	-1
  2535  058C  1D03               	skipz
  2536  058D  2D89               	goto	u5595
  2537  058E  1003               	clrc
  2538  058F  0D25               	rlf	??_sprintf^(0+128),w
  2539  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2540  0591  0084               	movwf	4
  2541  0592  120A  158A  200A  120A  118A  	fcall	stringdir
  2542  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2543  0598  120A  158A  200A  120A  118A  	fcall	stringdir
  2544  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2545  059E  120A  158A  200A  120A  118A  	fcall	stringdir
  2546  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2547  05A4  120A  158A  200A  120A  118A  	fcall	stringdir
  2548  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2549  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2550  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2551  05AC  1D03               	skipz
  2552  05AD  2DB8               	goto	u5605
  2553  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2554  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2555  05B0  1D03               	skipz
  2556  05B1  2DB8               	goto	u5605
  2557  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2558  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2559  05B4  1D03               	skipz
  2560  05B5  2DB8               	goto	u5605
  2561  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2562  05B7  0231               	subwf	sprintf@val^(0+128),w
  2563  05B8                     u5605:	
  2564  05B8  1C03               	btfss	3,0
  2565  05B9  2DC2               	goto	l3318
  2566  05BA  3001               	movlw	1
  2567  05BB  00A5               	movwf	??_sprintf^(0+128)
  2568  05BC  0825               	movf	??_sprintf^(0+128),w
  2569  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2570  05BE  300A               	movlw	10
  2571  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2572  05C0  1D03               	btfss	3,2
  2573  05C1  2D86               	goto	l3312
  2574  05C2                     l3318:	
  2575                           
  2576                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2577  05C2  3003               	movlw	3
  2578  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2579  05C4  00A5               	movwf	??_sprintf^(0+128)
  2580  05C5  3000               	movlw	0
  2581  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2582  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2583  05C8  0825               	movf	??_sprintf^(0+128),w
  2584  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2585  05CA  1903               	btfsc	3,2
  2586  05CB  2DD7               	goto	l242
  2587                           
  2588                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2589  05CC  302D               	movlw	45
  2590  05CD                     L3:	
  2591  05CD  00A5               	movwf	??_sprintf^(0+128)
  2592  05CE  083D               	movf	sprintf@sp^(0+128),w
  2593  05CF  0084               	movwf	4
  2594  05D0  0825               	movf	??_sprintf^(0+128),w
  2595  05D1  1383               	bcf	3,7	;select IRP bank0
  2596  05D2  0080               	movwf	0
  2597  05D3  3001               	movlw	1
  2598  05D4  00A5               	movwf	??_sprintf^(0+128)
  2599  05D5  0825               	movf	??_sprintf^(0+128),w
  2600  05D6  07BD               	addwf	sprintf@sp^(0+128),f
  2601  05D7                     l242:	
  2602                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2603                           
  2604                           
  2605                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2606  05D7  3001               	movlw	1
  2607  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2608  05D9  0A42               	incf	sprintf@c^(0+128),w
  2609  05DA  1903               	btfsc	3,2
  2610  05DB  2E4C               	goto	l3336
  2611                           
  2612                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2613  05DC  0842               	movf	sprintf@c^(0+128),w
  2614  05DD  00A5               	movwf	??_sprintf^(0+128)
  2615  05DE  3001               	movlw	1
  2616  05DF                     u5635:	
  2617  05DF  1003               	clrc
  2618  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2619  05E1  3EFF               	addlw	-1
  2620  05E2  1D03               	skipz
  2621  05E3  2DDF               	goto	u5635
  2622  05E4  1003               	clrc
  2623  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2624  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2625  05E7  0084               	movwf	4
  2626  05E8  120A  158A  200A  120A  118A  	fcall	stringdir
  2627  05ED  00F0               	movwf	___lldiv@divisor
  2628  05EE  120A  158A  200A  120A  118A  	fcall	stringdir
  2629  05F3  00F1               	movwf	___lldiv@divisor+1
  2630  05F4  120A  158A  200A  120A  118A  	fcall	stringdir
  2631  05F9  00F2               	movwf	___lldiv@divisor+2
  2632  05FA  120A  158A  200A  120A  118A  	fcall	stringdir
  2633  05FF  00F3               	movwf	___lldiv@divisor+3
  2634  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2635  0601  00F7               	movwf	___lldiv@dividend+3
  2636  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2637  0603  00F6               	movwf	___lldiv@dividend+2
  2638  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2639  0605  00F5               	movwf	___lldiv@dividend+1
  2640  0606  0831               	movf	sprintf@val^(0+128),w
  2641  0607  00F4               	movwf	___lldiv@dividend
  2642  0608  160A  158A  27A2  120A  118A  	fcall	___lldiv
  2643  060D  0873               	movf	?___lldiv+3,w
  2644  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2645  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2647  0611  0872               	movf	?___lldiv+2,w
  2648  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2649  0613  0871               	movf	?___lldiv+1,w
  2650  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2651  0615  0870               	movf	?___lldiv,w
  2652  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2653                           
  2654                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2655  0617  3000               	movlw	0
  2656  0618  00F3               	movwf	___llmod@divisor+3
  2657  0619  3000               	movlw	0
  2658  061A  00F2               	movwf	___llmod@divisor+2
  2659  061B  3000               	movlw	0
  2660  061C  00F1               	movwf	___llmod@divisor+1
  2661  061D  300A               	movlw	10
  2662  061E  00F0               	movwf	___llmod@divisor
  2663  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2664  0620  00F7               	movwf	___llmod@dividend+3
  2665  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2666  0622  00F6               	movwf	___llmod@dividend+2
  2667  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2668  0624  00F5               	movwf	___llmod@dividend+1
  2669  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2670  0626  00F4               	movwf	___llmod@dividend
  2671  0627  160A  158A  264E  120A  118A  	fcall	___llmod
  2672  062C  0873               	movf	?___llmod+3,w
  2673  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2674  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2675  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2676  0630  0872               	movf	?___llmod+2,w
  2677  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2678  0632  0871               	movf	?___llmod+1,w
  2679  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2680  0634  0870               	movf	?___llmod,w
  2681  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2682                           
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2684  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2685  0637  3E30               	addlw	48
  2686  0638  2DCD               	goto	L3
  2687  0639                     l3330:	
  2688                           
  2689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2690  0639  3030               	movlw	48
  2691  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2692  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2693  063C  00A5               	movwf	??_sprintf^(0+128)
  2694  063D  083D               	movf	sprintf@sp^(0+128),w
  2695  063E  0084               	movwf	4
  2696  063F  0825               	movf	??_sprintf^(0+128),w
  2697  0640  1383               	bcf	3,7	;select IRP bank0
  2698  0641  0080               	movwf	0
  2699  0642  3001               	movlw	1
  2700  0643  00A5               	movwf	??_sprintf^(0+128)
  2701  0644  0825               	movf	??_sprintf^(0+128),w
  2702  0645  07BD               	addwf	sprintf@sp^(0+128),f
  2703                           
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2705  0646  30FF               	movlw	255
  2706  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2707  0648  1803               	skipnc
  2708  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2709  064A  30FF               	movlw	255
  2710  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2711  064C                     l3336:	
  2712                           
  2713                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2714  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2715  064D  3A80               	xorlw	128
  2716  064E  00FF               	movwf	127
  2717  064F  3080               	movlw	128
  2718  0650  027F               	subwf	127,w
  2719  0651  1D03               	skipz
  2720  0652  2E55               	goto	u5655
  2721  0653  3001               	movlw	1
  2722  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2723  0655                     u5655:	
  2724  0655  1803               	skipnc
  2725  0656  2E39               	goto	l3330
  2726                           
  2727                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2728  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2729  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2730  0659  083C               	movf	(sprintf@prec+1)^(0+128),w
  2731  065A  3A80               	xorlw	128
  2732  065B  00FF               	movwf	127
  2733  065C  3080               	movlw	128
  2734  065D  027F               	subwf	127,w
  2735  065E  1D03               	skipz
  2736  065F  2E62               	goto	u5665
  2737  0660  3009               	movlw	9
  2738  0661  023B               	subwf	sprintf@prec^(0+128),w
  2739  0662                     u5665:	
  2740  0662  1C03               	skipc
  2741  0663  2E68               	goto	l3342
  2742                           
  2743                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2744  0664  3008               	movlw	8
  2745  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0667  2E6B               	goto	L4
  2748  0668                     l3342:	
  2749                           
  2750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2751  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2752  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2753  066A  083B               	movf	sprintf@prec^(0+128),w
  2754  066B                     L4:	
  2755  066B  00A5               	movwf	??_sprintf^(0+128)
  2756  066C  0825               	movf	??_sprintf^(0+128),w
  2757  066D  00C2               	movwf	sprintf@c^(0+128)
  2758                           
  2759                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2760  066E  0842               	movf	sprintf@c^(0+128),w
  2761  066F  00A5               	movwf	??_sprintf^(0+128)
  2762  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2763  0671  0825               	movf	??_sprintf^(0+128),w
  2764  0672  02BB               	subwf	sprintf@prec^(0+128),f
  2765  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2766  0674  1C03               	skipc
  2767  0675  03BC               	decf	(sprintf@prec+1)^(0+128),f
  2768  0676  02BC               	subwf	(sprintf@prec+1)^(0+128),f
  2769                           
  2770                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2771  0677  0842               	movf	sprintf@c^(0+128),w
  2772  0678  1903               	btfsc	3,2
  2773  0679  2E85               	goto	l3350
  2774                           
  2775                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2776  067A  302E               	movlw	46
  2777  067B  00A5               	movwf	??_sprintf^(0+128)
  2778  067C  083D               	movf	sprintf@sp^(0+128),w
  2779  067D  0084               	movwf	4
  2780  067E  0825               	movf	??_sprintf^(0+128),w
  2781  067F  1383               	bcf	3,7	;select IRP bank0
  2782  0680  0080               	movwf	0
  2783  0681  3001               	movlw	1
  2784  0682  00A5               	movwf	??_sprintf^(0+128)
  2785  0683  0825               	movf	??_sprintf^(0+128),w
  2786  0684  07BD               	addwf	sprintf@sp^(0+128),f
  2787  0685                     l3350:	
  2788                           
  2789                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2790  0685  0842               	movf	sprintf@c^(0+128),w
  2791  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2792  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2793  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2794  068D  0841               	movf	?_scale+3,w
  2795  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2796  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0690  00AD               	movwf	(_sprintf$798+3)^(0+128)
  2798  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0693  0840               	movf	?_scale+2,w
  2801  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2803  0696  00AC               	movwf	(_sprintf$798+2)^(0+128)
  2804  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2805  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2806  0699  083F               	movf	?_scale+1,w
  2807  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2808  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2809  069C  00AB               	movwf	(_sprintf$798+1)^(0+128)
  2810  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2811  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2812  069F  083E               	movf	?_scale,w
  2813  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2814  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2815  06A2  00AA               	movwf	_sprintf$798^(0+128)
  2816                           
  2817                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2818  06A3  082D               	movf	(_sprintf$798+3)^(0+128),w
  2819  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2820  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2821  06A6  00AB               	movwf	___flmul@a+3
  2822  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2823  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2824  06A9  082C               	movf	(_sprintf$798+2)^(0+128),w
  2825  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2826  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2827  06AC  00AA               	movwf	___flmul@a+2
  2828  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2829  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2830  06AF  082B               	movf	(_sprintf$798+1)^(0+128),w
  2831  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2832  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2833  06B2  00A9               	movwf	___flmul@a+1
  2834  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2835  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2836  06B5  082A               	movf	_sprintf$798^(0+128),w
  2837  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2838  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2839  06B8  00A8               	movwf	___flmul@a
  2840  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2841  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2842  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2843  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2844  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2845  06BE  00A7               	movwf	___flmul@b+3
  2846  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2847  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2848  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2849  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2850  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2851  06C4  00A6               	movwf	___flmul@b+2
  2852  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2853  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2854  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2855  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2856  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2857  06CA  00A5               	movwf	___flmul@b+1
  2858  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2859  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2860  06CD  083E               	movf	sprintf@fval^(0+128),w
  2861  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2862  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2863  06D0  00A4               	movwf	___flmul@b
  2864  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2865  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2866  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2867  06D8  0827               	movf	?___flmul+3,w
  2868  06D9  00D4               	movwf	___fltol@f1+3
  2869  06DA  0826               	movf	?___flmul+2,w
  2870  06DB  00D3               	movwf	___fltol@f1+2
  2871  06DC  0825               	movf	?___flmul+1,w
  2872  06DD  00D2               	movwf	___fltol@f1+1
  2873  06DE  0824               	movf	?___flmul,w
  2874  06DF  00D1               	movwf	___fltol@f1
  2875  06E0  160A  118A  200D  120A  118A  	fcall	___fltol
  2876  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2877  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2878  06E7  0854               	movf	?___fltol+3,w
  2879  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2880  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2881  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2882  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2883  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2884  06ED  0853               	movf	?___fltol+2,w
  2885  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2886  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2887  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2888  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2889  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2890  06F3  0852               	movf	?___fltol+1,w
  2891  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2892  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2893  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2894  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2895  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2896  06F9  0851               	movf	?___fltol,w
  2897  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2898  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2899  06FC                     L5:	
  2900  06FC  00B1               	movwf	sprintf@val^(0+128)
  2901                           
  2902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2903  06FD  3001               	movlw	1
  2904  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2905  06FF  0A42               	incf	sprintf@c^(0+128),w
  2906  0700  1903               	btfsc	3,2
  2907  0701  2FB4               	goto	l3370
  2908                           
  2909                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2910                           
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2912  0702  0842               	movf	sprintf@c^(0+128),w
  2913  0703  00A5               	movwf	??_sprintf^(0+128)
  2914  0704  3001               	movlw	1
  2915  0705                     u5685:	
  2916  0705  1003               	clrc
  2917  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2918  0707  3EFF               	addlw	-1
  2919  0708  1D03               	skipz
  2920  0709  2F05               	goto	u5685
  2921  070A  1003               	clrc
  2922  070B  0D25               	rlf	??_sprintf^(0+128),w
  2923  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2924  070D  0084               	movwf	4
  2925  070E  120A  158A  200A  120A  118A  	fcall	stringdir
  2926  0713  00F0               	movwf	___lldiv@divisor
  2927  0714  120A  158A  200A  120A  118A  	fcall	stringdir
  2928  0719  00F1               	movwf	___lldiv@divisor+1
  2929  071A  120A  158A  200A  120A  118A  	fcall	stringdir
  2930  071F  00F2               	movwf	___lldiv@divisor+2
  2931  0720  120A  158A  200A  120A  118A  	fcall	stringdir
  2932  0725  00F3               	movwf	___lldiv@divisor+3
  2933  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2934  0727  00F7               	movwf	___lldiv@dividend+3
  2935  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2936  0729  00F6               	movwf	___lldiv@dividend+2
  2937  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2938  072B  00F5               	movwf	___lldiv@dividend+1
  2939  072C  0831               	movf	sprintf@val^(0+128),w
  2940  072D  00F4               	movwf	___lldiv@dividend
  2941  072E  160A  158A  27A2  120A  118A  	fcall	___lldiv
  2942  0733  0873               	movf	?___lldiv+3,w
  2943  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2944  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2945  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2946  0737  0872               	movf	?___lldiv+2,w
  2947  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2948  0739  0871               	movf	?___lldiv+1,w
  2949  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2950  073B  0870               	movf	?___lldiv,w
  2951  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2952                           
  2953                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2954  073D  3000               	movlw	0
  2955  073E  00F3               	movwf	___llmod@divisor+3
  2956  073F  3000               	movlw	0
  2957  0740  00F2               	movwf	___llmod@divisor+2
  2958  0741  3000               	movlw	0
  2959  0742  00F1               	movwf	___llmod@divisor+1
  2960  0743  300A               	movlw	10
  2961  0744  00F0               	movwf	___llmod@divisor
  2962  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2963  0746  00F7               	movwf	___llmod@dividend+3
  2964  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2965  0748  00F6               	movwf	___llmod@dividend+2
  2966  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2967  074A  00F5               	movwf	___llmod@dividend+1
  2968  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2969  074C  00F4               	movwf	___llmod@dividend
  2970  074D  160A  158A  264E  120A  118A  	fcall	___llmod
  2971  0752  0873               	movf	?___llmod+3,w
  2972  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2973  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2974  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2975  0756  0872               	movf	?___llmod+2,w
  2976  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2977  0758  0871               	movf	?___llmod+1,w
  2978  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2979  075A  0870               	movf	?___llmod,w
  2980  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2981                           
  2982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2983  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2984  075D  3E30               	addlw	48
  2985  075E  00A5               	movwf	??_sprintf^(0+128)
  2986  075F  083D               	movf	sprintf@sp^(0+128),w
  2987  0760  0084               	movwf	4
  2988  0761  0825               	movf	??_sprintf^(0+128),w
  2989  0762  1383               	bcf	3,7	;select IRP bank0
  2990  0763  0080               	movwf	0
  2991  0764  3001               	movlw	1
  2992  0765  00A5               	movwf	??_sprintf^(0+128)
  2993  0766  0825               	movf	??_sprintf^(0+128),w
  2994  0767  07BD               	addwf	sprintf@sp^(0+128),f
  2995                           
  2996                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2997  0768  0842               	movf	sprintf@c^(0+128),w
  2998  0769  00A5               	movwf	??_sprintf^(0+128)
  2999  076A  3001               	movlw	1
  3000  076B                     u5695:	
  3001  076B  1003               	clrc
  3002  076C  0DA5               	rlf	??_sprintf^(0+128),f
  3003  076D  3EFF               	addlw	-1
  3004  076E  1D03               	skipz
  3005  076F  2F6B               	goto	u5695
  3006  0770  1003               	clrc
  3007  0771  0D25               	rlf	??_sprintf^(0+128),w
  3008  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3009  0773  0084               	movwf	4
  3010  0774  120A  158A  200A  120A  118A  	fcall	stringdir
  3011  0779  00F0               	movwf	___llmod@divisor
  3012  077A  120A  158A  200A  120A  118A  	fcall	stringdir
  3013  077F  00F1               	movwf	___llmod@divisor+1
  3014  0780  120A  158A  200A  120A  118A  	fcall	stringdir
  3015  0785  00F2               	movwf	___llmod@divisor+2
  3016  0786  120A  158A  200A  120A  118A  	fcall	stringdir
  3017  078B  00F3               	movwf	___llmod@divisor+3
  3018  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  3019  078D  00F7               	movwf	___llmod@dividend+3
  3020  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  3021  078F  00F6               	movwf	___llmod@dividend+2
  3022  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  3023  0791  00F5               	movwf	___llmod@dividend+1
  3024  0792  0831               	movf	sprintf@val^(0+128),w
  3025  0793  00F4               	movwf	___llmod@dividend
  3026  0794  160A  158A  264E  120A  118A  	fcall	___llmod
  3027  0799  0873               	movf	?___llmod+3,w
  3028  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3029  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3030  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  3031  079D  0872               	movf	?___llmod+2,w
  3032  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  3033  079F  0871               	movf	?___llmod+1,w
  3034  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  3035  07A1  0870               	movf	?___llmod,w
  3036  07A2  2EFC               	goto	L5
  3037  07A3                     l3364:	
  3038                           
  3039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3040  07A3  3030               	movlw	48
  3041  07A4  00A5               	movwf	??_sprintf^(0+128)
  3042  07A5  083D               	movf	sprintf@sp^(0+128),w
  3043  07A6  0084               	movwf	4
  3044  07A7  0825               	movf	??_sprintf^(0+128),w
  3045  07A8  1383               	bcf	3,7	;select IRP bank0
  3046  07A9  0080               	movwf	0
  3047  07AA  3001               	movlw	1
  3048  07AB  00A5               	movwf	??_sprintf^(0+128)
  3049  07AC  0825               	movf	??_sprintf^(0+128),w
  3050  07AD  07BD               	addwf	sprintf@sp^(0+128),f
  3051                           
  3052                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3053  07AE  30FF               	movlw	255
  3054  07AF  07BB               	addwf	sprintf@prec^(0+128),f
  3055  07B0  1803               	skipnc
  3056  07B1  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3057  07B2  30FF               	movlw	255
  3058  07B3  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3059  07B4                     l3370:	
  3060                           
  3061                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3062  07B4  083B               	movf	sprintf@prec^(0+128),w
  3063  07B5  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  3064  07B6  1903               	btfsc	3,2
  3065  07B7  2A0C               	goto	l3390
  3066  07B8  2FA3               	goto	l3364
  3067  07B9                     l3372:	
  3068                           
  3069                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  3070  07B9  083B               	movf	sprintf@prec^(0+128),w
  3071  07BA  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  3072  07BB  1D03               	btfss	3,2
  3073  07BC  2FC9               	goto	l257
  3074  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  3075  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3076  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3077  07C0  0431               	iorwf	sprintf@val^(0+128),w
  3078  07C1  1D03               	skipz
  3079  07C2  2FC9               	goto	l257
  3080                           
  3081                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  3082  07C3  3001               	movlw	1
  3083  07C4  07BB               	addwf	sprintf@prec^(0+128),f
  3084  07C5  1803               	skipnc
  3085  07C6  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3086  07C7  3000               	movlw	0
  3087  07C8  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3088  07C9                     l257:	
  3089                           
  3090                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  3091  07C9  083C               	movf	(sprintf@prec+1)^(0+128),w
  3092  07CA  3A80               	xorlw	128
  3093  07CB  3C80               	sublw	128
  3094  07CC  1D03               	skipz
  3095  07CD  2FD0               	goto	u5745
  3096  07CE  083B               	movf	sprintf@prec^(0+128),w
  3097  07CF  0242               	subwf	sprintf@c^(0+128),w
  3098  07D0                     u5745:	
  3099  07D0  1C03               	btfss	3,0
  3100  07D1  2FDF               	goto	l3384
  3101  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  3102  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  3103  07D4  083C               	movf	(sprintf@prec+1)^(0+128),w
  3104  07D5  3A80               	xorlw	128
  3105  07D6  00A5               	movwf	??_sprintf^(0+128)
  3106  07D7  3080               	movlw	128
  3107  07D8  0225               	subwf	??_sprintf^(0+128),w
  3108  07D9  1D03               	skipz
  3109  07DA  2FDD               	goto	u5755
  3110  07DB  0842               	movf	sprintf@c^(0+128),w
  3111  07DC  023B               	subwf	sprintf@prec^(0+128),w
  3112  07DD                     u5755:	
  3113  07DD  1C03               	btfss	3,0
  3114  07DE  2FDF               	goto	l3384
  3115  07DF                     l3384:	
  3116                           
  3117                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  3118  07DF  3003               	movlw	3
  3119  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  3120  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  3121  07E2  052F               	andwf	sprintf@flag^(0+128),w
  3122  07E3  00A5               	movwf	??_sprintf^(0+128)
  3123  07E4  3000               	movlw	0
  3124  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3125  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3126  07E7  0825               	movf	??_sprintf^(0+128),w
  3127  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3128  07E9  1903               	btfsc	3,2
  3129  07EA  2A0C               	goto	l3390
  3130                           
  3131                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3132  07EB  302D               	movlw	45
  3133  07EC                     L6:	
  3134  07EC  00A5               	movwf	??_sprintf^(0+128)
  3135  07ED  083D               	movf	sprintf@sp^(0+128),w
  3136  07EE  0084               	movwf	4
  3137  07EF  0825               	movf	??_sprintf^(0+128),w
  3138  07F0  1383               	bcf	3,7	;select IRP bank0
  3139  07F1  0080               	movwf	0
  3140  07F2  3001               	movlw	1
  3141  07F3  00A5               	movwf	??_sprintf^(0+128)
  3142  07F4  0825               	movf	??_sprintf^(0+128),w
  3143  07F5  07BD               	addwf	sprintf@sp^(0+128),f
  3144  07F6  2A0C               	goto	l3390
  3145  07F7                     l3392:	
  3146                           
  3147                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3148  07F7  083D               	movf	sprintf@sp^(0+128),w
  3149  07F8  0084               	movwf	4
  3150  07F9  1383               	bcf	3,7	;select IRP bank0
  3151  07FA  0180               	clrf	0
  3152  07FB  0008               	return
  3153  07FC                     __end_of_sprintf:	
  3154                           
  3155                           	psect	text2
  3156  0CB7                     __ptext2:	
  3157 ;; *************** function _scale *****************
  3158 ;; Defined at:
  3159 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  scl             1    wreg     char 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  scl             1   48[BANK0 ] char 
  3164 ;; Return value:  Size  Location     Type
  3165 ;;                  4   30[BANK0 ] char 
  3166 ;; Registers used:
  3167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3168 ;; Tracked objects:
  3169 ;;		On entry : 0/0
  3170 ;;		On exit  : 0/0
  3171 ;;		Unchanged: 0/0
  3172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3173 ;;      Params:         0       4       0       0       0
  3174 ;;      Locals:         0       5       0       0       0
  3175 ;;      Temps:          0      10       0       0       0
  3176 ;;      Totals:         0      19       0       0       0
  3177 ;;Total ram usage:       19 bytes
  3178 ;; Hardware stack levels used:    1
  3179 ;; Hardware stack levels required when called:    2
  3180 ;; This function calls:
  3181 ;;		___awdiv
  3182 ;;		___awmod
  3183 ;;		___flmul
  3184 ;; This function is called by:
  3185 ;;		_sprintf
  3186 ;; This function uses a non-reentrant model
  3187 ;;
  3188                           
  3189                           
  3190                           ;psect for function _scale
  3191  0CB7                     _scale:	
  3192                           
  3193                           ;incstack = 0
  3194                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3195                           ;scale@scl stored from wreg
  3196  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  3197  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  3198  0CB9  00D0               	movwf	scale@scl
  3199                           
  3200                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3201  0CBA  1FD0               	btfss	scale@scl,7
  3202  0CBB  2E5F               	goto	l2804
  3203                           
  3204                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3205  0CBC  09D0               	comf	scale@scl,f
  3206  0CBD  0AD0               	incf	scale@scl,f
  3207                           
  3208                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3209  0CBE  0850               	movf	scale@scl,w
  3210  0CBF  3A80               	xorlw	128
  3211  0CC0  3E12               	addlw	-238
  3212  0CC1  1C03               	skipc
  3213  0CC2  2DA9               	goto	l2794
  3214                           
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3216  0CC3  300A               	movlw	10
  3217  0CC4  00F7               	movwf	___awdiv@divisor
  3218  0CC5  3000               	movlw	0
  3219  0CC6  00F8               	movwf	___awdiv@divisor+1
  3220  0CC7  0850               	movf	scale@scl,w
  3221  0CC8  00F2               	movwf	___awmod@dividend
  3222  0CC9  01F3               	clrf	___awmod@dividend+1
  3223  0CCA  1BF2               	btfsc	___awmod@dividend,7
  3224  0CCB  03F3               	decf	___awmod@dividend+1,f
  3225  0CCC  3064               	movlw	100
  3226  0CCD  00F0               	movwf	___awmod@divisor
  3227  0CCE  3000               	movlw	0
  3228  0CCF  00F1               	movwf	___awmod@divisor+1
  3229  0CD0  160A  158A  2603  120A  158A  	fcall	___awmod
  3230  0CD5  0871               	movf	?___awmod+1,w
  3231  0CD6  00FA               	movwf	___awdiv@dividend+1
  3232  0CD7  0870               	movf	?___awmod,w
  3233  0CD8  00F9               	movwf	___awdiv@dividend
  3234  0CD9  160A  158A  2747  120A  158A  	fcall	___awdiv
  3235  0CDE  0877               	movf	?___awdiv,w
  3236  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  3237  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  3238  0CE1  00C2               	movwf	??_scale
  3239  0CE2  3001               	movlw	1
  3240  0CE3                     u4395:	
  3241  0CE3  1003               	clrc
  3242  0CE4  0DC2               	rlf	??_scale,f
  3243  0CE5  3EFF               	addlw	-1
  3244  0CE6  1D03               	skipz
  3245  0CE7  2CE3               	goto	u4395
  3246  0CE8  1003               	clrc
  3247  0CE9  0D42               	rlf	??_scale,w
  3248  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3249  0CEB  0084               	movwf	4
  3250  0CEC  120A  158A  200A  120A  158A  	fcall	stringdir
  3251  0CF1  00C3               	movwf	??_scale+1
  3252  0CF2  120A  158A  200A  120A  158A  	fcall	stringdir
  3253  0CF7  00C4               	movwf	??_scale+2
  3254  0CF8  120A  158A  200A  120A  158A  	fcall	stringdir
  3255  0CFD  00C5               	movwf	??_scale+3
  3256  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  3257  0D03  00C6               	movwf	??_scale+4
  3258  0D04  0846               	movf	??_scale+4,w
  3259  0D05  00A7               	movwf	___flmul@b+3
  3260  0D06  0845               	movf	??_scale+3,w
  3261  0D07  00A6               	movwf	___flmul@b+2
  3262  0D08  0844               	movf	??_scale+2,w
  3263  0D09  00A5               	movwf	___flmul@b+1
  3264  0D0A  0843               	movf	??_scale+1,w
  3265  0D0B  00A4               	movwf	___flmul@b
  3266  0D0C  3064               	movlw	100
  3267  0D0D  00F7               	movwf	___awdiv@divisor
  3268  0D0E  3000               	movlw	0
  3269  0D0F  00F8               	movwf	___awdiv@divisor+1
  3270  0D10  0850               	movf	scale@scl,w
  3271  0D11  00F9               	movwf	___awdiv@dividend
  3272  0D12  01FA               	clrf	___awdiv@dividend+1
  3273  0D13  1BF9               	btfsc	___awdiv@dividend,7
  3274  0D14  03FA               	decf	___awdiv@dividend+1,f
  3275  0D15  160A  158A  2747  120A  158A  	fcall	___awdiv
  3276  0D1A  0877               	movf	?___awdiv,w
  3277  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  3278  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  3279  0D1D  00C7               	movwf	??_scale+5
  3280  0D1E  3001               	movlw	1
  3281  0D1F                     u4405:	
  3282  0D1F  1003               	clrc
  3283  0D20  0DC7               	rlf	??_scale+5,f
  3284  0D21  3EFF               	addlw	-1
  3285  0D22  1D03               	skipz
  3286  0D23  2D1F               	goto	u4405
  3287  0D24  1003               	clrc
  3288  0D25  0D47               	rlf	??_scale+5,w
  3289  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3290  0D27  0084               	movwf	4
  3291  0D28  120A  158A  200A  120A  158A  	fcall	stringdir
  3292  0D2D  00C8               	movwf	??_scale+6
  3293  0D2E  120A  158A  200A  120A  158A  	fcall	stringdir
  3294  0D33  00C9               	movwf	??_scale+7
  3295  0D34  120A  158A  200A  120A  158A  	fcall	stringdir
  3296  0D39  00CA               	movwf	??_scale+8
  3297  0D3A  120A  158A  200A  120A  158A  	fcall	stringdir
  3298  0D3F  00CB               	movwf	??_scale+9
  3299  0D40  084B               	movf	??_scale+9,w
  3300  0D41  00AB               	movwf	___flmul@a+3
  3301  0D42  084A               	movf	??_scale+8,w
  3302  0D43  00AA               	movwf	___flmul@a+2
  3303  0D44  0849               	movf	??_scale+7,w
  3304  0D45  00A9               	movwf	___flmul@a+1
  3305  0D46  0848               	movf	??_scale+6,w
  3306  0D47  00A8               	movwf	___flmul@a
  3307  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3308  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3309  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3310  0D4F  0827               	movf	?___flmul+3,w
  3311  0D50  00CF               	movwf	_scale$797+3
  3312  0D51  0826               	movf	?___flmul+2,w
  3313  0D52  00CE               	movwf	_scale$797+2
  3314  0D53  0825               	movf	?___flmul+1,w
  3315  0D54  00CD               	movwf	_scale$797+1
  3316  0D55  0824               	movf	?___flmul,w
  3317  0D56  00CC               	movwf	_scale$797
  3318                           
  3319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3320  0D57  300A               	movlw	10
  3321  0D58  00F0               	movwf	___awmod@divisor
  3322  0D59  3000               	movlw	0
  3323  0D5A  00F1               	movwf	___awmod@divisor+1
  3324  0D5B  0850               	movf	scale@scl,w
  3325  0D5C  00F2               	movwf	___awmod@dividend
  3326  0D5D  01F3               	clrf	___awmod@dividend+1
  3327  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3328  0D5F  03F3               	decf	___awmod@dividend+1,f
  3329  0D60  160A  158A  2603  120A  158A  	fcall	___awmod
  3330  0D65  0870               	movf	?___awmod,w
  3331  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3332  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3333  0D68  00C2               	movwf	??_scale
  3334  0D69  3001               	movlw	1
  3335  0D6A                     u4415:	
  3336  0D6A  1003               	clrc
  3337  0D6B  0DC2               	rlf	??_scale,f
  3338  0D6C  3EFF               	addlw	-1
  3339  0D6D  1D03               	skipz
  3340  0D6E  2D6A               	goto	u4415
  3341  0D6F  1003               	clrc
  3342  0D70  0D42               	rlf	??_scale,w
  3343  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3344  0D72  0084               	movwf	4
  3345  0D73  120A  158A  200A  120A  158A  	fcall	stringdir
  3346  0D78  00C3               	movwf	??_scale+1
  3347  0D79  120A  158A  200A  120A  158A  	fcall	stringdir
  3348  0D7E  00C4               	movwf	??_scale+2
  3349  0D7F  120A  158A  200A  120A  158A  	fcall	stringdir
  3350  0D84  00C5               	movwf	??_scale+3
  3351  0D85  120A  158A  200A  120A  158A  	fcall	stringdir
  3352  0D8A  00C6               	movwf	??_scale+4
  3353  0D8B  0846               	movf	??_scale+4,w
  3354  0D8C  00A7               	movwf	___flmul@b+3
  3355  0D8D  0845               	movf	??_scale+3,w
  3356  0D8E  00A6               	movwf	___flmul@b+2
  3357  0D8F  0844               	movf	??_scale+2,w
  3358  0D90  00A5               	movwf	___flmul@b+1
  3359  0D91  0843               	movf	??_scale+1,w
  3360  0D92  00A4               	movwf	___flmul@b
  3361  0D93  084F               	movf	_scale$797+3,w
  3362  0D94  00AB               	movwf	___flmul@a+3
  3363  0D95  084E               	movf	_scale$797+2,w
  3364  0D96  00AA               	movwf	___flmul@a+2
  3365  0D97  084D               	movf	_scale$797+1,w
  3366  0D98  00A9               	movwf	___flmul@a+1
  3367  0D99  084C               	movf	_scale$797,w
  3368  0D9A  00A8               	movwf	___flmul@a
  3369  0D9B  120A  158A  21A2   	fcall	___flmul
  3370  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3371  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3372  0DA0  0827               	movf	?___flmul+3,w
  3373  0DA1  00C1               	movwf	?_scale+3
  3374  0DA2  0826               	movf	?___flmul+2,w
  3375  0DA3  00C0               	movwf	?_scale+2
  3376  0DA4  0825               	movf	?___flmul+1,w
  3377  0DA5  00BF               	movwf	?_scale+1
  3378  0DA6  0824               	movf	?___flmul,w
  3379  0DA7  00BE               	movwf	?_scale
  3380  0DA8  0008               	return
  3381  0DA9                     l2794:	
  3382  0DA9  0850               	movf	scale@scl,w
  3383  0DAA  3A80               	xorlw	128
  3384  0DAB  3E75               	addlw	-139
  3385  0DAC  1C03               	skipc
  3386  0DAD  2E34               	goto	l2800
  3387                           
  3388                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3389  0DAE  300A               	movlw	10
  3390  0DAF  00F0               	movwf	___awmod@divisor
  3391  0DB0  3000               	movlw	0
  3392  0DB1  00F1               	movwf	___awmod@divisor+1
  3393  0DB2  0850               	movf	scale@scl,w
  3394  0DB3  00F2               	movwf	___awmod@dividend
  3395  0DB4  01F3               	clrf	___awmod@dividend+1
  3396  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3397  0DB6  03F3               	decf	___awmod@dividend+1,f
  3398  0DB7  160A  158A  2603  120A  158A  	fcall	___awmod
  3399  0DBC  0870               	movf	?___awmod,w
  3400  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0DBF  00C2               	movwf	??_scale
  3403  0DC0  3001               	movlw	1
  3404  0DC1                     u4435:	
  3405  0DC1  1003               	clrc
  3406  0DC2  0DC2               	rlf	??_scale,f
  3407  0DC3  3EFF               	addlw	-1
  3408  0DC4  1D03               	skipz
  3409  0DC5  2DC1               	goto	u4435
  3410  0DC6  1003               	clrc
  3411  0DC7  0D42               	rlf	??_scale,w
  3412  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3413  0DC9  0084               	movwf	4
  3414  0DCA  120A  158A  200A  120A  158A  	fcall	stringdir
  3415  0DCF  00C3               	movwf	??_scale+1
  3416  0DD0  120A  158A  200A  120A  158A  	fcall	stringdir
  3417  0DD5  00C4               	movwf	??_scale+2
  3418  0DD6  120A  158A  200A  120A  158A  	fcall	stringdir
  3419  0DDB  00C5               	movwf	??_scale+3
  3420  0DDC  120A  158A  200A  120A  158A  	fcall	stringdir
  3421  0DE1  00C6               	movwf	??_scale+4
  3422  0DE2  0846               	movf	??_scale+4,w
  3423  0DE3  00A7               	movwf	___flmul@b+3
  3424  0DE4  0845               	movf	??_scale+3,w
  3425  0DE5  00A6               	movwf	___flmul@b+2
  3426  0DE6  0844               	movf	??_scale+2,w
  3427  0DE7  00A5               	movwf	___flmul@b+1
  3428  0DE8  0843               	movf	??_scale+1,w
  3429  0DE9  00A4               	movwf	___flmul@b
  3430  0DEA  300A               	movlw	10
  3431  0DEB  00F7               	movwf	___awdiv@divisor
  3432  0DEC  3000               	movlw	0
  3433  0DED  00F8               	movwf	___awdiv@divisor+1
  3434  0DEE  0850               	movf	scale@scl,w
  3435  0DEF  00F9               	movwf	___awdiv@dividend
  3436  0DF0  01FA               	clrf	___awdiv@dividend+1
  3437  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3438  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3439  0DF3  160A  158A  2747  120A  158A  	fcall	___awdiv
  3440  0DF8  0877               	movf	?___awdiv,w
  3441  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0DFB  00C7               	movwf	??_scale+5
  3444  0DFC  3001               	movlw	1
  3445  0DFD                     u4445:	
  3446  0DFD  1003               	clrc
  3447  0DFE  0DC7               	rlf	??_scale+5,f
  3448  0DFF  3EFF               	addlw	-1
  3449  0E00  1D03               	skipz
  3450  0E01  2DFD               	goto	u4445
  3451  0E02  1003               	clrc
  3452  0E03  0D47               	rlf	??_scale+5,w
  3453  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3454  0E05  0084               	movwf	4
  3455  0E06  120A  158A  200A  120A  158A  	fcall	stringdir
  3456  0E0B  00C8               	movwf	??_scale+6
  3457  0E0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3458  0E11  00C9               	movwf	??_scale+7
  3459  0E12  120A  158A  200A  120A  158A  	fcall	stringdir
  3460  0E17  00CA               	movwf	??_scale+8
  3461  0E18  120A  158A  200A  120A  158A  	fcall	stringdir
  3462  0E1D  00CB               	movwf	??_scale+9
  3463  0E1E  084B               	movf	??_scale+9,w
  3464  0E1F  00AB               	movwf	___flmul@a+3
  3465  0E20  084A               	movf	??_scale+8,w
  3466  0E21  00AA               	movwf	___flmul@a+2
  3467  0E22  0849               	movf	??_scale+7,w
  3468  0E23  00A9               	movwf	___flmul@a+1
  3469  0E24  0848               	movf	??_scale+6,w
  3470  0E25  00A8               	movwf	___flmul@a
  3471  0E26  120A  158A  21A2   	fcall	___flmul
  3472  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3473  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3474  0E2B  0827               	movf	?___flmul+3,w
  3475  0E2C  00C1               	movwf	?_scale+3
  3476  0E2D  0826               	movf	?___flmul+2,w
  3477  0E2E  00C0               	movwf	?_scale+2
  3478  0E2F  0825               	movf	?___flmul+1,w
  3479  0E30  00BF               	movwf	?_scale+1
  3480  0E31  0824               	movf	?___flmul,w
  3481  0E32  00BE               	movwf	?_scale
  3482  0E33  0008               	return
  3483  0E34                     l2800:	
  3484                           
  3485                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3486  0E34  0850               	movf	scale@scl,w
  3487  0E35  00C2               	movwf	??_scale
  3488  0E36  3001               	movlw	1
  3489  0E37                     u4455:	
  3490  0E37  1003               	clrc
  3491  0E38  0DC2               	rlf	??_scale,f
  3492  0E39  3EFF               	addlw	-1
  3493  0E3A  1D03               	skipz
  3494  0E3B  2E37               	goto	u4455
  3495  0E3C  1003               	clrc
  3496  0E3D  0D42               	rlf	??_scale,w
  3497  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3498  0E3F  0084               	movwf	4
  3499  0E40  120A  158A  200A  120A  158A  	fcall	stringdir
  3500  0E45  00C3               	movwf	??_scale+1
  3501  0E46  120A  158A  200A  120A  158A  	fcall	stringdir
  3502  0E4B  00C4               	movwf	??_scale+2
  3503  0E4C  120A  158A  200A  120A  158A  	fcall	stringdir
  3504  0E51  00C5               	movwf	??_scale+3
  3505  0E52  120A  158A  200A   	fcall	stringdir
  3506  0E55  00C6               	movwf	??_scale+4
  3507  0E56  0846               	movf	??_scale+4,w
  3508  0E57  00C1               	movwf	?_scale+3
  3509  0E58  0845               	movf	??_scale+3,w
  3510  0E59  00C0               	movwf	?_scale+2
  3511  0E5A  0844               	movf	??_scale+2,w
  3512  0E5B  00BF               	movwf	?_scale+1
  3513  0E5C  0843               	movf	??_scale+1,w
  3514  0E5D  00BE               	movwf	?_scale
  3515  0E5E  0008               	return
  3516  0E5F                     l2804:	
  3517                           
  3518                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3519  0E5F  0850               	movf	scale@scl,w
  3520  0E60  3A80               	xorlw	128
  3521  0E61  3E12               	addlw	-238
  3522  0E62  1C03               	skipc
  3523  0E63  2F4A               	goto	l2812
  3524                           
  3525                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3526  0E64  300A               	movlw	10
  3527  0E65  00F7               	movwf	___awdiv@divisor
  3528  0E66  3000               	movlw	0
  3529  0E67  00F8               	movwf	___awdiv@divisor+1
  3530  0E68  0850               	movf	scale@scl,w
  3531  0E69  00F2               	movwf	___awmod@dividend
  3532  0E6A  01F3               	clrf	___awmod@dividend+1
  3533  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3534  0E6C  03F3               	decf	___awmod@dividend+1,f
  3535  0E6D  3064               	movlw	100
  3536  0E6E  00F0               	movwf	___awmod@divisor
  3537  0E6F  3000               	movlw	0
  3538  0E70  00F1               	movwf	___awmod@divisor+1
  3539  0E71  160A  158A  2603  120A  158A  	fcall	___awmod
  3540  0E76  0871               	movf	?___awmod+1,w
  3541  0E77  00FA               	movwf	___awdiv@dividend+1
  3542  0E78  0870               	movf	?___awmod,w
  3543  0E79  00F9               	movwf	___awdiv@dividend
  3544  0E7A  160A  158A  2747  120A  158A  	fcall	___awdiv
  3545  0E7F  0877               	movf	?___awdiv,w
  3546  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3547  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3548  0E82  00C2               	movwf	??_scale
  3549  0E83  3001               	movlw	1
  3550  0E84                     u4475:	
  3551  0E84  1003               	clrc
  3552  0E85  0DC2               	rlf	??_scale,f
  3553  0E86  3EFF               	addlw	-1
  3554  0E87  1D03               	skipz
  3555  0E88  2E84               	goto	u4475
  3556  0E89  1003               	clrc
  3557  0E8A  0D42               	rlf	??_scale,w
  3558  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3559  0E8C  0084               	movwf	4
  3560  0E8D  120A  158A  200A  120A  158A  	fcall	stringdir
  3561  0E92  00C3               	movwf	??_scale+1
  3562  0E93  120A  158A  200A  120A  158A  	fcall	stringdir
  3563  0E98  00C4               	movwf	??_scale+2
  3564  0E99  120A  158A  200A  120A  158A  	fcall	stringdir
  3565  0E9E  00C5               	movwf	??_scale+3
  3566  0E9F  120A  158A  200A  120A  158A  	fcall	stringdir
  3567  0EA4  00C6               	movwf	??_scale+4
  3568  0EA5  0846               	movf	??_scale+4,w
  3569  0EA6  00A7               	movwf	___flmul@b+3
  3570  0EA7  0845               	movf	??_scale+3,w
  3571  0EA8  00A6               	movwf	___flmul@b+2
  3572  0EA9  0844               	movf	??_scale+2,w
  3573  0EAA  00A5               	movwf	___flmul@b+1
  3574  0EAB  0843               	movf	??_scale+1,w
  3575  0EAC  00A4               	movwf	___flmul@b
  3576  0EAD  3064               	movlw	100
  3577  0EAE  00F7               	movwf	___awdiv@divisor
  3578  0EAF  3000               	movlw	0
  3579  0EB0  00F8               	movwf	___awdiv@divisor+1
  3580  0EB1  0850               	movf	scale@scl,w
  3581  0EB2  00F9               	movwf	___awdiv@dividend
  3582  0EB3  01FA               	clrf	___awdiv@dividend+1
  3583  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3584  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3585  0EB6  160A  158A  2747  120A  158A  	fcall	___awdiv
  3586  0EBB  0877               	movf	?___awdiv,w
  3587  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3588  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3589  0EBE  00C7               	movwf	??_scale+5
  3590  0EBF  3001               	movlw	1
  3591  0EC0                     u4485:	
  3592  0EC0  1003               	clrc
  3593  0EC1  0DC7               	rlf	??_scale+5,f
  3594  0EC2  3EFF               	addlw	-1
  3595  0EC3  1D03               	skipz
  3596  0EC4  2EC0               	goto	u4485
  3597  0EC5  1003               	clrc
  3598  0EC6  0D47               	rlf	??_scale+5,w
  3599  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3600  0EC8  0084               	movwf	4
  3601  0EC9  120A  158A  200A  120A  158A  	fcall	stringdir
  3602  0ECE  00C8               	movwf	??_scale+6
  3603  0ECF  120A  158A  200A  120A  158A  	fcall	stringdir
  3604  0ED4  00C9               	movwf	??_scale+7
  3605  0ED5  120A  158A  200A  120A  158A  	fcall	stringdir
  3606  0EDA  00CA               	movwf	??_scale+8
  3607  0EDB  120A  158A  200A  120A  158A  	fcall	stringdir
  3608  0EE0  00CB               	movwf	??_scale+9
  3609  0EE1  084B               	movf	??_scale+9,w
  3610  0EE2  00AB               	movwf	___flmul@a+3
  3611  0EE3  084A               	movf	??_scale+8,w
  3612  0EE4  00AA               	movwf	___flmul@a+2
  3613  0EE5  0849               	movf	??_scale+7,w
  3614  0EE6  00A9               	movwf	___flmul@a+1
  3615  0EE7  0848               	movf	??_scale+6,w
  3616  0EE8  00A8               	movwf	___flmul@a
  3617  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3618  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3619  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3620  0EF0  0827               	movf	?___flmul+3,w
  3621  0EF1  00CF               	movwf	_scale$797+3
  3622  0EF2  0826               	movf	?___flmul+2,w
  3623  0EF3  00CE               	movwf	_scale$797+2
  3624  0EF4  0825               	movf	?___flmul+1,w
  3625  0EF5  00CD               	movwf	_scale$797+1
  3626  0EF6  0824               	movf	?___flmul,w
  3627  0EF7  00CC               	movwf	_scale$797
  3628                           
  3629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3630  0EF8  300A               	movlw	10
  3631  0EF9  00F0               	movwf	___awmod@divisor
  3632  0EFA  3000               	movlw	0
  3633  0EFB  00F1               	movwf	___awmod@divisor+1
  3634  0EFC  0850               	movf	scale@scl,w
  3635  0EFD  00F2               	movwf	___awmod@dividend
  3636  0EFE  01F3               	clrf	___awmod@dividend+1
  3637  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3638  0F00  03F3               	decf	___awmod@dividend+1,f
  3639  0F01  160A  158A  2603  120A  158A  	fcall	___awmod
  3640  0F06  0870               	movf	?___awmod,w
  3641  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3642  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3643  0F09  00C2               	movwf	??_scale
  3644  0F0A  3001               	movlw	1
  3645  0F0B                     u4495:	
  3646  0F0B  1003               	clrc
  3647  0F0C  0DC2               	rlf	??_scale,f
  3648  0F0D  3EFF               	addlw	-1
  3649  0F0E  1D03               	skipz
  3650  0F0F  2F0B               	goto	u4495
  3651  0F10  1003               	clrc
  3652  0F11  0D42               	rlf	??_scale,w
  3653  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3654  0F13  0084               	movwf	4
  3655  0F14  120A  158A  200A  120A  158A  	fcall	stringdir
  3656  0F19  00C3               	movwf	??_scale+1
  3657  0F1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3658  0F1F  00C4               	movwf	??_scale+2
  3659  0F20  120A  158A  200A  120A  158A  	fcall	stringdir
  3660  0F25  00C5               	movwf	??_scale+3
  3661  0F26  120A  158A  200A  120A  158A  	fcall	stringdir
  3662  0F2B  00C6               	movwf	??_scale+4
  3663  0F2C  0846               	movf	??_scale+4,w
  3664  0F2D  00A7               	movwf	___flmul@b+3
  3665  0F2E  0845               	movf	??_scale+3,w
  3666  0F2F  00A6               	movwf	___flmul@b+2
  3667  0F30  0844               	movf	??_scale+2,w
  3668  0F31  00A5               	movwf	___flmul@b+1
  3669  0F32  0843               	movf	??_scale+1,w
  3670  0F33  00A4               	movwf	___flmul@b
  3671  0F34  084F               	movf	_scale$797+3,w
  3672  0F35  00AB               	movwf	___flmul@a+3
  3673  0F36  084E               	movf	_scale$797+2,w
  3674  0F37  00AA               	movwf	___flmul@a+2
  3675  0F38  084D               	movf	_scale$797+1,w
  3676  0F39  00A9               	movwf	___flmul@a+1
  3677  0F3A  084C               	movf	_scale$797,w
  3678  0F3B  00A8               	movwf	___flmul@a
  3679  0F3C  120A  158A  21A2   	fcall	___flmul
  3680  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3681  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3682  0F41  0827               	movf	?___flmul+3,w
  3683  0F42  00C1               	movwf	?_scale+3
  3684  0F43  0826               	movf	?___flmul+2,w
  3685  0F44  00C0               	movwf	?_scale+2
  3686  0F45  0825               	movf	?___flmul+1,w
  3687  0F46  00BF               	movwf	?_scale+1
  3688  0F47  0824               	movf	?___flmul,w
  3689  0F48  00BE               	movwf	?_scale
  3690  0F49  0008               	return
  3691  0F4A                     l2812:	
  3692  0F4A  0850               	movf	scale@scl,w
  3693  0F4B  3A80               	xorlw	128
  3694  0F4C  3E75               	addlw	-139
  3695  0F4D  1C03               	skipc
  3696  0F4E  2FD5               	goto	l2818
  3697                           
  3698                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3699  0F4F  300A               	movlw	10
  3700  0F50  00F0               	movwf	___awmod@divisor
  3701  0F51  3000               	movlw	0
  3702  0F52  00F1               	movwf	___awmod@divisor+1
  3703  0F53  0850               	movf	scale@scl,w
  3704  0F54  00F2               	movwf	___awmod@dividend
  3705  0F55  01F3               	clrf	___awmod@dividend+1
  3706  0F56  1BF2               	btfsc	___awmod@dividend,7
  3707  0F57  03F3               	decf	___awmod@dividend+1,f
  3708  0F58  160A  158A  2603  120A  158A  	fcall	___awmod
  3709  0F5D  0870               	movf	?___awmod,w
  3710  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0F60  00C2               	movwf	??_scale
  3713  0F61  3001               	movlw	1
  3714  0F62                     u4515:	
  3715  0F62  1003               	clrc
  3716  0F63  0DC2               	rlf	??_scale,f
  3717  0F64  3EFF               	addlw	-1
  3718  0F65  1D03               	skipz
  3719  0F66  2F62               	goto	u4515
  3720  0F67  1003               	clrc
  3721  0F68  0D42               	rlf	??_scale,w
  3722  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3723  0F6A  0084               	movwf	4
  3724  0F6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3725  0F70  00C3               	movwf	??_scale+1
  3726  0F71  120A  158A  200A  120A  158A  	fcall	stringdir
  3727  0F76  00C4               	movwf	??_scale+2
  3728  0F77  120A  158A  200A  120A  158A  	fcall	stringdir
  3729  0F7C  00C5               	movwf	??_scale+3
  3730  0F7D  120A  158A  200A  120A  158A  	fcall	stringdir
  3731  0F82  00C6               	movwf	??_scale+4
  3732  0F83  0846               	movf	??_scale+4,w
  3733  0F84  00A7               	movwf	___flmul@b+3
  3734  0F85  0845               	movf	??_scale+3,w
  3735  0F86  00A6               	movwf	___flmul@b+2
  3736  0F87  0844               	movf	??_scale+2,w
  3737  0F88  00A5               	movwf	___flmul@b+1
  3738  0F89  0843               	movf	??_scale+1,w
  3739  0F8A  00A4               	movwf	___flmul@b
  3740  0F8B  300A               	movlw	10
  3741  0F8C  00F7               	movwf	___awdiv@divisor
  3742  0F8D  3000               	movlw	0
  3743  0F8E  00F8               	movwf	___awdiv@divisor+1
  3744  0F8F  0850               	movf	scale@scl,w
  3745  0F90  00F9               	movwf	___awdiv@dividend
  3746  0F91  01FA               	clrf	___awdiv@dividend+1
  3747  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3748  0F93  03FA               	decf	___awdiv@dividend+1,f
  3749  0F94  160A  158A  2747  120A  158A  	fcall	___awdiv
  3750  0F99  0877               	movf	?___awdiv,w
  3751  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0F9C  00C7               	movwf	??_scale+5
  3754  0F9D  3001               	movlw	1
  3755  0F9E                     u4525:	
  3756  0F9E  1003               	clrc
  3757  0F9F  0DC7               	rlf	??_scale+5,f
  3758  0FA0  3EFF               	addlw	-1
  3759  0FA1  1D03               	skipz
  3760  0FA2  2F9E               	goto	u4525
  3761  0FA3  1003               	clrc
  3762  0FA4  0D47               	rlf	??_scale+5,w
  3763  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3764  0FA6  0084               	movwf	4
  3765  0FA7  120A  158A  200A  120A  158A  	fcall	stringdir
  3766  0FAC  00C8               	movwf	??_scale+6
  3767  0FAD  120A  158A  200A  120A  158A  	fcall	stringdir
  3768  0FB2  00C9               	movwf	??_scale+7
  3769  0FB3  120A  158A  200A  120A  158A  	fcall	stringdir
  3770  0FB8  00CA               	movwf	??_scale+8
  3771  0FB9  120A  158A  200A  120A  158A  	fcall	stringdir
  3772  0FBE  00CB               	movwf	??_scale+9
  3773  0FBF  084B               	movf	??_scale+9,w
  3774  0FC0  00AB               	movwf	___flmul@a+3
  3775  0FC1  084A               	movf	??_scale+8,w
  3776  0FC2  00AA               	movwf	___flmul@a+2
  3777  0FC3  0849               	movf	??_scale+7,w
  3778  0FC4  00A9               	movwf	___flmul@a+1
  3779  0FC5  0848               	movf	??_scale+6,w
  3780  0FC6  00A8               	movwf	___flmul@a
  3781  0FC7  120A  158A  21A2   	fcall	___flmul
  3782  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0FCC  0827               	movf	?___flmul+3,w
  3785  0FCD  00C1               	movwf	?_scale+3
  3786  0FCE  0826               	movf	?___flmul+2,w
  3787  0FCF  00C0               	movwf	?_scale+2
  3788  0FD0  0825               	movf	?___flmul+1,w
  3789  0FD1  00BF               	movwf	?_scale+1
  3790  0FD2  0824               	movf	?___flmul,w
  3791  0FD3  00BE               	movwf	?_scale
  3792  0FD4  0008               	return
  3793  0FD5                     l2818:	
  3794                           
  3795                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3796  0FD5  0850               	movf	scale@scl,w
  3797  0FD6  00C2               	movwf	??_scale
  3798  0FD7  3001               	movlw	1
  3799  0FD8                     u4535:	
  3800  0FD8  1003               	clrc
  3801  0FD9  0DC2               	rlf	??_scale,f
  3802  0FDA  3EFF               	addlw	-1
  3803  0FDB  1D03               	skipz
  3804  0FDC  2FD8               	goto	u4535
  3805  0FDD  1003               	clrc
  3806  0FDE  0D42               	rlf	??_scale,w
  3807  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3808  0FE0  0084               	movwf	4
  3809  0FE1  120A  158A  200A  120A  158A  	fcall	stringdir
  3810  0FE6  00C3               	movwf	??_scale+1
  3811  0FE7  120A  158A  200A  120A  158A  	fcall	stringdir
  3812  0FEC  00C4               	movwf	??_scale+2
  3813  0FED  120A  158A  200A  120A  158A  	fcall	stringdir
  3814  0FF2  00C5               	movwf	??_scale+3
  3815  0FF3  120A  158A  200A   	fcall	stringdir
  3816  0FF6  00C6               	movwf	??_scale+4
  3817  0FF7  0846               	movf	??_scale+4,w
  3818  0FF8  00C1               	movwf	?_scale+3
  3819  0FF9  0845               	movf	??_scale+3,w
  3820  0FFA  00C0               	movwf	?_scale+2
  3821  0FFB  0844               	movf	??_scale+2,w
  3822  0FFC  00BF               	movwf	?_scale+1
  3823  0FFD  0843               	movf	??_scale+1,w
  3824  0FFE  00BE               	movwf	?_scale
  3825  0FFF  0008               	return
  3826  1000                     __end_of_scale:	
  3827                           
  3828                           	psect	text3
  3829  1E03                     __ptext3:	
  3830 ;; *************** function ___awmod *****************
  3831 ;; Defined at:
  3832 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3833 ;; Parameters:    Size  Location     Type
  3834 ;;  divisor         2    0[COMMON] int 
  3835 ;;  dividend        2    2[COMMON] int 
  3836 ;; Auto vars:     Size  Location     Type
  3837 ;;  sign            1    6[COMMON] unsigned char 
  3838 ;;  counter         1    5[COMMON] unsigned char 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    0[COMMON] int 
  3841 ;; Registers used:
  3842 ;;		wreg, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3848 ;;      Params:         4       0       0       0       0
  3849 ;;      Locals:         2       0       0       0       0
  3850 ;;      Temps:          1       0       0       0       0
  3851 ;;      Totals:         7       0       0       0       0
  3852 ;;Total ram usage:        7 bytes
  3853 ;; Hardware stack levels used:    1
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_scale
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           
  3862                           ;psect for function ___awmod
  3863  1E03                     ___awmod:	
  3864                           
  3865                           ;incstack = 0
  3866                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3867  1E03  01F6               	clrf	___awmod@sign
  3868  1E04  1FF3               	btfss	___awmod@dividend+1,7
  3869  1E05  2E0D               	goto	l2310
  3870  1E06  09F2               	comf	___awmod@dividend,f
  3871  1E07  09F3               	comf	___awmod@dividend+1,f
  3872  1E08  0AF2               	incf	___awmod@dividend,f
  3873  1E09  1903               	skipnz
  3874  1E0A  0AF3               	incf	___awmod@dividend+1,f
  3875  1E0B  01F6               	clrf	___awmod@sign
  3876  1E0C  0AF6               	incf	___awmod@sign,f
  3877  1E0D                     l2310:	
  3878  1E0D  1FF1               	btfss	___awmod@divisor+1,7
  3879  1E0E  2E14               	goto	l2314
  3880  1E0F  09F0               	comf	___awmod@divisor,f
  3881  1E10  09F1               	comf	___awmod@divisor+1,f
  3882  1E11  0AF0               	incf	___awmod@divisor,f
  3883  1E12  1903               	skipnz
  3884  1E13  0AF1               	incf	___awmod@divisor+1,f
  3885  1E14                     l2314:	
  3886  1E14  0870               	movf	___awmod@divisor,w
  3887  1E15  0471               	iorwf	___awmod@divisor+1,w
  3888  1E16  1903               	btfsc	3,2
  3889  1E17  2E41               	goto	l2332
  3890  1E18  01F5               	clrf	___awmod@counter
  3891  1E19  0AF5               	incf	___awmod@counter,f
  3892  1E1A                     l2322:	
  3893  1E1A  1BF1               	btfsc	___awmod@divisor+1,7
  3894  1E1B  2E28               	goto	l2324
  3895  1E1C  3001               	movlw	1
  3896  1E1D                     u3245:	
  3897  1E1D  1003               	clrc
  3898  1E1E  0DF0               	rlf	___awmod@divisor,f
  3899  1E1F  0DF1               	rlf	___awmod@divisor+1,f
  3900  1E20  3EFF               	addlw	-1
  3901  1E21  1D03               	skipz
  3902  1E22  2E1D               	goto	u3245
  3903  1E23  3001               	movlw	1
  3904  1E24  00F4               	movwf	??___awmod
  3905  1E25  0874               	movf	??___awmod,w
  3906  1E26  07F5               	addwf	___awmod@counter,f
  3907  1E27  2E1A               	goto	l2322
  3908  1E28                     l2324:	
  3909  1E28  0871               	movf	___awmod@divisor+1,w
  3910  1E29  0273               	subwf	___awmod@dividend+1,w
  3911  1E2A  1D03               	skipz
  3912  1E2B  2E2E               	goto	u3265
  3913  1E2C  0870               	movf	___awmod@divisor,w
  3914  1E2D  0272               	subwf	___awmod@dividend,w
  3915  1E2E                     u3265:	
  3916  1E2E  1C03               	skipc
  3917  1E2F  2E36               	goto	l2328
  3918  1E30  0870               	movf	___awmod@divisor,w
  3919  1E31  02F2               	subwf	___awmod@dividend,f
  3920  1E32  0871               	movf	___awmod@divisor+1,w
  3921  1E33  1C03               	skipc
  3922  1E34  03F3               	decf	___awmod@dividend+1,f
  3923  1E35  02F3               	subwf	___awmod@dividend+1,f
  3924  1E36                     l2328:	
  3925  1E36  3001               	movlw	1
  3926  1E37                     u3275:	
  3927  1E37  1003               	clrc
  3928  1E38  0CF1               	rrf	___awmod@divisor+1,f
  3929  1E39  0CF0               	rrf	___awmod@divisor,f
  3930  1E3A  3EFF               	addlw	-1
  3931  1E3B  1D03               	skipz
  3932  1E3C  2E37               	goto	u3275
  3933  1E3D  3001               	movlw	1
  3934  1E3E  02F5               	subwf	___awmod@counter,f
  3935  1E3F  1D03               	btfss	3,2
  3936  1E40  2E28               	goto	l2324
  3937  1E41                     l2332:	
  3938  1E41  0876               	movf	___awmod@sign,w
  3939  1E42  1903               	btfsc	3,2
  3940  1E43  2E49               	goto	l2336
  3941  1E44  09F2               	comf	___awmod@dividend,f
  3942  1E45  09F3               	comf	___awmod@dividend+1,f
  3943  1E46  0AF2               	incf	___awmod@dividend,f
  3944  1E47  1903               	skipnz
  3945  1E48  0AF3               	incf	___awmod@dividend+1,f
  3946  1E49                     l2336:	
  3947  1E49  0873               	movf	___awmod@dividend+1,w
  3948  1E4A  00F1               	movwf	?___awmod+1
  3949  1E4B  0872               	movf	___awmod@dividend,w
  3950  1E4C  00F0               	movwf	?___awmod
  3951  1E4D  0008               	return
  3952  1E4E                     __end_of___awmod:	
  3953                           
  3954                           	psect	text4
  3955  1F47                     __ptext4:	
  3956 ;; *************** function ___awdiv *****************
  3957 ;; Defined at:
  3958 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3959 ;; Parameters:    Size  Location     Type
  3960 ;;  divisor         2    7[COMMON] int 
  3961 ;;  dividend        2    9[COMMON] int 
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;  quotient        2    2[BANK0 ] int 
  3964 ;;  sign            1    1[BANK0 ] unsigned char 
  3965 ;;  counter         1    0[BANK0 ] unsigned char 
  3966 ;; Return value:  Size  Location     Type
  3967 ;;                  2    7[COMMON] int 
  3968 ;; Registers used:
  3969 ;;		wreg, status,2, status,0
  3970 ;; Tracked objects:
  3971 ;;		On entry : 0/0
  3972 ;;		On exit  : 0/0
  3973 ;;		Unchanged: 0/0
  3974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3975 ;;      Params:         4       0       0       0       0
  3976 ;;      Locals:         0       4       0       0       0
  3977 ;;      Temps:          1       0       0       0       0
  3978 ;;      Totals:         5       4       0       0       0
  3979 ;;Total ram usage:        9 bytes
  3980 ;; Hardware stack levels used:    1
  3981 ;; This function calls:
  3982 ;;		Nothing
  3983 ;; This function is called by:
  3984 ;;		_scale
  3985 ;;		_sprintf
  3986 ;; This function uses a non-reentrant model
  3987 ;;
  3988                           
  3989                           
  3990                           ;psect for function ___awdiv
  3991  1F47                     ___awdiv:	
  3992                           
  3993                           ;incstack = 0
  3994                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3995  1F47  1283               	bcf	3,5	;RP0=0, select bank0
  3996  1F48  1303               	bcf	3,6	;RP1=0, select bank0
  3997  1F49  01A1               	clrf	___awdiv@sign
  3998  1F4A  1FF8               	btfss	___awdiv@divisor+1,7
  3999  1F4B  2F53               	goto	l2266
  4000  1F4C  09F7               	comf	___awdiv@divisor,f
  4001  1F4D  09F8               	comf	___awdiv@divisor+1,f
  4002  1F4E  0AF7               	incf	___awdiv@divisor,f
  4003  1F4F  1903               	skipnz
  4004  1F50  0AF8               	incf	___awdiv@divisor+1,f
  4005  1F51  01A1               	clrf	___awdiv@sign
  4006  1F52  0AA1               	incf	___awdiv@sign,f
  4007  1F53                     l2266:	
  4008  1F53  1FFA               	btfss	___awdiv@dividend+1,7
  4009  1F54  2F5E               	goto	l2272
  4010  1F55  09F9               	comf	___awdiv@dividend,f
  4011  1F56  09FA               	comf	___awdiv@dividend+1,f
  4012  1F57  0AF9               	incf	___awdiv@dividend,f
  4013  1F58  1903               	skipnz
  4014  1F59  0AFA               	incf	___awdiv@dividend+1,f
  4015  1F5A  3001               	movlw	1
  4016  1F5B  00FB               	movwf	??___awdiv
  4017  1F5C  087B               	movf	??___awdiv,w
  4018  1F5D  06A1               	xorwf	___awdiv@sign,f
  4019  1F5E                     l2272:	
  4020  1F5E  01A2               	clrf	___awdiv@quotient
  4021  1F5F  01A3               	clrf	___awdiv@quotient+1
  4022  1F60  0877               	movf	___awdiv@divisor,w
  4023  1F61  0478               	iorwf	___awdiv@divisor+1,w
  4024  1F62  1903               	btfsc	3,2
  4025  1F63  2F95               	goto	l2294
  4026  1F64  01A0               	clrf	___awdiv@counter
  4027  1F65  0AA0               	incf	___awdiv@counter,f
  4028  1F66                     l2282:	
  4029  1F66  1BF8               	btfsc	___awdiv@divisor+1,7
  4030  1F67  2F74               	goto	l2284
  4031  1F68  3001               	movlw	1
  4032  1F69                     u3145:	
  4033  1F69  1003               	clrc
  4034  1F6A  0DF7               	rlf	___awdiv@divisor,f
  4035  1F6B  0DF8               	rlf	___awdiv@divisor+1,f
  4036  1F6C  3EFF               	addlw	-1
  4037  1F6D  1D03               	skipz
  4038  1F6E  2F69               	goto	u3145
  4039  1F6F  3001               	movlw	1
  4040  1F70  00FB               	movwf	??___awdiv
  4041  1F71  087B               	movf	??___awdiv,w
  4042  1F72  07A0               	addwf	___awdiv@counter,f
  4043  1F73  2F66               	goto	l2282
  4044  1F74                     l2284:	
  4045  1F74  3001               	movlw	1
  4046  1F75                     u3165:	
  4047  1F75  1003               	clrc
  4048  1F76  0DA2               	rlf	___awdiv@quotient,f
  4049  1F77  0DA3               	rlf	___awdiv@quotient+1,f
  4050  1F78  3EFF               	addlw	-1
  4051  1F79  1D03               	skipz
  4052  1F7A  2F75               	goto	u3165
  4053  1F7B  0878               	movf	___awdiv@divisor+1,w
  4054  1F7C  027A               	subwf	___awdiv@dividend+1,w
  4055  1F7D  1D03               	skipz
  4056  1F7E  2F81               	goto	u3175
  4057  1F7F  0877               	movf	___awdiv@divisor,w
  4058  1F80  0279               	subwf	___awdiv@dividend,w
  4059  1F81                     u3175:	
  4060  1F81  1C03               	skipc
  4061  1F82  2F8A               	goto	l2290
  4062  1F83  0877               	movf	___awdiv@divisor,w
  4063  1F84  02F9               	subwf	___awdiv@dividend,f
  4064  1F85  0878               	movf	___awdiv@divisor+1,w
  4065  1F86  1C03               	skipc
  4066  1F87  03FA               	decf	___awdiv@dividend+1,f
  4067  1F88  02FA               	subwf	___awdiv@dividend+1,f
  4068  1F89  1422               	bsf	___awdiv@quotient,0
  4069  1F8A                     l2290:	
  4070  1F8A  3001               	movlw	1
  4071  1F8B                     u3185:	
  4072  1F8B  1003               	clrc
  4073  1F8C  0CF8               	rrf	___awdiv@divisor+1,f
  4074  1F8D  0CF7               	rrf	___awdiv@divisor,f
  4075  1F8E  3EFF               	addlw	-1
  4076  1F8F  1D03               	skipz
  4077  1F90  2F8B               	goto	u3185
  4078  1F91  3001               	movlw	1
  4079  1F92  02A0               	subwf	___awdiv@counter,f
  4080  1F93  1D03               	btfss	3,2
  4081  1F94  2F74               	goto	l2284
  4082  1F95                     l2294:	
  4083  1F95  0821               	movf	___awdiv@sign,w
  4084  1F96  1903               	btfsc	3,2
  4085  1F97  2F9D               	goto	l2298
  4086  1F98  09A2               	comf	___awdiv@quotient,f
  4087  1F99  09A3               	comf	___awdiv@quotient+1,f
  4088  1F9A  0AA2               	incf	___awdiv@quotient,f
  4089  1F9B  1903               	skipnz
  4090  1F9C  0AA3               	incf	___awdiv@quotient+1,f
  4091  1F9D                     l2298:	
  4092  1F9D  0823               	movf	___awdiv@quotient+1,w
  4093  1F9E  00F8               	movwf	?___awdiv+1
  4094  1F9F  0822               	movf	___awdiv@quotient,w
  4095  1FA0  00F7               	movwf	?___awdiv
  4096  1FA1  0008               	return
  4097  1FA2                     __end_of___awdiv:	
  4098                           
  4099                           	psect	text5
  4100  1C23                     __ptext5:	
  4101 ;; *************** function _isdigit *****************
  4102 ;; Defined at:
  4103 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  c               1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  c               1    1[COMMON] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;		None               void
  4110 ;; Registers used:
  4111 ;;		wreg, status,2, status,0
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4117 ;;      Params:         0       0       0       0       0
  4118 ;;      Locals:         2       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0
  4120 ;;      Totals:         2       0       0       0       0
  4121 ;;Total ram usage:        2 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_sprintf
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           
  4131                           ;psect for function _isdigit
  4132  1C23                     _isdigit:	
  4133                           
  4134                           ;incstack = 0
  4135                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4136                           ;isdigit@c stored from wreg
  4137  1C23  00F1               	movwf	isdigit@c
  4138  1C24  01F0               	clrf	_isdigit$606
  4139  1C25  303A               	movlw	58
  4140  1C26  0271               	subwf	isdigit@c,w
  4141  1C27  1803               	skipnc
  4142  1C28  2C2F               	goto	l2830
  4143  1C29  3030               	movlw	48
  4144  1C2A  0271               	subwf	isdigit@c,w
  4145  1C2B  1C03               	skipc
  4146  1C2C  2C2F               	goto	l2830
  4147  1C2D  01F0               	clrf	_isdigit$606
  4148  1C2E  0AF0               	incf	_isdigit$606,f
  4149  1C2F                     l2830:	
  4150  1C2F  0C70               	rrf	_isdigit$606,w
  4151  1C30  0008               	return
  4152  1C31                     __end_of_isdigit:	
  4153                           
  4154                           	psect	text6
  4155  0004                     __ptext6:	
  4156 ;; *************** function _fround *****************
  4157 ;; Defined at:
  4158 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;  prec            1    wreg     unsigned char 
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;  prec            1   49[BANK0 ] unsigned char 
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  4   30[BANK0 ] unsigned char 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4172 ;;      Params:         0       4       0       0       0
  4173 ;;      Locals:         0       9       0       0       0
  4174 ;;      Temps:          0       7       0       0       0
  4175 ;;      Totals:         0      20       0       0       0
  4176 ;;Total ram usage:       20 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:    2
  4179 ;; This function calls:
  4180 ;;		___flmul
  4181 ;;		___lwdiv
  4182 ;;		___lwmod
  4183 ;; This function is called by:
  4184 ;;		_sprintf
  4185 ;; This function uses a non-reentrant model
  4186 ;;
  4187                           
  4188                           
  4189                           ;psect for function _fround
  4190  0004                     _fround:	
  4191                           
  4192                           ;incstack = 0
  4193                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4194                           ;fround@prec stored from wreg
  4195  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0006  00D1               	movwf	fround@prec
  4198                           
  4199                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4200  0007  306E               	movlw	110
  4201  0008  0251               	subwf	fround@prec,w
  4202  0009  1C03               	skipc
  4203  000A  2916               	goto	l2772
  4204                           
  4205                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4206  000B  303F               	movlw	63
  4207  000C  00A7               	movwf	___flmul@b+3
  4208  000D  3000               	movlw	0
  4209  000E  00A6               	movwf	___flmul@b+2
  4210  000F  3000               	movlw	0
  4211  0010  00A5               	movwf	___flmul@b+1
  4212  0011  3000               	movlw	0
  4213  0012  00A4               	movwf	___flmul@b
  4214  0013  3064               	movlw	100
  4215  0014  00F6               	movwf	___lwdiv@divisor
  4216  0015  3000               	movlw	0
  4217  0016  00F7               	movwf	___lwdiv@divisor+1
  4218  0017  0851               	movf	fround@prec,w
  4219  0018  00C2               	movwf	??_fround
  4220  0019  01C3               	clrf	??_fround+1
  4221  001A  0842               	movf	??_fround,w
  4222  001B  00F8               	movwf	___lwdiv@dividend
  4223  001C  0843               	movf	??_fround+1,w
  4224  001D  00F9               	movwf	___lwdiv@dividend+1
  4225  001E  160A  158A  24F4  120A  118A  	fcall	___lwdiv
  4226  0023  0876               	movf	?___lwdiv,w
  4227  0024  1283               	bcf	3,5	;RP0=0, select bank0
  4228  0025  1303               	bcf	3,6	;RP1=0, select bank0
  4229  0026  00C4               	movwf	??_fround+2
  4230  0027  3001               	movlw	1
  4231  0028                     u4305:	
  4232  0028  1003               	clrc
  4233  0029  0DC4               	rlf	??_fround+2,f
  4234  002A  3EFF               	addlw	-1
  4235  002B  1D03               	skipz
  4236  002C  2828               	goto	u4305
  4237  002D  1003               	clrc
  4238  002E  0D44               	rlf	??_fround+2,w
  4239  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4240  0030  0084               	movwf	4
  4241  0031  120A  158A  200A  120A  118A  	fcall	stringdir
  4242  0036  00C5               	movwf	??_fround+3
  4243  0037  120A  158A  200A  120A  118A  	fcall	stringdir
  4244  003C  00C6               	movwf	??_fround+4
  4245  003D  120A  158A  200A  120A  118A  	fcall	stringdir
  4246  0042  00C7               	movwf	??_fround+5
  4247  0043  120A  158A  200A  120A  118A  	fcall	stringdir
  4248  0048  00C8               	movwf	??_fround+6
  4249  0049  0848               	movf	??_fround+6,w
  4250  004A  00AB               	movwf	___flmul@a+3
  4251  004B  0847               	movf	??_fround+5,w
  4252  004C  00AA               	movwf	___flmul@a+2
  4253  004D  0846               	movf	??_fround+4,w
  4254  004E  00A9               	movwf	___flmul@a+1
  4255  004F  0845               	movf	??_fround+3,w
  4256  0050  00A8               	movwf	___flmul@a
  4257  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  4258  0056  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0057  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0058  0827               	movf	?___flmul+3,w
  4261  0059  00D0               	movwf	_fround$795+3
  4262  005A  0826               	movf	?___flmul+2,w
  4263  005B  00CF               	movwf	_fround$795+2
  4264  005C  0825               	movf	?___flmul+1,w
  4265  005D  00CE               	movwf	_fround$795+1
  4266  005E  0824               	movf	?___flmul,w
  4267  005F  00CD               	movwf	_fround$795
  4268                           
  4269                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4270  0060  300A               	movlw	10
  4271  0061  00F6               	movwf	___lwdiv@divisor
  4272  0062  3000               	movlw	0
  4273  0063  00F7               	movwf	___lwdiv@divisor+1
  4274  0064  0851               	movf	fround@prec,w
  4275  0065  00C2               	movwf	??_fround
  4276  0066  01C3               	clrf	??_fround+1
  4277  0067  0842               	movf	??_fround,w
  4278  0068  00F2               	movwf	___lwmod@dividend
  4279  0069  0843               	movf	??_fround+1,w
  4280  006A  00F3               	movwf	___lwmod@dividend+1
  4281  006B  3064               	movlw	100
  4282  006C  00F0               	movwf	___lwmod@divisor
  4283  006D  3000               	movlw	0
  4284  006E  00F1               	movwf	___lwmod@divisor+1
  4285  006F  120A  158A  20C6  120A  118A  	fcall	___lwmod
  4286  0074  0871               	movf	?___lwmod+1,w
  4287  0075  00F9               	movwf	___lwdiv@dividend+1
  4288  0076  0870               	movf	?___lwmod,w
  4289  0077  00F8               	movwf	___lwdiv@dividend
  4290  0078  160A  158A  24F4  120A  118A  	fcall	___lwdiv
  4291  007D  0876               	movf	?___lwdiv,w
  4292  007E  1283               	bcf	3,5	;RP0=0, select bank0
  4293  007F  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0080  00C4               	movwf	??_fround+2
  4295  0081  3001               	movlw	1
  4296  0082                     u4315:	
  4297  0082  1003               	clrc
  4298  0083  0DC4               	rlf	??_fround+2,f
  4299  0084  3EFF               	addlw	-1
  4300  0085  1D03               	skipz
  4301  0086  2882               	goto	u4315
  4302  0087  1003               	clrc
  4303  0088  0D44               	rlf	??_fround+2,w
  4304  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4305  008A  0084               	movwf	4
  4306  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  4307  0090  00C5               	movwf	??_fround+3
  4308  0091  120A  158A  200A  120A  118A  	fcall	stringdir
  4309  0096  00C6               	movwf	??_fround+4
  4310  0097  120A  158A  200A  120A  118A  	fcall	stringdir
  4311  009C  00C7               	movwf	??_fround+5
  4312  009D  120A  158A  200A  120A  118A  	fcall	stringdir
  4313  00A2  00C8               	movwf	??_fround+6
  4314  00A3  0848               	movf	??_fround+6,w
  4315  00A4  00A7               	movwf	___flmul@b+3
  4316  00A5  0847               	movf	??_fround+5,w
  4317  00A6  00A6               	movwf	___flmul@b+2
  4318  00A7  0846               	movf	??_fround+4,w
  4319  00A8  00A5               	movwf	___flmul@b+1
  4320  00A9  0845               	movf	??_fround+3,w
  4321  00AA  00A4               	movwf	___flmul@b
  4322  00AB  0850               	movf	_fround$795+3,w
  4323  00AC  00AB               	movwf	___flmul@a+3
  4324  00AD  084F               	movf	_fround$795+2,w
  4325  00AE  00AA               	movwf	___flmul@a+2
  4326  00AF  084E               	movf	_fround$795+1,w
  4327  00B0  00A9               	movwf	___flmul@a+1
  4328  00B1  084D               	movf	_fround$795,w
  4329  00B2  00A8               	movwf	___flmul@a
  4330  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4331  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4332  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4333  00BA  0827               	movf	?___flmul+3,w
  4334  00BB  00CC               	movwf	_fround$796+3
  4335  00BC  0826               	movf	?___flmul+2,w
  4336  00BD  00CB               	movwf	_fround$796+2
  4337  00BE  0825               	movf	?___flmul+1,w
  4338  00BF  00CA               	movwf	_fround$796+1
  4339  00C0  0824               	movf	?___flmul,w
  4340  00C1  00C9               	movwf	_fround$796
  4341                           
  4342                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4343  00C2  300A               	movlw	10
  4344  00C3  00F0               	movwf	___lwmod@divisor
  4345  00C4  3000               	movlw	0
  4346  00C5  00F1               	movwf	___lwmod@divisor+1
  4347  00C6  0851               	movf	fround@prec,w
  4348  00C7  00C2               	movwf	??_fround
  4349  00C8  01C3               	clrf	??_fround+1
  4350  00C9  0842               	movf	??_fround,w
  4351  00CA  00F2               	movwf	___lwmod@dividend
  4352  00CB  0843               	movf	??_fround+1,w
  4353  00CC  00F3               	movwf	___lwmod@dividend+1
  4354  00CD  120A  158A  20C6  120A  118A  	fcall	___lwmod
  4355  00D2  0870               	movf	?___lwmod,w
  4356  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4357  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4358  00D5  00C4               	movwf	??_fround+2
  4359  00D6  3001               	movlw	1
  4360  00D7                     u4325:	
  4361  00D7  1003               	clrc
  4362  00D8  0DC4               	rlf	??_fround+2,f
  4363  00D9  3EFF               	addlw	-1
  4364  00DA  1D03               	skipz
  4365  00DB  28D7               	goto	u4325
  4366  00DC  1003               	clrc
  4367  00DD  0D44               	rlf	??_fround+2,w
  4368  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4369  00DF  0084               	movwf	4
  4370  00E0  120A  158A  200A  120A  118A  	fcall	stringdir
  4371  00E5  00C5               	movwf	??_fround+3
  4372  00E6  120A  158A  200A  120A  118A  	fcall	stringdir
  4373  00EB  00C6               	movwf	??_fround+4
  4374  00EC  120A  158A  200A  120A  118A  	fcall	stringdir
  4375  00F1  00C7               	movwf	??_fround+5
  4376  00F2  120A  158A  200A  120A  118A  	fcall	stringdir
  4377  00F7  00C8               	movwf	??_fround+6
  4378  00F8  0848               	movf	??_fround+6,w
  4379  00F9  00A7               	movwf	___flmul@b+3
  4380  00FA  0847               	movf	??_fround+5,w
  4381  00FB  00A6               	movwf	___flmul@b+2
  4382  00FC  0846               	movf	??_fround+4,w
  4383  00FD  00A5               	movwf	___flmul@b+1
  4384  00FE  0845               	movf	??_fround+3,w
  4385  00FF  00A4               	movwf	___flmul@b
  4386  0100  084C               	movf	_fround$796+3,w
  4387  0101  00AB               	movwf	___flmul@a+3
  4388  0102  084B               	movf	_fround$796+2,w
  4389  0103  00AA               	movwf	___flmul@a+2
  4390  0104  084A               	movf	_fround$796+1,w
  4391  0105  00A9               	movwf	___flmul@a+1
  4392  0106  0849               	movf	_fround$796,w
  4393  0107  00A8               	movwf	___flmul@a
  4394  0108  120A  158A  21A2   	fcall	___flmul
  4395  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4396  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4397  010D  0827               	movf	?___flmul+3,w
  4398  010E  00C1               	movwf	?_fround+3
  4399  010F  0826               	movf	?___flmul+2,w
  4400  0110  00C0               	movwf	?_fround+2
  4401  0111  0825               	movf	?___flmul+1,w
  4402  0112  00BF               	movwf	?_fround+1
  4403  0113  0824               	movf	?___flmul,w
  4404  0114  00BE               	movwf	?_fround
  4405  0115  0008               	return
  4406  0116                     l2772:	
  4407  0116  300B               	movlw	11
  4408  0117  0251               	subwf	fround@prec,w
  4409  0118  1C03               	skipc
  4410  0119  29C3               	goto	l2778
  4411                           
  4412                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4413  011A  303F               	movlw	63
  4414  011B  00A7               	movwf	___flmul@b+3
  4415  011C  3000               	movlw	0
  4416  011D  00A6               	movwf	___flmul@b+2
  4417  011E  3000               	movlw	0
  4418  011F  00A5               	movwf	___flmul@b+1
  4419  0120  3000               	movlw	0
  4420  0121  00A4               	movwf	___flmul@b
  4421  0122  300A               	movlw	10
  4422  0123  00F6               	movwf	___lwdiv@divisor
  4423  0124  3000               	movlw	0
  4424  0125  00F7               	movwf	___lwdiv@divisor+1
  4425  0126  0851               	movf	fround@prec,w
  4426  0127  00C2               	movwf	??_fround
  4427  0128  01C3               	clrf	??_fround+1
  4428  0129  0842               	movf	??_fround,w
  4429  012A  00F8               	movwf	___lwdiv@dividend
  4430  012B  0843               	movf	??_fround+1,w
  4431  012C  00F9               	movwf	___lwdiv@dividend+1
  4432  012D  160A  158A  24F4  120A  118A  	fcall	___lwdiv
  4433  0132  0876               	movf	?___lwdiv,w
  4434  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4435  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4436  0135  00C4               	movwf	??_fround+2
  4437  0136  3001               	movlw	1
  4438  0137                     u4345:	
  4439  0137  1003               	clrc
  4440  0138  0DC4               	rlf	??_fround+2,f
  4441  0139  3EFF               	addlw	-1
  4442  013A  1D03               	skipz
  4443  013B  2937               	goto	u4345
  4444  013C  1003               	clrc
  4445  013D  0D44               	rlf	??_fround+2,w
  4446  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4447  013F  0084               	movwf	4
  4448  0140  120A  158A  200A  120A  118A  	fcall	stringdir
  4449  0145  00C5               	movwf	??_fround+3
  4450  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  4451  014B  00C6               	movwf	??_fround+4
  4452  014C  120A  158A  200A  120A  118A  	fcall	stringdir
  4453  0151  00C7               	movwf	??_fround+5
  4454  0152  120A  158A  200A  120A  118A  	fcall	stringdir
  4455  0157  00C8               	movwf	??_fround+6
  4456  0158  0848               	movf	??_fround+6,w
  4457  0159  00AB               	movwf	___flmul@a+3
  4458  015A  0847               	movf	??_fround+5,w
  4459  015B  00AA               	movwf	___flmul@a+2
  4460  015C  0846               	movf	??_fround+4,w
  4461  015D  00A9               	movwf	___flmul@a+1
  4462  015E  0845               	movf	??_fround+3,w
  4463  015F  00A8               	movwf	___flmul@a
  4464  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4465  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0167  0827               	movf	?___flmul+3,w
  4468  0168  00D0               	movwf	_fround$795+3
  4469  0169  0826               	movf	?___flmul+2,w
  4470  016A  00CF               	movwf	_fround$795+2
  4471  016B  0825               	movf	?___flmul+1,w
  4472  016C  00CE               	movwf	_fround$795+1
  4473  016D  0824               	movf	?___flmul,w
  4474  016E  00CD               	movwf	_fround$795
  4475                           
  4476                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4477  016F  300A               	movlw	10
  4478  0170  00F0               	movwf	___lwmod@divisor
  4479  0171  3000               	movlw	0
  4480  0172  00F1               	movwf	___lwmod@divisor+1
  4481  0173  0851               	movf	fround@prec,w
  4482  0174  00C2               	movwf	??_fround
  4483  0175  01C3               	clrf	??_fround+1
  4484  0176  0842               	movf	??_fround,w
  4485  0177  00F2               	movwf	___lwmod@dividend
  4486  0178  0843               	movf	??_fround+1,w
  4487  0179  00F3               	movwf	___lwmod@dividend+1
  4488  017A  120A  158A  20C6  120A  118A  	fcall	___lwmod
  4489  017F  0870               	movf	?___lwmod,w
  4490  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4491  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4492  0182  00C4               	movwf	??_fround+2
  4493  0183  3001               	movlw	1
  4494  0184                     u4355:	
  4495  0184  1003               	clrc
  4496  0185  0DC4               	rlf	??_fround+2,f
  4497  0186  3EFF               	addlw	-1
  4498  0187  1D03               	skipz
  4499  0188  2984               	goto	u4355
  4500  0189  1003               	clrc
  4501  018A  0D44               	rlf	??_fround+2,w
  4502  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4503  018C  0084               	movwf	4
  4504  018D  120A  158A  200A  120A  118A  	fcall	stringdir
  4505  0192  00C5               	movwf	??_fround+3
  4506  0193  120A  158A  200A  120A  118A  	fcall	stringdir
  4507  0198  00C6               	movwf	??_fround+4
  4508  0199  120A  158A  200A  120A  118A  	fcall	stringdir
  4509  019E  00C7               	movwf	??_fround+5
  4510  019F  120A  158A  200A  120A  118A  	fcall	stringdir
  4511  01A4  00C8               	movwf	??_fround+6
  4512  01A5  0848               	movf	??_fround+6,w
  4513  01A6  00A7               	movwf	___flmul@b+3
  4514  01A7  0847               	movf	??_fround+5,w
  4515  01A8  00A6               	movwf	___flmul@b+2
  4516  01A9  0846               	movf	??_fround+4,w
  4517  01AA  00A5               	movwf	___flmul@b+1
  4518  01AB  0845               	movf	??_fround+3,w
  4519  01AC  00A4               	movwf	___flmul@b
  4520  01AD  0850               	movf	_fround$795+3,w
  4521  01AE  00AB               	movwf	___flmul@a+3
  4522  01AF  084F               	movf	_fround$795+2,w
  4523  01B0  00AA               	movwf	___flmul@a+2
  4524  01B1  084E               	movf	_fround$795+1,w
  4525  01B2  00A9               	movwf	___flmul@a+1
  4526  01B3  084D               	movf	_fround$795,w
  4527  01B4  00A8               	movwf	___flmul@a
  4528  01B5  120A  158A  21A2   	fcall	___flmul
  4529  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4530  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4531  01BA  0827               	movf	?___flmul+3,w
  4532  01BB  00C1               	movwf	?_fround+3
  4533  01BC  0826               	movf	?___flmul+2,w
  4534  01BD  00C0               	movwf	?_fround+2
  4535  01BE  0825               	movf	?___flmul+1,w
  4536  01BF  00BF               	movwf	?_fround+1
  4537  01C0  0824               	movf	?___flmul,w
  4538  01C1  00BE               	movwf	?_fround
  4539  01C2  0008               	return
  4540  01C3                     l2778:	
  4541                           
  4542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4543  01C3  303F               	movlw	63
  4544  01C4  00A7               	movwf	___flmul@b+3
  4545  01C5  3000               	movlw	0
  4546  01C6  00A6               	movwf	___flmul@b+2
  4547  01C7  3000               	movlw	0
  4548  01C8  00A5               	movwf	___flmul@b+1
  4549  01C9  3000               	movlw	0
  4550  01CA  00A4               	movwf	___flmul@b
  4551  01CB  0851               	movf	fround@prec,w
  4552  01CC  00C2               	movwf	??_fround
  4553  01CD  3001               	movlw	1
  4554  01CE                     u4365:	
  4555  01CE  1003               	clrc
  4556  01CF  0DC2               	rlf	??_fround,f
  4557  01D0  3EFF               	addlw	-1
  4558  01D1  1D03               	skipz
  4559  01D2  29CE               	goto	u4365
  4560  01D3  1003               	clrc
  4561  01D4  0D42               	rlf	??_fround,w
  4562  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4563  01D6  0084               	movwf	4
  4564  01D7  120A  158A  200A  120A  118A  	fcall	stringdir
  4565  01DC  00C3               	movwf	??_fround+1
  4566  01DD  120A  158A  200A  120A  118A  	fcall	stringdir
  4567  01E2  00C4               	movwf	??_fround+2
  4568  01E3  120A  158A  200A  120A  118A  	fcall	stringdir
  4569  01E8  00C5               	movwf	??_fround+3
  4570  01E9  120A  158A  200A  120A  118A  	fcall	stringdir
  4571  01EE  00C6               	movwf	??_fround+4
  4572  01EF  0846               	movf	??_fround+4,w
  4573  01F0  00AB               	movwf	___flmul@a+3
  4574  01F1  0845               	movf	??_fround+3,w
  4575  01F2  00AA               	movwf	___flmul@a+2
  4576  01F3  0844               	movf	??_fround+2,w
  4577  01F4  00A9               	movwf	___flmul@a+1
  4578  01F5  0843               	movf	??_fround+1,w
  4579  01F6  00A8               	movwf	___flmul@a
  4580  01F7  120A  158A  21A2   	fcall	___flmul
  4581  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4582  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4583  01FC  0827               	movf	?___flmul+3,w
  4584  01FD  00C1               	movwf	?_fround+3
  4585  01FE  0826               	movf	?___flmul+2,w
  4586  01FF  00C0               	movwf	?_fround+2
  4587  0200  0825               	movf	?___flmul+1,w
  4588  0201  00BF               	movwf	?_fround+1
  4589  0202  0824               	movf	?___flmul,w
  4590  0203  00BE               	movwf	?_fround
  4591  0204  0008               	return
  4592  0205                     __end_of_fround:	
  4593                           
  4594                           	psect	text7
  4595  08C6                     __ptext7:	
  4596 ;; *************** function ___lwmod *****************
  4597 ;; Defined at:
  4598 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4599 ;; Parameters:    Size  Location     Type
  4600 ;;  divisor         2    0[COMMON] unsigned int 
  4601 ;;  dividend        2    2[COMMON] unsigned int 
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  counter         1    5[COMMON] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  2    0[COMMON] unsigned int 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2, status,0
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4613 ;;      Params:         4       0       0       0       0
  4614 ;;      Locals:         1       0       0       0       0
  4615 ;;      Temps:          1       0       0       0       0
  4616 ;;      Totals:         6       0       0       0       0
  4617 ;;Total ram usage:        6 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_fround
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           
  4627                           ;psect for function ___lwmod
  4628  08C6                     ___lwmod:	
  4629                           
  4630                           ;incstack = 0
  4631                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4632  08C6  0870               	movf	___lwmod@divisor,w
  4633  08C7  0471               	iorwf	___lwmod@divisor+1,w
  4634  08C8  1903               	btfsc	3,2
  4635  08C9  28F3               	goto	l2384
  4636  08CA  01F5               	clrf	___lwmod@counter
  4637  08CB  0AF5               	incf	___lwmod@counter,f
  4638  08CC                     l2374:	
  4639  08CC  1BF1               	btfsc	___lwmod@divisor+1,7
  4640  08CD  28DA               	goto	l2376
  4641  08CE  3001               	movlw	1
  4642  08CF                     u3385:	
  4643  08CF  1003               	clrc
  4644  08D0  0DF0               	rlf	___lwmod@divisor,f
  4645  08D1  0DF1               	rlf	___lwmod@divisor+1,f
  4646  08D2  3EFF               	addlw	-1
  4647  08D3  1D03               	skipz
  4648  08D4  28CF               	goto	u3385
  4649  08D5  3001               	movlw	1
  4650  08D6  00F4               	movwf	??___lwmod
  4651  08D7  0874               	movf	??___lwmod,w
  4652  08D8  07F5               	addwf	___lwmod@counter,f
  4653  08D9  28CC               	goto	l2374
  4654  08DA                     l2376:	
  4655  08DA  0871               	movf	___lwmod@divisor+1,w
  4656  08DB  0273               	subwf	___lwmod@dividend+1,w
  4657  08DC  1D03               	skipz
  4658  08DD  28E0               	goto	u3405
  4659  08DE  0870               	movf	___lwmod@divisor,w
  4660  08DF  0272               	subwf	___lwmod@dividend,w
  4661  08E0                     u3405:	
  4662  08E0  1C03               	skipc
  4663  08E1  28E8               	goto	l2380
  4664  08E2  0870               	movf	___lwmod@divisor,w
  4665  08E3  02F2               	subwf	___lwmod@dividend,f
  4666  08E4  0871               	movf	___lwmod@divisor+1,w
  4667  08E5  1C03               	skipc
  4668  08E6  03F3               	decf	___lwmod@dividend+1,f
  4669  08E7  02F3               	subwf	___lwmod@dividend+1,f
  4670  08E8                     l2380:	
  4671  08E8  3001               	movlw	1
  4672  08E9                     u3415:	
  4673  08E9  1003               	clrc
  4674  08EA  0CF1               	rrf	___lwmod@divisor+1,f
  4675  08EB  0CF0               	rrf	___lwmod@divisor,f
  4676  08EC  3EFF               	addlw	-1
  4677  08ED  1D03               	skipz
  4678  08EE  28E9               	goto	u3415
  4679  08EF  3001               	movlw	1
  4680  08F0  02F5               	subwf	___lwmod@counter,f
  4681  08F1  1D03               	btfss	3,2
  4682  08F2  28DA               	goto	l2376
  4683  08F3                     l2384:	
  4684  08F3  0873               	movf	___lwmod@dividend+1,w
  4685  08F4  00F1               	movwf	?___lwmod+1
  4686  08F5  0872               	movf	___lwmod@dividend,w
  4687  08F6  00F0               	movwf	?___lwmod
  4688  08F7  0008               	return
  4689  08F8                     __end_of___lwmod:	
  4690                           
  4691                           	psect	text8
  4692  1CF4                     __ptext8:	
  4693 ;; *************** function ___lwdiv *****************
  4694 ;; Defined at:
  4695 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  divisor         2    6[COMMON] unsigned int 
  4698 ;;  dividend        2    8[COMMON] unsigned int 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  quotient        2   11[COMMON] unsigned int 
  4701 ;;  counter         1   13[COMMON] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  2    6[COMMON] unsigned int 
  4704 ;; Registers used:
  4705 ;;		wreg, status,2, status,0
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4711 ;;      Params:         4       0       0       0       0
  4712 ;;      Locals:         3       0       0       0       0
  4713 ;;      Temps:          1       0       0       0       0
  4714 ;;      Totals:         8       0       0       0       0
  4715 ;;Total ram usage:        8 bytes
  4716 ;; Hardware stack levels used:    1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_fround
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function ___lwdiv
  4726  1CF4                     ___lwdiv:	
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4730  1CF4  01FB               	clrf	___lwdiv@quotient
  4731  1CF5  01FC               	clrf	___lwdiv@quotient+1
  4732  1CF6  0876               	movf	___lwdiv@divisor,w
  4733  1CF7  0477               	iorwf	___lwdiv@divisor+1,w
  4734  1CF8  1903               	btfsc	3,2
  4735  1CF9  2D2B               	goto	l2362
  4736  1CFA  01FD               	clrf	___lwdiv@counter
  4737  1CFB  0AFD               	incf	___lwdiv@counter,f
  4738  1CFC                     l2350:	
  4739  1CFC  1BF7               	btfsc	___lwdiv@divisor+1,7
  4740  1CFD  2D0A               	goto	l2352
  4741  1CFE  3001               	movlw	1
  4742  1CFF                     u3315:	
  4743  1CFF  1003               	clrc
  4744  1D00  0DF6               	rlf	___lwdiv@divisor,f
  4745  1D01  0DF7               	rlf	___lwdiv@divisor+1,f
  4746  1D02  3EFF               	addlw	-1
  4747  1D03  1D03               	skipz
  4748  1D04  2CFF               	goto	u3315
  4749  1D05  3001               	movlw	1
  4750  1D06  00FA               	movwf	??___lwdiv
  4751  1D07  087A               	movf	??___lwdiv,w
  4752  1D08  07FD               	addwf	___lwdiv@counter,f
  4753  1D09  2CFC               	goto	l2350
  4754  1D0A                     l2352:	
  4755  1D0A  3001               	movlw	1
  4756  1D0B                     u3335:	
  4757  1D0B  1003               	clrc
  4758  1D0C  0DFB               	rlf	___lwdiv@quotient,f
  4759  1D0D  0DFC               	rlf	___lwdiv@quotient+1,f
  4760  1D0E  3EFF               	addlw	-1
  4761  1D0F  1D03               	skipz
  4762  1D10  2D0B               	goto	u3335
  4763  1D11  0877               	movf	___lwdiv@divisor+1,w
  4764  1D12  0279               	subwf	___lwdiv@dividend+1,w
  4765  1D13  1D03               	skipz
  4766  1D14  2D17               	goto	u3345
  4767  1D15  0876               	movf	___lwdiv@divisor,w
  4768  1D16  0278               	subwf	___lwdiv@dividend,w
  4769  1D17                     u3345:	
  4770  1D17  1C03               	skipc
  4771  1D18  2D20               	goto	l2358
  4772  1D19  0876               	movf	___lwdiv@divisor,w
  4773  1D1A  02F8               	subwf	___lwdiv@dividend,f
  4774  1D1B  0877               	movf	___lwdiv@divisor+1,w
  4775  1D1C  1C03               	skipc
  4776  1D1D  03F9               	decf	___lwdiv@dividend+1,f
  4777  1D1E  02F9               	subwf	___lwdiv@dividend+1,f
  4778  1D1F  147B               	bsf	___lwdiv@quotient,0
  4779  1D20                     l2358:	
  4780  1D20  3001               	movlw	1
  4781  1D21                     u3355:	
  4782  1D21  1003               	clrc
  4783  1D22  0CF7               	rrf	___lwdiv@divisor+1,f
  4784  1D23  0CF6               	rrf	___lwdiv@divisor,f
  4785  1D24  3EFF               	addlw	-1
  4786  1D25  1D03               	skipz
  4787  1D26  2D21               	goto	u3355
  4788  1D27  3001               	movlw	1
  4789  1D28  02FD               	subwf	___lwdiv@counter,f
  4790  1D29  1D03               	btfss	3,2
  4791  1D2A  2D0A               	goto	l2352
  4792  1D2B                     l2362:	
  4793  1D2B  087C               	movf	___lwdiv@quotient+1,w
  4794  1D2C  00F7               	movwf	?___lwdiv+1
  4795  1D2D  087B               	movf	___lwdiv@quotient,w
  4796  1D2E  00F6               	movwf	?___lwdiv
  4797  1D2F  0008               	return
  4798  1D30                     __end_of___lwdiv:	
  4799                           
  4800                           	psect	text9
  4801  09A2                     __ptext9:	
  4802 ;; *************** function ___flmul *****************
  4803 ;; Defined at:
  4804 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4805 ;; Parameters:    Size  Location     Type
  4806 ;;  b               4    4[BANK0 ] unsigned int 
  4807 ;;  a               4    8[BANK0 ] unsigned int 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  prod            4   24[BANK0 ] struct .
  4810 ;;  grs             4   18[BANK0 ] unsigned long 
  4811 ;;  temp            2   28[BANK0 ] struct .
  4812 ;;  bexp            1   23[BANK0 ] unsigned char 
  4813 ;;  aexp            1   22[BANK0 ] unsigned char 
  4814 ;;  sign            1   17[BANK0 ] unsigned char 
  4815 ;; Return value:  Size  Location     Type
  4816 ;;                  4    4[BANK0 ] unsigned char 
  4817 ;; Registers used:
  4818 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4819 ;; Tracked objects:
  4820 ;;		On entry : 0/0
  4821 ;;		On exit  : 0/0
  4822 ;;		Unchanged: 0/0
  4823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4824 ;;      Params:         0       8       0       0       0
  4825 ;;      Locals:         0      13       0       0       0
  4826 ;;      Temps:          0       5       0       0       0
  4827 ;;      Totals:         0      26       0       0       0
  4828 ;;Total ram usage:       26 bytes
  4829 ;; Hardware stack levels used:    1
  4830 ;; Hardware stack levels required when called:    1
  4831 ;; This function calls:
  4832 ;;		__Umul8_16
  4833 ;; This function is called by:
  4834 ;;		_main
  4835 ;;		_fround
  4836 ;;		_scale
  4837 ;;		_sprintf
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841                           
  4842                           ;psect for function ___flmul
  4843  09A2                     ___flmul:	
  4844                           
  4845                           ;incstack = 0
  4846                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4847  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4848  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4849  09A4  0827               	movf	___flmul@b+3,w
  4850  09A5  3980               	andlw	128
  4851  09A6  00AC               	movwf	??___flmul
  4852  09A7  082C               	movf	??___flmul,w
  4853  09A8  00B1               	movwf	___flmul@sign
  4854  09A9  0827               	movf	___flmul@b+3,w
  4855  09AA  00AC               	movwf	??___flmul
  4856  09AB  072C               	addwf	??___flmul,w
  4857  09AC  00AD               	movwf	??___flmul+1
  4858  09AD  082D               	movf	??___flmul+1,w
  4859  09AE  00B7               	movwf	___flmul@bexp
  4860  09AF  1BA6               	btfsc	___flmul@b+2,7
  4861  09B0  1437               	bsf	___flmul@bexp,0
  4862  09B1  0837               	movf	___flmul@bexp,w
  4863  09B2  1903               	btfsc	3,2
  4864  09B3  29C1               	goto	l2598
  4865  09B4  0A37               	incf	___flmul@bexp,w
  4866  09B5  1D03               	btfss	3,2
  4867  09B6  29BF               	goto	l2596
  4868  09B7  3000               	movlw	0
  4869  09B8  00A7               	movwf	___flmul@b+3
  4870  09B9  3000               	movlw	0
  4871  09BA  00A6               	movwf	___flmul@b+2
  4872  09BB  3000               	movlw	0
  4873  09BC  00A5               	movwf	___flmul@b+1
  4874  09BD  3000               	movlw	0
  4875  09BE  00A4               	movwf	___flmul@b
  4876  09BF                     l2596:	
  4877  09BF  17A6               	bsf	___flmul@b+2,7
  4878  09C0  29C9               	goto	l2600
  4879  09C1                     l2598:	
  4880  09C1  3000               	movlw	0
  4881  09C2  00A7               	movwf	___flmul@b+3
  4882  09C3  3000               	movlw	0
  4883  09C4  00A6               	movwf	___flmul@b+2
  4884  09C5  3000               	movlw	0
  4885  09C6  00A5               	movwf	___flmul@b+1
  4886  09C7  3000               	movlw	0
  4887  09C8  00A4               	movwf	___flmul@b
  4888  09C9                     l2600:	
  4889  09C9  082B               	movf	___flmul@a+3,w
  4890  09CA  3980               	andlw	128
  4891  09CB  00AC               	movwf	??___flmul
  4892  09CC  082C               	movf	??___flmul,w
  4893  09CD  06B1               	xorwf	___flmul@sign,f
  4894  09CE  082B               	movf	___flmul@a+3,w
  4895  09CF  00AC               	movwf	??___flmul
  4896  09D0  072C               	addwf	??___flmul,w
  4897  09D1  00AD               	movwf	??___flmul+1
  4898  09D2  082D               	movf	??___flmul+1,w
  4899  09D3  00B6               	movwf	___flmul@aexp
  4900  09D4  1BAA               	btfsc	___flmul@a+2,7
  4901  09D5  1436               	bsf	___flmul@aexp,0
  4902  09D6  0836               	movf	___flmul@aexp,w
  4903  09D7  1903               	btfsc	3,2
  4904  09D8  29E6               	goto	l2616
  4905  09D9  0A36               	incf	___flmul@aexp,w
  4906  09DA  1D03               	btfss	3,2
  4907  09DB  29E4               	goto	l2614
  4908  09DC  3000               	movlw	0
  4909  09DD  00AB               	movwf	___flmul@a+3
  4910  09DE  3000               	movlw	0
  4911  09DF  00AA               	movwf	___flmul@a+2
  4912  09E0  3000               	movlw	0
  4913  09E1  00A9               	movwf	___flmul@a+1
  4914  09E2  3000               	movlw	0
  4915  09E3  00A8               	movwf	___flmul@a
  4916  09E4                     l2614:	
  4917  09E4  17AA               	bsf	___flmul@a+2,7
  4918  09E5  29EE               	goto	l2618
  4919  09E6                     l2616:	
  4920  09E6  3000               	movlw	0
  4921  09E7  00AB               	movwf	___flmul@a+3
  4922  09E8  3000               	movlw	0
  4923  09E9  00AA               	movwf	___flmul@a+2
  4924  09EA  3000               	movlw	0
  4925  09EB  00A9               	movwf	___flmul@a+1
  4926  09EC  3000               	movlw	0
  4927  09ED  00A8               	movwf	___flmul@a
  4928  09EE                     l2618:	
  4929  09EE  0836               	movf	___flmul@aexp,w
  4930  09EF  1D03               	btfss	3,2
  4931  09F0  0837               	movf	___flmul@bexp,w
  4932  09F1  1D03               	btfss	3,2
  4933  09F2  29FC               	goto	l2626
  4934  09F3  3000               	movlw	0
  4935  09F4  00A7               	movwf	?___flmul+3
  4936  09F5  3000               	movlw	0
  4937  09F6  00A6               	movwf	?___flmul+2
  4938  09F7  3000               	movlw	0
  4939  09F8  00A5               	movwf	?___flmul+1
  4940  09F9  3000               	movlw	0
  4941  09FA  00A4               	movwf	?___flmul
  4942  09FB  0008               	return
  4943  09FC                     l2626:	
  4944  09FC  0824               	movf	___flmul@b,w
  4945  09FD  00AC               	movwf	??___flmul
  4946  09FE  082C               	movf	??___flmul,w
  4947  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4948  0A00  082A               	movf	___flmul@a+2,w
  4949  0A01  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  4950  0A06  0871               	movf	?__Umul8_16+1,w
  4951  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0A09  00BD               	movwf	___flmul@temp+1
  4954  0A0A  0870               	movf	?__Umul8_16,w
  4955  0A0B  00BC               	movwf	___flmul@temp
  4956  0A0C  083C               	movf	___flmul@temp,w
  4957  0A0D  00AC               	movwf	??___flmul
  4958  0A0E  01AD               	clrf	??___flmul+1
  4959  0A0F  01AE               	clrf	??___flmul+2
  4960  0A10  01AF               	clrf	??___flmul+3
  4961  0A11  082F               	movf	??___flmul+3,w
  4962  0A12  00B5               	movwf	___flmul@grs+3
  4963  0A13  082E               	movf	??___flmul+2,w
  4964  0A14  00B4               	movwf	___flmul@grs+2
  4965  0A15  082D               	movf	??___flmul+1,w
  4966  0A16  00B3               	movwf	___flmul@grs+1
  4967  0A17  082C               	movf	??___flmul,w
  4968  0A18  00B2               	movwf	___flmul@grs
  4969  0A19  083D               	movf	___flmul@temp+1,w
  4970  0A1A  00AC               	movwf	??___flmul
  4971  0A1B  01AD               	clrf	??___flmul+1
  4972  0A1C  01AE               	clrf	??___flmul+2
  4973  0A1D  01AF               	clrf	??___flmul+3
  4974  0A1E  082F               	movf	??___flmul+3,w
  4975  0A1F  00BB               	movwf	___flmul@prod+3
  4976  0A20  082E               	movf	??___flmul+2,w
  4977  0A21  00BA               	movwf	___flmul@prod+2
  4978  0A22  082D               	movf	??___flmul+1,w
  4979  0A23  00B9               	movwf	___flmul@prod+1
  4980  0A24  082C               	movf	??___flmul,w
  4981  0A25  00B8               	movwf	___flmul@prod
  4982  0A26  0825               	movf	___flmul@b+1,w
  4983  0A27  00AC               	movwf	??___flmul
  4984  0A28  082C               	movf	??___flmul,w
  4985  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4986  0A2A  0829               	movf	___flmul@a+1,w
  4987  0A2B  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  4988  0A30  0871               	movf	?__Umul8_16+1,w
  4989  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4990  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4991  0A33  00BD               	movwf	___flmul@temp+1
  4992  0A34  0870               	movf	?__Umul8_16,w
  4993  0A35  00BC               	movwf	___flmul@temp
  4994  0A36  083C               	movf	___flmul@temp,w
  4995  0A37  00AC               	movwf	??___flmul
  4996  0A38  01AD               	clrf	??___flmul+1
  4997  0A39  01AE               	clrf	??___flmul+2
  4998  0A3A  01AF               	clrf	??___flmul+3
  4999  0A3B  082C               	movf	??___flmul,w
  5000  0A3C  07B2               	addwf	___flmul@grs,f
  5001  0A3D  082D               	movf	??___flmul+1,w
  5002  0A3E  1103               	clrz
  5003  0A3F  1803               	skipnc
  5004  0A40  3E01               	addlw	1
  5005  0A41  1D03               	btfss	3,2
  5006  0A42  07B3               	addwf	___flmul@grs+1,f
  5007  0A43  082E               	movf	??___flmul+2,w
  5008  0A44  1103               	clrz
  5009  0A45  1803               	skipnc
  5010  0A46  3E01               	addlw	1
  5011  0A47  1D03               	btfss	3,2
  5012  0A48  07B4               	addwf	___flmul@grs+2,f
  5013  0A49  082F               	movf	??___flmul+3,w
  5014  0A4A  1103               	clrz
  5015  0A4B  1803               	skipnc
  5016  0A4C  3E01               	addlw	1
  5017  0A4D  1D03               	btfss	3,2
  5018  0A4E  07B5               	addwf	___flmul@grs+3,f
  5019  0A4F  083D               	movf	___flmul@temp+1,w
  5020  0A50  00AC               	movwf	??___flmul
  5021  0A51  01AD               	clrf	??___flmul+1
  5022  0A52  01AE               	clrf	??___flmul+2
  5023  0A53  01AF               	clrf	??___flmul+3
  5024  0A54  082C               	movf	??___flmul,w
  5025  0A55  07B8               	addwf	___flmul@prod,f
  5026  0A56  082D               	movf	??___flmul+1,w
  5027  0A57  1103               	clrz
  5028  0A58  1803               	skipnc
  5029  0A59  3E01               	addlw	1
  5030  0A5A  1D03               	btfss	3,2
  5031  0A5B  07B9               	addwf	___flmul@prod+1,f
  5032  0A5C  082E               	movf	??___flmul+2,w
  5033  0A5D  1103               	clrz
  5034  0A5E  1803               	skipnc
  5035  0A5F  3E01               	addlw	1
  5036  0A60  1D03               	btfss	3,2
  5037  0A61  07BA               	addwf	___flmul@prod+2,f
  5038  0A62  082F               	movf	??___flmul+3,w
  5039  0A63  1103               	clrz
  5040  0A64  1803               	skipnc
  5041  0A65  3E01               	addlw	1
  5042  0A66  1D03               	btfss	3,2
  5043  0A67  07BB               	addwf	___flmul@prod+3,f
  5044  0A68  0826               	movf	___flmul@b+2,w
  5045  0A69  00AC               	movwf	??___flmul
  5046  0A6A  082C               	movf	??___flmul,w
  5047  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  5048  0A6C  0828               	movf	___flmul@a,w
  5049  0A6D  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5050  0A72  0871               	movf	?__Umul8_16+1,w
  5051  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  5052  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  5053  0A75  00BD               	movwf	___flmul@temp+1
  5054  0A76  0870               	movf	?__Umul8_16,w
  5055  0A77  00BC               	movwf	___flmul@temp
  5056  0A78  083C               	movf	___flmul@temp,w
  5057  0A79  00AC               	movwf	??___flmul
  5058  0A7A  01AD               	clrf	??___flmul+1
  5059  0A7B  01AE               	clrf	??___flmul+2
  5060  0A7C  01AF               	clrf	??___flmul+3
  5061  0A7D  082C               	movf	??___flmul,w
  5062  0A7E  07B2               	addwf	___flmul@grs,f
  5063  0A7F  082D               	movf	??___flmul+1,w
  5064  0A80  1103               	clrz
  5065  0A81  1803               	skipnc
  5066  0A82  3E01               	addlw	1
  5067  0A83  1D03               	btfss	3,2
  5068  0A84  07B3               	addwf	___flmul@grs+1,f
  5069  0A85  082E               	movf	??___flmul+2,w
  5070  0A86  1103               	clrz
  5071  0A87  1803               	skipnc
  5072  0A88  3E01               	addlw	1
  5073  0A89  1D03               	btfss	3,2
  5074  0A8A  07B4               	addwf	___flmul@grs+2,f
  5075  0A8B  082F               	movf	??___flmul+3,w
  5076  0A8C  1103               	clrz
  5077  0A8D  1803               	skipnc
  5078  0A8E  3E01               	addlw	1
  5079  0A8F  1D03               	btfss	3,2
  5080  0A90  07B5               	addwf	___flmul@grs+3,f
  5081  0A91  083D               	movf	___flmul@temp+1,w
  5082  0A92  00AC               	movwf	??___flmul
  5083  0A93  01AD               	clrf	??___flmul+1
  5084  0A94  01AE               	clrf	??___flmul+2
  5085  0A95  01AF               	clrf	??___flmul+3
  5086  0A96  082C               	movf	??___flmul,w
  5087  0A97  07B8               	addwf	___flmul@prod,f
  5088  0A98  082D               	movf	??___flmul+1,w
  5089  0A99  1103               	clrz
  5090  0A9A  1803               	skipnc
  5091  0A9B  3E01               	addlw	1
  5092  0A9C  1D03               	btfss	3,2
  5093  0A9D  07B9               	addwf	___flmul@prod+1,f
  5094  0A9E  082E               	movf	??___flmul+2,w
  5095  0A9F  1103               	clrz
  5096  0AA0  1803               	skipnc
  5097  0AA1  3E01               	addlw	1
  5098  0AA2  1D03               	btfss	3,2
  5099  0AA3  07BA               	addwf	___flmul@prod+2,f
  5100  0AA4  082F               	movf	??___flmul+3,w
  5101  0AA5  1103               	clrz
  5102  0AA6  1803               	skipnc
  5103  0AA7  3E01               	addlw	1
  5104  0AA8  1D03               	btfss	3,2
  5105  0AA9  07BB               	addwf	___flmul@prod+3,f
  5106  0AAA  3008               	movlw	8
  5107  0AAB  00AC               	movwf	??___flmul
  5108  0AAC                     u4015:	
  5109  0AAC  1003               	clrc
  5110  0AAD  0DB2               	rlf	___flmul@grs,f
  5111  0AAE  0DB3               	rlf	___flmul@grs+1,f
  5112  0AAF  0DB4               	rlf	___flmul@grs+2,f
  5113  0AB0  0DB5               	rlf	___flmul@grs+3,f
  5114  0AB1  0BAC               	decfsz	??___flmul,f
  5115  0AB2  2AAC               	goto	u4015
  5116  0AB3  0825               	movf	___flmul@b+1,w
  5117  0AB4  00AC               	movwf	??___flmul
  5118  0AB5  082C               	movf	??___flmul,w
  5119  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  5120  0AB7  0828               	movf	___flmul@a,w
  5121  0AB8  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5122  0ABD  0871               	movf	?__Umul8_16+1,w
  5123  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  5124  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  5125  0AC0  00BD               	movwf	___flmul@temp+1
  5126  0AC1  0870               	movf	?__Umul8_16,w
  5127  0AC2  00BC               	movwf	___flmul@temp
  5128  0AC3  083C               	movf	___flmul@temp,w
  5129  0AC4  00AC               	movwf	??___flmul
  5130  0AC5  083D               	movf	___flmul@temp+1,w
  5131  0AC6  00AD               	movwf	??___flmul+1
  5132  0AC7  01AE               	clrf	??___flmul+2
  5133  0AC8  01AF               	clrf	??___flmul+3
  5134  0AC9  082C               	movf	??___flmul,w
  5135  0ACA  07B2               	addwf	___flmul@grs,f
  5136  0ACB  082D               	movf	??___flmul+1,w
  5137  0ACC  1103               	clrz
  5138  0ACD  1803               	skipnc
  5139  0ACE  3E01               	addlw	1
  5140  0ACF  1D03               	btfss	3,2
  5141  0AD0  07B3               	addwf	___flmul@grs+1,f
  5142  0AD1  082E               	movf	??___flmul+2,w
  5143  0AD2  1103               	clrz
  5144  0AD3  1803               	skipnc
  5145  0AD4  3E01               	addlw	1
  5146  0AD5  1D03               	btfss	3,2
  5147  0AD6  07B4               	addwf	___flmul@grs+2,f
  5148  0AD7  082F               	movf	??___flmul+3,w
  5149  0AD8  1103               	clrz
  5150  0AD9  1803               	skipnc
  5151  0ADA  3E01               	addlw	1
  5152  0ADB  1D03               	btfss	3,2
  5153  0ADC  07B5               	addwf	___flmul@grs+3,f
  5154  0ADD  0824               	movf	___flmul@b,w
  5155  0ADE  00AC               	movwf	??___flmul
  5156  0ADF  082C               	movf	??___flmul,w
  5157  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  5158  0AE1  0829               	movf	___flmul@a+1,w
  5159  0AE2  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5160  0AE7  0871               	movf	?__Umul8_16+1,w
  5161  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  5162  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  5163  0AEA  00BD               	movwf	___flmul@temp+1
  5164  0AEB  0870               	movf	?__Umul8_16,w
  5165  0AEC  00BC               	movwf	___flmul@temp
  5166  0AED  083C               	movf	___flmul@temp,w
  5167  0AEE  00AC               	movwf	??___flmul
  5168  0AEF  083D               	movf	___flmul@temp+1,w
  5169  0AF0  00AD               	movwf	??___flmul+1
  5170  0AF1  01AE               	clrf	??___flmul+2
  5171  0AF2  01AF               	clrf	??___flmul+3
  5172  0AF3  082C               	movf	??___flmul,w
  5173  0AF4  07B2               	addwf	___flmul@grs,f
  5174  0AF5  082D               	movf	??___flmul+1,w
  5175  0AF6  1103               	clrz
  5176  0AF7  1803               	skipnc
  5177  0AF8  3E01               	addlw	1
  5178  0AF9  1D03               	btfss	3,2
  5179  0AFA  07B3               	addwf	___flmul@grs+1,f
  5180  0AFB  082E               	movf	??___flmul+2,w
  5181  0AFC  1103               	clrz
  5182  0AFD  1803               	skipnc
  5183  0AFE  3E01               	addlw	1
  5184  0AFF  1D03               	btfss	3,2
  5185  0B00  07B4               	addwf	___flmul@grs+2,f
  5186  0B01  082F               	movf	??___flmul+3,w
  5187  0B02  1103               	clrz
  5188  0B03  1803               	skipnc
  5189  0B04  3E01               	addlw	1
  5190  0B05  1D03               	btfss	3,2
  5191  0B06  07B5               	addwf	___flmul@grs+3,f
  5192  0B07  3008               	movlw	8
  5193  0B08  00AC               	movwf	??___flmul
  5194  0B09                     u4045:	
  5195  0B09  1003               	clrc
  5196  0B0A  0DB2               	rlf	___flmul@grs,f
  5197  0B0B  0DB3               	rlf	___flmul@grs+1,f
  5198  0B0C  0DB4               	rlf	___flmul@grs+2,f
  5199  0B0D  0DB5               	rlf	___flmul@grs+3,f
  5200  0B0E  0BAC               	decfsz	??___flmul,f
  5201  0B0F  2B09               	goto	u4045
  5202  0B10  0824               	movf	___flmul@b,w
  5203  0B11  00AC               	movwf	??___flmul
  5204  0B12  082C               	movf	??___flmul,w
  5205  0B13  00F0               	movwf	__Umul8_16@multiplicand
  5206  0B14  0828               	movf	___flmul@a,w
  5207  0B15  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5208  0B1A  0871               	movf	?__Umul8_16+1,w
  5209  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5210  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5211  0B1D  00BD               	movwf	___flmul@temp+1
  5212  0B1E  0870               	movf	?__Umul8_16,w
  5213  0B1F  00BC               	movwf	___flmul@temp
  5214  0B20  083C               	movf	___flmul@temp,w
  5215  0B21  00AC               	movwf	??___flmul
  5216  0B22  083D               	movf	___flmul@temp+1,w
  5217  0B23  00AD               	movwf	??___flmul+1
  5218  0B24  01AE               	clrf	??___flmul+2
  5219  0B25  01AF               	clrf	??___flmul+3
  5220  0B26  082C               	movf	??___flmul,w
  5221  0B27  07B2               	addwf	___flmul@grs,f
  5222  0B28  082D               	movf	??___flmul+1,w
  5223  0B29  1103               	clrz
  5224  0B2A  1803               	skipnc
  5225  0B2B  3E01               	addlw	1
  5226  0B2C  1D03               	btfss	3,2
  5227  0B2D  07B3               	addwf	___flmul@grs+1,f
  5228  0B2E  082E               	movf	??___flmul+2,w
  5229  0B2F  1103               	clrz
  5230  0B30  1803               	skipnc
  5231  0B31  3E01               	addlw	1
  5232  0B32  1D03               	btfss	3,2
  5233  0B33  07B4               	addwf	___flmul@grs+2,f
  5234  0B34  082F               	movf	??___flmul+3,w
  5235  0B35  1103               	clrz
  5236  0B36  1803               	skipnc
  5237  0B37  3E01               	addlw	1
  5238  0B38  1D03               	btfss	3,2
  5239  0B39  07B5               	addwf	___flmul@grs+3,f
  5240  0B3A  0825               	movf	___flmul@b+1,w
  5241  0B3B  00AC               	movwf	??___flmul
  5242  0B3C  082C               	movf	??___flmul,w
  5243  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  5244  0B3E  082A               	movf	___flmul@a+2,w
  5245  0B3F  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5246  0B44  0871               	movf	?__Umul8_16+1,w
  5247  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  5248  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  5249  0B47  00BD               	movwf	___flmul@temp+1
  5250  0B48  0870               	movf	?__Umul8_16,w
  5251  0B49  00BC               	movwf	___flmul@temp
  5252  0B4A  083C               	movf	___flmul@temp,w
  5253  0B4B  00AC               	movwf	??___flmul
  5254  0B4C  083D               	movf	___flmul@temp+1,w
  5255  0B4D  00AD               	movwf	??___flmul+1
  5256  0B4E  01AE               	clrf	??___flmul+2
  5257  0B4F  01AF               	clrf	??___flmul+3
  5258  0B50  082C               	movf	??___flmul,w
  5259  0B51  07B8               	addwf	___flmul@prod,f
  5260  0B52  082D               	movf	??___flmul+1,w
  5261  0B53  1103               	clrz
  5262  0B54  1803               	skipnc
  5263  0B55  3E01               	addlw	1
  5264  0B56  1D03               	btfss	3,2
  5265  0B57  07B9               	addwf	___flmul@prod+1,f
  5266  0B58  082E               	movf	??___flmul+2,w
  5267  0B59  1103               	clrz
  5268  0B5A  1803               	skipnc
  5269  0B5B  3E01               	addlw	1
  5270  0B5C  1D03               	btfss	3,2
  5271  0B5D  07BA               	addwf	___flmul@prod+2,f
  5272  0B5E  082F               	movf	??___flmul+3,w
  5273  0B5F  1103               	clrz
  5274  0B60  1803               	skipnc
  5275  0B61  3E01               	addlw	1
  5276  0B62  1D03               	btfss	3,2
  5277  0B63  07BB               	addwf	___flmul@prod+3,f
  5278  0B64  0826               	movf	___flmul@b+2,w
  5279  0B65  00AC               	movwf	??___flmul
  5280  0B66  082C               	movf	??___flmul,w
  5281  0B67  00F0               	movwf	__Umul8_16@multiplicand
  5282  0B68  0829               	movf	___flmul@a+1,w
  5283  0B69  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5284  0B6E  0871               	movf	?__Umul8_16+1,w
  5285  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  5286  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  5287  0B71  00BD               	movwf	___flmul@temp+1
  5288  0B72  0870               	movf	?__Umul8_16,w
  5289  0B73  00BC               	movwf	___flmul@temp
  5290  0B74  083C               	movf	___flmul@temp,w
  5291  0B75  00AC               	movwf	??___flmul
  5292  0B76  083D               	movf	___flmul@temp+1,w
  5293  0B77  00AD               	movwf	??___flmul+1
  5294  0B78  01AE               	clrf	??___flmul+2
  5295  0B79  01AF               	clrf	??___flmul+3
  5296  0B7A  082C               	movf	??___flmul,w
  5297  0B7B  07B8               	addwf	___flmul@prod,f
  5298  0B7C  082D               	movf	??___flmul+1,w
  5299  0B7D  1103               	clrz
  5300  0B7E  1803               	skipnc
  5301  0B7F  3E01               	addlw	1
  5302  0B80  1D03               	btfss	3,2
  5303  0B81  07B9               	addwf	___flmul@prod+1,f
  5304  0B82  082E               	movf	??___flmul+2,w
  5305  0B83  1103               	clrz
  5306  0B84  1803               	skipnc
  5307  0B85  3E01               	addlw	1
  5308  0B86  1D03               	btfss	3,2
  5309  0B87  07BA               	addwf	___flmul@prod+2,f
  5310  0B88  082F               	movf	??___flmul+3,w
  5311  0B89  1103               	clrz
  5312  0B8A  1803               	skipnc
  5313  0B8B  3E01               	addlw	1
  5314  0B8C  1D03               	btfss	3,2
  5315  0B8D  07BB               	addwf	___flmul@prod+3,f
  5316  0B8E  0826               	movf	___flmul@b+2,w
  5317  0B8F  00AC               	movwf	??___flmul
  5318  0B90  082C               	movf	??___flmul,w
  5319  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5320  0B92  082A               	movf	___flmul@a+2,w
  5321  0B93  160A  158A  24A8  120A  158A  	fcall	__Umul8_16
  5322  0B98  0871               	movf	?__Umul8_16+1,w
  5323  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5324  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5325  0B9B  00BD               	movwf	___flmul@temp+1
  5326  0B9C  0870               	movf	?__Umul8_16,w
  5327  0B9D  00BC               	movwf	___flmul@temp
  5328  0B9E  083C               	movf	___flmul@temp,w
  5329  0B9F  00AC               	movwf	??___flmul
  5330  0BA0  083D               	movf	___flmul@temp+1,w
  5331  0BA1  00AD               	movwf	??___flmul+1
  5332  0BA2  01AE               	clrf	??___flmul+2
  5333  0BA3  01AF               	clrf	??___flmul+3
  5334  0BA4  3008               	movlw	8
  5335  0BA5                     u4085:	
  5336  0BA5  1003               	clrc
  5337  0BA6  0DAC               	rlf	??___flmul,f
  5338  0BA7  0DAD               	rlf	??___flmul+1,f
  5339  0BA8  0DAE               	rlf	??___flmul+2,f
  5340  0BA9  0DAF               	rlf	??___flmul+3,f
  5341  0BAA  3EFF               	addlw	-1
  5342  0BAB  1D03               	skipz
  5343  0BAC  2BA5               	goto	u4085
  5344  0BAD  082C               	movf	??___flmul,w
  5345  0BAE  07B8               	addwf	___flmul@prod,f
  5346  0BAF  082D               	movf	??___flmul+1,w
  5347  0BB0  1103               	clrz
  5348  0BB1  1803               	skipnc
  5349  0BB2  3E01               	addlw	1
  5350  0BB3  1D03               	btfss	3,2
  5351  0BB4  07B9               	addwf	___flmul@prod+1,f
  5352  0BB5  082E               	movf	??___flmul+2,w
  5353  0BB6  1103               	clrz
  5354  0BB7  1803               	skipnc
  5355  0BB8  3E01               	addlw	1
  5356  0BB9  1D03               	btfss	3,2
  5357  0BBA  07BA               	addwf	___flmul@prod+2,f
  5358  0BBB  082F               	movf	??___flmul+3,w
  5359  0BBC  1103               	clrz
  5360  0BBD  1803               	skipnc
  5361  0BBE  3E01               	addlw	1
  5362  0BBF  1D03               	btfss	3,2
  5363  0BC0  07BB               	addwf	___flmul@prod+3,f
  5364  0BC1  0832               	movf	___flmul@grs,w
  5365  0BC2  00AC               	movwf	??___flmul
  5366  0BC3  0833               	movf	___flmul@grs+1,w
  5367  0BC4  00AD               	movwf	??___flmul+1
  5368  0BC5  0834               	movf	___flmul@grs+2,w
  5369  0BC6  00AE               	movwf	??___flmul+2
  5370  0BC7  0835               	movf	___flmul@grs+3,w
  5371  0BC8  00AF               	movwf	??___flmul+3
  5372  0BC9  3018               	movlw	24
  5373  0BCA                     u4105:	
  5374  0BCA  1003               	clrc
  5375  0BCB  0CAF               	rrf	??___flmul+3,f
  5376  0BCC  0CAE               	rrf	??___flmul+2,f
  5377  0BCD  0CAD               	rrf	??___flmul+1,f
  5378  0BCE  0CAC               	rrf	??___flmul,f
  5379  0BCF  3EFF               	addlw	-1
  5380  0BD0  1D03               	skipz
  5381  0BD1  2BCA               	goto	u4105
  5382  0BD2  082C               	movf	??___flmul,w
  5383  0BD3  07B8               	addwf	___flmul@prod,f
  5384  0BD4  082D               	movf	??___flmul+1,w
  5385  0BD5  1103               	clrz
  5386  0BD6  1803               	skipnc
  5387  0BD7  3E01               	addlw	1
  5388  0BD8  1D03               	btfss	3,2
  5389  0BD9  07B9               	addwf	___flmul@prod+1,f
  5390  0BDA  082E               	movf	??___flmul+2,w
  5391  0BDB  1103               	clrz
  5392  0BDC  1803               	skipnc
  5393  0BDD  3E01               	addlw	1
  5394  0BDE  1D03               	btfss	3,2
  5395  0BDF  07BA               	addwf	___flmul@prod+2,f
  5396  0BE0  082F               	movf	??___flmul+3,w
  5397  0BE1  1103               	clrz
  5398  0BE2  1803               	skipnc
  5399  0BE3  3E01               	addlw	1
  5400  0BE4  1D03               	btfss	3,2
  5401  0BE5  07BB               	addwf	___flmul@prod+3,f
  5402  0BE6  3008               	movlw	8
  5403  0BE7  00AC               	movwf	??___flmul
  5404  0BE8                     u4125:	
  5405  0BE8  1003               	clrc
  5406  0BE9  0DB2               	rlf	___flmul@grs,f
  5407  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5408  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5409  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5410  0BED  0BAC               	decfsz	??___flmul,f
  5411  0BEE  2BE8               	goto	u4125
  5412  0BEF  0837               	movf	___flmul@bexp,w
  5413  0BF0  0736               	addwf	___flmul@aexp,w
  5414  0BF1  00AC               	movwf	??___flmul
  5415  0BF2  01AD               	clrf	??___flmul+1
  5416  0BF3  0DAD               	rlf	??___flmul+1,f
  5417  0BF4  082C               	movf	??___flmul,w
  5418  0BF5  3E82               	addlw	130
  5419  0BF6  00BC               	movwf	___flmul@temp
  5420  0BF7  082D               	movf	??___flmul+1,w
  5421  0BF8  1803               	skipnc
  5422  0BF9  3E01               	addlw	1
  5423  0BFA  3EFF               	addlw	255
  5424  0BFB  00BD               	movwf	___flmul@temp+1
  5425  0BFC                     l2678:	
  5426  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5427  0BFD  2C19               	goto	l2680
  5428  0BFE  3001               	movlw	1
  5429  0BFF  00AC               	movwf	??___flmul
  5430  0C00                     u4135:	
  5431  0C00  1003               	clrc
  5432  0C01  0DB8               	rlf	___flmul@prod,f
  5433  0C02  0DB9               	rlf	___flmul@prod+1,f
  5434  0C03  0DBA               	rlf	___flmul@prod+2,f
  5435  0C04  0DBB               	rlf	___flmul@prod+3,f
  5436  0C05  0BAC               	decfsz	??___flmul,f
  5437  0C06  2C00               	goto	u4135
  5438  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5439  0C08  1438               	bsf	___flmul@prod,0
  5440  0C09  3001               	movlw	1
  5441  0C0A  00AC               	movwf	??___flmul
  5442  0C0B                     u4155:	
  5443  0C0B  1003               	clrc
  5444  0C0C  0DB2               	rlf	___flmul@grs,f
  5445  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5446  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5447  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5448  0C10  0BAC               	decfsz	??___flmul,f
  5449  0C11  2C0B               	goto	u4155
  5450  0C12  30FF               	movlw	255
  5451  0C13  07BC               	addwf	___flmul@temp,f
  5452  0C14  1803               	skipnc
  5453  0C15  0ABD               	incf	___flmul@temp+1,f
  5454  0C16  30FF               	movlw	255
  5455  0C17  07BD               	addwf	___flmul@temp+1,f
  5456  0C18  2BFC               	goto	l2678
  5457  0C19                     l2680:	
  5458  0C19  01B6               	clrf	___flmul@aexp
  5459  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5460  0C1B  2C32               	goto	l2690
  5461  0C1C  30FF               	movlw	255
  5462  0C1D  0532               	andwf	___flmul@grs,w
  5463  0C1E  00AC               	movwf	??___flmul
  5464  0C1F  30FF               	movlw	255
  5465  0C20  0533               	andwf	___flmul@grs+1,w
  5466  0C21  00AD               	movwf	??___flmul+1
  5467  0C22  30FF               	movlw	255
  5468  0C23  0534               	andwf	___flmul@grs+2,w
  5469  0C24  00AE               	movwf	??___flmul+2
  5470  0C25  307F               	movlw	127
  5471  0C26  0535               	andwf	___flmul@grs+3,w
  5472  0C27  00AF               	movwf	??___flmul+3
  5473  0C28  082F               	movf	??___flmul+3,w
  5474  0C29  042E               	iorwf	??___flmul+2,w
  5475  0C2A  042D               	iorwf	??___flmul+1,w
  5476  0C2B  042C               	iorwf	??___flmul,w
  5477  0C2C  1903               	skipnz
  5478  0C2D  1838               	btfsc	___flmul@prod,0
  5479  0C2E  2C30               	goto	l2686
  5480  0C2F  2C32               	goto	l2690
  5481  0C30                     l2686:	
  5482  0C30  01B6               	clrf	___flmul@aexp
  5483  0C31  0AB6               	incf	___flmul@aexp,f
  5484  0C32                     l2690:	
  5485  0C32  0836               	movf	___flmul@aexp,w
  5486  0C33  1903               	btfsc	3,2
  5487  0C34  2C64               	goto	l2700
  5488  0C35  3001               	movlw	1
  5489  0C36  07B8               	addwf	___flmul@prod,f
  5490  0C37  3000               	movlw	0
  5491  0C38  1803               	skipnc
  5492  0C39  3001               	movlw	1
  5493  0C3A  07B9               	addwf	___flmul@prod+1,f
  5494  0C3B  3000               	movlw	0
  5495  0C3C  1803               	skipnc
  5496  0C3D  3001               	movlw	1
  5497  0C3E  07BA               	addwf	___flmul@prod+2,f
  5498  0C3F  3000               	movlw	0
  5499  0C40  1803               	skipnc
  5500  0C41  3001               	movlw	1
  5501  0C42  07BB               	addwf	___flmul@prod+3,f
  5502  0C43  1C3B               	btfss	___flmul@prod+3,0
  5503  0C44  2C64               	goto	l2700
  5504  0C45  0838               	movf	___flmul@prod,w
  5505  0C46  00AC               	movwf	??___flmul
  5506  0C47  0839               	movf	___flmul@prod+1,w
  5507  0C48  00AD               	movwf	??___flmul+1
  5508  0C49  083A               	movf	___flmul@prod+2,w
  5509  0C4A  00AE               	movwf	??___flmul+2
  5510  0C4B  083B               	movf	___flmul@prod+3,w
  5511  0C4C  00AF               	movwf	??___flmul+3
  5512  0C4D  3001               	movlw	1
  5513  0C4E  00B0               	movwf	??___flmul+4
  5514  0C4F                     u4225:	
  5515  0C4F  0D2F               	rlf	??___flmul+3,w
  5516  0C50  0CAF               	rrf	??___flmul+3,f
  5517  0C51  0CAE               	rrf	??___flmul+2,f
  5518  0C52  0CAD               	rrf	??___flmul+1,f
  5519  0C53  0CAC               	rrf	??___flmul,f
  5520  0C54  0BB0               	decfsz	??___flmul+4,f
  5521  0C55  2C4F               	goto	u4225
  5522  0C56  082F               	movf	??___flmul+3,w
  5523  0C57  00BB               	movwf	___flmul@prod+3
  5524  0C58  082E               	movf	??___flmul+2,w
  5525  0C59  00BA               	movwf	___flmul@prod+2
  5526  0C5A  082D               	movf	??___flmul+1,w
  5527  0C5B  00B9               	movwf	___flmul@prod+1
  5528  0C5C  082C               	movf	??___flmul,w
  5529  0C5D  00B8               	movwf	___flmul@prod
  5530  0C5E  3001               	movlw	1
  5531  0C5F  07BC               	addwf	___flmul@temp,f
  5532  0C60  1803               	skipnc
  5533  0C61  0ABD               	incf	___flmul@temp+1,f
  5534  0C62  3000               	movlw	0
  5535  0C63  07BD               	addwf	___flmul@temp+1,f
  5536  0C64                     l2700:	
  5537  0C64  083D               	movf	___flmul@temp+1,w
  5538  0C65  3A80               	xorlw	128
  5539  0C66  00FF               	movwf	127
  5540  0C67  3080               	movlw	128
  5541  0C68  027F               	subwf	127,w
  5542  0C69  1D03               	skipz
  5543  0C6A  2C6D               	goto	u4235
  5544  0C6B  30FF               	movlw	255
  5545  0C6C  023C               	subwf	___flmul@temp,w
  5546  0C6D                     u4235:	
  5547  0C6D  1C03               	skipc
  5548  0C6E  2C7A               	goto	l2704
  5549  0C6F  307F               	movlw	127
  5550  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5551  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5552  0C72  00BB               	movwf	___flmul@prod+3
  5553  0C73  3080               	movlw	128
  5554  0C74  00BA               	movwf	___flmul@prod+2
  5555  0C75  3000               	movlw	0
  5556  0C76  00B9               	movwf	___flmul@prod+1
  5557  0C77  3000               	movlw	0
  5558  0C78  00B8               	movwf	___flmul@prod
  5559  0C79  2CAA               	goto	l702
  5560  0C7A                     l2704:	
  5561  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5562  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5563  0C7C  083D               	movf	___flmul@temp+1,w
  5564  0C7D  3A80               	xorlw	128
  5565  0C7E  00FF               	movwf	127
  5566  0C7F  3080               	movlw	128
  5567  0C80  027F               	subwf	127,w
  5568  0C81  1D03               	skipz
  5569  0C82  2C85               	goto	u4245
  5570  0C83  3001               	movlw	1
  5571  0C84  023C               	subwf	___flmul@temp,w
  5572  0C85                     u4245:	
  5573  0C85  1803               	skipnc
  5574  0C86  2C93               	goto	l2710
  5575  0C87  3000               	movlw	0
  5576  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5577  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5578  0C8A  00BB               	movwf	___flmul@prod+3
  5579  0C8B  3000               	movlw	0
  5580  0C8C  00BA               	movwf	___flmul@prod+2
  5581  0C8D  3000               	movlw	0
  5582  0C8E  00B9               	movwf	___flmul@prod+1
  5583  0C8F  3000               	movlw	0
  5584  0C90  00B8               	movwf	___flmul@prod
  5585  0C91  01B1               	clrf	___flmul@sign
  5586  0C92  2CAA               	goto	l702
  5587  0C93                     l2710:	
  5588  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5589  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5590  0C95  083C               	movf	___flmul@temp,w
  5591  0C96  00AC               	movwf	??___flmul
  5592  0C97  082C               	movf	??___flmul,w
  5593  0C98  00B7               	movwf	___flmul@bexp
  5594  0C99  30FF               	movlw	255
  5595  0C9A  05B8               	andwf	___flmul@prod,f
  5596  0C9B  30FF               	movlw	255
  5597  0C9C  05B9               	andwf	___flmul@prod+1,f
  5598  0C9D  307F               	movlw	127
  5599  0C9E  05BA               	andwf	___flmul@prod+2,f
  5600  0C9F  3000               	movlw	0
  5601  0CA0  05BB               	andwf	___flmul@prod+3,f
  5602  0CA1  1837               	btfsc	___flmul@bexp,0
  5603  0CA2  17BA               	bsf	___flmul@prod+2,7
  5604  0CA3  0837               	movf	___flmul@bexp,w
  5605  0CA4  00AC               	movwf	??___flmul
  5606  0CA5  1003               	clrc
  5607  0CA6  0C2C               	rrf	??___flmul,w
  5608  0CA7  00AD               	movwf	??___flmul+1
  5609  0CA8  082D               	movf	??___flmul+1,w
  5610  0CA9  00BB               	movwf	___flmul@prod+3
  5611  0CAA                     l702:	
  5612  0CAA  0831               	movf	___flmul@sign,w
  5613  0CAB  00AC               	movwf	??___flmul
  5614  0CAC  082C               	movf	??___flmul,w
  5615  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5616  0CAE  083B               	movf	___flmul@prod+3,w
  5617  0CAF  00A7               	movwf	?___flmul+3
  5618  0CB0  083A               	movf	___flmul@prod+2,w
  5619  0CB1  00A6               	movwf	?___flmul+2
  5620  0CB2  0839               	movf	___flmul@prod+1,w
  5621  0CB3  00A5               	movwf	?___flmul+1
  5622  0CB4  0838               	movf	___flmul@prod,w
  5623  0CB5  00A4               	movwf	?___flmul
  5624  0CB6  0008               	return
  5625  0CB7                     __end_of___flmul:	
  5626                           
  5627                           	psect	text10
  5628  1CA8                     __ptext10:	
  5629 ;; *************** function __Umul8_16 *****************
  5630 ;; Defined at:
  5631 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  multiplier      1    wreg     unsigned char 
  5634 ;;  multiplicand    1    0[COMMON] unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  multiplier      1    8[COMMON] unsigned char 
  5637 ;;  word_mpld       2    6[COMMON] unsigned int 
  5638 ;;  product         2    4[COMMON] unsigned int 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  2    0[COMMON] unsigned int 
  5641 ;; Registers used:
  5642 ;;		wreg, status,2, status,0
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5648 ;;      Params:         2       0       0       0       0
  5649 ;;      Locals:         5       0       0       0       0
  5650 ;;      Temps:          2       0       0       0       0
  5651 ;;      Totals:         9       0       0       0       0
  5652 ;;Total ram usage:        9 bytes
  5653 ;; Hardware stack levels used:    1
  5654 ;; This function calls:
  5655 ;;		Nothing
  5656 ;; This function is called by:
  5657 ;;		___flmul
  5658 ;; This function uses a non-reentrant model
  5659 ;;
  5660                           
  5661                           
  5662                           ;psect for function __Umul8_16
  5663  1CA8                     __Umul8_16:	
  5664                           
  5665                           ;incstack = 0
  5666                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5667                           ;__Umul8_16@multiplier stored from wreg
  5668  1CA8  00F8               	movwf	__Umul8_16@multiplier
  5669  1CA9  01F4               	clrf	__Umul8_16@product
  5670  1CAA  01F5               	clrf	__Umul8_16@product+1
  5671  1CAB  0870               	movf	__Umul8_16@multiplicand,w
  5672  1CAC  00F2               	movwf	??__Umul8_16
  5673  1CAD  01F3               	clrf	??__Umul8_16+1
  5674  1CAE  0872               	movf	??__Umul8_16,w
  5675  1CAF  00F6               	movwf	__Umul8_16@word_mpld
  5676  1CB0  0873               	movf	??__Umul8_16+1,w
  5677  1CB1  00F7               	movwf	__Umul8_16@word_mpld+1
  5678  1CB2                     l2238:	
  5679  1CB2  1C78               	btfss	__Umul8_16@multiplier,0
  5680  1CB3  2CBA               	goto	l756
  5681  1CB4  0876               	movf	__Umul8_16@word_mpld,w
  5682  1CB5  07F4               	addwf	__Umul8_16@product,f
  5683  1CB6  1803               	skipnc
  5684  1CB7  0AF5               	incf	__Umul8_16@product+1,f
  5685  1CB8  0877               	movf	__Umul8_16@word_mpld+1,w
  5686  1CB9  07F5               	addwf	__Umul8_16@product+1,f
  5687  1CBA                     l756:	
  5688  1CBA  3001               	movlw	1
  5689  1CBB                     u3055:	
  5690  1CBB  1003               	clrc
  5691  1CBC  0DF6               	rlf	__Umul8_16@word_mpld,f
  5692  1CBD  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5693  1CBE  3EFF               	addlw	-1
  5694  1CBF  1D03               	skipz
  5695  1CC0  2CBB               	goto	u3055
  5696  1CC1  1003               	clrc
  5697  1CC2  0CF8               	rrf	__Umul8_16@multiplier,f
  5698  1CC3  0878               	movf	__Umul8_16@multiplier,w
  5699  1CC4  1D03               	btfss	3,2
  5700  1CC5  2CB2               	goto	l2238
  5701  1CC6  0875               	movf	__Umul8_16@product+1,w
  5702  1CC7  00F1               	movwf	?__Umul8_16+1
  5703  1CC8  0874               	movf	__Umul8_16@product,w
  5704  1CC9  00F0               	movwf	?__Umul8_16
  5705  1CCA  0008               	return
  5706  1CCB                     __end_of__Umul8_16:	
  5707                           
  5708                           	psect	text11
  5709  11B0                     __ptext11:	
  5710 ;; *************** function __tdiv_to_l_ *****************
  5711 ;; Defined at:
  5712 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5713 ;; Parameters:    Size  Location     Type
  5714 ;;  f1              4    0[COMMON] float 
  5715 ;;  f2              4    4[COMMON] float 
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;  quot            4    0[BANK0 ] unsigned long 
  5718 ;;  exp1            1    5[BANK0 ] unsigned char 
  5719 ;;  cntr            1    4[BANK0 ] unsigned char 
  5720 ;; Return value:  Size  Location     Type
  5721 ;;                  4    0[COMMON] unsigned long 
  5722 ;; Registers used:
  5723 ;;		wreg, status,2, status,0
  5724 ;; Tracked objects:
  5725 ;;		On entry : 0/0
  5726 ;;		On exit  : 0/0
  5727 ;;		Unchanged: 0/0
  5728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5729 ;;      Params:         8       0       0       0       0
  5730 ;;      Locals:         0       6       0       0       0
  5731 ;;      Temps:          4       0       0       0       0
  5732 ;;      Totals:        12       6       0       0       0
  5733 ;;Total ram usage:       18 bytes
  5734 ;; Hardware stack levels used:    1
  5735 ;; This function calls:
  5736 ;;		Nothing
  5737 ;; This function is called by:
  5738 ;;		_sprintf
  5739 ;; This function uses a non-reentrant model
  5740 ;;
  5741                           
  5742                           
  5743                           ;psect for function __tdiv_to_l_
  5744  11B0                     __tdiv_to_l_:	
  5745                           
  5746                           ;incstack = 0
  5747                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5748  11B0  0870               	movf	__tdiv_to_l_@f1,w
  5749  11B1  00F8               	movwf	??__tdiv_to_l_
  5750  11B2  0871               	movf	__tdiv_to_l_@f1+1,w
  5751  11B3  00F9               	movwf	??__tdiv_to_l_+1
  5752  11B4  0872               	movf	__tdiv_to_l_@f1+2,w
  5753  11B5  00FA               	movwf	??__tdiv_to_l_+2
  5754  11B6  1003               	clrc
  5755  11B7  0D79               	rlf	??__tdiv_to_l_+1,w
  5756  11B8  0D7A               	rlf	??__tdiv_to_l_+2,w
  5757  11B9  00FB               	movwf	??__tdiv_to_l_+3
  5758  11BA  087B               	movf	??__tdiv_to_l_+3,w
  5759  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  5760  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  5761  11BD  00A5               	movwf	__tdiv_to_l_@exp1
  5762  11BE  0825               	movf	__tdiv_to_l_@exp1,w
  5763  11BF  1D03               	btfss	3,2
  5764  11C0  29CA               	goto	l2840
  5765  11C1                     l2836:	
  5766  11C1  3000               	movlw	0
  5767  11C2  00F3               	movwf	?__tdiv_to_l_+3
  5768  11C3  3000               	movlw	0
  5769  11C4  00F2               	movwf	?__tdiv_to_l_+2
  5770  11C5  3000               	movlw	0
  5771  11C6  00F1               	movwf	?__tdiv_to_l_+1
  5772  11C7  3000               	movlw	0
  5773  11C8  00F0               	movwf	?__tdiv_to_l_
  5774  11C9  0008               	return
  5775  11CA                     l2840:	
  5776  11CA  0874               	movf	__tdiv_to_l_@f2,w
  5777  11CB  00F8               	movwf	??__tdiv_to_l_
  5778  11CC  0875               	movf	__tdiv_to_l_@f2+1,w
  5779  11CD  00F9               	movwf	??__tdiv_to_l_+1
  5780  11CE  0876               	movf	__tdiv_to_l_@f2+2,w
  5781  11CF  00FA               	movwf	??__tdiv_to_l_+2
  5782  11D0  1003               	clrc
  5783  11D1  0D79               	rlf	??__tdiv_to_l_+1,w
  5784  11D2  0D7A               	rlf	??__tdiv_to_l_+2,w
  5785  11D3  00FB               	movwf	??__tdiv_to_l_+3
  5786  11D4  087B               	movf	??__tdiv_to_l_+3,w
  5787  11D5  00A4               	movwf	__tdiv_to_l_@cntr
  5788  11D6  0824               	movf	__tdiv_to_l_@cntr,w
  5789  11D7  1903               	btfsc	3,2
  5790  11D8  29C1               	goto	l2836
  5791  11D9  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5792  11DA  30FF               	movlw	255
  5793  11DB  05F0               	andwf	__tdiv_to_l_@f1,f
  5794  11DC  30FF               	movlw	255
  5795  11DD  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5796  11DE  3000               	movlw	0
  5797  11DF  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5798  11E0  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5799  11E1  30FF               	movlw	255
  5800  11E2  05F4               	andwf	__tdiv_to_l_@f2,f
  5801  11E3  30FF               	movlw	255
  5802  11E4  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5803  11E5  3000               	movlw	0
  5804  11E6  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5805  11E7  3000               	movlw	0
  5806  11E8  00A3               	movwf	__tdiv_to_l_@quot+3
  5807  11E9  3000               	movlw	0
  5808  11EA  00A2               	movwf	__tdiv_to_l_@quot+2
  5809  11EB  3000               	movlw	0
  5810  11EC  00A1               	movwf	__tdiv_to_l_@quot+1
  5811  11ED  3000               	movlw	0
  5812  11EE  00A0               	movwf	__tdiv_to_l_@quot
  5813  11EF  307F               	movlw	127
  5814  11F0  02A5               	subwf	__tdiv_to_l_@exp1,f
  5815  11F1  3098               	movlw	152
  5816  11F2  0724               	addwf	__tdiv_to_l_@cntr,w
  5817  11F3  00F8               	movwf	??__tdiv_to_l_
  5818  11F4  0878               	movf	??__tdiv_to_l_,w
  5819  11F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  5820  11F6  3018               	movlw	24
  5821  11F7  00F8               	movwf	??__tdiv_to_l_
  5822  11F8  0878               	movf	??__tdiv_to_l_,w
  5823  11F9  00A4               	movwf	__tdiv_to_l_@cntr
  5824  11FA                     l2854:	
  5825  11FA  3001               	movlw	1
  5826  11FB  00F8               	movwf	??__tdiv_to_l_
  5827  11FC                     u4585:	
  5828  11FC  1003               	clrc
  5829  11FD  0DA0               	rlf	__tdiv_to_l_@quot,f
  5830  11FE  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5831  11FF  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5832  1200  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5833  1201  0BF8               	decfsz	??__tdiv_to_l_,f
  5834  1202  29FC               	goto	u4585
  5835  1203  0876               	movf	__tdiv_to_l_@f2+2,w
  5836  1204  0272               	subwf	__tdiv_to_l_@f1+2,w
  5837  1205  1D03               	skipz
  5838  1206  2A0D               	goto	u4595
  5839  1207  0875               	movf	__tdiv_to_l_@f2+1,w
  5840  1208  0271               	subwf	__tdiv_to_l_@f1+1,w
  5841  1209  1D03               	skipz
  5842  120A  2A0D               	goto	u4595
  5843  120B  0874               	movf	__tdiv_to_l_@f2,w
  5844  120C  0270               	subwf	__tdiv_to_l_@f1,w
  5845  120D                     u4595:	
  5846  120D  1C03               	skipc
  5847  120E  2A1A               	goto	l2862
  5848  120F  0874               	movf	__tdiv_to_l_@f2,w
  5849  1210  02F0               	subwf	__tdiv_to_l_@f1,f
  5850  1211  0875               	movf	__tdiv_to_l_@f2+1,w
  5851  1212  1C03               	skipc
  5852  1213  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5853  1214  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5854  1215  0876               	movf	__tdiv_to_l_@f2+2,w
  5855  1216  1C03               	skipc
  5856  1217  0A76               	incf	__tdiv_to_l_@f2+2,w
  5857  1218  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5858  1219  1420               	bsf	__tdiv_to_l_@quot,0
  5859  121A                     l2862:	
  5860  121A  3001               	movlw	1
  5861  121B                     u4605:	
  5862  121B  1003               	clrc
  5863  121C  0DF0               	rlf	__tdiv_to_l_@f1,f
  5864  121D  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5865  121E  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5866  121F  3EFF               	addlw	-1
  5867  1220  1D03               	skipz
  5868  1221  2A1B               	goto	u4605
  5869  1222  3001               	movlw	1
  5870  1223  02A4               	subwf	__tdiv_to_l_@cntr,f
  5871  1224  1D03               	btfss	3,2
  5872  1225  29FA               	goto	l2854
  5873  1226  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5874  1227  2A3D               	goto	l2874
  5875  1228  0825               	movf	__tdiv_to_l_@exp1,w
  5876  1229  3A80               	xorlw	128
  5877  122A  3E97               	addlw	151
  5878  122B  1C03               	btfss	3,0
  5879  122C  29C1               	goto	l2836
  5880  122D                     l2872:	
  5881  122D  3001               	movlw	1
  5882  122E                     u4645:	
  5883  122E  1003               	clrc
  5884  122F  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5885  1230  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5886  1231  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5887  1232  0CA0               	rrf	__tdiv_to_l_@quot,f
  5888  1233  3EFF               	addlw	-1
  5889  1234  1D03               	skipz
  5890  1235  2A2E               	goto	u4645
  5891  1236  3001               	movlw	1
  5892  1237  00F8               	movwf	??__tdiv_to_l_
  5893  1238  0878               	movf	??__tdiv_to_l_,w
  5894  1239  07A5               	addwf	__tdiv_to_l_@exp1,f
  5895  123A  1903               	btfsc	3,2
  5896  123B  2A50               	goto	l2882
  5897  123C  2A2D               	goto	l2872
  5898  123D                     l2874:	
  5899  123D  3018               	movlw	24
  5900  123E  0225               	subwf	__tdiv_to_l_@exp1,w
  5901  123F  1803               	btfsc	3,0
  5902  1240  29C1               	goto	l2836
  5903  1241                     l495:	
  5904  1241  0825               	movf	__tdiv_to_l_@exp1,w
  5905  1242  1903               	btfsc	3,2
  5906  1243  2A50               	goto	l2882
  5907  1244  3001               	movlw	1
  5908  1245  00F8               	movwf	??__tdiv_to_l_
  5909  1246                     u4675:	
  5910  1246  1003               	clrc
  5911  1247  0DA0               	rlf	__tdiv_to_l_@quot,f
  5912  1248  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5913  1249  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5914  124A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5915  124B  0BF8               	decfsz	??__tdiv_to_l_,f
  5916  124C  2A46               	goto	u4675
  5917  124D  3001               	movlw	1
  5918  124E  02A5               	subwf	__tdiv_to_l_@exp1,f
  5919  124F  2A41               	goto	l495
  5920  1250                     l2882:	
  5921  1250  0823               	movf	__tdiv_to_l_@quot+3,w
  5922  1251  00F3               	movwf	?__tdiv_to_l_+3
  5923  1252  0822               	movf	__tdiv_to_l_@quot+2,w
  5924  1253  00F2               	movwf	?__tdiv_to_l_+2
  5925  1254  0821               	movf	__tdiv_to_l_@quot+1,w
  5926  1255  00F1               	movwf	?__tdiv_to_l_+1
  5927  1256  0820               	movf	__tdiv_to_l_@quot,w
  5928  1257  00F0               	movwf	?__tdiv_to_l_
  5929  1258  0008               	return
  5930  1259                     __end_of__tdiv_to_l_:	
  5931                           
  5932                           	psect	text12
  5933  08F8                     __ptext12:	
  5934 ;; *************** function __div_to_l_ *****************
  5935 ;; Defined at:
  5936 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5937 ;; Parameters:    Size  Location     Type
  5938 ;;  f1              4    0[COMMON] unsigned long 
  5939 ;;  f2              4    4[COMMON] unsigned long 
  5940 ;; Auto vars:     Size  Location     Type
  5941 ;;  quot            4    0[BANK0 ] unsigned long 
  5942 ;;  exp1            1    5[BANK0 ] unsigned char 
  5943 ;;  cntr            1    4[BANK0 ] unsigned char 
  5944 ;; Return value:  Size  Location     Type
  5945 ;;                  4    0[COMMON] unsigned long 
  5946 ;; Registers used:
  5947 ;;		wreg, status,2, status,0
  5948 ;; Tracked objects:
  5949 ;;		On entry : 0/0
  5950 ;;		On exit  : 0/0
  5951 ;;		Unchanged: 0/0
  5952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5953 ;;      Params:         8       0       0       0       0
  5954 ;;      Locals:         0       6       0       0       0
  5955 ;;      Temps:          1       0       0       0       0
  5956 ;;      Totals:         9       6       0       0       0
  5957 ;;Total ram usage:       15 bytes
  5958 ;; Hardware stack levels used:    1
  5959 ;; This function calls:
  5960 ;;		Nothing
  5961 ;; This function is called by:
  5962 ;;		_sprintf
  5963 ;; This function uses a non-reentrant model
  5964 ;;
  5965                           
  5966                           
  5967                           ;psect for function __div_to_l_
  5968  08F8                     __div_to_l_:	
  5969                           
  5970                           ;incstack = 0
  5971                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5972  08F8  1003               	clrc
  5973  08F9  0D72               	rlf	__div_to_l_@f1+2,w
  5974  08FA  0D73               	rlf	__div_to_l_@f1+3,w
  5975  08FB  00F8               	movwf	??__div_to_l_
  5976  08FC  0878               	movf	??__div_to_l_,w
  5977  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  5978  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  5979  08FF  00A5               	movwf	__div_to_l_@exp1
  5980  0900  0825               	movf	__div_to_l_@exp1,w
  5981  0901  1D03               	btfss	3,2
  5982  0902  290C               	goto	l2892
  5983  0903                     l2888:	
  5984  0903  3000               	movlw	0
  5985  0904  00F3               	movwf	?__div_to_l_+3
  5986  0905  3000               	movlw	0
  5987  0906  00F2               	movwf	?__div_to_l_+2
  5988  0907  3000               	movlw	0
  5989  0908  00F1               	movwf	?__div_to_l_+1
  5990  0909  3000               	movlw	0
  5991  090A  00F0               	movwf	?__div_to_l_
  5992  090B  0008               	return
  5993  090C                     l2892:	
  5994  090C  1003               	clrc
  5995  090D  0D76               	rlf	__div_to_l_@f2+2,w
  5996  090E  0D77               	rlf	__div_to_l_@f2+3,w
  5997  090F  00F8               	movwf	??__div_to_l_
  5998  0910  0878               	movf	??__div_to_l_,w
  5999  0911  00A4               	movwf	__div_to_l_@cntr
  6000  0912  0824               	movf	__div_to_l_@cntr,w
  6001  0913  1903               	btfsc	3,2
  6002  0914  2903               	goto	l2888
  6003  0915  17F2               	bsf	__div_to_l_@f1+2,7
  6004  0916  30FF               	movlw	255
  6005  0917  05F0               	andwf	__div_to_l_@f1,f
  6006  0918  30FF               	movlw	255
  6007  0919  05F1               	andwf	__div_to_l_@f1+1,f
  6008  091A  30FF               	movlw	255
  6009  091B  05F2               	andwf	__div_to_l_@f1+2,f
  6010  091C  3000               	movlw	0
  6011  091D  05F3               	andwf	__div_to_l_@f1+3,f
  6012  091E  17F6               	bsf	__div_to_l_@f2+2,7
  6013  091F  30FF               	movlw	255
  6014  0920  05F4               	andwf	__div_to_l_@f2,f
  6015  0921  30FF               	movlw	255
  6016  0922  05F5               	andwf	__div_to_l_@f2+1,f
  6017  0923  30FF               	movlw	255
  6018  0924  05F6               	andwf	__div_to_l_@f2+2,f
  6019  0925  3000               	movlw	0
  6020  0926  05F7               	andwf	__div_to_l_@f2+3,f
  6021  0927  3000               	movlw	0
  6022  0928  00A3               	movwf	__div_to_l_@quot+3
  6023  0929  3000               	movlw	0
  6024  092A  00A2               	movwf	__div_to_l_@quot+2
  6025  092B  3000               	movlw	0
  6026  092C  00A1               	movwf	__div_to_l_@quot+1
  6027  092D  3000               	movlw	0
  6028  092E  00A0               	movwf	__div_to_l_@quot
  6029  092F  307F               	movlw	127
  6030  0930  02A5               	subwf	__div_to_l_@exp1,f
  6031  0931  30A0               	movlw	160
  6032  0932  0724               	addwf	__div_to_l_@cntr,w
  6033  0933  00F8               	movwf	??__div_to_l_
  6034  0934  0878               	movf	??__div_to_l_,w
  6035  0935  02A5               	subwf	__div_to_l_@exp1,f
  6036  0936  3020               	movlw	32
  6037  0937  00F8               	movwf	??__div_to_l_
  6038  0938  0878               	movf	??__div_to_l_,w
  6039  0939  00A4               	movwf	__div_to_l_@cntr
  6040  093A                     l2906:	
  6041  093A  3001               	movlw	1
  6042  093B  00F8               	movwf	??__div_to_l_
  6043  093C                     u4715:	
  6044  093C  1003               	clrc
  6045  093D  0DA0               	rlf	__div_to_l_@quot,f
  6046  093E  0DA1               	rlf	__div_to_l_@quot+1,f
  6047  093F  0DA2               	rlf	__div_to_l_@quot+2,f
  6048  0940  0DA3               	rlf	__div_to_l_@quot+3,f
  6049  0941  0BF8               	decfsz	??__div_to_l_,f
  6050  0942  293C               	goto	u4715
  6051  0943  0877               	movf	__div_to_l_@f2+3,w
  6052  0944  0273               	subwf	__div_to_l_@f1+3,w
  6053  0945  1D03               	skipz
  6054  0946  2951               	goto	u4725
  6055  0947  0876               	movf	__div_to_l_@f2+2,w
  6056  0948  0272               	subwf	__div_to_l_@f1+2,w
  6057  0949  1D03               	skipz
  6058  094A  2951               	goto	u4725
  6059  094B  0875               	movf	__div_to_l_@f2+1,w
  6060  094C  0271               	subwf	__div_to_l_@f1+1,w
  6061  094D  1D03               	skipz
  6062  094E  2951               	goto	u4725
  6063  094F  0874               	movf	__div_to_l_@f2,w
  6064  0950  0270               	subwf	__div_to_l_@f1,w
  6065  0951                     u4725:	
  6066  0951  1C03               	skipc
  6067  0952  2962               	goto	l2914
  6068  0953  0874               	movf	__div_to_l_@f2,w
  6069  0954  02F0               	subwf	__div_to_l_@f1,f
  6070  0955  0875               	movf	__div_to_l_@f2+1,w
  6071  0956  1C03               	skipc
  6072  0957  0F75               	incfsz	__div_to_l_@f2+1,w
  6073  0958  02F1               	subwf	__div_to_l_@f1+1,f
  6074  0959  0876               	movf	__div_to_l_@f2+2,w
  6075  095A  1C03               	skipc
  6076  095B  0F76               	incfsz	__div_to_l_@f2+2,w
  6077  095C  02F2               	subwf	__div_to_l_@f1+2,f
  6078  095D  0877               	movf	__div_to_l_@f2+3,w
  6079  095E  1C03               	skipc
  6080  095F  0F77               	incfsz	__div_to_l_@f2+3,w
  6081  0960  02F3               	subwf	__div_to_l_@f1+3,f
  6082  0961  1420               	bsf	__div_to_l_@quot,0
  6083  0962                     l2914:	
  6084  0962  3001               	movlw	1
  6085  0963  00F8               	movwf	??__div_to_l_
  6086  0964                     u4735:	
  6087  0964  1003               	clrc
  6088  0965  0DF0               	rlf	__div_to_l_@f1,f
  6089  0966  0DF1               	rlf	__div_to_l_@f1+1,f
  6090  0967  0DF2               	rlf	__div_to_l_@f1+2,f
  6091  0968  0DF3               	rlf	__div_to_l_@f1+3,f
  6092  0969  0BF8               	decfsz	??__div_to_l_,f
  6093  096A  2964               	goto	u4735
  6094  096B  3001               	movlw	1
  6095  096C  02A4               	subwf	__div_to_l_@cntr,f
  6096  096D  1D03               	btfss	3,2
  6097  096E  293A               	goto	l2906
  6098  096F  1FA5               	btfss	__div_to_l_@exp1,7
  6099  0970  2986               	goto	l2926
  6100  0971  0825               	movf	__div_to_l_@exp1,w
  6101  0972  3A80               	xorlw	128
  6102  0973  3E9F               	addlw	159
  6103  0974  1C03               	btfss	3,0
  6104  0975  2903               	goto	l2888
  6105  0976                     l2924:	
  6106  0976  3001               	movlw	1
  6107  0977                     u4775:	
  6108  0977  1003               	clrc
  6109  0978  0CA3               	rrf	__div_to_l_@quot+3,f
  6110  0979  0CA2               	rrf	__div_to_l_@quot+2,f
  6111  097A  0CA1               	rrf	__div_to_l_@quot+1,f
  6112  097B  0CA0               	rrf	__div_to_l_@quot,f
  6113  097C  3EFF               	addlw	-1
  6114  097D  1D03               	skipz
  6115  097E  2977               	goto	u4775
  6116  097F  3001               	movlw	1
  6117  0980  00F8               	movwf	??__div_to_l_
  6118  0981  0878               	movf	??__div_to_l_,w
  6119  0982  07A5               	addwf	__div_to_l_@exp1,f
  6120  0983  1903               	btfsc	3,2
  6121  0984  2999               	goto	l2934
  6122  0985  2976               	goto	l2924
  6123  0986                     l2926:	
  6124  0986  3020               	movlw	32
  6125  0987  0225               	subwf	__div_to_l_@exp1,w
  6126  0988  1803               	btfsc	3,0
  6127  0989  2903               	goto	l2888
  6128  098A                     l448:	
  6129  098A  0825               	movf	__div_to_l_@exp1,w
  6130  098B  1903               	btfsc	3,2
  6131  098C  2999               	goto	l2934
  6132  098D  3001               	movlw	1
  6133  098E  00F8               	movwf	??__div_to_l_
  6134  098F                     u4805:	
  6135  098F  1003               	clrc
  6136  0990  0DA0               	rlf	__div_to_l_@quot,f
  6137  0991  0DA1               	rlf	__div_to_l_@quot+1,f
  6138  0992  0DA2               	rlf	__div_to_l_@quot+2,f
  6139  0993  0DA3               	rlf	__div_to_l_@quot+3,f
  6140  0994  0BF8               	decfsz	??__div_to_l_,f
  6141  0995  298F               	goto	u4805
  6142  0996  3001               	movlw	1
  6143  0997  02A5               	subwf	__div_to_l_@exp1,f
  6144  0998  298A               	goto	l448
  6145  0999                     l2934:	
  6146  0999  0823               	movf	__div_to_l_@quot+3,w
  6147  099A  00F3               	movwf	?__div_to_l_+3
  6148  099B  0822               	movf	__div_to_l_@quot+2,w
  6149  099C  00F2               	movwf	?__div_to_l_+2
  6150  099D  0821               	movf	__div_to_l_@quot+1,w
  6151  099E  00F1               	movwf	?__div_to_l_+1
  6152  099F  0820               	movf	__div_to_l_@quot,w
  6153  09A0  00F0               	movwf	?__div_to_l_
  6154  09A1  0008               	return
  6155  09A2                     __end_of__div_to_l_:	
  6156                           
  6157                           	psect	text13
  6158  110D                     __ptext13:	
  6159 ;; *************** function ___xxtofl *****************
  6160 ;; Defined at:
  6161 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6162 ;; Parameters:    Size  Location     Type
  6163 ;;  sign            1    wreg     unsigned char 
  6164 ;;  val             4    0[COMMON] long 
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;  sign            1    8[COMMON] unsigned char 
  6167 ;;  arg             4   10[COMMON] unsigned long 
  6168 ;;  exp             1    9[COMMON] unsigned char 
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  4    0[COMMON] unsigned char 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6178 ;;      Params:         4       0       0       0       0
  6179 ;;      Locals:         6       0       0       0       0
  6180 ;;      Temps:          4       0       0       0       0
  6181 ;;      Totals:        14       0       0       0       0
  6182 ;;Total ram usage:       14 bytes
  6183 ;; Hardware stack levels used:    1
  6184 ;; This function calls:
  6185 ;;		Nothing
  6186 ;; This function is called by:
  6187 ;;		_main
  6188 ;;		_sprintf
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           
  6193                           ;psect for function ___xxtofl
  6194  110D                     ___xxtofl:	
  6195                           
  6196                           ;incstack = 0
  6197                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6198                           ;___xxtofl@sign stored from wreg
  6199  110D  00F8               	movwf	___xxtofl@sign
  6200  110E  0878               	movf	___xxtofl@sign,w
  6201  110F  1D03               	btfss	3,2
  6202  1110  1FF3               	btfss	___xxtofl@val+3,7
  6203  1111  2922               	goto	l3084
  6204  1112  0970               	comf	___xxtofl@val,w
  6205  1113  00FA               	movwf	___xxtofl@arg
  6206  1114  0971               	comf	___xxtofl@val+1,w
  6207  1115  00FB               	movwf	___xxtofl@arg+1
  6208  1116  0972               	comf	___xxtofl@val+2,w
  6209  1117  00FC               	movwf	___xxtofl@arg+2
  6210  1118  0973               	comf	___xxtofl@val+3,w
  6211  1119  00FD               	movwf	___xxtofl@arg+3
  6212  111A  0AFA               	incf	___xxtofl@arg,f
  6213  111B  1903               	skipnz
  6214  111C  0AFB               	incf	___xxtofl@arg+1,f
  6215  111D  1903               	skipnz
  6216  111E  0AFC               	incf	___xxtofl@arg+2,f
  6217  111F  1903               	skipnz
  6218  1120  0AFD               	incf	___xxtofl@arg+3,f
  6219  1121  292A               	goto	l728
  6220  1122                     l3084:	
  6221  1122  0873               	movf	___xxtofl@val+3,w
  6222  1123  00FD               	movwf	___xxtofl@arg+3
  6223  1124  0872               	movf	___xxtofl@val+2,w
  6224  1125  00FC               	movwf	___xxtofl@arg+2
  6225  1126  0871               	movf	___xxtofl@val+1,w
  6226  1127  00FB               	movwf	___xxtofl@arg+1
  6227  1128  0870               	movf	___xxtofl@val,w
  6228  1129  00FA               	movwf	___xxtofl@arg
  6229  112A                     l728:	
  6230  112A  0873               	movf	___xxtofl@val+3,w
  6231  112B  0472               	iorwf	___xxtofl@val+2,w
  6232  112C  0471               	iorwf	___xxtofl@val+1,w
  6233  112D  0470               	iorwf	___xxtofl@val,w
  6234  112E  1D03               	skipz
  6235  112F  2939               	goto	l3090
  6236  1130  3000               	movlw	0
  6237  1131  00F3               	movwf	?___xxtofl+3
  6238  1132  3000               	movlw	0
  6239  1133  00F2               	movwf	?___xxtofl+2
  6240  1134  3000               	movlw	0
  6241  1135  00F1               	movwf	?___xxtofl+1
  6242  1136  3000               	movlw	0
  6243  1137  00F0               	movwf	?___xxtofl
  6244  1138  0008               	return
  6245  1139                     l3090:	
  6246  1139  3096               	movlw	150
  6247  113A  00F4               	movwf	??___xxtofl
  6248  113B  0874               	movf	??___xxtofl,w
  6249  113C  00F9               	movwf	___xxtofl@exp
  6250  113D                     l3094:	
  6251  113D  30FE               	movlw	254
  6252  113E  057D               	andwf	___xxtofl@arg+3,w
  6253  113F  1903               	btfsc	3,2
  6254  1140  296A               	goto	l734
  6255  1141  3001               	movlw	1
  6256  1142  00F4               	movwf	??___xxtofl
  6257  1143  0874               	movf	??___xxtofl,w
  6258  1144  07F9               	addwf	___xxtofl@exp,f
  6259  1145  3001               	movlw	1
  6260  1146                     u5235:	
  6261  1146  1003               	clrc
  6262  1147  0CFD               	rrf	___xxtofl@arg+3,f
  6263  1148  0CFC               	rrf	___xxtofl@arg+2,f
  6264  1149  0CFB               	rrf	___xxtofl@arg+1,f
  6265  114A  0CFA               	rrf	___xxtofl@arg,f
  6266  114B  3EFF               	addlw	-1
  6267  114C  1D03               	skipz
  6268  114D  2946               	goto	u5235
  6269  114E  293D               	goto	l3094
  6270  114F                     l3096:	
  6271  114F  3001               	movlw	1
  6272  1150  00F4               	movwf	??___xxtofl
  6273  1151  0874               	movf	??___xxtofl,w
  6274  1152  07F9               	addwf	___xxtofl@exp,f
  6275  1153  3001               	movlw	1
  6276  1154  07FA               	addwf	___xxtofl@arg,f
  6277  1155  3000               	movlw	0
  6278  1156  1803               	skipnc
  6279  1157  3001               	movlw	1
  6280  1158  07FB               	addwf	___xxtofl@arg+1,f
  6281  1159  3000               	movlw	0
  6282  115A  1803               	skipnc
  6283  115B  3001               	movlw	1
  6284  115C  07FC               	addwf	___xxtofl@arg+2,f
  6285  115D  3000               	movlw	0
  6286  115E  1803               	skipnc
  6287  115F  3001               	movlw	1
  6288  1160  07FD               	addwf	___xxtofl@arg+3,f
  6289  1161  3001               	movlw	1
  6290  1162                     u5255:	
  6291  1162  1003               	clrc
  6292  1163  0CFD               	rrf	___xxtofl@arg+3,f
  6293  1164  0CFC               	rrf	___xxtofl@arg+2,f
  6294  1165  0CFB               	rrf	___xxtofl@arg+1,f
  6295  1166  0CFA               	rrf	___xxtofl@arg,f
  6296  1167  3EFF               	addlw	-1
  6297  1168  1D03               	skipz
  6298  1169  2962               	goto	u5255
  6299  116A                     l734:	
  6300  116A  30FF               	movlw	255
  6301  116B  057D               	andwf	___xxtofl@arg+3,w
  6302  116C  1903               	btfsc	3,2
  6303  116D  297E               	goto	l3104
  6304  116E  294F               	goto	l3096
  6305  116F                     l3106:	
  6306  116F  3002               	movlw	2
  6307  1170  0279               	subwf	___xxtofl@exp,w
  6308  1171  1C03               	btfss	3,0
  6309  1172  2980               	goto	l741
  6310  1173  3001               	movlw	1
  6311  1174  02F9               	subwf	___xxtofl@exp,f
  6312  1175  3001               	movlw	1
  6313  1176  00F4               	movwf	??___xxtofl
  6314  1177                     u5275:	
  6315  1177  1003               	clrc
  6316  1178  0DFA               	rlf	___xxtofl@arg,f
  6317  1179  0DFB               	rlf	___xxtofl@arg+1,f
  6318  117A  0DFC               	rlf	___xxtofl@arg+2,f
  6319  117B  0DFD               	rlf	___xxtofl@arg+3,f
  6320  117C  0BF4               	decfsz	??___xxtofl,f
  6321  117D  2977               	goto	u5275
  6322  117E                     l3104:	
  6323  117E  1FFC               	btfss	___xxtofl@arg+2,7
  6324  117F  296F               	goto	l3106
  6325  1180                     l741:	
  6326  1180  1879               	btfsc	___xxtofl@exp,0
  6327  1181  298A               	goto	l742
  6328  1182  30FF               	movlw	255
  6329  1183  05FA               	andwf	___xxtofl@arg,f
  6330  1184  30FF               	movlw	255
  6331  1185  05FB               	andwf	___xxtofl@arg+1,f
  6332  1186  307F               	movlw	127
  6333  1187  05FC               	andwf	___xxtofl@arg+2,f
  6334  1188  30FF               	movlw	255
  6335  1189  05FD               	andwf	___xxtofl@arg+3,f
  6336  118A                     l742:	
  6337  118A  1003               	clrc
  6338  118B  0CF9               	rrf	___xxtofl@exp,f
  6339  118C  0879               	movf	___xxtofl@exp,w
  6340  118D  00F4               	movwf	??___xxtofl
  6341  118E  01F5               	clrf	??___xxtofl+1
  6342  118F  01F6               	clrf	??___xxtofl+2
  6343  1190  01F7               	clrf	??___xxtofl+3
  6344  1191  3018               	movlw	24
  6345  1192                     u5315:	
  6346  1192  1003               	clrc
  6347  1193  0DF4               	rlf	??___xxtofl,f
  6348  1194  0DF5               	rlf	??___xxtofl+1,f
  6349  1195  0DF6               	rlf	??___xxtofl+2,f
  6350  1196  0DF7               	rlf	??___xxtofl+3,f
  6351  1197  3EFF               	addlw	-1
  6352  1198  1D03               	skipz
  6353  1199  2992               	goto	u5315
  6354  119A  0874               	movf	??___xxtofl,w
  6355  119B  04FA               	iorwf	___xxtofl@arg,f
  6356  119C  0875               	movf	??___xxtofl+1,w
  6357  119D  04FB               	iorwf	___xxtofl@arg+1,f
  6358  119E  0876               	movf	??___xxtofl+2,w
  6359  119F  04FC               	iorwf	___xxtofl@arg+2,f
  6360  11A0  0877               	movf	??___xxtofl+3,w
  6361  11A1  04FD               	iorwf	___xxtofl@arg+3,f
  6362  11A2  0878               	movf	___xxtofl@sign,w
  6363  11A3  1D03               	btfss	3,2
  6364  11A4  1FF3               	btfss	___xxtofl@val+3,7
  6365  11A5  29A7               	goto	l3118
  6366  11A6  17FD               	bsf	___xxtofl@arg+3,7
  6367  11A7                     l3118:	
  6368  11A7  087D               	movf	___xxtofl@arg+3,w
  6369  11A8  00F3               	movwf	?___xxtofl+3
  6370  11A9  087C               	movf	___xxtofl@arg+2,w
  6371  11AA  00F2               	movwf	?___xxtofl+2
  6372  11AB  087B               	movf	___xxtofl@arg+1,w
  6373  11AC  00F1               	movwf	?___xxtofl+1
  6374  11AD  087A               	movf	___xxtofl@arg,w
  6375  11AE  00F0               	movwf	?___xxtofl
  6376  11AF  0008               	return
  6377  11B0                     __end_of___xxtofl:	
  6378                           
  6379                           	psect	text14
  6380  1C65                     __ptext14:	
  6381 ;; *************** function ___wmul *****************
  6382 ;; Defined at:
  6383 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6384 ;; Parameters:    Size  Location     Type
  6385 ;;  multiplier      2    0[COMMON] unsigned int 
  6386 ;;  multiplicand    2    2[COMMON] unsigned int 
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;  product         2    4[COMMON] unsigned int 
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  2    0[COMMON] unsigned int 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6398 ;;      Params:         4       0       0       0       0
  6399 ;;      Locals:         2       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0
  6401 ;;      Totals:         6       0       0       0       0
  6402 ;;Total ram usage:        6 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; This function calls:
  6405 ;;		Nothing
  6406 ;; This function is called by:
  6407 ;;		_sprintf
  6408 ;; This function uses a non-reentrant model
  6409 ;;
  6410                           
  6411                           
  6412                           ;psect for function ___wmul
  6413  1C65                     ___wmul:	
  6414                           
  6415                           ;incstack = 0
  6416                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6417  1C65  01F4               	clrf	___wmul@product
  6418  1C66  01F5               	clrf	___wmul@product+1
  6419  1C67                     l2940:	
  6420  1C67  1C70               	btfss	___wmul@multiplier,0
  6421  1C68  2C6F               	goto	l267
  6422  1C69  0872               	movf	___wmul@multiplicand,w
  6423  1C6A  07F4               	addwf	___wmul@product,f
  6424  1C6B  1803               	skipnc
  6425  1C6C  0AF5               	incf	___wmul@product+1,f
  6426  1C6D  0873               	movf	___wmul@multiplicand+1,w
  6427  1C6E  07F5               	addwf	___wmul@product+1,f
  6428  1C6F                     l267:	
  6429  1C6F  3001               	movlw	1
  6430  1C70                     u4835:	
  6431  1C70  1003               	clrc
  6432  1C71  0DF2               	rlf	___wmul@multiplicand,f
  6433  1C72  0DF3               	rlf	___wmul@multiplicand+1,f
  6434  1C73  3EFF               	addlw	-1
  6435  1C74  1D03               	skipz
  6436  1C75  2C70               	goto	u4835
  6437  1C76  3001               	movlw	1
  6438  1C77                     u4845:	
  6439  1C77  1003               	clrc
  6440  1C78  0CF1               	rrf	___wmul@multiplier+1,f
  6441  1C79  0CF0               	rrf	___wmul@multiplier,f
  6442  1C7A  3EFF               	addlw	-1
  6443  1C7B  1D03               	skipz
  6444  1C7C  2C77               	goto	u4845
  6445  1C7D  0870               	movf	___wmul@multiplier,w
  6446  1C7E  0471               	iorwf	___wmul@multiplier+1,w
  6447  1C7F  1D03               	btfss	3,2
  6448  1C80  2C67               	goto	l2940
  6449  1C81  0875               	movf	___wmul@product+1,w
  6450  1C82  00F1               	movwf	?___wmul+1
  6451  1C83  0874               	movf	___wmul@product,w
  6452  1C84  00F0               	movwf	?___wmul
  6453  1C85  0008               	return
  6454  1C86                     __end_of___wmul:	
  6455                           
  6456                           	psect	text15
  6457  1E4E                     __ptext15:	
  6458 ;; *************** function ___llmod *****************
  6459 ;; Defined at:
  6460 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;  divisor         4    0[COMMON] unsigned long 
  6463 ;;  dividend        4    4[COMMON] unsigned long 
  6464 ;; Auto vars:     Size  Location     Type
  6465 ;;  counter         1    9[COMMON] unsigned char 
  6466 ;; Return value:  Size  Location     Type
  6467 ;;                  4    0[COMMON] unsigned long 
  6468 ;; Registers used:
  6469 ;;		wreg, status,2, status,0
  6470 ;; Tracked objects:
  6471 ;;		On entry : 0/0
  6472 ;;		On exit  : 0/0
  6473 ;;		Unchanged: 0/0
  6474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6475 ;;      Params:         8       0       0       0       0
  6476 ;;      Locals:         1       0       0       0       0
  6477 ;;      Temps:          1       0       0       0       0
  6478 ;;      Totals:        10       0       0       0       0
  6479 ;;Total ram usage:       10 bytes
  6480 ;; Hardware stack levels used:    1
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_sprintf
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           
  6489                           ;psect for function ___llmod
  6490  1E4E                     ___llmod:	
  6491                           
  6492                           ;incstack = 0
  6493                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6494  1E4E  0873               	movf	___llmod@divisor+3,w
  6495  1E4F  0472               	iorwf	___llmod@divisor+2,w
  6496  1E50  0471               	iorwf	___llmod@divisor+1,w
  6497  1E51  0470               	iorwf	___llmod@divisor,w
  6498  1E52  1903               	skipnz
  6499  1E53  2E91               	goto	l3068
  6500  1E54  01F9               	clrf	___llmod@counter
  6501  1E55  0AF9               	incf	___llmod@counter,f
  6502  1E56                     l3058:	
  6503  1E56  1BF3               	btfsc	___llmod@divisor+3,7
  6504  1E57  2E66               	goto	l3060
  6505  1E58  3001               	movlw	1
  6506  1E59  00F8               	movwf	??___llmod
  6507  1E5A                     u5155:	
  6508  1E5A  1003               	clrc
  6509  1E5B  0DF0               	rlf	___llmod@divisor,f
  6510  1E5C  0DF1               	rlf	___llmod@divisor+1,f
  6511  1E5D  0DF2               	rlf	___llmod@divisor+2,f
  6512  1E5E  0DF3               	rlf	___llmod@divisor+3,f
  6513  1E5F  0BF8               	decfsz	??___llmod,f
  6514  1E60  2E5A               	goto	u5155
  6515  1E61  3001               	movlw	1
  6516  1E62  00F8               	movwf	??___llmod
  6517  1E63  0878               	movf	??___llmod,w
  6518  1E64  07F9               	addwf	___llmod@counter,f
  6519  1E65  2E56               	goto	l3058
  6520  1E66                     l3060:	
  6521  1E66  0873               	movf	___llmod@divisor+3,w
  6522  1E67  0277               	subwf	___llmod@dividend+3,w
  6523  1E68  1D03               	skipz
  6524  1E69  2E74               	goto	u5175
  6525  1E6A  0872               	movf	___llmod@divisor+2,w
  6526  1E6B  0276               	subwf	___llmod@dividend+2,w
  6527  1E6C  1D03               	skipz
  6528  1E6D  2E74               	goto	u5175
  6529  1E6E  0871               	movf	___llmod@divisor+1,w
  6530  1E6F  0275               	subwf	___llmod@dividend+1,w
  6531  1E70  1D03               	skipz
  6532  1E71  2E74               	goto	u5175
  6533  1E72  0870               	movf	___llmod@divisor,w
  6534  1E73  0274               	subwf	___llmod@dividend,w
  6535  1E74                     u5175:	
  6536  1E74  1C03               	skipc
  6537  1E75  2E84               	goto	l3064
  6538  1E76  0870               	movf	___llmod@divisor,w
  6539  1E77  02F4               	subwf	___llmod@dividend,f
  6540  1E78  0871               	movf	___llmod@divisor+1,w
  6541  1E79  1C03               	skipc
  6542  1E7A  0F71               	incfsz	___llmod@divisor+1,w
  6543  1E7B  02F5               	subwf	___llmod@dividend+1,f
  6544  1E7C  0872               	movf	___llmod@divisor+2,w
  6545  1E7D  1C03               	skipc
  6546  1E7E  0F72               	incfsz	___llmod@divisor+2,w
  6547  1E7F  02F6               	subwf	___llmod@dividend+2,f
  6548  1E80  0873               	movf	___llmod@divisor+3,w
  6549  1E81  1C03               	skipc
  6550  1E82  0F73               	incfsz	___llmod@divisor+3,w
  6551  1E83  02F7               	subwf	___llmod@dividend+3,f
  6552  1E84                     l3064:	
  6553  1E84  3001               	movlw	1
  6554  1E85                     u5185:	
  6555  1E85  1003               	clrc
  6556  1E86  0CF3               	rrf	___llmod@divisor+3,f
  6557  1E87  0CF2               	rrf	___llmod@divisor+2,f
  6558  1E88  0CF1               	rrf	___llmod@divisor+1,f
  6559  1E89  0CF0               	rrf	___llmod@divisor,f
  6560  1E8A  3EFF               	addlw	-1
  6561  1E8B  1D03               	skipz
  6562  1E8C  2E85               	goto	u5185
  6563  1E8D  3001               	movlw	1
  6564  1E8E  02F9               	subwf	___llmod@counter,f
  6565  1E8F  1D03               	btfss	3,2
  6566  1E90  2E66               	goto	l3060
  6567  1E91                     l3068:	
  6568  1E91  0877               	movf	___llmod@dividend+3,w
  6569  1E92  00F3               	movwf	?___llmod+3
  6570  1E93  0876               	movf	___llmod@dividend+2,w
  6571  1E94  00F2               	movwf	?___llmod+2
  6572  1E95  0875               	movf	___llmod@dividend+1,w
  6573  1E96  00F1               	movwf	?___llmod+1
  6574  1E97  0874               	movf	___llmod@dividend,w
  6575  1E98  00F0               	movwf	?___llmod
  6576  1E99  0008               	return
  6577  1E9A                     __end_of___llmod:	
  6578                           
  6579                           	psect	text16
  6580  1FA2                     __ptext16:	
  6581 ;; *************** function ___lldiv *****************
  6582 ;; Defined at:
  6583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6584 ;; Parameters:    Size  Location     Type
  6585 ;;  divisor         4    0[COMMON] unsigned long 
  6586 ;;  dividend        4    4[COMMON] unsigned long 
  6587 ;; Auto vars:     Size  Location     Type
  6588 ;;  quotient        4    9[COMMON] unsigned long 
  6589 ;;  counter         1   13[COMMON] unsigned char 
  6590 ;; Return value:  Size  Location     Type
  6591 ;;                  4    0[COMMON] unsigned long 
  6592 ;; Registers used:
  6593 ;;		wreg, status,2, status,0
  6594 ;; Tracked objects:
  6595 ;;		On entry : 0/0
  6596 ;;		On exit  : 0/0
  6597 ;;		Unchanged: 0/0
  6598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6599 ;;      Params:         8       0       0       0       0
  6600 ;;      Locals:         5       0       0       0       0
  6601 ;;      Temps:          1       0       0       0       0
  6602 ;;      Totals:        14       0       0       0       0
  6603 ;;Total ram usage:       14 bytes
  6604 ;; Hardware stack levels used:    1
  6605 ;; This function calls:
  6606 ;;		Nothing
  6607 ;; This function is called by:
  6608 ;;		_sprintf
  6609 ;; This function uses a non-reentrant model
  6610 ;;
  6611                           
  6612                           
  6613                           ;psect for function ___lldiv
  6614  1FA2                     ___lldiv:	
  6615                           
  6616                           ;incstack = 0
  6617                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6618  1FA2  3000               	movlw	0
  6619  1FA3  00FC               	movwf	___lldiv@quotient+3
  6620  1FA4  3000               	movlw	0
  6621  1FA5  00FB               	movwf	___lldiv@quotient+2
  6622  1FA6  3000               	movlw	0
  6623  1FA7  00FA               	movwf	___lldiv@quotient+1
  6624  1FA8  3000               	movlw	0
  6625  1FA9  00F9               	movwf	___lldiv@quotient
  6626  1FAA  0873               	movf	___lldiv@divisor+3,w
  6627  1FAB  0472               	iorwf	___lldiv@divisor+2,w
  6628  1FAC  0471               	iorwf	___lldiv@divisor+1,w
  6629  1FAD  0470               	iorwf	___lldiv@divisor,w
  6630  1FAE  1903               	skipnz
  6631  1FAF  2FF7               	goto	l2972
  6632  1FB0  01FD               	clrf	___lldiv@counter
  6633  1FB1  0AFD               	incf	___lldiv@counter,f
  6634  1FB2                     l2958:	
  6635  1FB2  1BF3               	btfsc	___lldiv@divisor+3,7
  6636  1FB3  2FC2               	goto	l2960
  6637  1FB4  3001               	movlw	1
  6638  1FB5  00F8               	movwf	??___lldiv
  6639  1FB6                     u4875:	
  6640  1FB6  1003               	clrc
  6641  1FB7  0DF0               	rlf	___lldiv@divisor,f
  6642  1FB8  0DF1               	rlf	___lldiv@divisor+1,f
  6643  1FB9  0DF2               	rlf	___lldiv@divisor+2,f
  6644  1FBA  0DF3               	rlf	___lldiv@divisor+3,f
  6645  1FBB  0BF8               	decfsz	??___lldiv,f
  6646  1FBC  2FB6               	goto	u4875
  6647  1FBD  3001               	movlw	1
  6648  1FBE  00F8               	movwf	??___lldiv
  6649  1FBF  0878               	movf	??___lldiv,w
  6650  1FC0  07FD               	addwf	___lldiv@counter,f
  6651  1FC1  2FB2               	goto	l2958
  6652  1FC2                     l2960:	
  6653  1FC2  3001               	movlw	1
  6654  1FC3  00F8               	movwf	??___lldiv
  6655  1FC4                     u4895:	
  6656  1FC4  1003               	clrc
  6657  1FC5  0DF9               	rlf	___lldiv@quotient,f
  6658  1FC6  0DFA               	rlf	___lldiv@quotient+1,f
  6659  1FC7  0DFB               	rlf	___lldiv@quotient+2,f
  6660  1FC8  0DFC               	rlf	___lldiv@quotient+3,f
  6661  1FC9  0BF8               	decfsz	??___lldiv,f
  6662  1FCA  2FC4               	goto	u4895
  6663  1FCB  0873               	movf	___lldiv@divisor+3,w
  6664  1FCC  0277               	subwf	___lldiv@dividend+3,w
  6665  1FCD  1D03               	skipz
  6666  1FCE  2FD9               	goto	u4905
  6667  1FCF  0872               	movf	___lldiv@divisor+2,w
  6668  1FD0  0276               	subwf	___lldiv@dividend+2,w
  6669  1FD1  1D03               	skipz
  6670  1FD2  2FD9               	goto	u4905
  6671  1FD3  0871               	movf	___lldiv@divisor+1,w
  6672  1FD4  0275               	subwf	___lldiv@dividend+1,w
  6673  1FD5  1D03               	skipz
  6674  1FD6  2FD9               	goto	u4905
  6675  1FD7  0870               	movf	___lldiv@divisor,w
  6676  1FD8  0274               	subwf	___lldiv@dividend,w
  6677  1FD9                     u4905:	
  6678  1FD9  1C03               	skipc
  6679  1FDA  2FEA               	goto	l2968
  6680  1FDB  0870               	movf	___lldiv@divisor,w
  6681  1FDC  02F4               	subwf	___lldiv@dividend,f
  6682  1FDD  0871               	movf	___lldiv@divisor+1,w
  6683  1FDE  1C03               	skipc
  6684  1FDF  0F71               	incfsz	___lldiv@divisor+1,w
  6685  1FE0  02F5               	subwf	___lldiv@dividend+1,f
  6686  1FE1  0872               	movf	___lldiv@divisor+2,w
  6687  1FE2  1C03               	skipc
  6688  1FE3  0F72               	incfsz	___lldiv@divisor+2,w
  6689  1FE4  02F6               	subwf	___lldiv@dividend+2,f
  6690  1FE5  0873               	movf	___lldiv@divisor+3,w
  6691  1FE6  1C03               	skipc
  6692  1FE7  0F73               	incfsz	___lldiv@divisor+3,w
  6693  1FE8  02F7               	subwf	___lldiv@dividend+3,f
  6694  1FE9  1479               	bsf	___lldiv@quotient,0
  6695  1FEA                     l2968:	
  6696  1FEA  3001               	movlw	1
  6697  1FEB                     u4915:	
  6698  1FEB  1003               	clrc
  6699  1FEC  0CF3               	rrf	___lldiv@divisor+3,f
  6700  1FED  0CF2               	rrf	___lldiv@divisor+2,f
  6701  1FEE  0CF1               	rrf	___lldiv@divisor+1,f
  6702  1FEF  0CF0               	rrf	___lldiv@divisor,f
  6703  1FF0  3EFF               	addlw	-1
  6704  1FF1  1D03               	skipz
  6705  1FF2  2FEB               	goto	u4915
  6706  1FF3  3001               	movlw	1
  6707  1FF4  02FD               	subwf	___lldiv@counter,f
  6708  1FF5  1D03               	btfss	3,2
  6709  1FF6  2FC2               	goto	l2960
  6710  1FF7                     l2972:	
  6711  1FF7  087C               	movf	___lldiv@quotient+3,w
  6712  1FF8  00F3               	movwf	?___lldiv+3
  6713  1FF9  087B               	movf	___lldiv@quotient+2,w
  6714  1FFA  00F2               	movwf	?___lldiv+2
  6715  1FFB  087A               	movf	___lldiv@quotient+1,w
  6716  1FFC  00F1               	movwf	?___lldiv+1
  6717  1FFD  0879               	movf	___lldiv@quotient,w
  6718  1FFE  00F0               	movwf	?___lldiv
  6719  1FFF  0008               	return
  6720  2000                     __end_of___lldiv:	
  6721                           
  6722                           	psect	text17
  6723  100D                     __ptext17:	
  6724 ;; *************** function ___fltol *****************
  6725 ;; Defined at:
  6726 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6727 ;; Parameters:    Size  Location     Type
  6728 ;;  f1              4   49[BANK0 ] unsigned long 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  exp1            1   59[BANK0 ] unsigned char 
  6731 ;;  sign1           1   58[BANK0 ] unsigned char 
  6732 ;; Return value:  Size  Location     Type
  6733 ;;                  4   49[BANK0 ] long 
  6734 ;; Registers used:
  6735 ;;		wreg, status,2, status,0
  6736 ;; Tracked objects:
  6737 ;;		On entry : 0/0
  6738 ;;		On exit  : 0/0
  6739 ;;		Unchanged: 0/0
  6740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6741 ;;      Params:         0       4       0       0       0
  6742 ;;      Locals:         0       2       0       0       0
  6743 ;;      Temps:          0       5       0       0       0
  6744 ;;      Totals:         0      11       0       0       0
  6745 ;;Total ram usage:       11 bytes
  6746 ;; Hardware stack levels used:    1
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_sprintf
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function ___fltol
  6756  100D                     ___fltol:	
  6757                           
  6758                           ;incstack = 0
  6759                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6760  100D  1003               	clrc
  6761  100E  1283               	bcf	3,5	;RP0=0, select bank0
  6762  100F  1303               	bcf	3,6	;RP1=0, select bank0
  6763  1010  0D53               	rlf	___fltol@f1+2,w
  6764  1011  0D54               	rlf	___fltol@f1+3,w
  6765  1012  00D5               	movwf	??___fltol
  6766  1013  0855               	movf	??___fltol,w
  6767  1014  00DB               	movwf	___fltol@exp1
  6768  1015  085B               	movf	___fltol@exp1,w
  6769  1016  1D03               	btfss	3,2
  6770  1017  2821               	goto	l3022
  6771  1018                     l3018:	
  6772  1018  3000               	movlw	0
  6773  1019  00D4               	movwf	?___fltol+3
  6774  101A  3000               	movlw	0
  6775  101B  00D3               	movwf	?___fltol+2
  6776  101C  3000               	movlw	0
  6777  101D  00D2               	movwf	?___fltol+1
  6778  101E  3000               	movlw	0
  6779  101F  00D1               	movwf	?___fltol
  6780  1020  0008               	return
  6781  1021                     l3022:	
  6782  1021  0851               	movf	___fltol@f1,w
  6783  1022  00D5               	movwf	??___fltol
  6784  1023  0852               	movf	___fltol@f1+1,w
  6785  1024  00D6               	movwf	??___fltol+1
  6786  1025  0853               	movf	___fltol@f1+2,w
  6787  1026  00D7               	movwf	??___fltol+2
  6788  1027  0854               	movf	___fltol@f1+3,w
  6789  1028  00D8               	movwf	??___fltol+3
  6790  1029  301F               	movlw	31
  6791  102A                     u5055:	
  6792  102A  1003               	clrc
  6793  102B  0CD8               	rrf	??___fltol+3,f
  6794  102C  0CD7               	rrf	??___fltol+2,f
  6795  102D  0CD6               	rrf	??___fltol+1,f
  6796  102E  0CD5               	rrf	??___fltol,f
  6797  102F  3EFF               	addlw	-1
  6798  1030  1D03               	skipz
  6799  1031  282A               	goto	u5055
  6800  1032  0855               	movf	??___fltol,w
  6801  1033  00D9               	movwf	??___fltol+4
  6802  1034  0859               	movf	??___fltol+4,w
  6803  1035  00DA               	movwf	___fltol@sign1
  6804  1036  17D3               	bsf	___fltol@f1+2,7
  6805  1037  30FF               	movlw	255
  6806  1038  05D1               	andwf	___fltol@f1,f
  6807  1039  30FF               	movlw	255
  6808  103A  05D2               	andwf	___fltol@f1+1,f
  6809  103B  30FF               	movlw	255
  6810  103C  05D3               	andwf	___fltol@f1+2,f
  6811  103D  3000               	movlw	0
  6812  103E  05D4               	andwf	___fltol@f1+3,f
  6813  103F  3096               	movlw	150
  6814  1040  02DB               	subwf	___fltol@exp1,f
  6815  1041  1FDB               	btfss	___fltol@exp1,7
  6816  1042  2858               	goto	l3040
  6817  1043  085B               	movf	___fltol@exp1,w
  6818  1044  3A80               	xorlw	128
  6819  1045  3E97               	addlw	151
  6820  1046  1C03               	btfss	3,0
  6821  1047  2818               	goto	l3018
  6822  1048                     l3038:	
  6823  1048  3001               	movlw	1
  6824  1049                     u5085:	
  6825  1049  1003               	clrc
  6826  104A  0CD4               	rrf	___fltol@f1+3,f
  6827  104B  0CD3               	rrf	___fltol@f1+2,f
  6828  104C  0CD2               	rrf	___fltol@f1+1,f
  6829  104D  0CD1               	rrf	___fltol@f1,f
  6830  104E  3EFF               	addlw	-1
  6831  104F  1D03               	skipz
  6832  1050  2849               	goto	u5085
  6833  1051  3001               	movlw	1
  6834  1052  00D5               	movwf	??___fltol
  6835  1053  0855               	movf	??___fltol,w
  6836  1054  07DB               	addwf	___fltol@exp1,f
  6837  1055  1903               	btfsc	3,2
  6838  1056  286B               	goto	l3048
  6839  1057  2848               	goto	l3038
  6840  1058                     l3040:	
  6841  1058  3020               	movlw	32
  6842  1059  025B               	subwf	___fltol@exp1,w
  6843  105A  1803               	btfsc	3,0
  6844  105B  2818               	goto	l3018
  6845  105C                     l477:	
  6846  105C  085B               	movf	___fltol@exp1,w
  6847  105D  1903               	btfsc	3,2
  6848  105E  286B               	goto	l3048
  6849  105F  3001               	movlw	1
  6850  1060  00D5               	movwf	??___fltol
  6851  1061                     u5115:	
  6852  1061  1003               	clrc
  6853  1062  0DD1               	rlf	___fltol@f1,f
  6854  1063  0DD2               	rlf	___fltol@f1+1,f
  6855  1064  0DD3               	rlf	___fltol@f1+2,f
  6856  1065  0DD4               	rlf	___fltol@f1+3,f
  6857  1066  0BD5               	decfsz	??___fltol,f
  6858  1067  2861               	goto	u5115
  6859  1068  3001               	movlw	1
  6860  1069  02DB               	subwf	___fltol@exp1,f
  6861  106A  285C               	goto	l477
  6862  106B                     l3048:	
  6863  106B  085A               	movf	___fltol@sign1,w
  6864  106C  1903               	btfsc	3,2
  6865  106D  0008               	return
  6866  106E  09D1               	comf	___fltol@f1,f
  6867  106F  09D2               	comf	___fltol@f1+1,f
  6868  1070  09D3               	comf	___fltol@f1+2,f
  6869  1071  09D4               	comf	___fltol@f1+3,f
  6870  1072  0AD1               	incf	___fltol@f1,f
  6871  1073  1903               	skipnz
  6872  1074  0AD2               	incf	___fltol@f1+1,f
  6873  1075  1903               	skipnz
  6874  1076  0AD3               	incf	___fltol@f1+2,f
  6875  1077  1903               	skipnz
  6876  1078  0AD4               	incf	___fltol@f1+3,f
  6877  1079  0008               	return
  6878  107A                     __end_of___fltol:	
  6879                           
  6880                           	psect	text18
  6881  1C86                     __ptext18:	
  6882 ;; *************** function ___flsub *****************
  6883 ;; Defined at:
  6884 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6885 ;; Parameters:    Size  Location     Type
  6886 ;;  a               4   70[BANK0 ] long 
  6887 ;;  b               4   74[BANK0 ] long 
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  4   70[BANK0 ] long 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6899 ;;      Params:         0       8       0       0       0
  6900 ;;      Locals:         0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0
  6902 ;;      Totals:         0       8       0       0       0
  6903 ;;Total ram usage:        8 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    1
  6906 ;; This function calls:
  6907 ;;		___fladd
  6908 ;; This function is called by:
  6909 ;;		_sprintf
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           
  6914                           ;psect for function ___flsub
  6915  1C86                     ___flsub:	
  6916                           
  6917                           ;incstack = 0
  6918                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6919  1C86  3080               	movlw	128
  6920  1C87  1283               	bcf	3,5	;RP0=0, select bank0
  6921  1C88  1303               	bcf	3,6	;RP1=0, select bank0
  6922  1C89  06E9               	xorwf	___flsub@a+3,f
  6923  1C8A  086D               	movf	___flsub@b+3,w
  6924  1C8B  00D5               	movwf	___fladd@b+3
  6925  1C8C  086C               	movf	___flsub@b+2,w
  6926  1C8D  00D4               	movwf	___fladd@b+2
  6927  1C8E  086B               	movf	___flsub@b+1,w
  6928  1C8F  00D3               	movwf	___fladd@b+1
  6929  1C90  086A               	movf	___flsub@b,w
  6930  1C91  00D2               	movwf	___fladd@b
  6931  1C92  0869               	movf	___flsub@a+3,w
  6932  1C93  00D9               	movwf	___fladd@a+3
  6933  1C94  0868               	movf	___flsub@a+2,w
  6934  1C95  00D8               	movwf	___fladd@a+2
  6935  1C96  0867               	movf	___flsub@a+1,w
  6936  1C97  00D7               	movwf	___fladd@a+1
  6937  1C98  0866               	movf	___flsub@a,w
  6938  1C99  00D6               	movwf	___fladd@a
  6939  1C9A  160A  118A  25D1   	fcall	___fladd
  6940  1C9D  1283               	bcf	3,5	;RP0=0, select bank0
  6941  1C9E  1303               	bcf	3,6	;RP1=0, select bank0
  6942  1C9F  0855               	movf	?___fladd+3,w
  6943  1CA0  00E9               	movwf	?___flsub+3
  6944  1CA1  0854               	movf	?___fladd+2,w
  6945  1CA2  00E8               	movwf	?___flsub+2
  6946  1CA3  0853               	movf	?___fladd+1,w
  6947  1CA4  00E7               	movwf	?___flsub+1
  6948  1CA5  0852               	movf	?___fladd,w
  6949  1CA6  00E6               	movwf	?___flsub
  6950  1CA7  0008               	return
  6951  1CA8                     __end_of___flsub:	
  6952                           
  6953                           	psect	text19
  6954  15D1                     __ptext19:	
  6955 ;; *************** function ___fladd *****************
  6956 ;; Defined at:
  6957 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6958 ;; Parameters:    Size  Location     Type
  6959 ;;  b               4   50[BANK0 ] long 
  6960 ;;  a               4   54[BANK0 ] long 
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;  grs             1   69[BANK0 ] unsigned char 
  6963 ;;  bexp            1   68[BANK0 ] unsigned char 
  6964 ;;  aexp            1   67[BANK0 ] unsigned char 
  6965 ;;  signs           1   66[BANK0 ] unsigned char 
  6966 ;; Return value:  Size  Location     Type
  6967 ;;                  4   50[BANK0 ] unsigned char 
  6968 ;; Registers used:
  6969 ;;		wreg, status,2, status,0, btemp+1
  6970 ;; Tracked objects:
  6971 ;;		On entry : 0/0
  6972 ;;		On exit  : 0/0
  6973 ;;		Unchanged: 0/0
  6974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6975 ;;      Params:         0       8       0       0       0
  6976 ;;      Locals:         0       4       0       0       0
  6977 ;;      Temps:          0       8       0       0       0
  6978 ;;      Totals:         0      20       0       0       0
  6979 ;;Total ram usage:       20 bytes
  6980 ;; Hardware stack levels used:    1
  6981 ;; This function calls:
  6982 ;;		Nothing
  6983 ;; This function is called by:
  6984 ;;		_sprintf
  6985 ;;		___flsub
  6986 ;; This function uses a non-reentrant model
  6987 ;;
  6988                           
  6989                           
  6990                           ;psect for function ___fladd
  6991  15D1                     ___fladd:	
  6992                           
  6993                           ;incstack = 0
  6994                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6995  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6996  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6997  15D3  0855               	movf	___fladd@b+3,w
  6998  15D4  3980               	andlw	128
  6999  15D5  00DA               	movwf	??___fladd
  7000  15D6  085A               	movf	??___fladd,w
  7001  15D7  00E2               	movwf	___fladd@signs
  7002  15D8  0855               	movf	___fladd@b+3,w
  7003  15D9  00DA               	movwf	??___fladd
  7004  15DA  075A               	addwf	??___fladd,w
  7005  15DB  00DB               	movwf	??___fladd+1
  7006  15DC  085B               	movf	??___fladd+1,w
  7007  15DD  00E4               	movwf	___fladd@bexp
  7008  15DE  1BD4               	btfsc	___fladd@b+2,7
  7009  15DF  1464               	bsf	___fladd@bexp,0
  7010  15E0  0864               	movf	___fladd@bexp,w
  7011  15E1  1903               	btfsc	3,2
  7012  15E2  2DF1               	goto	l2406
  7013  15E3  0A64               	incf	___fladd@bexp,w
  7014  15E4  1D03               	btfss	3,2
  7015  15E5  2DEE               	goto	l2402
  7016  15E6  3000               	movlw	0
  7017  15E7  00D5               	movwf	___fladd@b+3
  7018  15E8  3000               	movlw	0
  7019  15E9  00D4               	movwf	___fladd@b+2
  7020  15EA  3000               	movlw	0
  7021  15EB  00D3               	movwf	___fladd@b+1
  7022  15EC  3000               	movlw	0
  7023  15ED  00D2               	movwf	___fladd@b
  7024  15EE                     l2402:	
  7025  15EE  17D4               	bsf	___fladd@b+2,7
  7026  15EF  01D5               	clrf	___fladd@b+3
  7027  15F0  2DF9               	goto	l2408
  7028  15F1                     l2406:	
  7029  15F1  3000               	movlw	0
  7030  15F2  00D5               	movwf	___fladd@b+3
  7031  15F3  3000               	movlw	0
  7032  15F4  00D4               	movwf	___fladd@b+2
  7033  15F5  3000               	movlw	0
  7034  15F6  00D3               	movwf	___fladd@b+1
  7035  15F7  3000               	movlw	0
  7036  15F8  00D2               	movwf	___fladd@b
  7037  15F9                     l2408:	
  7038  15F9  0859               	movf	___fladd@a+3,w
  7039  15FA  3980               	andlw	128
  7040  15FB  00DA               	movwf	??___fladd
  7041  15FC  085A               	movf	??___fladd,w
  7042  15FD  00E3               	movwf	___fladd@aexp
  7043  15FE  0863               	movf	___fladd@aexp,w
  7044  15FF  0662               	xorwf	___fladd@signs,w
  7045  1600  1D03               	btfss	3,2
  7046  1601  1762               	bsf	___fladd@signs,6
  7047  1602  0859               	movf	___fladd@a+3,w
  7048  1603  00DA               	movwf	??___fladd
  7049  1604  075A               	addwf	??___fladd,w
  7050  1605  00DB               	movwf	??___fladd+1
  7051  1606  085B               	movf	??___fladd+1,w
  7052  1607  00E3               	movwf	___fladd@aexp
  7053  1608  1BD8               	btfsc	___fladd@a+2,7
  7054  1609  1463               	bsf	___fladd@aexp,0
  7055  160A  0863               	movf	___fladd@aexp,w
  7056  160B  1903               	btfsc	3,2
  7057  160C  2E1B               	goto	l2430
  7058  160D  0A63               	incf	___fladd@aexp,w
  7059  160E  1D03               	btfss	3,2
  7060  160F  2E18               	goto	l2426
  7061  1610  3000               	movlw	0
  7062  1611  00D9               	movwf	___fladd@a+3
  7063  1612  3000               	movlw	0
  7064  1613  00D8               	movwf	___fladd@a+2
  7065  1614  3000               	movlw	0
  7066  1615  00D7               	movwf	___fladd@a+1
  7067  1616  3000               	movlw	0
  7068  1617  00D6               	movwf	___fladd@a
  7069  1618                     l2426:	
  7070  1618  17D8               	bsf	___fladd@a+2,7
  7071  1619  01D9               	clrf	___fladd@a+3
  7072  161A  2E23               	goto	l594
  7073  161B                     l2430:	
  7074  161B  3000               	movlw	0
  7075  161C  00D9               	movwf	___fladd@a+3
  7076  161D  3000               	movlw	0
  7077  161E  00D8               	movwf	___fladd@a+2
  7078  161F  3000               	movlw	0
  7079  1620  00D7               	movwf	___fladd@a+1
  7080  1621  3000               	movlw	0
  7081  1622  00D6               	movwf	___fladd@a
  7082  1623                     l594:	
  7083  1623  0864               	movf	___fladd@bexp,w
  7084  1624  0263               	subwf	___fladd@aexp,w
  7085  1625  1803               	skipnc
  7086  1626  2E69               	goto	l2466
  7087  1627  1F62               	btfss	___fladd@signs,6
  7088  1628  2E2D               	goto	l2436
  7089  1629  3080               	movlw	128
  7090  162A  00DA               	movwf	??___fladd
  7091  162B  085A               	movf	??___fladd,w
  7092  162C  06E2               	xorwf	___fladd@signs,f
  7093  162D                     l2436:	
  7094  162D  0864               	movf	___fladd@bexp,w
  7095  162E  00DA               	movwf	??___fladd
  7096  162F  085A               	movf	??___fladd,w
  7097  1630  00E5               	movwf	___fladd@grs
  7098  1631  0863               	movf	___fladd@aexp,w
  7099  1632  00DA               	movwf	??___fladd
  7100  1633  085A               	movf	??___fladd,w
  7101  1634  00E4               	movwf	___fladd@bexp
  7102  1635  0865               	movf	___fladd@grs,w
  7103  1636  00DA               	movwf	??___fladd
  7104  1637  085A               	movf	??___fladd,w
  7105  1638  00E3               	movwf	___fladd@aexp
  7106  1639  0852               	movf	___fladd@b,w
  7107  163A  00DA               	movwf	??___fladd
  7108  163B  085A               	movf	??___fladd,w
  7109  163C  00E5               	movwf	___fladd@grs
  7110  163D  0856               	movf	___fladd@a,w
  7111  163E  00DA               	movwf	??___fladd
  7112  163F  085A               	movf	??___fladd,w
  7113  1640  00D2               	movwf	___fladd@b
  7114  1641  0865               	movf	___fladd@grs,w
  7115  1642  00DA               	movwf	??___fladd
  7116  1643  085A               	movf	??___fladd,w
  7117  1644  00D6               	movwf	___fladd@a
  7118  1645  0853               	movf	___fladd@b+1,w
  7119  1646  00DA               	movwf	??___fladd
  7120  1647  085A               	movf	??___fladd,w
  7121  1648  00E5               	movwf	___fladd@grs
  7122  1649  0857               	movf	___fladd@a+1,w
  7123  164A  00DA               	movwf	??___fladd
  7124  164B  085A               	movf	??___fladd,w
  7125  164C  00D3               	movwf	___fladd@b+1
  7126  164D  0865               	movf	___fladd@grs,w
  7127  164E  00DA               	movwf	??___fladd
  7128  164F  085A               	movf	??___fladd,w
  7129  1650  00D7               	movwf	___fladd@a+1
  7130  1651  0854               	movf	___fladd@b+2,w
  7131  1652  00DA               	movwf	??___fladd
  7132  1653  085A               	movf	??___fladd,w
  7133  1654  00E5               	movwf	___fladd@grs
  7134  1655  0858               	movf	___fladd@a+2,w
  7135  1656  00DA               	movwf	??___fladd
  7136  1657  085A               	movf	??___fladd,w
  7137  1658  00D4               	movwf	___fladd@b+2
  7138  1659  0865               	movf	___fladd@grs,w
  7139  165A  00DA               	movwf	??___fladd
  7140  165B  085A               	movf	??___fladd,w
  7141  165C  00D8               	movwf	___fladd@a+2
  7142  165D  0855               	movf	___fladd@b+3,w
  7143  165E  00DA               	movwf	??___fladd
  7144  165F  085A               	movf	??___fladd,w
  7145  1660  00E5               	movwf	___fladd@grs
  7146  1661  0859               	movf	___fladd@a+3,w
  7147  1662  00DA               	movwf	??___fladd
  7148  1663  085A               	movf	??___fladd,w
  7149  1664  00D5               	movwf	___fladd@b+3
  7150  1665  0865               	movf	___fladd@grs,w
  7151  1666  00DA               	movwf	??___fladd
  7152  1667  085A               	movf	??___fladd,w
  7153  1668  00D9               	movwf	___fladd@a+3
  7154  1669                     l2466:	
  7155  1669  01E5               	clrf	___fladd@grs
  7156  166A  0863               	movf	___fladd@aexp,w
  7157  166B  00DA               	movwf	??___fladd
  7158  166C  01DB               	clrf	??___fladd+1
  7159  166D  085B               	movf	??___fladd+1,w
  7160  166E  00DD               	movwf	??___fladd+3
  7161  166F  0864               	movf	___fladd@bexp,w
  7162  1670  025A               	subwf	??___fladd,w
  7163  1671  00DC               	movwf	??___fladd+2
  7164  1672  1C03               	skipc
  7165  1673  03DD               	decf	??___fladd+3,f
  7166  1674  085D               	movf	??___fladd+3,w
  7167  1675  3A80               	xorlw	128
  7168  1676  00FF               	movwf	127
  7169  1677  3080               	movlw	128
  7170  1678  027F               	subwf	127,w
  7171  1679  1D03               	skipz
  7172  167A  2E7D               	goto	u3525
  7173  167B  301A               	movlw	26
  7174  167C  025C               	subwf	??___fladd+2,w
  7175  167D                     u3525:	
  7176  167D  1C03               	skipc
  7177  167E  2EB6               	goto	l2484
  7178  167F  1283               	bcf	3,5	;RP0=0, select bank0
  7179  1680  1303               	bcf	3,6	;RP1=0, select bank0
  7180  1681  0855               	movf	___fladd@b+3,w
  7181  1682  0454               	iorwf	___fladd@b+2,w
  7182  1683  0453               	iorwf	___fladd@b+1,w
  7183  1684  0452               	iorwf	___fladd@b,w
  7184  1685  1903               	btfsc	3,2
  7185  1686  2E89               	goto	u3530
  7186  1687  3001               	movlw	1
  7187  1688  2E8A               	goto	u3540
  7188  1689                     u3530:	
  7189  1689  3000               	movlw	0
  7190  168A                     u3540:	
  7191  168A  00DA               	movwf	??___fladd
  7192  168B  085A               	movf	??___fladd,w
  7193  168C  00E5               	movwf	___fladd@grs
  7194  168D  3000               	movlw	0
  7195  168E  00D5               	movwf	___fladd@b+3
  7196  168F  3000               	movlw	0
  7197  1690  00D4               	movwf	___fladd@b+2
  7198  1691  3000               	movlw	0
  7199  1692  00D3               	movwf	___fladd@b+1
  7200  1693  3000               	movlw	0
  7201  1694  00D2               	movwf	___fladd@b
  7202  1695  0863               	movf	___fladd@aexp,w
  7203  1696  00DA               	movwf	??___fladd
  7204  1697  085A               	movf	??___fladd,w
  7205  1698  00E4               	movwf	___fladd@bexp
  7206  1699  2EBC               	goto	l598
  7207  169A                     l600:	
  7208  169A  1C65               	btfss	___fladd@grs,0
  7209  169B  2EA5               	goto	l2474
  7210  169C  0865               	movf	___fladd@grs,w
  7211  169D  00DA               	movwf	??___fladd
  7212  169E  1003               	clrc
  7213  169F  0C5A               	rrf	??___fladd,w
  7214  16A0  3801               	iorlw	1
  7215  16A1  00DB               	movwf	??___fladd+1
  7216  16A2  085B               	movf	??___fladd+1,w
  7217  16A3  00E5               	movwf	___fladd@grs
  7218  16A4  2EA7               	goto	l2476
  7219  16A5                     l2474:	
  7220  16A5  1003               	clrc
  7221  16A6  0CE5               	rrf	___fladd@grs,f
  7222  16A7                     l2476:	
  7223  16A7  1852               	btfsc	___fladd@b,0
  7224  16A8  17E5               	bsf	___fladd@grs,7
  7225  16A9  3001               	movlw	1
  7226  16AA  00DA               	movwf	??___fladd
  7227  16AB                     u3575:	
  7228  16AB  0D55               	rlf	___fladd@b+3,w
  7229  16AC  0CD5               	rrf	___fladd@b+3,f
  7230  16AD  0CD4               	rrf	___fladd@b+2,f
  7231  16AE  0CD3               	rrf	___fladd@b+1,f
  7232  16AF  0CD2               	rrf	___fladd@b,f
  7233  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  7234  16B1  2EAB               	goto	u3575
  7235  16B2  3001               	movlw	1
  7236  16B3  00DA               	movwf	??___fladd
  7237  16B4  085A               	movf	??___fladd,w
  7238  16B5  07E4               	addwf	___fladd@bexp,f
  7239  16B6                     l2484:	
  7240  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  7241  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  7242  16B8  0863               	movf	___fladd@aexp,w
  7243  16B9  0264               	subwf	___fladd@bexp,w
  7244  16BA  1C03               	skipc
  7245  16BB  2E9A               	goto	l600
  7246  16BC                     l598:	
  7247  16BC  1B62               	btfsc	___fladd@signs,6
  7248  16BD  2EFD               	goto	l2510
  7249  16BE  0864               	movf	___fladd@bexp,w
  7250  16BF  1D03               	btfss	3,2
  7251  16C0  2ECA               	goto	l2492
  7252  16C1  3000               	movlw	0
  7253  16C2  00D5               	movwf	?___fladd+3
  7254  16C3  3000               	movlw	0
  7255  16C4  00D4               	movwf	?___fladd+2
  7256  16C5  3000               	movlw	0
  7257  16C6  00D3               	movwf	?___fladd+1
  7258  16C7  3000               	movlw	0
  7259  16C8  00D2               	movwf	?___fladd
  7260  16C9  0008               	return
  7261  16CA                     l2492:	
  7262  16CA  0856               	movf	___fladd@a,w
  7263  16CB  07D2               	addwf	___fladd@b,f
  7264  16CC  0857               	movf	___fladd@a+1,w
  7265  16CD  1103               	clrz
  7266  16CE  1803               	skipnc
  7267  16CF  3E01               	addlw	1
  7268  16D0  1D03               	btfss	3,2
  7269  16D1  07D3               	addwf	___fladd@b+1,f
  7270  16D2  0858               	movf	___fladd@a+2,w
  7271  16D3  1103               	clrz
  7272  16D4  1803               	skipnc
  7273  16D5  3E01               	addlw	1
  7274  16D6  1D03               	btfss	3,2
  7275  16D7  07D4               	addwf	___fladd@b+2,f
  7276  16D8  0859               	movf	___fladd@a+3,w
  7277  16D9  1103               	clrz
  7278  16DA  1803               	skipnc
  7279  16DB  3E01               	addlw	1
  7280  16DC  1D03               	btfss	3,2
  7281  16DD  07D5               	addwf	___fladd@b+3,f
  7282  16DE  1C55               	btfss	___fladd@b+3,0
  7283  16DF  2F9F               	goto	l2544
  7284  16E0  1C65               	btfss	___fladd@grs,0
  7285  16E1  2EEB               	goto	l2500
  7286  16E2  0865               	movf	___fladd@grs,w
  7287  16E3  00DA               	movwf	??___fladd
  7288  16E4  1003               	clrc
  7289  16E5  0C5A               	rrf	??___fladd,w
  7290  16E6  3801               	iorlw	1
  7291  16E7  00DB               	movwf	??___fladd+1
  7292  16E8  085B               	movf	??___fladd+1,w
  7293  16E9  00E5               	movwf	___fladd@grs
  7294  16EA  2EED               	goto	l2502
  7295  16EB                     l2500:	
  7296  16EB  1003               	clrc
  7297  16EC  0CE5               	rrf	___fladd@grs,f
  7298  16ED                     l2502:	
  7299  16ED  1852               	btfsc	___fladd@b,0
  7300  16EE  17E5               	bsf	___fladd@grs,7
  7301  16EF  3001               	movlw	1
  7302  16F0  00DA               	movwf	??___fladd
  7303  16F1                     u3655:	
  7304  16F1  0D55               	rlf	___fladd@b+3,w
  7305  16F2  0CD5               	rrf	___fladd@b+3,f
  7306  16F3  0CD4               	rrf	___fladd@b+2,f
  7307  16F4  0CD3               	rrf	___fladd@b+1,f
  7308  16F5  0CD2               	rrf	___fladd@b,f
  7309  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7310  16F7  2EF1               	goto	u3655
  7311  16F8  3001               	movlw	1
  7312  16F9  00DA               	movwf	??___fladd
  7313  16FA  085A               	movf	??___fladd,w
  7314  16FB  07E4               	addwf	___fladd@bexp,f
  7315  16FC  2F9F               	goto	l2544
  7316  16FD                     l2510:	
  7317  16FD  0855               	movf	___fladd@b+3,w
  7318  16FE  3A80               	xorlw	128
  7319  16FF  00FF               	movwf	127
  7320  1700  0859               	movf	___fladd@a+3,w
  7321  1701  3A80               	xorlw	128
  7322  1702  027F               	subwf	127,w
  7323  1703  1D03               	skipz
  7324  1704  2F0F               	goto	u3663
  7325  1705  0858               	movf	___fladd@a+2,w
  7326  1706  0254               	subwf	___fladd@b+2,w
  7327  1707  1D03               	skipz
  7328  1708  2F0F               	goto	u3663
  7329  1709  0857               	movf	___fladd@a+1,w
  7330  170A  0253               	subwf	___fladd@b+1,w
  7331  170B  1D03               	skipz
  7332  170C  2F0F               	goto	u3663
  7333  170D  0856               	movf	___fladd@a,w
  7334  170E  0252               	subwf	___fladd@b,w
  7335  170F                     u3663:	
  7336  170F  1803               	skipnc
  7337  1710  2F67               	goto	l2520
  7338  1711  30FF               	movlw	255
  7339  1712  00DA               	movwf	??___fladd
  7340  1713  30FF               	movlw	255
  7341  1714  00DB               	movwf	??___fladd+1
  7342  1715  30FF               	movlw	255
  7343  1716  00DC               	movwf	??___fladd+2
  7344  1717  30FF               	movlw	255
  7345  1718  00DD               	movwf	??___fladd+3
  7346  1719  0856               	movf	___fladd@a,w
  7347  171A  00DE               	movwf	??___fladd+4
  7348  171B  0857               	movf	___fladd@a+1,w
  7349  171C  00DF               	movwf	??___fladd+5
  7350  171D  0858               	movf	___fladd@a+2,w
  7351  171E  00E0               	movwf	??___fladd+6
  7352  171F  0859               	movf	___fladd@a+3,w
  7353  1720  00E1               	movwf	??___fladd+7
  7354  1721  0852               	movf	___fladd@b,w
  7355  1722  02DE               	subwf	??___fladd+4,f
  7356  1723  0853               	movf	___fladd@b+1,w
  7357  1724  1C03               	skipc
  7358  1725  0F53               	incfsz	___fladd@b+1,w
  7359  1726  2F28               	goto	u3671
  7360  1727  2F29               	goto	u3672
  7361  1728                     u3671:	
  7362  1728  02DF               	subwf	??___fladd+5,f
  7363  1729                     u3672:	
  7364  1729  0854               	movf	___fladd@b+2,w
  7365  172A  1C03               	skipc
  7366  172B  0F54               	incfsz	___fladd@b+2,w
  7367  172C  2F2E               	goto	u3673
  7368  172D  2F2F               	goto	u3674
  7369  172E                     u3673:	
  7370  172E  02E0               	subwf	??___fladd+6,f
  7371  172F                     u3674:	
  7372  172F  0855               	movf	___fladd@b+3,w
  7373  1730  1C03               	skipc
  7374  1731  0F55               	incfsz	___fladd@b+3,w
  7375  1732  2F34               	goto	u3675
  7376  1733  2F35               	goto	u3676
  7377  1734                     u3675:	
  7378  1734  02E1               	subwf	??___fladd+7,f
  7379  1735                     u3676:	
  7380  1735  085E               	movf	??___fladd+4,w
  7381  1736  07DA               	addwf	??___fladd,f
  7382  1737  085F               	movf	??___fladd+5,w
  7383  1738  1803               	skipnc
  7384  1739  0F5F               	incfsz	??___fladd+5,w
  7385  173A  2F3C               	goto	u3680
  7386  173B  2F3D               	goto	u3681
  7387  173C                     u3680:	
  7388  173C  07DB               	addwf	??___fladd+1,f
  7389  173D                     u3681:	
  7390  173D  0860               	movf	??___fladd+6,w
  7391  173E  1803               	skipnc
  7392  173F  0F60               	incfsz	??___fladd+6,w
  7393  1740  2F42               	goto	u3682
  7394  1741  2F43               	goto	u3683
  7395  1742                     u3682:	
  7396  1742  07DC               	addwf	??___fladd+2,f
  7397  1743                     u3683:	
  7398  1743  0861               	movf	??___fladd+7,w
  7399  1744  1803               	skipnc
  7400  1745  0A61               	incf	??___fladd+7,w
  7401  1746  07DD               	addwf	??___fladd+3,f
  7402  1747  085D               	movf	??___fladd+3,w
  7403  1748  00D5               	movwf	___fladd@b+3
  7404  1749  085C               	movf	??___fladd+2,w
  7405  174A  00D4               	movwf	___fladd@b+2
  7406  174B  085B               	movf	??___fladd+1,w
  7407  174C  00D3               	movwf	___fladd@b+1
  7408  174D  085A               	movf	??___fladd,w
  7409  174E  00D2               	movwf	___fladd@b
  7410  174F  3080               	movlw	128
  7411  1750  00DA               	movwf	??___fladd
  7412  1751  085A               	movf	??___fladd,w
  7413  1752  06E2               	xorwf	___fladd@signs,f
  7414  1753  09E5               	comf	___fladd@grs,f
  7415  1754  0AE5               	incf	___fladd@grs,f
  7416  1755  0865               	movf	___fladd@grs,w
  7417  1756  1D03               	btfss	3,2
  7418  1757  2F75               	goto	l615
  7419  1758  3001               	movlw	1
  7420  1759  07D2               	addwf	___fladd@b,f
  7421  175A  3000               	movlw	0
  7422  175B  1803               	skipnc
  7423  175C  3001               	movlw	1
  7424  175D  07D3               	addwf	___fladd@b+1,f
  7425  175E  3000               	movlw	0
  7426  175F  1803               	skipnc
  7427  1760  3001               	movlw	1
  7428  1761  07D4               	addwf	___fladd@b+2,f
  7429  1762  3000               	movlw	0
  7430  1763  1803               	skipnc
  7431  1764  3001               	movlw	1
  7432  1765  07D5               	addwf	___fladd@b+3,f
  7433  1766  2F75               	goto	l615
  7434  1767                     l2520:	
  7435  1767  0856               	movf	___fladd@a,w
  7436  1768  02D2               	subwf	___fladd@b,f
  7437  1769  0857               	movf	___fladd@a+1,w
  7438  176A  1C03               	skipc
  7439  176B  0F57               	incfsz	___fladd@a+1,w
  7440  176C  02D3               	subwf	___fladd@b+1,f
  7441  176D  0858               	movf	___fladd@a+2,w
  7442  176E  1C03               	skipc
  7443  176F  0F58               	incfsz	___fladd@a+2,w
  7444  1770  02D4               	subwf	___fladd@b+2,f
  7445  1771  0859               	movf	___fladd@a+3,w
  7446  1772  1C03               	skipc
  7447  1773  0F59               	incfsz	___fladd@a+3,w
  7448  1774  02D5               	subwf	___fladd@b+3,f
  7449  1775                     l615:	
  7450  1775  0855               	movf	___fladd@b+3,w
  7451  1776  0454               	iorwf	___fladd@b+2,w
  7452  1777  0453               	iorwf	___fladd@b+1,w
  7453  1778  0452               	iorwf	___fladd@b,w
  7454  1779  1D03               	skipz
  7455  177A  2F9D               	goto	l2542
  7456  177B  0865               	movf	___fladd@grs,w
  7457  177C  1D03               	btfss	3,2
  7458  177D  2F9D               	goto	l2542
  7459  177E  3000               	movlw	0
  7460  177F  00D5               	movwf	?___fladd+3
  7461  1780  3000               	movlw	0
  7462  1781  00D4               	movwf	?___fladd+2
  7463  1782  3000               	movlw	0
  7464  1783  00D3               	movwf	?___fladd+1
  7465  1784  3000               	movlw	0
  7466  1785  00D2               	movwf	?___fladd
  7467  1786  0008               	return
  7468  1787                     l2528:	
  7469  1787  3001               	movlw	1
  7470  1788  00DA               	movwf	??___fladd
  7471  1789                     u3725:	
  7472  1789  1003               	clrc
  7473  178A  0DD2               	rlf	___fladd@b,f
  7474  178B  0DD3               	rlf	___fladd@b+1,f
  7475  178C  0DD4               	rlf	___fladd@b+2,f
  7476  178D  0DD5               	rlf	___fladd@b+3,f
  7477  178E  0BDA               	decfsz	??___fladd,f
  7478  178F  2F89               	goto	u3725
  7479  1790  1BE5               	btfsc	___fladd@grs,7
  7480  1791  1452               	bsf	___fladd@b,0
  7481  1792  1C65               	btfss	___fladd@grs,0
  7482  1793  2F96               	goto	l2536
  7483  1794  1403               	setc
  7484  1795  2F97               	goto	L7
  7485  1796                     l2536:	
  7486  1796  1003               	clrc
  7487  1797                     L7:	
  7488  1797  0DE5               	rlf	___fladd@grs,f
  7489  1798  0864               	movf	___fladd@bexp,w
  7490  1799  1903               	btfsc	3,2
  7491  179A  2F9D               	goto	l2542
  7492  179B  3001               	movlw	1
  7493  179C  02E4               	subwf	___fladd@bexp,f
  7494  179D                     l2542:	
  7495  179D  1FD4               	btfss	___fladd@b+2,7
  7496  179E  2F87               	goto	l2528
  7497  179F                     l2544:	
  7498  179F  01E3               	clrf	___fladd@aexp
  7499  17A0  1FE5               	btfss	___fladd@grs,7
  7500  17A1  2FAA               	goto	l2554
  7501  17A2  0865               	movf	___fladd@grs,w
  7502  17A3  397F               	andlw	127
  7503  17A4  1903               	btfsc	3,2
  7504  17A5  1852               	btfsc	___fladd@b,0
  7505  17A6  2FA8               	goto	l2550
  7506  17A7  2FAA               	goto	l2554
  7507  17A8                     l2550:	
  7508  17A8  01E3               	clrf	___fladd@aexp
  7509  17A9  0AE3               	incf	___fladd@aexp,f
  7510  17AA                     l2554:	
  7511  17AA  0863               	movf	___fladd@aexp,w
  7512  17AB  1903               	btfsc	3,2
  7513  17AC  2FDD               	goto	l628
  7514  17AD  3001               	movlw	1
  7515  17AE  07D2               	addwf	___fladd@b,f
  7516  17AF  3000               	movlw	0
  7517  17B0  1803               	skipnc
  7518  17B1  3001               	movlw	1
  7519  17B2  07D3               	addwf	___fladd@b+1,f
  7520  17B3  3000               	movlw	0
  7521  17B4  1803               	skipnc
  7522  17B5  3001               	movlw	1
  7523  17B6  07D4               	addwf	___fladd@b+2,f
  7524  17B7  3000               	movlw	0
  7525  17B8  1803               	skipnc
  7526  17B9  3001               	movlw	1
  7527  17BA  07D5               	addwf	___fladd@b+3,f
  7528  17BB  1C55               	btfss	___fladd@b+3,0
  7529  17BC  2FDD               	goto	l628
  7530  17BD  0852               	movf	___fladd@b,w
  7531  17BE  00DA               	movwf	??___fladd
  7532  17BF  0853               	movf	___fladd@b+1,w
  7533  17C0  00DB               	movwf	??___fladd+1
  7534  17C1  0854               	movf	___fladd@b+2,w
  7535  17C2  00DC               	movwf	??___fladd+2
  7536  17C3  0855               	movf	___fladd@b+3,w
  7537  17C4  00DD               	movwf	??___fladd+3
  7538  17C5  3001               	movlw	1
  7539  17C6  00DE               	movwf	??___fladd+4
  7540  17C7                     u3825:	
  7541  17C7  0D5D               	rlf	??___fladd+3,w
  7542  17C8  0CDD               	rrf	??___fladd+3,f
  7543  17C9  0CDC               	rrf	??___fladd+2,f
  7544  17CA  0CDB               	rrf	??___fladd+1,f
  7545  17CB  0CDA               	rrf	??___fladd,f
  7546  17CC  0BDE               	decfsz	??___fladd+4,f
  7547  17CD  2FC7               	goto	u3825
  7548  17CE  085D               	movf	??___fladd+3,w
  7549  17CF  00D5               	movwf	___fladd@b+3
  7550  17D0  085C               	movf	??___fladd+2,w
  7551  17D1  00D4               	movwf	___fladd@b+2
  7552  17D2  085B               	movf	??___fladd+1,w
  7553  17D3  00D3               	movwf	___fladd@b+1
  7554  17D4  085A               	movf	??___fladd,w
  7555  17D5  00D2               	movwf	___fladd@b
  7556  17D6  0A64               	incf	___fladd@bexp,w
  7557  17D7  1903               	btfsc	3,2
  7558  17D8  2FDD               	goto	l628
  7559  17D9  3001               	movlw	1
  7560  17DA  00DA               	movwf	??___fladd
  7561  17DB  085A               	movf	??___fladd,w
  7562  17DC  07E4               	addwf	___fladd@bexp,f
  7563  17DD                     l628:	
  7564  17DD  0A64               	incf	___fladd@bexp,w
  7565  17DE  1D03               	btfss	3,2
  7566  17DF  0864               	movf	___fladd@bexp,w
  7567  17E0  1D03               	btfss	3,2
  7568  17E1  2FED               	goto	l2572
  7569  17E2  3000               	movlw	0
  7570  17E3  00D5               	movwf	___fladd@b+3
  7571  17E4  3000               	movlw	0
  7572  17E5  00D4               	movwf	___fladd@b+2
  7573  17E6  3000               	movlw	0
  7574  17E7  00D3               	movwf	___fladd@b+1
  7575  17E8  3000               	movlw	0
  7576  17E9  00D2               	movwf	___fladd@b
  7577  17EA  0864               	movf	___fladd@bexp,w
  7578  17EB  1903               	btfsc	3,2
  7579  17EC  01E2               	clrf	___fladd@signs
  7580  17ED                     l2572:	
  7581  17ED  1C64               	btfss	___fladd@bexp,0
  7582  17EE  2FF1               	goto	l2576
  7583  17EF  17D4               	bsf	___fladd@b+2,7
  7584  17F0  2FF5               	goto	l636
  7585  17F1                     l2576:	
  7586  17F1  307F               	movlw	127
  7587  17F2  00DA               	movwf	??___fladd
  7588  17F3  085A               	movf	??___fladd,w
  7589  17F4  05D4               	andwf	___fladd@b+2,f
  7590  17F5                     l636:	
  7591  17F5  0864               	movf	___fladd@bexp,w
  7592  17F6  00DA               	movwf	??___fladd
  7593  17F7  1003               	clrc
  7594  17F8  0C5A               	rrf	??___fladd,w
  7595  17F9  00DB               	movwf	??___fladd+1
  7596  17FA  085B               	movf	??___fladd+1,w
  7597  17FB  00D5               	movwf	___fladd@b+3
  7598  17FC  1FE2               	btfss	___fladd@signs,7
  7599  17FD  0008               	return
  7600  17FE  17D5               	bsf	___fladd@b+3,7
  7601  17FF  0008               	return
  7602  1800                     __end_of___fladd:	
  7603                           
  7604                           	psect	text20
  7605  1C1A                     __ptext20:	
  7606 ;; *************** function ___flneg *****************
  7607 ;; Defined at:
  7608 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  f1              4    0[COMMON] unsigned char 
  7611 ;; Auto vars:     Size  Location     Type
  7612 ;;		None
  7613 ;; Return value:  Size  Location     Type
  7614 ;;                  4    0[COMMON] unsigned char 
  7615 ;; Registers used:
  7616 ;;		wreg
  7617 ;; Tracked objects:
  7618 ;;		On entry : 0/0
  7619 ;;		On exit  : 0/0
  7620 ;;		Unchanged: 0/0
  7621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7622 ;;      Params:         4       0       0       0       0
  7623 ;;      Locals:         0       0       0       0       0
  7624 ;;      Temps:          0       0       0       0       0
  7625 ;;      Totals:         4       0       0       0       0
  7626 ;;Total ram usage:        4 bytes
  7627 ;; Hardware stack levels used:    1
  7628 ;; This function calls:
  7629 ;;		Nothing
  7630 ;; This function is called by:
  7631 ;;		_sprintf
  7632 ;; This function uses a non-reentrant model
  7633 ;;
  7634                           
  7635                           
  7636                           ;psect for function ___flneg
  7637  1C1A                     ___flneg:	
  7638                           
  7639                           ;incstack = 0
  7640                           ; Regs used in ___flneg: [wreg]
  7641  1C1A  0873               	movf	___flneg@f1+3,w
  7642  1C1B  0472               	iorwf	___flneg@f1+2,w
  7643  1C1C  0471               	iorwf	___flneg@f1+1,w
  7644  1C1D  0470               	iorwf	___flneg@f1,w
  7645  1C1E  1903               	skipnz
  7646  1C1F  0008               	return
  7647  1C20  3080               	movlw	128
  7648  1C21  06F3               	xorwf	___flneg@f1+3,f
  7649  1C22  0008               	return
  7650  1C23                     __end_of___flneg:	
  7651                           
  7652                           	psect	text21
  7653  107A                     __ptext21:	
  7654 ;; *************** function ___flge *****************
  7655 ;; Defined at:
  7656 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  ff1             4    0[COMMON] unsigned char 
  7659 ;;  ff2             4    4[COMMON] unsigned char 
  7660 ;; Auto vars:     Size  Location     Type
  7661 ;;		None
  7662 ;; Return value:  Size  Location     Type
  7663 ;;		None               void
  7664 ;; Registers used:
  7665 ;;		wreg, status,2, status,0
  7666 ;; Tracked objects:
  7667 ;;		On entry : 0/0
  7668 ;;		On exit  : 0/0
  7669 ;;		Unchanged: 0/0
  7670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7671 ;;      Params:         8       0       0       0       0
  7672 ;;      Locals:         0       0       0       0       0
  7673 ;;      Temps:          4       0       0       0       0
  7674 ;;      Totals:        12       0       0       0       0
  7675 ;;Total ram usage:       12 bytes
  7676 ;; Hardware stack levels used:    1
  7677 ;; This function calls:
  7678 ;;		Nothing
  7679 ;; This function is called by:
  7680 ;;		_sprintf
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           
  7685                           ;psect for function ___flge
  7686  107A                     ___flge:	
  7687                           
  7688                           ;incstack = 0
  7689                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7690  107A  3000               	movlw	0
  7691  107B  0570               	andwf	___flge@ff1,w
  7692  107C  00F8               	movwf	??___flge
  7693  107D  3000               	movlw	0
  7694  107E  0571               	andwf	___flge@ff1+1,w
  7695  107F  00F9               	movwf	??___flge+1
  7696  1080  3080               	movlw	128
  7697  1081  0572               	andwf	___flge@ff1+2,w
  7698  1082  00FA               	movwf	??___flge+2
  7699  1083  307F               	movlw	127
  7700  1084  0573               	andwf	___flge@ff1+3,w
  7701  1085  00FB               	movwf	??___flge+3
  7702  1086  087B               	movf	??___flge+3,w
  7703  1087  047A               	iorwf	??___flge+2,w
  7704  1088  0479               	iorwf	??___flge+1,w
  7705  1089  0478               	iorwf	??___flge,w
  7706  108A  1D03               	skipz
  7707  108B  2894               	goto	l458
  7708  108C  3000               	movlw	0
  7709  108D  00F3               	movwf	___flge@ff1+3
  7710  108E  3000               	movlw	0
  7711  108F  00F2               	movwf	___flge@ff1+2
  7712  1090  3000               	movlw	0
  7713  1091  00F1               	movwf	___flge@ff1+1
  7714  1092  3000               	movlw	0
  7715  1093  00F0               	movwf	___flge@ff1
  7716  1094                     l458:	
  7717  1094  3000               	movlw	0
  7718  1095  0574               	andwf	___flge@ff2,w
  7719  1096  00F8               	movwf	??___flge
  7720  1097  3000               	movlw	0
  7721  1098  0575               	andwf	___flge@ff2+1,w
  7722  1099  00F9               	movwf	??___flge+1
  7723  109A  3080               	movlw	128
  7724  109B  0576               	andwf	___flge@ff2+2,w
  7725  109C  00FA               	movwf	??___flge+2
  7726  109D  307F               	movlw	127
  7727  109E  0577               	andwf	___flge@ff2+3,w
  7728  109F  00FB               	movwf	??___flge+3
  7729  10A0  087B               	movf	??___flge+3,w
  7730  10A1  047A               	iorwf	??___flge+2,w
  7731  10A2  0479               	iorwf	??___flge+1,w
  7732  10A3  0478               	iorwf	??___flge,w
  7733  10A4  1D03               	skipz
  7734  10A5  28AE               	goto	l2994
  7735  10A6  3000               	movlw	0
  7736  10A7  00F7               	movwf	___flge@ff2+3
  7737  10A8  3000               	movlw	0
  7738  10A9  00F6               	movwf	___flge@ff2+2
  7739  10AA  3000               	movlw	0
  7740  10AB  00F5               	movwf	___flge@ff2+1
  7741  10AC  3000               	movlw	0
  7742  10AD  00F4               	movwf	___flge@ff2
  7743  10AE                     l2994:	
  7744  10AE  1FF3               	btfss	___flge@ff1+3,7
  7745  10AF  28D4               	goto	l2998
  7746  10B0  3000               	movlw	0
  7747  10B1  00F8               	movwf	??___flge
  7748  10B2  3000               	movlw	0
  7749  10B3  00F9               	movwf	??___flge+1
  7750  10B4  3000               	movlw	0
  7751  10B5  00FA               	movwf	??___flge+2
  7752  10B6  3080               	movlw	128
  7753  10B7  00FB               	movwf	??___flge+3
  7754  10B8  0870               	movf	___flge@ff1,w
  7755  10B9  02F8               	subwf	??___flge,f
  7756  10BA  0871               	movf	___flge@ff1+1,w
  7757  10BB  1C03               	skipc
  7758  10BC  0F71               	incfsz	___flge@ff1+1,w
  7759  10BD  28BF               	goto	u4991
  7760  10BE  28C0               	goto	u4992
  7761  10BF                     u4991:	
  7762  10BF  02F9               	subwf	??___flge+1,f
  7763  10C0                     u4992:	
  7764  10C0  0872               	movf	___flge@ff1+2,w
  7765  10C1  1C03               	skipc
  7766  10C2  0F72               	incfsz	___flge@ff1+2,w
  7767  10C3  28C5               	goto	u4993
  7768  10C4  28C6               	goto	u4994
  7769  10C5                     u4993:	
  7770  10C5  02FA               	subwf	??___flge+2,f
  7771  10C6                     u4994:	
  7772  10C6  0873               	movf	___flge@ff1+3,w
  7773  10C7  1C03               	skipc
  7774  10C8  0F73               	incfsz	___flge@ff1+3,w
  7775  10C9  28CB               	goto	u4995
  7776  10CA  28CC               	goto	u4996
  7777  10CB                     u4995:	
  7778  10CB  02FB               	subwf	??___flge+3,f
  7779  10CC                     u4996:	
  7780  10CC  087B               	movf	??___flge+3,w
  7781  10CD  00F3               	movwf	___flge@ff1+3
  7782  10CE  087A               	movf	??___flge+2,w
  7783  10CF  00F2               	movwf	___flge@ff1+2
  7784  10D0  0879               	movf	??___flge+1,w
  7785  10D1  00F1               	movwf	___flge@ff1+1
  7786  10D2  0878               	movf	??___flge,w
  7787  10D3  00F0               	movwf	___flge@ff1
  7788  10D4                     l2998:	
  7789  10D4  1FF7               	btfss	___flge@ff2+3,7
  7790  10D5  28FA               	goto	l461
  7791  10D6  3000               	movlw	0
  7792  10D7  00F8               	movwf	??___flge
  7793  10D8  3000               	movlw	0
  7794  10D9  00F9               	movwf	??___flge+1
  7795  10DA  3000               	movlw	0
  7796  10DB  00FA               	movwf	??___flge+2
  7797  10DC  3080               	movlw	128
  7798  10DD  00FB               	movwf	??___flge+3
  7799  10DE  0874               	movf	___flge@ff2,w
  7800  10DF  02F8               	subwf	??___flge,f
  7801  10E0  0875               	movf	___flge@ff2+1,w
  7802  10E1  1C03               	skipc
  7803  10E2  0F75               	incfsz	___flge@ff2+1,w
  7804  10E3  28E5               	goto	u5011
  7805  10E4  28E6               	goto	u5012
  7806  10E5                     u5011:	
  7807  10E5  02F9               	subwf	??___flge+1,f
  7808  10E6                     u5012:	
  7809  10E6  0876               	movf	___flge@ff2+2,w
  7810  10E7  1C03               	skipc
  7811  10E8  0F76               	incfsz	___flge@ff2+2,w
  7812  10E9  28EB               	goto	u5013
  7813  10EA  28EC               	goto	u5014
  7814  10EB                     u5013:	
  7815  10EB  02FA               	subwf	??___flge+2,f
  7816  10EC                     u5014:	
  7817  10EC  0877               	movf	___flge@ff2+3,w
  7818  10ED  1C03               	skipc
  7819  10EE  0F77               	incfsz	___flge@ff2+3,w
  7820  10EF  28F1               	goto	u5015
  7821  10F0  28F2               	goto	u5016
  7822  10F1                     u5015:	
  7823  10F1  02FB               	subwf	??___flge+3,f
  7824  10F2                     u5016:	
  7825  10F2  087B               	movf	??___flge+3,w
  7826  10F3  00F7               	movwf	___flge@ff2+3
  7827  10F4  087A               	movf	??___flge+2,w
  7828  10F5  00F6               	movwf	___flge@ff2+2
  7829  10F6  0879               	movf	??___flge+1,w
  7830  10F7  00F5               	movwf	___flge@ff2+1
  7831  10F8  0878               	movf	??___flge,w
  7832  10F9  00F4               	movwf	___flge@ff2
  7833  10FA                     l461:	
  7834  10FA  3080               	movlw	128
  7835  10FB  06F3               	xorwf	___flge@ff1+3,f
  7836  10FC  3080               	movlw	128
  7837  10FD  06F7               	xorwf	___flge@ff2+3,f
  7838  10FE  0877               	movf	___flge@ff2+3,w
  7839  10FF  0273               	subwf	___flge@ff1+3,w
  7840  1100  1D03               	skipz
  7841  1101  0008               	return
  7842  1102  0876               	movf	___flge@ff2+2,w
  7843  1103  0272               	subwf	___flge@ff1+2,w
  7844  1104  1D03               	skipz
  7845  1105  0008               	return
  7846  1106  0875               	movf	___flge@ff2+1,w
  7847  1107  0271               	subwf	___flge@ff1+1,w
  7848  1108  1D03               	skipz
  7849  1109  0008               	return
  7850  110A  0874               	movf	___flge@ff2,w
  7851  110B  0270               	subwf	___flge@ff1,w
  7852  110C  0008               	return
  7853  110D                     __end_of___flge:	
  7854                           
  7855                           	psect	text22
  7856  1D71                     __ptext22:	
  7857 ;; *************** function ___fleq *****************
  7858 ;; Defined at:
  7859 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;  ff1             4    0[COMMON] unsigned char 
  7862 ;;  ff2             4    4[COMMON] unsigned char 
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;		None               void
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7874 ;;      Params:         8       0       0       0       0
  7875 ;;      Locals:         0       0       0       0       0
  7876 ;;      Temps:          4       0       0       0       0
  7877 ;;      Totals:        12       0       0       0       0
  7878 ;;Total ram usage:       12 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		_sprintf
  7884 ;; This function uses a non-reentrant model
  7885 ;;
  7886                           
  7887                           
  7888                           ;psect for function ___fleq
  7889  1D71                     ___fleq:	
  7890                           
  7891                           ;incstack = 0
  7892                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7893  1D71  3000               	movlw	0
  7894  1D72  0570               	andwf	___fleq@ff1,w
  7895  1D73  00F8               	movwf	??___fleq
  7896  1D74  3000               	movlw	0
  7897  1D75  0571               	andwf	___fleq@ff1+1,w
  7898  1D76  00F9               	movwf	??___fleq+1
  7899  1D77  3080               	movlw	128
  7900  1D78  0572               	andwf	___fleq@ff1+2,w
  7901  1D79  00FA               	movwf	??___fleq+2
  7902  1D7A  307F               	movlw	127
  7903  1D7B  0573               	andwf	___fleq@ff1+3,w
  7904  1D7C  00FB               	movwf	??___fleq+3
  7905  1D7D  087B               	movf	??___fleq+3,w
  7906  1D7E  047A               	iorwf	??___fleq+2,w
  7907  1D7F  0479               	iorwf	??___fleq+1,w
  7908  1D80  0478               	iorwf	??___fleq,w
  7909  1D81  1D03               	skipz
  7910  1D82  2D8B               	goto	l453
  7911  1D83  3000               	movlw	0
  7912  1D84  00F3               	movwf	___fleq@ff1+3
  7913  1D85  3000               	movlw	0
  7914  1D86  00F2               	movwf	___fleq@ff1+2
  7915  1D87  3000               	movlw	0
  7916  1D88  00F1               	movwf	___fleq@ff1+1
  7917  1D89  3000               	movlw	0
  7918  1D8A  00F0               	movwf	___fleq@ff1
  7919  1D8B                     l453:	
  7920  1D8B  3000               	movlw	0
  7921  1D8C  0574               	andwf	___fleq@ff2,w
  7922  1D8D  00F8               	movwf	??___fleq
  7923  1D8E  3000               	movlw	0
  7924  1D8F  0575               	andwf	___fleq@ff2+1,w
  7925  1D90  00F9               	movwf	??___fleq+1
  7926  1D91  3080               	movlw	128
  7927  1D92  0576               	andwf	___fleq@ff2+2,w
  7928  1D93  00FA               	movwf	??___fleq+2
  7929  1D94  307F               	movlw	127
  7930  1D95  0577               	andwf	___fleq@ff2+3,w
  7931  1D96  00FB               	movwf	??___fleq+3
  7932  1D97  087B               	movf	??___fleq+3,w
  7933  1D98  047A               	iorwf	??___fleq+2,w
  7934  1D99  0479               	iorwf	??___fleq+1,w
  7935  1D9A  0478               	iorwf	??___fleq,w
  7936  1D9B  1D03               	skipz
  7937  1D9C  2DA5               	goto	l454
  7938  1D9D  3000               	movlw	0
  7939  1D9E  00F7               	movwf	___fleq@ff2+3
  7940  1D9F  3000               	movlw	0
  7941  1DA0  00F6               	movwf	___fleq@ff2+2
  7942  1DA1  3000               	movlw	0
  7943  1DA2  00F5               	movwf	___fleq@ff2+1
  7944  1DA3  3000               	movlw	0
  7945  1DA4  00F4               	movwf	___fleq@ff2
  7946  1DA5                     l454:	
  7947  1DA5  0877               	movf	___fleq@ff2+3,w
  7948  1DA6  0673               	xorwf	___fleq@ff1+3,w
  7949  1DA7  1D03               	skipz
  7950  1DA8  2DB3               	goto	u4955
  7951  1DA9  0876               	movf	___fleq@ff2+2,w
  7952  1DAA  0672               	xorwf	___fleq@ff1+2,w
  7953  1DAB  1D03               	skipz
  7954  1DAC  2DB3               	goto	u4955
  7955  1DAD  0875               	movf	___fleq@ff2+1,w
  7956  1DAE  0671               	xorwf	___fleq@ff1+1,w
  7957  1DAF  1D03               	skipz
  7958  1DB0  2DB3               	goto	u4955
  7959  1DB1  0874               	movf	___fleq@ff2,w
  7960  1DB2  0670               	xorwf	___fleq@ff1,w
  7961  1DB3                     u4955:	
  7962  1DB3  1903               	skipnz
  7963  1DB4  2DB7               	goto	l2984
  7964  1DB5  1003               	clrc
  7965  1DB6  0008               	return
  7966  1DB7                     l2984:	
  7967  1DB7  1403               	setc
  7968  1DB8  0008               	return
  7969  1DB9                     __end_of___fleq:	
  7970                           
  7971                           	psect	text23
  7972  1259                     __ptext23:	
  7973 ;; *************** function ___fldiv *****************
  7974 ;; Defined at:
  7975 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;  a               4   30[BANK0 ] unsigned char 
  7978 ;;  b               4   34[BANK0 ] unsigned char 
  7979 ;; Auto vars:     Size  Location     Type
  7980 ;;  grs             4   50[BANK0 ] unsigned long 
  7981 ;;  rem             4   43[BANK0 ] unsigned long 
  7982 ;;  new_exp         2   48[BANK0 ] int 
  7983 ;;  aexp            1   55[BANK0 ] unsigned char 
  7984 ;;  bexp            1   54[BANK0 ] unsigned char 
  7985 ;;  sign            1   47[BANK0 ] unsigned char 
  7986 ;; Return value:  Size  Location     Type
  7987 ;;                  4   30[BANK0 ] unsigned char 
  7988 ;; Registers used:
  7989 ;;		wreg, status,2, status,0, btemp+1
  7990 ;; Tracked objects:
  7991 ;;		On entry : 0/0
  7992 ;;		On exit  : 0/0
  7993 ;;		Unchanged: 0/0
  7994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7995 ;;      Params:         0       8       0       0       0
  7996 ;;      Locals:         0      13       0       0       0
  7997 ;;      Temps:          0       5       0       0       0
  7998 ;;      Totals:         0      26       0       0       0
  7999 ;;Total ram usage:       26 bytes
  8000 ;; Hardware stack levels used:    1
  8001 ;; This function calls:
  8002 ;;		Nothing
  8003 ;; This function is called by:
  8004 ;;		_main
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008                           
  8009                           ;psect for function ___fldiv
  8010  1259                     ___fldiv:	
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8014  1259  1283               	bcf	3,5	;RP0=0, select bank0
  8015  125A  1303               	bcf	3,6	;RP1=0, select bank0
  8016  125B  0845               	movf	___fldiv@b+3,w
  8017  125C  3980               	andlw	128
  8018  125D  00C6               	movwf	??___fldiv
  8019  125E  0846               	movf	??___fldiv,w
  8020  125F  00CF               	movwf	___fldiv@sign
  8021  1260  0845               	movf	___fldiv@b+3,w
  8022  1261  00C6               	movwf	??___fldiv
  8023  1262  0746               	addwf	??___fldiv,w
  8024  1263  00C7               	movwf	??___fldiv+1
  8025  1264  0847               	movf	??___fldiv+1,w
  8026  1265  00D6               	movwf	___fldiv@bexp
  8027  1266  1BC4               	btfsc	___fldiv@b+2,7
  8028  1267  1456               	bsf	___fldiv@bexp,0
  8029  1268  0856               	movf	___fldiv@bexp,w
  8030  1269  1903               	btfsc	3,2
  8031  126A  2A79               	goto	l3420
  8032  126B  0A56               	incf	___fldiv@bexp,w
  8033  126C  1D03               	btfss	3,2
  8034  126D  2A76               	goto	l3416
  8035  126E  3000               	movlw	0
  8036  126F  00C5               	movwf	___fldiv@b+3
  8037  1270  3000               	movlw	0
  8038  1271  00C4               	movwf	___fldiv@b+2
  8039  1272  3000               	movlw	0
  8040  1273  00C3               	movwf	___fldiv@b+1
  8041  1274  3000               	movlw	0
  8042  1275  00C2               	movwf	___fldiv@b
  8043  1276                     l3416:	
  8044  1276  17C4               	bsf	___fldiv@b+2,7
  8045  1277  01C5               	clrf	___fldiv@b+3
  8046  1278  2A81               	goto	l3422
  8047  1279                     l3420:	
  8048  1279  3000               	movlw	0
  8049  127A  00C5               	movwf	___fldiv@b+3
  8050  127B  3000               	movlw	0
  8051  127C  00C4               	movwf	___fldiv@b+2
  8052  127D  3000               	movlw	0
  8053  127E  00C3               	movwf	___fldiv@b+1
  8054  127F  3000               	movlw	0
  8055  1280  00C2               	movwf	___fldiv@b
  8056  1281                     l3422:	
  8057  1281  0841               	movf	___fldiv@a+3,w
  8058  1282  3980               	andlw	128
  8059  1283  00C6               	movwf	??___fldiv
  8060  1284  0846               	movf	??___fldiv,w
  8061  1285  06CF               	xorwf	___fldiv@sign,f
  8062  1286  0841               	movf	___fldiv@a+3,w
  8063  1287  00C6               	movwf	??___fldiv
  8064  1288  0746               	addwf	??___fldiv,w
  8065  1289  00C7               	movwf	??___fldiv+1
  8066  128A  0847               	movf	??___fldiv+1,w
  8067  128B  00D7               	movwf	___fldiv@aexp
  8068  128C  1BC0               	btfsc	___fldiv@a+2,7
  8069  128D  1457               	bsf	___fldiv@aexp,0
  8070  128E  0857               	movf	___fldiv@aexp,w
  8071  128F  1903               	btfsc	3,2
  8072  1290  2A9F               	goto	l3440
  8073  1291  0A57               	incf	___fldiv@aexp,w
  8074  1292  1D03               	btfss	3,2
  8075  1293  2A9C               	goto	l3436
  8076  1294  3000               	movlw	0
  8077  1295  00C1               	movwf	___fldiv@a+3
  8078  1296  3000               	movlw	0
  8079  1297  00C0               	movwf	___fldiv@a+2
  8080  1298  3000               	movlw	0
  8081  1299  00BF               	movwf	___fldiv@a+1
  8082  129A  3000               	movlw	0
  8083  129B  00BE               	movwf	___fldiv@a
  8084  129C                     l3436:	
  8085  129C  17C0               	bsf	___fldiv@a+2,7
  8086  129D  01C1               	clrf	___fldiv@a+3
  8087  129E  2AA7               	goto	l650
  8088  129F                     l3440:	
  8089  129F  3000               	movlw	0
  8090  12A0  00C1               	movwf	___fldiv@a+3
  8091  12A1  3000               	movlw	0
  8092  12A2  00C0               	movwf	___fldiv@a+2
  8093  12A3  3000               	movlw	0
  8094  12A4  00BF               	movwf	___fldiv@a+1
  8095  12A5  3000               	movlw	0
  8096  12A6  00BE               	movwf	___fldiv@a
  8097  12A7                     l650:	
  8098  12A7  0841               	movf	___fldiv@a+3,w
  8099  12A8  0440               	iorwf	___fldiv@a+2,w
  8100  12A9  043F               	iorwf	___fldiv@a+1,w
  8101  12AA  043E               	iorwf	___fldiv@a,w
  8102  12AB  1D03               	skipz
  8103  12AC  2AC6               	goto	l3450
  8104  12AD  3000               	movlw	0
  8105  12AE  00C5               	movwf	___fldiv@b+3
  8106  12AF  3000               	movlw	0
  8107  12B0  00C4               	movwf	___fldiv@b+2
  8108  12B1  3000               	movlw	0
  8109  12B2  00C3               	movwf	___fldiv@b+1
  8110  12B3  3000               	movlw	0
  8111  12B4  00C2               	movwf	___fldiv@b
  8112  12B5  3080               	movlw	128
  8113  12B6  04C4               	iorwf	___fldiv@b+2,f
  8114  12B7  307F               	movlw	127
  8115  12B8  04C5               	iorwf	___fldiv@b+3,f
  8116  12B9                     L9:	
  8117  12B9  084F               	movf	___fldiv@sign,w
  8118  12BA  00C6               	movwf	??___fldiv
  8119  12BB  0846               	movf	??___fldiv,w
  8120  12BC  04C5               	iorwf	___fldiv@b+3,f
  8121  12BD  0845               	movf	___fldiv@b+3,w
  8122  12BE  00C1               	movwf	?___fldiv+3
  8123  12BF  0844               	movf	___fldiv@b+2,w
  8124  12C0  00C0               	movwf	?___fldiv+2
  8125  12C1  0843               	movf	___fldiv@b+1,w
  8126  12C2  00BF               	movwf	?___fldiv+1
  8127  12C3  0842               	movf	___fldiv@b,w
  8128  12C4  00BE               	movwf	?___fldiv
  8129  12C5  0008               	return
  8130  12C6                     l3450:	
  8131  12C6  0856               	movf	___fldiv@bexp,w
  8132  12C7  1D03               	btfss	3,2
  8133  12C8  2AD2               	goto	l3456
  8134  12C9  3000               	movlw	0
  8135  12CA  00C1               	movwf	?___fldiv+3
  8136  12CB  3000               	movlw	0
  8137  12CC  00C0               	movwf	?___fldiv+2
  8138  12CD  3000               	movlw	0
  8139  12CE  00BF               	movwf	?___fldiv+1
  8140  12CF  3000               	movlw	0
  8141  12D0  00BE               	movwf	?___fldiv
  8142  12D1  0008               	return
  8143  12D2                     l3456:	
  8144  12D2  0856               	movf	___fldiv@bexp,w
  8145  12D3  00C6               	movwf	??___fldiv
  8146  12D4  01C7               	clrf	??___fldiv+1
  8147  12D5  0847               	movf	??___fldiv+1,w
  8148  12D6  00C9               	movwf	??___fldiv+3
  8149  12D7  0857               	movf	___fldiv@aexp,w
  8150  12D8  0246               	subwf	??___fldiv,w
  8151  12D9  00C8               	movwf	??___fldiv+2
  8152  12DA  1C03               	skipc
  8153  12DB  03C9               	decf	??___fldiv+3,f
  8154  12DC  0848               	movf	??___fldiv+2,w
  8155  12DD  3E7F               	addlw	127
  8156  12DE  00D0               	movwf	___fldiv@new_exp
  8157  12DF  0849               	movf	??___fldiv+3,w
  8158  12E0  1803               	skipnc
  8159  12E1  3E01               	addlw	1
  8160  12E2  3E00               	addlw	0
  8161  12E3  00D1               	movwf	___fldiv@new_exp+1
  8162  12E4  0845               	movf	___fldiv@b+3,w
  8163  12E5  00CE               	movwf	___fldiv@rem+3
  8164  12E6  0844               	movf	___fldiv@b+2,w
  8165  12E7  00CD               	movwf	___fldiv@rem+2
  8166  12E8  0843               	movf	___fldiv@b+1,w
  8167  12E9  00CC               	movwf	___fldiv@rem+1
  8168  12EA  0842               	movf	___fldiv@b,w
  8169  12EB  00CB               	movwf	___fldiv@rem
  8170  12EC  3000               	movlw	0
  8171  12ED  00C5               	movwf	___fldiv@b+3
  8172  12EE  3000               	movlw	0
  8173  12EF  00C4               	movwf	___fldiv@b+2
  8174  12F0  3000               	movlw	0
  8175  12F1  00C3               	movwf	___fldiv@b+1
  8176  12F2  3000               	movlw	0
  8177  12F3  00C2               	movwf	___fldiv@b
  8178  12F4  3000               	movlw	0
  8179  12F5  00D5               	movwf	___fldiv@grs+3
  8180  12F6  3000               	movlw	0
  8181  12F7  00D4               	movwf	___fldiv@grs+2
  8182  12F8  3000               	movlw	0
  8183  12F9  00D3               	movwf	___fldiv@grs+1
  8184  12FA  3000               	movlw	0
  8185  12FB  00D2               	movwf	___fldiv@grs
  8186  12FC  01D7               	clrf	___fldiv@aexp
  8187  12FD                     l3484:	
  8188  12FD  301A               	movlw	26
  8189  12FE  0257               	subwf	___fldiv@aexp,w
  8190  12FF  1803               	btfsc	3,0
  8191  1300  2B45               	goto	l3486
  8192  1301  0857               	movf	___fldiv@aexp,w
  8193  1302  1903               	btfsc	3,2
  8194  1303  2B21               	goto	l3476
  8195  1304  3001               	movlw	1
  8196  1305  00C6               	movwf	??___fldiv
  8197  1306                     u5875:	
  8198  1306  1003               	clrc
  8199  1307  0DCB               	rlf	___fldiv@rem,f
  8200  1308  0DCC               	rlf	___fldiv@rem+1,f
  8201  1309  0DCD               	rlf	___fldiv@rem+2,f
  8202  130A  0DCE               	rlf	___fldiv@rem+3,f
  8203  130B  0BC6               	decfsz	??___fldiv,f
  8204  130C  2B06               	goto	u5875
  8205  130D  3001               	movlw	1
  8206  130E  00C6               	movwf	??___fldiv
  8207  130F                     u5885:	
  8208  130F  1003               	clrc
  8209  1310  0DC2               	rlf	___fldiv@b,f
  8210  1311  0DC3               	rlf	___fldiv@b+1,f
  8211  1312  0DC4               	rlf	___fldiv@b+2,f
  8212  1313  0DC5               	rlf	___fldiv@b+3,f
  8213  1314  0BC6               	decfsz	??___fldiv,f
  8214  1315  2B0F               	goto	u5885
  8215  1316  1BD5               	btfsc	___fldiv@grs+3,7
  8216  1317  1442               	bsf	___fldiv@b,0
  8217  1318  3001               	movlw	1
  8218  1319  00C6               	movwf	??___fldiv
  8219  131A                     u5905:	
  8220  131A  1003               	clrc
  8221  131B  0DD2               	rlf	___fldiv@grs,f
  8222  131C  0DD3               	rlf	___fldiv@grs+1,f
  8223  131D  0DD4               	rlf	___fldiv@grs+2,f
  8224  131E  0DD5               	rlf	___fldiv@grs+3,f
  8225  131F  0BC6               	decfsz	??___fldiv,f
  8226  1320  2B1A               	goto	u5905
  8227  1321                     l3476:	
  8228  1321  0841               	movf	___fldiv@a+3,w
  8229  1322  024E               	subwf	___fldiv@rem+3,w
  8230  1323  1D03               	skipz
  8231  1324  2B2F               	goto	u5915
  8232  1325  0840               	movf	___fldiv@a+2,w
  8233  1326  024D               	subwf	___fldiv@rem+2,w
  8234  1327  1D03               	skipz
  8235  1328  2B2F               	goto	u5915
  8236  1329  083F               	movf	___fldiv@a+1,w
  8237  132A  024C               	subwf	___fldiv@rem+1,w
  8238  132B  1D03               	skipz
  8239  132C  2B2F               	goto	u5915
  8240  132D  083E               	movf	___fldiv@a,w
  8241  132E  024B               	subwf	___fldiv@rem,w
  8242  132F                     u5915:	
  8243  132F  1C03               	skipc
  8244  1330  2B40               	goto	l3482
  8245  1331  1755               	bsf	___fldiv@grs+3,6
  8246  1332  083E               	movf	___fldiv@a,w
  8247  1333  02CB               	subwf	___fldiv@rem,f
  8248  1334  083F               	movf	___fldiv@a+1,w
  8249  1335  1C03               	skipc
  8250  1336  0F3F               	incfsz	___fldiv@a+1,w
  8251  1337  02CC               	subwf	___fldiv@rem+1,f
  8252  1338  0840               	movf	___fldiv@a+2,w
  8253  1339  1C03               	skipc
  8254  133A  0F40               	incfsz	___fldiv@a+2,w
  8255  133B  02CD               	subwf	___fldiv@rem+2,f
  8256  133C  0841               	movf	___fldiv@a+3,w
  8257  133D  1C03               	skipc
  8258  133E  0F41               	incfsz	___fldiv@a+3,w
  8259  133F  02CE               	subwf	___fldiv@rem+3,f
  8260  1340                     l3482:	
  8261  1340  3001               	movlw	1
  8262  1341  00C6               	movwf	??___fldiv
  8263  1342  0846               	movf	??___fldiv,w
  8264  1343  07D7               	addwf	___fldiv@aexp,f
  8265  1344  2AFD               	goto	l3484
  8266  1345                     l3486:	
  8267  1345  084E               	movf	___fldiv@rem+3,w
  8268  1346  044D               	iorwf	___fldiv@rem+2,w
  8269  1347  044C               	iorwf	___fldiv@rem+1,w
  8270  1348  044B               	iorwf	___fldiv@rem,w
  8271  1349  1D03               	btfss	3,2
  8272  134A  1452               	bsf	___fldiv@grs,0
  8273  134B                     l3500:	
  8274  134B  1BC4               	btfsc	___fldiv@b+2,7
  8275  134C  2B68               	goto	l3502
  8276  134D  3001               	movlw	1
  8277  134E  00C6               	movwf	??___fldiv
  8278  134F                     u5945:	
  8279  134F  1003               	clrc
  8280  1350  0DC2               	rlf	___fldiv@b,f
  8281  1351  0DC3               	rlf	___fldiv@b+1,f
  8282  1352  0DC4               	rlf	___fldiv@b+2,f
  8283  1353  0DC5               	rlf	___fldiv@b+3,f
  8284  1354  0BC6               	decfsz	??___fldiv,f
  8285  1355  2B4F               	goto	u5945
  8286  1356  1BD5               	btfsc	___fldiv@grs+3,7
  8287  1357  1442               	bsf	___fldiv@b,0
  8288  1358  3001               	movlw	1
  8289  1359  00C6               	movwf	??___fldiv
  8290  135A                     u5965:	
  8291  135A  1003               	clrc
  8292  135B  0DD2               	rlf	___fldiv@grs,f
  8293  135C  0DD3               	rlf	___fldiv@grs+1,f
  8294  135D  0DD4               	rlf	___fldiv@grs+2,f
  8295  135E  0DD5               	rlf	___fldiv@grs+3,f
  8296  135F  0BC6               	decfsz	??___fldiv,f
  8297  1360  2B5A               	goto	u5965
  8298  1361  30FF               	movlw	255
  8299  1362  07D0               	addwf	___fldiv@new_exp,f
  8300  1363  1803               	skipnc
  8301  1364  0AD1               	incf	___fldiv@new_exp+1,f
  8302  1365  30FF               	movlw	255
  8303  1366  07D1               	addwf	___fldiv@new_exp+1,f
  8304  1367  2B4B               	goto	l3500
  8305  1368                     l3502:	
  8306  1368  01D7               	clrf	___fldiv@aexp
  8307  1369  1FD5               	btfss	___fldiv@grs+3,7
  8308  136A  2B81               	goto	l3512
  8309  136B  30FF               	movlw	255
  8310  136C  0552               	andwf	___fldiv@grs,w
  8311  136D  00C6               	movwf	??___fldiv
  8312  136E  30FF               	movlw	255
  8313  136F  0553               	andwf	___fldiv@grs+1,w
  8314  1370  00C7               	movwf	??___fldiv+1
  8315  1371  30FF               	movlw	255
  8316  1372  0554               	andwf	___fldiv@grs+2,w
  8317  1373  00C8               	movwf	??___fldiv+2
  8318  1374  307F               	movlw	127
  8319  1375  0555               	andwf	___fldiv@grs+3,w
  8320  1376  00C9               	movwf	??___fldiv+3
  8321  1377  0849               	movf	??___fldiv+3,w
  8322  1378  0448               	iorwf	??___fldiv+2,w
  8323  1379  0447               	iorwf	??___fldiv+1,w
  8324  137A  0446               	iorwf	??___fldiv,w
  8325  137B  1903               	skipnz
  8326  137C  1842               	btfsc	___fldiv@b,0
  8327  137D  2B7F               	goto	l3508
  8328  137E  2B81               	goto	l3512
  8329  137F                     l3508:	
  8330  137F  01D7               	clrf	___fldiv@aexp
  8331  1380  0AD7               	incf	___fldiv@aexp,f
  8332  1381                     l3512:	
  8333  1381  0857               	movf	___fldiv@aexp,w
  8334  1382  1903               	btfsc	3,2
  8335  1383  2BB3               	goto	l3522
  8336  1384  3001               	movlw	1
  8337  1385  07C2               	addwf	___fldiv@b,f
  8338  1386  3000               	movlw	0
  8339  1387  1803               	skipnc
  8340  1388  3001               	movlw	1
  8341  1389  07C3               	addwf	___fldiv@b+1,f
  8342  138A  3000               	movlw	0
  8343  138B  1803               	skipnc
  8344  138C  3001               	movlw	1
  8345  138D  07C4               	addwf	___fldiv@b+2,f
  8346  138E  3000               	movlw	0
  8347  138F  1803               	skipnc
  8348  1390  3001               	movlw	1
  8349  1391  07C5               	addwf	___fldiv@b+3,f
  8350  1392  1C45               	btfss	___fldiv@b+3,0
  8351  1393  2BB3               	goto	l3522
  8352  1394  0842               	movf	___fldiv@b,w
  8353  1395  00C6               	movwf	??___fldiv
  8354  1396  0843               	movf	___fldiv@b+1,w
  8355  1397  00C7               	movwf	??___fldiv+1
  8356  1398  0844               	movf	___fldiv@b+2,w
  8357  1399  00C8               	movwf	??___fldiv+2
  8358  139A  0845               	movf	___fldiv@b+3,w
  8359  139B  00C9               	movwf	??___fldiv+3
  8360  139C  3001               	movlw	1
  8361  139D  00CA               	movwf	??___fldiv+4
  8362  139E                     u6035:	
  8363  139E  0D49               	rlf	??___fldiv+3,w
  8364  139F  0CC9               	rrf	??___fldiv+3,f
  8365  13A0  0CC8               	rrf	??___fldiv+2,f
  8366  13A1  0CC7               	rrf	??___fldiv+1,f
  8367  13A2  0CC6               	rrf	??___fldiv,f
  8368  13A3  0BCA               	decfsz	??___fldiv+4,f
  8369  13A4  2B9E               	goto	u6035
  8370  13A5  0849               	movf	??___fldiv+3,w
  8371  13A6  00C5               	movwf	___fldiv@b+3
  8372  13A7  0848               	movf	??___fldiv+2,w
  8373  13A8  00C4               	movwf	___fldiv@b+2
  8374  13A9  0847               	movf	??___fldiv+1,w
  8375  13AA  00C3               	movwf	___fldiv@b+1
  8376  13AB  0846               	movf	??___fldiv,w
  8377  13AC  00C2               	movwf	___fldiv@b
  8378  13AD  3001               	movlw	1
  8379  13AE  07D0               	addwf	___fldiv@new_exp,f
  8380  13AF  1803               	skipnc
  8381  13B0  0AD1               	incf	___fldiv@new_exp+1,f
  8382  13B1  3000               	movlw	0
  8383  13B2  07D1               	addwf	___fldiv@new_exp+1,f
  8384  13B3                     l3522:	
  8385  13B3  0851               	movf	___fldiv@new_exp+1,w
  8386  13B4  3A80               	xorlw	128
  8387  13B5  00FF               	movwf	127
  8388  13B6  3080               	movlw	128
  8389  13B7  027F               	subwf	127,w
  8390  13B8  1D03               	skipz
  8391  13B9  2BBC               	goto	u6045
  8392  13BA  30FF               	movlw	255
  8393  13BB  0250               	subwf	___fldiv@new_exp,w
  8394  13BC                     u6045:	
  8395  13BC  1C03               	skipc
  8396  13BD  2BCC               	goto	l3526
  8397  13BE  30FF               	movlw	255
  8398  13BF  1283               	bcf	3,5	;RP0=0, select bank0
  8399  13C0  1303               	bcf	3,6	;RP1=0, select bank0
  8400  13C1  00D0               	movwf	___fldiv@new_exp
  8401  13C2  3000               	movlw	0
  8402  13C3  00D1               	movwf	___fldiv@new_exp+1
  8403  13C4  3000               	movlw	0
  8404  13C5  00C5               	movwf	___fldiv@b+3
  8405  13C6  3000               	movlw	0
  8406  13C7  00C4               	movwf	___fldiv@b+2
  8407  13C8  3000               	movlw	0
  8408  13C9  00C3               	movwf	___fldiv@b+1
  8409  13CA  3000               	movlw	0
  8410  13CB  00C2               	movwf	___fldiv@b
  8411  13CC                     l3526:	
  8412  13CC  1283               	bcf	3,5	;RP0=0, select bank0
  8413  13CD  1303               	bcf	3,6	;RP1=0, select bank0
  8414  13CE  0851               	movf	___fldiv@new_exp+1,w
  8415  13CF  3A80               	xorlw	128
  8416  13D0  00FF               	movwf	127
  8417  13D1  3080               	movlw	128
  8418  13D2  027F               	subwf	127,w
  8419  13D3  1D03               	skipz
  8420  13D4  2BD7               	goto	u6055
  8421  13D5  3001               	movlw	1
  8422  13D6  0250               	subwf	___fldiv@new_exp,w
  8423  13D7                     u6055:	
  8424  13D7  1803               	skipnc
  8425  13D8  2BE6               	goto	l672
  8426  13D9  1283               	bcf	3,5	;RP0=0, select bank0
  8427  13DA  1303               	bcf	3,6	;RP1=0, select bank0
  8428  13DB  01D0               	clrf	___fldiv@new_exp
  8429  13DC  01D1               	clrf	___fldiv@new_exp+1
  8430  13DD  3000               	movlw	0
  8431  13DE  00C5               	movwf	___fldiv@b+3
  8432  13DF  3000               	movlw	0
  8433  13E0  00C4               	movwf	___fldiv@b+2
  8434  13E1  3000               	movlw	0
  8435  13E2  00C3               	movwf	___fldiv@b+1
  8436  13E3  3000               	movlw	0
  8437  13E4  00C2               	movwf	___fldiv@b
  8438  13E5  01CF               	clrf	___fldiv@sign
  8439  13E6                     l672:	
  8440  13E6  1283               	bcf	3,5	;RP0=0, select bank0
  8441  13E7  1303               	bcf	3,6	;RP1=0, select bank0
  8442  13E8  0850               	movf	___fldiv@new_exp,w
  8443  13E9  00C6               	movwf	??___fldiv
  8444  13EA  0846               	movf	??___fldiv,w
  8445  13EB  00D6               	movwf	___fldiv@bexp
  8446  13EC  1C56               	btfss	___fldiv@bexp,0
  8447  13ED  2BF0               	goto	l3538
  8448  13EE  17C4               	bsf	___fldiv@b+2,7
  8449  13EF  2BF4               	goto	l674
  8450  13F0                     l3538:	
  8451  13F0  307F               	movlw	127
  8452  13F1  00C6               	movwf	??___fldiv
  8453  13F2  0846               	movf	??___fldiv,w
  8454  13F3  05C4               	andwf	___fldiv@b+2,f
  8455  13F4                     l674:	
  8456  13F4  0856               	movf	___fldiv@bexp,w
  8457  13F5  00C6               	movwf	??___fldiv
  8458  13F6  1003               	clrc
  8459  13F7  0C46               	rrf	??___fldiv,w
  8460  13F8  00C7               	movwf	??___fldiv+1
  8461  13F9  0847               	movf	??___fldiv+1,w
  8462  13FA  00C5               	movwf	___fldiv@b+3
  8463  13FB  2AB9               	goto	L9
  8464  13FC                     __end_of___fldiv:	
  8465                           
  8466                           	psect	text24
  8467  1E9A                     __ptext24:	
  8468 ;; *************** function _Lcd_Start *****************
  8469 ;; Defined at:
  8470 ;;		line 91 in file "main.c"
  8471 ;; Parameters:    Size  Location     Type
  8472 ;;		None
  8473 ;; Auto vars:     Size  Location     Type
  8474 ;;  i               2    0        int 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  1    wreg      void 
  8477 ;; Registers used:
  8478 ;;		wreg, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8484 ;;      Params:         0       0       0       0       0
  8485 ;;      Locals:         2       0       0       0       0
  8486 ;;      Temps:          2       0       0       0       0
  8487 ;;      Totals:         4       0       0       0       0
  8488 ;;Total ram usage:        4 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    2
  8491 ;; This function calls:
  8492 ;;		_Lcd_Cmd
  8493 ;;		_Lcd_SetBit
  8494 ;; This function is called by:
  8495 ;;		_main
  8496 ;; This function uses a non-reentrant model
  8497 ;;
  8498                           
  8499                           
  8500                           ;psect for function _Lcd_Start
  8501  1E9A                     _Lcd_Start:	
  8502                           
  8503                           ;main.c: 93:   Lcd_SetBit(0x00);
  8504                           
  8505                           ;incstack = 0
  8506                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  8507  1E9A  3000               	movlw	0
  8508  1E9B  160A  158A  2431  160A  158A  	fcall	_Lcd_SetBit
  8509                           
  8510                           ;main.c: 95:   Lcd_Cmd(0x03);
  8511  1EA0  3003               	movlw	3
  8512  1EA1  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8513                           
  8514                           ;main.c: 96:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8515  1EA6  3007               	movlw	7
  8516  1EA7  00F5               	movwf	??_Lcd_Start+1
  8517  1EA8  307D               	movlw	125
  8518  1EA9  00F4               	movwf	??_Lcd_Start
  8519  1EAA                     u6087:	
  8520  1EAA  0BF4               	decfsz	??_Lcd_Start,f
  8521  1EAB  2EAA               	goto	u6087
  8522  1EAC  0BF5               	decfsz	??_Lcd_Start+1,f
  8523  1EAD  2EAA               	goto	u6087
  8524                           
  8525                           ;main.c: 97:   Lcd_Cmd(0x03);
  8526  1EAE  3003               	movlw	3
  8527  1EAF  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8528                           
  8529                           ;main.c: 98:     _delay((unsigned long)((11)*(4000000/4000.0)));
  8530  1EB4  300F               	movlw	15
  8531  1EB5  00F5               	movwf	??_Lcd_Start+1
  8532  1EB6  3047               	movlw	71
  8533  1EB7  00F4               	movwf	??_Lcd_Start
  8534  1EB8                     u6097:	
  8535  1EB8  0BF4               	decfsz	??_Lcd_Start,f
  8536  1EB9  2EB8               	goto	u6097
  8537  1EBA  0BF5               	decfsz	??_Lcd_Start+1,f
  8538  1EBB  2EB8               	goto	u6097
  8539  1EBC  2EBD               	nop2
  8540                           
  8541                           ;main.c: 99:   Lcd_Cmd(0x03);
  8542  1EBD  3003               	movlw	3
  8543  1EBE  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8544                           
  8545                           ;main.c: 100:   Lcd_Cmd(0x02);
  8546  1EC3  3002               	movlw	2
  8547  1EC4  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8548                           
  8549                           ;main.c: 101:   Lcd_Cmd(0x02);
  8550  1EC9  3002               	movlw	2
  8551  1ECA  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8552                           
  8553                           ;main.c: 102:   Lcd_Cmd(0x08);
  8554  1ECF  3008               	movlw	8
  8555  1ED0  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8556                           
  8557                           ;main.c: 103:   Lcd_Cmd(0x00);
  8558  1ED5  3000               	movlw	0
  8559  1ED6  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8560                           
  8561                           ;main.c: 104:   Lcd_Cmd(0x0C);
  8562  1EDB  300C               	movlw	12
  8563  1EDC  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8564                           
  8565                           ;main.c: 105:   Lcd_Cmd(0x00);
  8566  1EE1  3000               	movlw	0
  8567  1EE2  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8568                           
  8569                           ;main.c: 106:   Lcd_Cmd(0x06);
  8570  1EE7  3006               	movlw	6
  8571  1EE8  160A  158A  244B   	fcall	_Lcd_Cmd
  8572  1EEB  0008               	return
  8573  1EEC                     __end_of_Lcd_Start:	
  8574                           
  8575                           	psect	text25
  8576  1DB9                     __ptext25:	
  8577 ;; *************** function _Lcd_Set_Cursor *****************
  8578 ;; Defined at:
  8579 ;;		line 70 in file "main.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  a               1    wreg     unsigned char 
  8582 ;;  b               1    4[COMMON] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;  a               1    7[COMMON] unsigned char 
  8585 ;;  temp            1   10[COMMON] unsigned char 
  8586 ;;  y               1    9[COMMON] unsigned char 
  8587 ;;  z               1    8[COMMON] unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      void 
  8590 ;; Registers used:
  8591 ;;		wreg, status,2, status,0, pclath, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8597 ;;      Params:         1       0       0       0       0
  8598 ;;      Locals:         4       0       0       0       0
  8599 ;;      Temps:          2       0       0       0       0
  8600 ;;      Totals:         7       0       0       0       0
  8601 ;;Total ram usage:        7 bytes
  8602 ;; Hardware stack levels used:    1
  8603 ;; Hardware stack levels required when called:    2
  8604 ;; This function calls:
  8605 ;;		_Lcd_Cmd
  8606 ;; This function is called by:
  8607 ;;		_main
  8608 ;; This function uses a non-reentrant model
  8609 ;;
  8610                           
  8611                           
  8612                           ;psect for function _Lcd_Set_Cursor
  8613  1DB9                     _Lcd_Set_Cursor:	
  8614                           
  8615                           ;incstack = 0
  8616                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8617                           ;Lcd_Set_Cursor@a stored from wreg
  8618  1DB9  00F7               	movwf	Lcd_Set_Cursor@a
  8619                           
  8620                           ;main.c: 70: void Lcd_Set_Cursor(char a, char b);main.c: 71: {;main.c: 72:     char temp
      +                          ,z,y;;main.c: 73:     if(a== 1)
  8621  1DBA  0377               	decf	Lcd_Set_Cursor@a,w
  8622  1DBB  1D03               	btfss	3,2
  8623  1DBC  2DDE               	goto	l3134
  8624                           
  8625                           ;main.c: 74:     {;main.c: 75:       temp = 0x80 + b - 1;
  8626  1DBD  0874               	movf	Lcd_Set_Cursor@b,w
  8627  1DBE  3E7F               	addlw	127
  8628  1DBF  00F5               	movwf	??_Lcd_Set_Cursor
  8629  1DC0  0875               	movf	??_Lcd_Set_Cursor,w
  8630  1DC1  00FA               	movwf	Lcd_Set_Cursor@temp
  8631                           
  8632                           ;main.c: 76:         z = temp>>4;
  8633  1DC2  087A               	movf	Lcd_Set_Cursor@temp,w
  8634  1DC3  00F5               	movwf	??_Lcd_Set_Cursor
  8635  1DC4  3004               	movlw	4
  8636  1DC5                     u5355:	
  8637  1DC5  1003               	clrc
  8638  1DC6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8639  1DC7  3EFF               	addlw	-1
  8640  1DC8  1D03               	skipz
  8641  1DC9  2DC5               	goto	u5355
  8642  1DCA  0875               	movf	??_Lcd_Set_Cursor,w
  8643  1DCB  00F6               	movwf	??_Lcd_Set_Cursor+1
  8644  1DCC  0876               	movf	??_Lcd_Set_Cursor+1,w
  8645  1DCD  00F8               	movwf	Lcd_Set_Cursor@z
  8646                           
  8647                           ;main.c: 77:         y = temp & 0x0F;
  8648  1DCE  087A               	movf	Lcd_Set_Cursor@temp,w
  8649  1DCF  390F               	andlw	15
  8650  1DD0  00F5               	movwf	??_Lcd_Set_Cursor
  8651  1DD1  0875               	movf	??_Lcd_Set_Cursor,w
  8652  1DD2  00F9               	movwf	Lcd_Set_Cursor@y
  8653                           
  8654                           ;main.c: 78:         Lcd_Cmd(z);
  8655  1DD3  0878               	movf	Lcd_Set_Cursor@z,w
  8656  1DD4  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8657                           
  8658                           ;main.c: 79:         Lcd_Cmd(y);
  8659  1DD9  0879               	movf	Lcd_Set_Cursor@y,w
  8660  1DDA  160A  158A  244B   	fcall	_Lcd_Cmd
  8661                           
  8662                           ;main.c: 80:     }
  8663  1DDD  0008               	return
  8664  1DDE                     l3134:	
  8665  1DDE  3002               	movlw	2
  8666  1DDF  0677               	xorwf	Lcd_Set_Cursor@a,w
  8667  1DE0  1D03               	btfss	3,2
  8668  1DE1  0008               	return
  8669                           
  8670                           ;main.c: 82:     {;main.c: 83:         temp = 0xC0 + b - 1;
  8671  1DE2  0874               	movf	Lcd_Set_Cursor@b,w
  8672  1DE3  3EBF               	addlw	191
  8673  1DE4  00F5               	movwf	??_Lcd_Set_Cursor
  8674  1DE5  0875               	movf	??_Lcd_Set_Cursor,w
  8675  1DE6  00FA               	movwf	Lcd_Set_Cursor@temp
  8676                           
  8677                           ;main.c: 84:         z = temp>>4;
  8678  1DE7  087A               	movf	Lcd_Set_Cursor@temp,w
  8679  1DE8  00F5               	movwf	??_Lcd_Set_Cursor
  8680  1DE9  3004               	movlw	4
  8681  1DEA                     u5375:	
  8682  1DEA  1003               	clrc
  8683  1DEB  0CF5               	rrf	??_Lcd_Set_Cursor,f
  8684  1DEC  3EFF               	addlw	-1
  8685  1DED  1D03               	skipz
  8686  1DEE  2DEA               	goto	u5375
  8687  1DEF  0875               	movf	??_Lcd_Set_Cursor,w
  8688  1DF0  00F6               	movwf	??_Lcd_Set_Cursor+1
  8689  1DF1  0876               	movf	??_Lcd_Set_Cursor+1,w
  8690  1DF2  00F8               	movwf	Lcd_Set_Cursor@z
  8691                           
  8692                           ;main.c: 85:         y = temp & 0x0F;
  8693  1DF3  087A               	movf	Lcd_Set_Cursor@temp,w
  8694  1DF4  390F               	andlw	15
  8695  1DF5  00F5               	movwf	??_Lcd_Set_Cursor
  8696  1DF6  0875               	movf	??_Lcd_Set_Cursor,w
  8697  1DF7  00F9               	movwf	Lcd_Set_Cursor@y
  8698                           
  8699                           ;main.c: 86:         Lcd_Cmd(z);
  8700  1DF8  0878               	movf	Lcd_Set_Cursor@z,w
  8701  1DF9  160A  158A  244B  160A  158A  	fcall	_Lcd_Cmd
  8702                           
  8703                           ;main.c: 87:         Lcd_Cmd(y);
  8704  1DFE  0879               	movf	Lcd_Set_Cursor@y,w
  8705  1DFF  160A  158A  244B   	fcall	_Lcd_Cmd
  8706  1E02  0008               	return
  8707  1E03                     __end_of_Lcd_Set_Cursor:	
  8708                           
  8709                           	psect	text26
  8710  1D30                     __ptext26:	
  8711 ;; *************** function _Lcd_Print_String *****************
  8712 ;; Defined at:
  8713 ;;		line 125 in file "main.c"
  8714 ;; Parameters:    Size  Location     Type
  8715 ;;  a               2    9[COMMON] PTR unsigned char 
  8716 ;;		 -> STR_7(3), main@current_limit(8), STR_5(12), STR_4(4), 
  8717 ;;		 -> main@current(8), STR_2(7), main@voltage(8), 
  8718 ;; Auto vars:     Size  Location     Type
  8719 ;;  i               2    0[BANK0 ] int 
  8720 ;; Return value:  Size  Location     Type
  8721 ;;                  1    wreg      void 
  8722 ;; Registers used:
  8723 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8724 ;; Tracked objects:
  8725 ;;		On entry : 0/0
  8726 ;;		On exit  : 0/0
  8727 ;;		Unchanged: 0/0
  8728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8729 ;;      Params:         2       0       0       0       0
  8730 ;;      Locals:         0       2       0       0       0
  8731 ;;      Temps:          3       0       0       0       0
  8732 ;;      Totals:         5       2       0       0       0
  8733 ;;Total ram usage:        7 bytes
  8734 ;; Hardware stack levels used:    1
  8735 ;; Hardware stack levels required when called:    2
  8736 ;; This function calls:
  8737 ;;		_Lcd_Print_Char
  8738 ;; This function is called by:
  8739 ;;		_main
  8740 ;; This function uses a non-reentrant model
  8741 ;;
  8742                           
  8743                           
  8744                           ;psect for function _Lcd_Print_String
  8745  1D30                     _Lcd_Print_String:	
  8746                           
  8747                           ;main.c: 125: void Lcd_Print_String(char *a);main.c: 126: {;main.c: 127:     int i;;main
      +                          .c: 128:     for(i=0;a[i]!='\0';i++)
  8748                           
  8749                           ;incstack = 0
  8750                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8751  1D30  1283               	bcf	3,5	;RP0=0, select bank0
  8752  1D31  1303               	bcf	3,6	;RP1=0, select bank0
  8753  1D32  01A0               	clrf	Lcd_Print_String@i
  8754  1D33  01A1               	clrf	Lcd_Print_String@i+1
  8755  1D34                     l3184:	
  8756  1D34  0820               	movf	Lcd_Print_String@i,w
  8757  1D35  0779               	addwf	Lcd_Print_String@a,w
  8758  1D36  00FC               	movwf	??_Lcd_Print_String+1
  8759  1D37  087A               	movf	Lcd_Print_String@a+1,w
  8760  1D38  00FB               	movwf	??_Lcd_Print_String
  8761  1D39  1803               	skipnc
  8762  1D3A  0AFB               	incf	??_Lcd_Print_String,f
  8763  1D3B  1BA0               	btfsc	Lcd_Print_String@i,7
  8764  1D3C  03FB               	decf	??_Lcd_Print_String,f
  8765  1D3D  087B               	movf	??_Lcd_Print_String,w
  8766  1D3E  00FD               	movwf	??_Lcd_Print_String+2
  8767  1D3F  087D               	movf	??_Lcd_Print_String+2,w
  8768  1D40  1283               	bcf	3,5	;RP0=0, select bank0
  8769  1D41  1303               	bcf	3,6	;RP1=0, select bank0
  8770  1D42  00FF               	movwf	127
  8771  1D43  087C               	movf	??_Lcd_Print_String+1,w
  8772  1D44  0084               	movwf	4
  8773  1D45  120A  158A  2000  160A  158A  	fcall	stringtab
  8774  1D4A  3A00               	xorlw	0
  8775  1D4B  1903               	btfsc	3,2
  8776  1D4C  0008               	return
  8777                           
  8778                           ;main.c: 129:        Lcd_Print_Char(a[i]);
  8779  1D4D  0820               	movf	Lcd_Print_String@i,w
  8780  1D4E  0779               	addwf	Lcd_Print_String@a,w
  8781  1D4F  00FC               	movwf	??_Lcd_Print_String+1
  8782  1D50  087A               	movf	Lcd_Print_String@a+1,w
  8783  1D51  00FB               	movwf	??_Lcd_Print_String
  8784  1D52  1803               	skipnc
  8785  1D53  0AFB               	incf	??_Lcd_Print_String,f
  8786  1D54  1BA0               	btfsc	Lcd_Print_String@i,7
  8787  1D55  03FB               	decf	??_Lcd_Print_String,f
  8788  1D56  087B               	movf	??_Lcd_Print_String,w
  8789  1D57  00FD               	movwf	??_Lcd_Print_String+2
  8790  1D58  087D               	movf	??_Lcd_Print_String+2,w
  8791  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  8792  1D5A  1303               	bcf	3,6	;RP1=0, select bank0
  8793  1D5B  00FF               	movwf	127
  8794  1D5C  087C               	movf	??_Lcd_Print_String+1,w
  8795  1D5D  0084               	movwf	4
  8796  1D5E  120A  158A  2000  160A  158A  	fcall	stringtab
  8797  1D63  160A  158A  26EC  160A  158A  	fcall	_Lcd_Print_Char
  8798  1D68  3001               	movlw	1
  8799  1D69  1283               	bcf	3,5	;RP0=0, select bank0
  8800  1D6A  1303               	bcf	3,6	;RP1=0, select bank0
  8801  1D6B  07A0               	addwf	Lcd_Print_String@i,f
  8802  1D6C  1803               	skipnc
  8803  1D6D  0AA1               	incf	Lcd_Print_String@i+1,f
  8804  1D6E  3000               	movlw	0
  8805  1D6F  07A1               	addwf	Lcd_Print_String@i+1,f
  8806  1D70  2D34               	goto	l3184
  8807  1D71                     __end_of_Lcd_Print_String:	
  8808                           
  8809                           	psect	text27
  8810  1EEC                     __ptext27:	
  8811 ;; *************** function _Lcd_Print_Char *****************
  8812 ;; Defined at:
  8813 ;;		line 109 in file "main.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  data            1    wreg     unsigned char 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;  data            1    4[COMMON] unsigned char 
  8818 ;;  i               2    7[COMMON] int 
  8819 ;;  i               2    5[COMMON] int 
  8820 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  8821 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  8822 ;; Return value:  Size  Location     Type
  8823 ;;                  1    wreg      void 
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8831 ;;      Params:         0       0       0       0       0
  8832 ;;      Locals:         7       0       0       0       0
  8833 ;;      Temps:          1       0       0       0       0
  8834 ;;      Totals:         8       0       0       0       0
  8835 ;;Total ram usage:        8 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; Hardware stack levels required when called:    1
  8838 ;; This function calls:
  8839 ;;		_Lcd_SetBit
  8840 ;; This function is called by:
  8841 ;;		_Lcd_Print_String
  8842 ;; This function uses a non-reentrant model
  8843 ;;
  8844                           
  8845                           
  8846                           ;psect for function _Lcd_Print_Char
  8847  1EEC                     _Lcd_Print_Char:	
  8848                           
  8849                           ;incstack = 0
  8850                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8851                           ;Lcd_Print_Char@data stored from wreg
  8852  1EEC  00F4               	movwf	Lcd_Print_Char@data
  8853                           
  8854                           ;main.c: 109: void Lcd_Print_Char(char data);main.c: 110: {;main.c: 111:    char Lower_N
      +                          ibble,Upper_Nibble;;main.c: 112:    Lower_Nibble = data&0x0F;
  8855  1EED  0874               	movf	Lcd_Print_Char@data,w
  8856  1EEE  390F               	andlw	15
  8857  1EEF  00F1               	movwf	??_Lcd_Print_Char
  8858  1EF0  0871               	movf	??_Lcd_Print_Char,w
  8859  1EF1  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  8860                           
  8861                           ;main.c: 113:    Upper_Nibble = data&0xF0;
  8862  1EF2  0874               	movf	Lcd_Print_Char@data,w
  8863  1EF3  39F0               	andlw	240
  8864  1EF4  00F1               	movwf	??_Lcd_Print_Char
  8865  1EF5  0871               	movf	??_Lcd_Print_Char,w
  8866  1EF6  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  8867                           
  8868                           ;main.c: 114:    RB1 = 1;
  8869  1EF7  1283               	bcf	3,5	;RP0=0, select bank0
  8870  1EF8  1303               	bcf	3,6	;RP1=0, select bank0
  8871  1EF9  1486               	bsf	6,1	;volatile
  8872                           
  8873                           ;main.c: 115:    Lcd_SetBit(Upper_Nibble>>4);
  8874  1EFA  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  8875  1EFB  00F1               	movwf	??_Lcd_Print_Char
  8876  1EFC  3004               	movlw	4
  8877  1EFD                     u4265:	
  8878  1EFD  1003               	clrc
  8879  1EFE  0CF1               	rrf	??_Lcd_Print_Char,f
  8880  1EFF  3EFF               	addlw	-1
  8881  1F00  1D03               	skipz
  8882  1F01  2EFD               	goto	u4265
  8883  1F02  0871               	movf	??_Lcd_Print_Char,w
  8884  1F03  160A  158A  2431  160A  158A  	fcall	_Lcd_SetBit
  8885                           
  8886                           ;main.c: 116:    RB2 = 1;
  8887  1F08  1283               	bcf	3,5	;RP0=0, select bank0
  8888  1F09  1303               	bcf	3,6	;RP1=0, select bank0
  8889  1F0A  1506               	bsf	6,2	;volatile
  8890                           
  8891                           ;main.c: 117:    for(int i=2130483; i<=0; i--) __nop();
  8892  1F0B  3033               	movlw	51
  8893  1F0C  00F5               	movwf	Lcd_Print_Char@i
  8894  1F0D  3082               	movlw	130
  8895  1F0E  00F6               	movwf	Lcd_Print_Char@i+1
  8896  1F0F                     l61:	
  8897  1F0F  0000               	nop
  8898  1F10  30FF               	movlw	255
  8899  1F11  07F5               	addwf	Lcd_Print_Char@i,f
  8900  1F12  1803               	skipnc
  8901  1F13  0AF6               	incf	Lcd_Print_Char@i+1,f
  8902  1F14  30FF               	movlw	255
  8903  1F15  07F6               	addwf	Lcd_Print_Char@i+1,f
  8904  1F16  0876               	movf	Lcd_Print_Char@i+1,w
  8905  1F17  3A80               	xorlw	128
  8906  1F18  00FF               	movwf	127
  8907  1F19  3080               	movlw	128
  8908  1F1A  027F               	subwf	127,w
  8909  1F1B  1D03               	skipz
  8910  1F1C  2F1F               	goto	u4275
  8911  1F1D  3001               	movlw	1
  8912  1F1E  0275               	subwf	Lcd_Print_Char@i,w
  8913  1F1F                     u4275:	
  8914  1F1F  1C03               	skipc
  8915  1F20  2F0F               	goto	l61
  8916                           
  8917                           ;main.c: 118:    RB2 = 0;
  8918  1F21  1283               	bcf	3,5	;RP0=0, select bank0
  8919  1F22  1303               	bcf	3,6	;RP1=0, select bank0
  8920  1F23  1106               	bcf	6,2	;volatile
  8921                           
  8922                           ;main.c: 119:    Lcd_SetBit(Lower_Nibble);
  8923  1F24  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  8924  1F25  160A  158A  2431  160A  158A  	fcall	_Lcd_SetBit
  8925                           
  8926                           ;main.c: 120:    RB2 = 1;
  8927  1F2A  1283               	bcf	3,5	;RP0=0, select bank0
  8928  1F2B  1303               	bcf	3,6	;RP1=0, select bank0
  8929  1F2C  1506               	bsf	6,2	;volatile
  8930                           
  8931                           ;main.c: 121:    for(int i=2130483; i<=0; i--) __nop();
  8932  1F2D  3033               	movlw	51
  8933  1F2E  00F7               	movwf	Lcd_Print_Char@i_70
  8934  1F2F  3082               	movlw	130
  8935  1F30  00F8               	movwf	Lcd_Print_Char@i_70+1
  8936  1F31                     l63:	
  8937  1F31  0000               	nop
  8938  1F32  30FF               	movlw	255
  8939  1F33  07F7               	addwf	Lcd_Print_Char@i_70,f
  8940  1F34  1803               	skipnc
  8941  1F35  0AF8               	incf	Lcd_Print_Char@i_70+1,f
  8942  1F36  30FF               	movlw	255
  8943  1F37  07F8               	addwf	Lcd_Print_Char@i_70+1,f
  8944  1F38  0878               	movf	Lcd_Print_Char@i_70+1,w
  8945  1F39  3A80               	xorlw	128
  8946  1F3A  00FF               	movwf	127
  8947  1F3B  3080               	movlw	128
  8948  1F3C  027F               	subwf	127,w
  8949  1F3D  1D03               	skipz
  8950  1F3E  2F41               	goto	u4285
  8951  1F3F  3001               	movlw	1
  8952  1F40  0277               	subwf	Lcd_Print_Char@i_70,w
  8953  1F41                     u4285:	
  8954  1F41  1C03               	skipc
  8955  1F42  2F31               	goto	l63
  8956                           
  8957                           ;main.c: 122:    RB2 = 0;
  8958  1F43  1283               	bcf	3,5	;RP0=0, select bank0
  8959  1F44  1303               	bcf	3,6	;RP1=0, select bank0
  8960  1F45  1106               	bcf	6,2	;volatile
  8961  1F46  0008               	return
  8962  1F47                     __end_of_Lcd_Print_Char:	
  8963                           
  8964                           	psect	text28
  8965  1002                     __ptext28:	
  8966 ;; *************** function _Lcd_Clear *****************
  8967 ;; Defined at:
  8968 ;;		line 64 in file "main.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;                  2   46[None  ] int 
  8975 ;; Registers used:
  8976 ;;		wreg, status,2, status,0, pclath, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8982 ;;      Params:         0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    2
  8989 ;; This function calls:
  8990 ;;		_Lcd_Cmd
  8991 ;; This function is called by:
  8992 ;;		_main
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _Lcd_Clear
  8998  1002                     _Lcd_Clear:	
  8999                           
  9000                           ;main.c: 66:     Lcd_Cmd(0);
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9004  1002  3000               	movlw	0
  9005  1003  160A  158A  244B  160A  118A  	fcall	_Lcd_Cmd
  9006                           
  9007                           ;main.c: 67:     Lcd_Cmd(1);
  9008  1008  3001               	movlw	1
  9009  1009  160A  158A  244B   	fcall	_Lcd_Cmd
  9010  100C  0008               	return
  9011  100D                     __end_of_Lcd_Clear:	
  9012                           
  9013                           	psect	text29
  9014  1C4B                     __ptext29:	
  9015 ;; *************** function _Lcd_Cmd *****************
  9016 ;; Defined at:
  9017 ;;		line 55 in file "main.c"
  9018 ;; Parameters:    Size  Location     Type
  9019 ;;  a               1    wreg     unsigned char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  a               1    3[COMMON] unsigned char 
  9022 ;; Return value:  Size  Location     Type
  9023 ;;                  1    wreg      void 
  9024 ;; Registers used:
  9025 ;;		wreg, status,2, status,0, pclath, cstack
  9026 ;; Tracked objects:
  9027 ;;		On entry : 0/0
  9028 ;;		On exit  : 0/0
  9029 ;;		Unchanged: 0/0
  9030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9031 ;;      Params:         0       0       0       0       0
  9032 ;;      Locals:         1       0       0       0       0
  9033 ;;      Temps:          2       0       0       0       0
  9034 ;;      Totals:         3       0       0       0       0
  9035 ;;Total ram usage:        3 bytes
  9036 ;; Hardware stack levels used:    1
  9037 ;; Hardware stack levels required when called:    1
  9038 ;; This function calls:
  9039 ;;		_Lcd_SetBit
  9040 ;; This function is called by:
  9041 ;;		_Lcd_Clear
  9042 ;;		_Lcd_Set_Cursor
  9043 ;;		_Lcd_Start
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           
  9048                           ;psect for function _Lcd_Cmd
  9049  1C4B                     _Lcd_Cmd:	
  9050                           
  9051                           ;incstack = 0
  9052                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9053                           ;Lcd_Cmd@a stored from wreg
  9054  1C4B  00F3               	movwf	Lcd_Cmd@a
  9055                           
  9056                           ;main.c: 55: void Lcd_Cmd(char a);main.c: 56: {;main.c: 57:     RB1 = 0;
  9057  1C4C  1283               	bcf	3,5	;RP0=0, select bank0
  9058  1C4D  1303               	bcf	3,6	;RP1=0, select bank0
  9059  1C4E  1086               	bcf	6,1	;volatile
  9060                           
  9061                           ;main.c: 58:     Lcd_SetBit(a);
  9062  1C4F  0873               	movf	Lcd_Cmd@a,w
  9063  1C50  160A  158A  2431  160A  158A  	fcall	_Lcd_SetBit
  9064                           
  9065                           ;main.c: 59:     RB2 = 1;
  9066  1C55  1283               	bcf	3,5	;RP0=0, select bank0
  9067  1C56  1303               	bcf	3,6	;RP1=0, select bank0
  9068  1C57  1506               	bsf	6,2	;volatile
  9069                           
  9070                           ;main.c: 60:         _delay((unsigned long)((4)*(4000000/4000.0)));
  9071  1C58  3006               	movlw	6
  9072  1C59  00F2               	movwf	??_Lcd_Cmd+1
  9073  1C5A  3030               	movlw	48
  9074  1C5B  00F1               	movwf	??_Lcd_Cmd
  9075  1C5C                     u6107:	
  9076  1C5C  0BF1               	decfsz	??_Lcd_Cmd,f
  9077  1C5D  2C5C               	goto	u6107
  9078  1C5E  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9079  1C5F  2C5C               	goto	u6107
  9080  1C60  0000               	nop
  9081                           
  9082                           ;main.c: 61:         RB2 = 0;
  9083  1C61  1283               	bcf	3,5	;RP0=0, select bank0
  9084  1C62  1303               	bcf	3,6	;RP1=0, select bank0
  9085  1C63  1106               	bcf	6,2	;volatile
  9086  1C64  0008               	return
  9087  1C65                     __end_of_Lcd_Cmd:	
  9088                           
  9089                           	psect	text30
  9090  1C31                     __ptext30:	
  9091 ;; *************** function _Lcd_SetBit *****************
  9092 ;; Defined at:
  9093 ;;		line 32 in file "main.c"
  9094 ;; Parameters:    Size  Location     Type
  9095 ;;  data_bit        1    wreg     unsigned char 
  9096 ;; Auto vars:     Size  Location     Type
  9097 ;;  data_bit        1    0[COMMON] unsigned char 
  9098 ;; Return value:  Size  Location     Type
  9099 ;;                  1    wreg      void 
  9100 ;; Registers used:
  9101 ;;		wreg
  9102 ;; Tracked objects:
  9103 ;;		On entry : 0/0
  9104 ;;		On exit  : 0/0
  9105 ;;		Unchanged: 0/0
  9106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9107 ;;      Params:         0       0       0       0       0
  9108 ;;      Locals:         1       0       0       0       0
  9109 ;;      Temps:          0       0       0       0       0
  9110 ;;      Totals:         1       0       0       0       0
  9111 ;;Total ram usage:        1 bytes
  9112 ;; Hardware stack levels used:    1
  9113 ;; This function calls:
  9114 ;;		Nothing
  9115 ;; This function is called by:
  9116 ;;		_Lcd_Cmd
  9117 ;;		_Lcd_Start
  9118 ;;		_Lcd_Print_Char
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           
  9123                           ;psect for function _Lcd_SetBit
  9124  1C31                     _Lcd_SetBit:	
  9125                           
  9126                           ;incstack = 0
  9127                           ; Regs used in _Lcd_SetBit: [wreg]
  9128                           ;Lcd_SetBit@data_bit stored from wreg
  9129  1C31  00F0               	movwf	Lcd_SetBit@data_bit
  9130                           
  9131                           ;main.c: 32: void Lcd_SetBit(char data_bit);main.c: 33: {;main.c: 34:     if(data_bit& 1
      +                          )
  9132  1C32  1C70               	btfss	Lcd_SetBit@data_bit,0
  9133  1C33  2C38               	goto	l33
  9134                           
  9135                           ;main.c: 35:         RB4 = 1;
  9136  1C34  1283               	bcf	3,5	;RP0=0, select bank0
  9137  1C35  1303               	bcf	3,6	;RP1=0, select bank0
  9138  1C36  1606               	bsf	6,4	;volatile
  9139  1C37  2C3B               	goto	l34
  9140  1C38                     l33:	
  9141                           ;main.c: 36:     else
  9142                           
  9143                           
  9144                           ;main.c: 37:         RB4 = 0;
  9145  1C38  1283               	bcf	3,5	;RP0=0, select bank0
  9146  1C39  1303               	bcf	3,6	;RP1=0, select bank0
  9147  1C3A  1206               	bcf	6,4	;volatile
  9148  1C3B                     l34:	
  9149                           
  9150                           ;main.c: 39:     if(data_bit& 2)
  9151  1C3B  1CF0               	btfss	Lcd_SetBit@data_bit,1
  9152  1C3C  2C3F               	goto	l35
  9153                           
  9154                           ;main.c: 40:         RB5 = 1;
  9155  1C3D  1686               	bsf	6,5	;volatile
  9156  1C3E  2C40               	goto	l36
  9157  1C3F                     l35:	
  9158                           ;main.c: 41:     else
  9159                           
  9160                           
  9161                           ;main.c: 42:         RB5 = 0;
  9162  1C3F  1286               	bcf	6,5	;volatile
  9163  1C40                     l36:	
  9164                           
  9165                           ;main.c: 44:     if(data_bit& 4)
  9166  1C40  1D70               	btfss	Lcd_SetBit@data_bit,2
  9167  1C41  2C44               	goto	l37
  9168                           
  9169                           ;main.c: 45:         RB6 = 1;
  9170  1C42  1706               	bsf	6,6	;volatile
  9171  1C43  2C45               	goto	l38
  9172  1C44                     l37:	
  9173                           ;main.c: 46:     else
  9174                           
  9175                           
  9176                           ;main.c: 47:         RB6 = 0;
  9177  1C44  1306               	bcf	6,6	;volatile
  9178  1C45                     l38:	
  9179                           
  9180                           ;main.c: 49:     if(data_bit& 8)
  9181  1C45  1DF0               	btfss	Lcd_SetBit@data_bit,3
  9182  1C46  2C49               	goto	l39
  9183                           
  9184                           ;main.c: 50:         RB7 = 1;
  9185  1C47  1786               	bsf	6,7	;volatile
  9186  1C48  0008               	return
  9187  1C49                     l39:	
  9188                           ;main.c: 51:     else
  9189                           
  9190                           
  9191                           ;main.c: 52:         RB7 = 0;
  9192  1C49  1386               	bcf	6,7	;volatile
  9193  1C4A  0008               	return
  9194  1C4B                     __end_of_Lcd_SetBit:	
  9195                           
  9196                           	psect	text31
  9197  1CCB                     __ptext31:	
  9198 ;; *************** function _ADC_Read *****************
  9199 ;; Defined at:
  9200 ;;		line 138 in file "main.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;  channel         1    wreg     unsigned char 
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;  channel         1    4[COMMON] unsigned char 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2    0[COMMON] unsigned int 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9214 ;;      Params:         2       0       0       0       0
  9215 ;;      Locals:         1       0       0       0       0
  9216 ;;      Temps:          2       0       0       0       0
  9217 ;;      Totals:         5       0       0       0       0
  9218 ;;Total ram usage:        5 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; This function calls:
  9221 ;;		Nothing
  9222 ;; This function is called by:
  9223 ;;		_main
  9224 ;; This function uses a non-reentrant model
  9225 ;;
  9226                           
  9227                           
  9228                           ;psect for function _ADC_Read
  9229  1CCB                     _ADC_Read:	
  9230                           
  9231                           ;incstack = 0
  9232                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  9233                           ;ADC_Read@channel stored from wreg
  9234  1CCB  00F4               	movwf	ADC_Read@channel
  9235                           
  9236                           ;main.c: 138: unsigned int ADC_Read(unsigned char channel);main.c: 139: {;main.c: 140:  
      +                           ADCON0 &= 0x11000101;
  9237  1CCC  3001               	movlw	1
  9238  1CCD  00F2               	movwf	??_ADC_Read
  9239  1CCE  0872               	movf	??_ADC_Read,w
  9240  1CCF  1283               	bcf	3,5	;RP0=0, select bank0
  9241  1CD0  1303               	bcf	3,6	;RP1=0, select bank0
  9242  1CD1  059F               	andwf	31,f	;volatile
  9243                           
  9244                           ;main.c: 141:   ADCON0 |= channel<<3;
  9245  1CD2  0874               	movf	ADC_Read@channel,w	;volatile
  9246  1CD3  00F2               	movwf	??_ADC_Read
  9247  1CD4  3002               	movlw	2
  9248  1CD5                     u5415:	
  9249  1CD5  1003               	clrc
  9250  1CD6  0DF2               	rlf	??_ADC_Read,f
  9251  1CD7  3EFF               	addlw	-1
  9252  1CD8  1D03               	skipz
  9253  1CD9  2CD5               	goto	u5415
  9254  1CDA  1003               	clrc
  9255  1CDB  0D72               	rlf	??_ADC_Read,w
  9256  1CDC  00F3               	movwf	??_ADC_Read+1
  9257  1CDD  0873               	movf	??_ADC_Read+1,w
  9258  1CDE  049F               	iorwf	31,f	;volatile
  9259                           
  9260                           ;main.c: 142:   _delay((unsigned long)((2)*(4000000/4000.0)));
  9261  1CDF  3003               	movlw	3
  9262  1CE0  00F3               	movwf	??_ADC_Read+1
  9263  1CE1  3097               	movlw	151
  9264  1CE2  00F2               	movwf	??_ADC_Read
  9265  1CE3                     u6117:	
  9266  1CE3  0BF2               	decfsz	??_ADC_Read,f
  9267  1CE4  2CE3               	goto	u6117
  9268  1CE5  0BF3               	decfsz	??_ADC_Read+1,f
  9269  1CE6  2CE3               	goto	u6117
  9270  1CE7  2CE8               	nop2
  9271                           
  9272                           ;main.c: 143:   GO_nDONE = 1;
  9273  1CE8  1283               	bcf	3,5	;RP0=0, select bank0
  9274  1CE9  1303               	bcf	3,6	;RP1=0, select bank0
  9275  1CEA  151F               	bsf	31,2	;volatile
  9276  1CEB                     l77:	
  9277                           ;main.c: 144:   while(GO_nDONE);
  9278                           
  9279  1CEB  191F               	btfsc	31,2	;volatile
  9280  1CEC  2CEB               	goto	l77
  9281                           
  9282                           ;main.c: 145:   return ((ADRESH<<8)+ADRESL);
  9283  1CED  081E               	movf	30,w	;volatile
  9284  1CEE  00F1               	movwf	?_ADC_Read+1
  9285  1CEF  1683               	bsf	3,5	;RP0=1, select bank1
  9286  1CF0  1303               	bcf	3,6	;RP1=0, select bank1
  9287  1CF1  081E               	movf	30,w	;volatile
  9288  1CF2  00F0               	movwf	?_ADC_Read
  9289  1CF3  0008               	return
  9290  1CF4                     __end_of_ADC_Read:	
  9291                           
  9292                           	psect	text32
  9293  1C11                     __ptext32:	
  9294 ;; *************** function _ADC_Initialize *****************
  9295 ;; Defined at:
  9296 ;;		line 132 in file "main.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;		None
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;		None
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      void 
  9303 ;; Registers used:
  9304 ;;		wreg
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9310 ;;      Params:         0       0       0       0       0
  9311 ;;      Locals:         0       0       0       0       0
  9312 ;;      Temps:          0       0       0       0       0
  9313 ;;      Totals:         0       0       0       0       0
  9314 ;;Total ram usage:        0 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; This function calls:
  9317 ;;		Nothing
  9318 ;; This function is called by:
  9319 ;;		_main
  9320 ;; This function uses a non-reentrant model
  9321 ;;
  9322                           
  9323                           
  9324                           ;psect for function _ADC_Initialize
  9325  1C11                     _ADC_Initialize:	
  9326                           
  9327                           ;main.c: 134:   ADCON0 = 0b01000001;
  9328                           
  9329                           ;incstack = 0
  9330                           ; Regs used in _ADC_Initialize: [wreg]
  9331  1C11  3041               	movlw	65
  9332  1C12  1283               	bcf	3,5	;RP0=0, select bank0
  9333  1C13  1303               	bcf	3,6	;RP1=0, select bank0
  9334  1C14  009F               	movwf	31	;volatile
  9335                           
  9336                           ;main.c: 135:   ADCON1 = 0b11000000;
  9337  1C15  30C0               	movlw	192
  9338  1C16  1683               	bsf	3,5	;RP0=1, select bank1
  9339  1C17  1303               	bcf	3,6	;RP1=0, select bank1
  9340  1C18  009F               	movwf	31	;volatile
  9341  1C19  0008               	return
  9342  1C1A                     __end_of_ADC_Initialize:	
  9343  007E                     btemp	set	126	;btemp
  9344  007E                     wtemp0	set	126


Data Sizes:
    Strings     36
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     68      68
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_3(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> main@current_limit(BANK1[8]), main@current(BANK1[8]), main@voltage(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[3]), main@current_limit(BANK1[8]), STR_5(CODE[12]), STR_4(CODE[4]), 
		 -> main@current(BANK1[8]), STR_2(CODE[7]), main@voltage(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   41417
                                             35 BANK1     33    33      0
                     _ADC_Initialize
                           _ADC_Read
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___fldiv
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32235
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7864
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6327
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4849
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1577
                                             30 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     892
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     44      44       7       85.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jul 04 21:51:51 2019

              ___fldiv@aexp 0057                ___fldiv@bexp 0056                           pc 0002  
              ___fldiv@sign 004F                 __CFG_CP$OFF 0000                          l33 1C38  
                        l34 1C3B                          l35 1C3F                          l36 1C40  
                        l37 1C44                          l61 1F0F                          l38 1C45  
                        l39 1C49                          l63 1F31                          l77 1CEB  
              ___awdiv@sign 0021                          fsr 0004         ___wmul@multiplicand 0072  
       __Umul8_16@word_mpld 0076                         l216 0273                         l242 05D7  
                       l600 169A                         l257 07C9                         l267 1C6F  
                       l453 1D8B                         l461 10FA                         l454 1DA5  
                       l702 0CAA                         l615 1775                         l448 098A  
                       l650 12A7                         l458 1094                         l636 17F5  
                       l628 17DD                         l477 105C                         l741 1180  
                       l742 118A                         l734 116A                         l495 1241  
                       l672 13E6                         l728 112A                         l674 13F4  
                       l594 1623                         l756 1CBA                         l598 16BC  
                       _RB1 0031                         _RB2 0032                         _RB4 0034  
                       _RB5 0035                         _RB6 0036                         _RB7 0037  
              __CFG_CPD$OFF 0000                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076                __CFG_FOSC$HS 0000                ___flmul@aexp 0036  
              ___flmul@bexp 0037                 _sprintf$798 00AA                ___flmul@sign 0031  
              ___flmul@temp 003C                ___flmul@prod 0038                __CFG_LVP$OFF 0000  
              ___fltol@exp1 005B                        l3022 1021                        l2310 1E0D  
                      l3040 1058                        l3104 117E                        l2402 15EE  
                      l3018 1018                        l3106 116F                        l2322 1E1A  
                      l2314 1E14                        l2500 16EB                        l3060 1E66  
                      l2324 1E28                        l2332 1E41                        l3300 0500  
                      l3220 0235                        l3134 1DDE                        l2502 16ED  
                      l2510 16FD                        l2430 161B                        l2406 15F1  
                      l3038 1048                        l3118 11A7                        l2238 1CB2  
                      l2350 1CFC                        l3230 0291                        l3222 026F  
                      l3206 0222                        l2520 1767                        l2408 15F9  
                      l3048 106B                        l3064 1E84                        l2600 09C9  
                      l2352 1D0A                        l2272 1F5E                        l2336 1E49  
                      l2328 1E36                        l3312 0586                        l2426 1618  
                      l3058 1E56                        l3090 1139                        l2362 1D2B  
                      l2290 1F8A                        l2282 1F66                        l2266 1F53  
                      l3330 0639                        l3306 0584                        l3500 134B  
                      l3420 1279                        l2436 162D                        l3068 1E91  
                      l3084 1122                        l2700 0C64                        l2380 08E8  
                      l2284 1F74                        l3236 02A1                        l3228 0275  
                      l3502 1368                        l3422 1281                        l2550 17A8  
                      l2542 179D                        l3094 113D                        l2710 0C93  
                      l2614 09E4                        l2358 1D20                        l2374 08CC  
                      l2294 1F95                        l3350 0685                        l3342 0668  
                      l3318 05C2                        l3270 03CA                        l3262 0341  
                      l3246 02E7                        l3184 1D34                        l3512 1381  
                      l3440 129F                        l3416 1276                        l2536 1796  
                      l2528 1787                        l2544 179F                        l3096 114F  
                      l2704 0C7A                        l2616 09E6                        l2376 08DA  
                      l2384 08F3                        l2800 0E34                        l3336 064C  
                      l3522 13B3                        l3450 12C6                        l2554 17AA  
                      l2474 16A5                        l2466 1669                        l2626 09FC  
                      l2618 09EE                        l2298 1F9D                        l3370 07B4  
                      l3290 04B2                        l3274 03EB                        l3508 137F  
                      l3436 129C                        l2572 17ED                        l2492 16CA  
                      l2476 16A7                        l2484 16B6                        l2812 0F4A  
                      l2804 0E5F                        l3364 07A3                        l3372 07B9  
                      l3620 0289                        l3526 13CC                        l2830 1C2F  
                      l3286 0497                        l3278 043F                        l3390 020C  
                      l3456 12D2                        l2576 17F1                        l2840 11CA  
                      l2680 0C19                        l3384 07DF                        l3392 07F7  
                      l3552 140E                        l3538 13F0                        l3482 1340  
                      l2914 0962                        l2906 093A                        l2690 0C32  
                      l2818 0FD5                        l3476 1321                        l3484 12FD  
                      l2940 1C67                        l2924 0976                        l2836 11C1  
                      l2596 09BF                        l2772 0116                        l3486 1345  
                      l2934 0999                        l2926 0986                        l2862 121A  
                      l2854 11FA                        l2686 0C30                        l2678 0BFC  
                      l2598 09C1                        l2960 1FC2                        l2872 122D  
                      l2882 1250                        l2874 123D                        l2778 01C3  
                      l2794 0DA9                        l2972 1FF7                        l2892 090C  
                      l2958 1FB2                        l2984 1DB7                        l2968 1FEA  
                      l2888 0903                        l2994 10AE                        l2998 10D4  
                      STR_1 08B8                __CFG_WDTE$ON 0000                        STR_2 08AC  
                      STR_3 08B8                        STR_4 08BD                        STR_5 08A0  
                      STR_6 08B3                        STR_7 08C1           main@current_limit 00D6  
                      u3055 1CBB                        u4015 0AAC                        u4105 0BCA  
                      u3145 1F69                        u5011 10E5                        u3315 1CFF  
                      u5012 10E6                        u5013 10EB                        u4125 0BE8  
                      u4045 0B09                        u3405 08E0                        u3165 1F75  
                      u3245 1E1D                        u5014 10EC                        u5015 10F1  
                      u4135 0C00                        u3335 1D0B                        u3415 08E9  
                      u3175 1F81                        u5016 10F2                        u4225 0C4F  
                      u3345 1D17                        u4305 0028                        u3185 1F8B  
                      u3265 1E2E                        u3530 1689                        u5115 1061  
                      u4235 0C6D                        u4155 0C0B                        u3355 1D21  
                      u4315 0082                        u3275 1E37                        u3540 168A  
                      u3525 167D                        u4245 0C85                        u4085 0BA5  
                      u4325 00D7                        u4405 0D1F                        u5055 102A  
                      u4415 0D6A                        u4265 1EFD                        u3385 08CF  
                      u4345 0137                        u6107 1C5C                        u4275 1F1F  
                      u6035 139E                        u5155 1E5A                        u5315 1192  
                      u5235 1146                        u4355 0184                        u4515 0F62  
                      u4435 0DC1                        u6117 1CE3                        u4285 1F41  
                      u6045 13BC                        u3725 1789                        u5085 1049  
                      u4605 121B                        u4365 01CE                        u4525 0F9E  
                      u4445 0DFD                        u5415 1CD5                        u6055 13D7  
                      u3671 1728                        u3663 170F                        u3655 16F1  
                      u3575 16AB                        u5175 1E74                        u5255 1162  
                      u4535 0FD8                        u4455 0E37                        u3680 173C  
                      u3672 1729                        u3825 17C7                        u3681 173D  
                      u3673 172E                        u5185 1E85                        u3682 1742  
                      u3674 172F                        u5355 1DC5                        u3683 1743  
                      u3675 1734                        u5275 1177                        u4715 093C  
                      u4475 0E84                        u4395 0CE3                        u3676 1735  
                      u4805 098F                        u4725 0951                        u4645 122E  
                      u4485 0EC0                        u5605 05B8                        u6077 15CA  
                      u5375 1DEA                        u6087 1EAA                        u4735 0964  
                      u4495 0F0B                        u5535 03F6                        u6097 1EB8  
                      u4905 1FD9                        u4585 11FC                        u5545 044A  
                      u4915 1FEB                        u4835 1C70                        u4675 1246  
                      u4595 120D                        u5635 05DF                        u4845 1C77  
                      u4775 0977                        u5655 0655                        u5575 0495  
                      u5905 131A                        u5745 07D0                        u5665 0662  
                      u5915 132F                        u4955 1DB3                        u4875 1FB6  
                      u5755 07DD                        u5595 0589                        u5685 0705  
                      u4991 10BF                        u4895 1FC4                        u5695 076B  
                      u4992 10C0                        u5945 134F                        u4993 10C5  
                      u4994 10C6                        u5875 1306                        u4995 10CB  
                      u4996 10CC                        u5965 135A                        u5885 130F  
               main@current 00CE                __CFG_WRT$OFF 0000                        _main 13FC  
                      btemp 007E            __end_of_ADC_Read 1CF4               __CFG_BOREN$ON 0000  
                      start 0000          Lcd_Print_Char@i_70 0077             ___fldiv@new_exp 0050  
        Lcd_Print_Char@data 0074                 main@voltage 00C6             __end_of_Lcd_Cmd 1C65  
                _Lcd_SetBit 1C31               ___fltol@sign1 005A             __end_of___fladd 1800  
                     ?_main 0070             __end_of___fldiv 13FC             __end_of___awdiv 1FA2  
           __end_of___flneg 1C23             __end_of___awmod 1E4E             __end_of___flmul 0CB7  
           __end_of___flsub 1CA8             __end_of___fltol 107A             __end_of___lldiv 2000  
           ___awdiv@divisor 0077             __end_of___llmod 1E9A             __end_of___lwdiv 1D30  
           __end_of___lwmod 08F8             ___awdiv@counter 0020     __size_of_Lcd_Set_Cursor 004A  
                     _TRISB 0086               __CFG_PWRTE$ON 0000             __end_of_dpowers 08A0  
                     _scale 0CB7             __end_of_isdigit 1C31                       main@f 00DE  
                     pclath 000A   __size_of_Lcd_Print_String 0041                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07FC     __size_of_Lcd_Print_Char 005B  
           __initialization 07FC                __end_of_main 15D1                      ??_main 00C3  
        __size_of_Lcd_Clear 000B        __size_of__tdiv_to_l_ 00A9          __size_of_Lcd_Start 0052  
                    _ADCON0 001F                      _ADCON1 009F            ___llmod@dividend 0074  
                    ?_scale 003E                      _ADRESH 001E                      _ADRESL 009E  
          ___awdiv@dividend 0079                   ??_Lcd_Cmd 0071            __end_of___xxtofl 11B0  
          __end_of__powers_ 0844                      ___flge 107A                      ___fleq 1D71  
                 ??___fladd 005A                      ___wmul 1C65                   ??___fldiv 0046  
                 ??___awdiv 007B                   ??___flneg 0074                   ??___awmod 0074  
                 ??___flmul 002C                   ??___flsub 007E                   ??___fltol 0055  
                 ??___lldiv 0078                   ??___llmod 0078                   ??___lwdiv 007A  
                 ??___lwmod 0074             ADC_Read@channel 0074                 ?_Lcd_SetBit 0070  
                    _fround 0004            ___awdiv@quotient 0022             ___awmod@divisor 0070  
           ___awmod@counter 0075                   ??_isdigit 0070          __size_of__Umul8_16 0023  
                 ?_ADC_Read 0070                   ??_sprintf 00A5             Lcd_Set_Cursor@a 0077  
           Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078  
                ___flge@ff1 0070                  ___flge@ff2 0074                ___xxtofl@arg 007A  
              ___xxtofl@exp 0079                ___xxtofl@val 0070                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FC                  ___flneg@f1 0070  
         __end_of_Lcd_Clear 100D                  ___fltol@f1 0051           __end_of_Lcd_Start 1EEC  
            __pcstackCOMMON 0070               __end_of_scale 1000              _Lcd_Set_Cursor 1DB9  
                __div_to_l_ 08F8                  ??_ADC_Read 0072             __div_to_l_@exp1 0025  
           __div_to_l_@cntr 0024                     ??_scale 0042             __div_to_l_@quot 0020  
          _Lcd_Print_String 1D30         __size_of_Lcd_SetBit 001A               __div_to_l_@f1 0070  
             __div_to_l_@f2 0074              _Lcd_Print_Char 1EEC           __end_of__Umul8_16 1CCB  
                __pmaintext 13FC                     ?___flge 0070                     ?___fleq 0070  
                   ?___wmul 0070                     ?_fround 003E          Lcd_SetBit@data_bit 0070  
    __end_of_Lcd_Set_Cursor 1E03     __size_of_ADC_Initialize 0009                   ?___xxtofl 0070  
                __stringtab 0800             Lcd_Print_Char@i 0075                     _Lcd_Cmd 1C4B  
    __end_of_Lcd_Print_Char 1F47           __end_of__npowers_ 0878             __size_of___flge 0093  
           __size_of___fleq 0048                     ___fladd 15D1                     ___fldiv 1259  
                   ___awdiv 1F47                     ___flneg 1C1A                     ___awmod 1E03  
                   ___flmul 09A2                     ___flsub 1C86                     ___fltol 100D  
                   ___lldiv 1FA2             __size_of___wmul 0021                     ___llmod 1E4E  
                   ___lwdiv 1CF4                  _fround$795 004D                  _fround$796 0049  
                   ___lwmod 08C6             __size_of_fround 0201             ?_Lcd_Set_Cursor 0074  
                   __ptext1 0205                     __ptext2 0CB7                     __ptext3 1E03  
                   __ptext4 1F47                     __ptext5 1C23                     __ptext6 0004  
                   __ptext7 08C6                     __ptext8 1CF4                     __ptext9 09A2  
               ?__div_to_l_ 0070                     _dpowers 0878                     _isdigit 1C23  
                ??___xxtofl 0074            ___awmod@dividend 0072                     main@adc 00E2  
                   _sprintf 0205        end_of_initialization 07FC             ?_Lcd_Print_Char 0070  
           ___lldiv@divisor 0070             ___lldiv@counter 007D              __tdiv_to_l_@f1 0070  
            __tdiv_to_l_@f2 0074                ??_Lcd_SetBit 0070               ??__tdiv_to_l_ 0078  
               ___fladd@grs 0065               ___xxtofl@sign 0078                 ___fldiv@grs 0052  
               ___fldiv@rem 004B           __size_of_ADC_Read 0029                 ___flmul@grs 0032  
        __end_of_Lcd_SetBit 1C4B         __size_of__div_to_l_ 00AA                   _Lcd_Clear 1002  
                 _Lcd_Start 1E9A              __end_of___flge 110D              __end_of___fleq 1DB9  
            __end_of___wmul 1C86              _ADC_Initialize 1C11    __end_of_Lcd_Print_String 1D71  
            __end_of_fround 0205         start_initialization 07FC         __end_of__tdiv_to_l_ 1259  
           ___llmod@divisor 0070           Lcd_Print_String@a 0079           Lcd_Print_String@i 0020  
           ___llmod@counter 0079                  ?_Lcd_Clear 0070                    ??___flge 0078  
                  ??___fleq 0078                    ??___wmul 0074                  ?_Lcd_Start 0070  
    __end_of_ADC_Initialize 1C1A                   __Umul8_16 1CA8                    ??_fround 0042  
Lcd_Print_Char@Lower_Nibble 0072               sprintf@tmpval 00B7                   ___fladd@a 0056  
                 ___fladd@b 0052                  fround@prec 0051                   ___fldiv@a 003E  
                 ___fldiv@b 0042                   ___flmul@a 0028                   ___flmul@b 0024  
                 ___flsub@a 0066                   ___flsub@b 006A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0           __size_of___xxtofl 00A3  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00AF                 sprintf@eexp 00B5  
               sprintf@fval 00BE                 sprintf@prec 00BB            ___lwdiv@dividend 0078  
          ??_Lcd_Set_Cursor 0075                    ?___fladd 0052                    ?___fldiv 003E  
                  ?___awdiv 0077                    ?___flneg 0070                    ?___awmod 0070  
                  ?___flmul 0024                    ?___flsub 0066                    ?___fltol 0051  
                  ?___lldiv 0070                    ?___llmod 0070                   __npowers_ 0844  
                ?__Umul8_16 0070                    ?___lwdiv 0076                    ?___lwmod 0070  
           ?_ADC_Initialize 0070                   __pstrings 0800                 __tdiv_to_l_ 11B0  
              ??__div_to_l_ 0078                    ?_isdigit 0070                    _ADC_Read 1CCB  
                 _scale$797 004C            ??_Lcd_Print_Char 0071            ___lwdiv@quotient 007B  
                  ?_sprintf 00A0              __size_of_scale 0349              ___wmul@product 0074  
                  Lcd_Cmd@a 0073          __end_of__div_to_l_ 09A2                    _GO_nDONE 00FA  
               ??_Lcd_Clear 0074                 ??_Lcd_Start 0074                 __stringbase 080F  
         ___wmul@multiplier 0070            __size_of_Lcd_Cmd 001A                 ??__Umul8_16 0072  
          __size_of___fladd 022F            __size_of___fldiv 01A3            __size_of___awdiv 005B  
          __size_of___flneg 0009            __size_of___awmod 004B            __size_of___flmul 0315  
          __size_of___flsub 0022            __size_of___fltol 006D            __size_of___lldiv 005E  
          __size_of___llmod 004C            __size_of___lwdiv 003C            __size_of___lwmod 0032  
        __end_of__stringtab 0810                 _isdigit$606 0070           ?_Lcd_Print_String 0079  
                sprintf@val 00B1                    ___xxtofl 110D          ??_Lcd_Print_String 007B  
          __size_of_isdigit 000E             ___lwdiv@divisor 0076             ___lwdiv@counter 007D  
                  __ptext10 1CA8                    __ptext11 11B0                    __ptext20 1C1A  
                  __ptext12 08F8                    __ptext21 107A                    __ptext13 110D  
                  __ptext30 1C31                    __ptext22 1D71                    __ptext14 1C65  
                  __ptext31 1CCB                    __ptext23 1259                    __ptext15 1E4E  
                  __ptext32 1C11                    __ptext24 1E9A                    __ptext16 1FA2  
                  __ptext25 1DB9                    __ptext17 100D                    __ptext26 1D30  
                  __ptext18 1C86                    __ptext27 1EEC                    __ptext19 15D1  
                  __ptext28 1002                    __ptext29 1C4B                    __powers_ 0810  
          __size_of_sprintf 05F7               __size_of_main 01D5  Lcd_Print_Char@Upper_Nibble 0073  
                  isdigit@c 0071                    scale@scl 0050                   sprintf@ap 00AE  
          __tdiv_to_l_@exp1 0025            __tdiv_to_l_@cntr 0024                   sprintf@sp 00BD  
          __tdiv_to_l_@quot 0020            ___lwmod@dividend 0072            ___lldiv@dividend 0074  
          ??_ADC_Initialize 0070                   stringcode 080A          Lcd_Set_Cursor@temp 007A  
              ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070                    sprintf@c 00C2  
                  sprintf@f 00A0            ___lldiv@quotient 0079             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                    stringdir 080A                    stringtab 0800  
             ___fladd@signs 0062                ___fladd@aexp 0063                ___fladd@bexp 0064  
      __Umul8_16@multiplier 0078           __Umul8_16@product 0074  
