

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Jul 05 19:25:46 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	psect	text30,local,class=CODE,merge=1,delta=2
    40                           	psect	text31,local,class=CODE,merge=1,delta=2
    41                           	psect	text32,local,class=CODE,merge=1,delta=2
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.05
    45                           ; Generated 20/12/2018 GMT
    46                           ; 
    47                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F876A Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  008C                     	;# 
   116  008D                     	;# 
   117  008E                     	;# 
   118  0091                     	;# 
   119  0092                     	;# 
   120  0093                     	;# 
   121  0094                     	;# 
   122  0098                     	;# 
   123  0099                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  009F                     	;# 
   184  010C                     	;# 
   185  010D                     	;# 
   186  010E                     	;# 
   187  010F                     	;# 
   188  018C                     	;# 
   189  018D                     	;# 
   190                           
   191                           	psect	strings
   192  0800                     __pstrings:	
   193  0800                     stringtab:	
   194  0800                     __stringtab:	
   195                           
   196                           ;	String table - string pointers are 1 byte each
   197  0800  1BFF               	btfsc	btemp+1,7
   198  0801  280A               	ljmp	stringcode
   199  0802  1383               	bcf	3,7
   200  0803  187F               	btfsc	btemp+1,0
   201  0804  1783               	bsf	3,7
   202  0805  0800               	movf	0,w
   203  0806  0A84               	incf	4,f
   204  0807  1903               	skipnz
   205  0808  0AFF               	incf	btemp+1,f
   206  0809  0008               	return
   207  080A                     stringcode:	
   208  080A                     stringdir:	
   209  080A  3008               	movlw	high stringdir
   210  080B  008A               	movwf	10
   211  080C  0804               	movf	4,w
   212  080D  0A84               	incf	4,f
   213  080E  0782               	addwf	2,f
   214  080F                     __stringbase:	
   215  080F  3400               	retlw	0
   216  0810                     __end_of__stringtab:	
   217  0810                     __powers_:	
   218  0810  3400               	retlw	0
   219  0811  3400               	retlw	0
   220  0812  3480               	retlw	128
   221  0813  343F               	retlw	63
   222  0814  3400               	retlw	0
   223  0815  3400               	retlw	0
   224  0816  3420               	retlw	32
   225  0817  3441               	retlw	65
   226  0818  3400               	retlw	0
   227  0819  3400               	retlw	0
   228  081A  34C8               	retlw	200
   229  081B  3442               	retlw	66
   230  081C  3400               	retlw	0
   231  081D  3400               	retlw	0
   232  081E  347A               	retlw	122
   233  081F  3444               	retlw	68
   234  0820  3400               	retlw	0
   235  0821  3440               	retlw	64
   236  0822  341C               	retlw	28
   237  0823  3446               	retlw	70
   238  0824  3400               	retlw	0
   239  0825  3450               	retlw	80
   240  0826  34C3               	retlw	195
   241  0827  3447               	retlw	71
   242  0828  3400               	retlw	0
   243  0829  3424               	retlw	36
   244  082A  3474               	retlw	116
   245  082B  3449               	retlw	73
   246  082C  3480               	retlw	128
   247  082D  3496               	retlw	150
   248  082E  3418               	retlw	24
   249  082F  344B               	retlw	75
   250  0830  3420               	retlw	32
   251  0831  34BC               	retlw	188
   252  0832  34BE               	retlw	190
   253  0833  344C               	retlw	76
   254  0834  3428               	retlw	40
   255  0835  346B               	retlw	107
   256  0836  346E               	retlw	110
   257  0837  344E               	retlw	78
   258  0838  34F9               	retlw	249
   259  0839  3402               	retlw	2
   260  083A  3415               	retlw	21
   261  083B  3450               	retlw	80
   262  083C  34EC               	retlw	236
   263  083D  3478               	retlw	120
   264  083E  34AD               	retlw	173
   265  083F  3460               	retlw	96
   266  0840  34CA               	retlw	202
   267  0841  34F2               	retlw	242
   268  0842  3449               	retlw	73
   269  0843  3471               	retlw	113
   270  0844                     __end_of__powers_:	
   271  0844                     __npowers_:	
   272  0844  3400               	retlw	0
   273  0845  3400               	retlw	0
   274  0846  3480               	retlw	128
   275  0847  343F               	retlw	63
   276  0848  34CD               	retlw	205
   277  0849  34CC               	retlw	204
   278  084A  34CC               	retlw	204
   279  084B  343D               	retlw	61
   280  084C  340A               	retlw	10
   281  084D  34D7               	retlw	215
   282  084E  3423               	retlw	35
   283  084F  343C               	retlw	60
   284  0850  346F               	retlw	111
   285  0851  3412               	retlw	18
   286  0852  3483               	retlw	131
   287  0853  343A               	retlw	58
   288  0854  3417               	retlw	23
   289  0855  34B7               	retlw	183
   290  0856  34D1               	retlw	209
   291  0857  3438               	retlw	56
   292  0858  34AC               	retlw	172
   293  0859  34C5               	retlw	197
   294  085A  3427               	retlw	39
   295  085B  3437               	retlw	55
   296  085C  34BD               	retlw	189
   297  085D  3437               	retlw	55
   298  085E  3486               	retlw	134
   299  085F  3435               	retlw	53
   300  0860  3495               	retlw	149
   301  0861  34BF               	retlw	191
   302  0862  34D6               	retlw	214
   303  0863  3433               	retlw	51
   304  0864  3477               	retlw	119
   305  0865  34CC               	retlw	204
   306  0866  342B               	retlw	43
   307  0867  3432               	retlw	50
   308  0868  345F               	retlw	95
   309  0869  3470               	retlw	112
   310  086A  3489               	retlw	137
   311  086B  3430               	retlw	48
   312  086C  34FF               	retlw	255
   313  086D  34E6               	retlw	230
   314  086E  34DB               	retlw	219
   315  086F  342E               	retlw	46
   316  0870  3408               	retlw	8
   317  0871  34E5               	retlw	229
   318  0872  343C               	retlw	60
   319  0873  341E               	retlw	30
   320  0874  3460               	retlw	96
   321  0875  3442               	retlw	66
   322  0876  34A2               	retlw	162
   323  0877  340D               	retlw	13
   324  0878                     __end_of__npowers_:	
   325  0878                     _dpowers:	
   326  0878  3401               	retlw	1
   327  0879  3400               	retlw	0
   328  087A  3400               	retlw	0
   329  087B  3400               	retlw	0
   330  087C  340A               	retlw	10
   331  087D  3400               	retlw	0
   332  087E  3400               	retlw	0
   333  087F  3400               	retlw	0
   334  0880  3464               	retlw	100
   335  0881  3400               	retlw	0
   336  0882  3400               	retlw	0
   337  0883  3400               	retlw	0
   338  0884  34E8               	retlw	232
   339  0885  3403               	retlw	3
   340  0886  3400               	retlw	0
   341  0887  3400               	retlw	0
   342  0888  3410               	retlw	16
   343  0889  3427               	retlw	39
   344  088A  3400               	retlw	0
   345  088B  3400               	retlw	0
   346  088C  34A0               	retlw	160
   347  088D  3486               	retlw	134
   348  088E  3401               	retlw	1
   349  088F  3400               	retlw	0
   350  0890  3440               	retlw	64
   351  0891  3442               	retlw	66
   352  0892  340F               	retlw	15
   353  0893  3400               	retlw	0
   354  0894  3480               	retlw	128
   355  0895  3496               	retlw	150
   356  0896  3498               	retlw	152
   357  0897  3400               	retlw	0
   358  0898  3400               	retlw	0
   359  0899  34E1               	retlw	225
   360  089A  34F5               	retlw	245
   361  089B  3405               	retlw	5
   362  089C  3400               	retlw	0
   363  089D  34CA               	retlw	202
   364  089E  349A               	retlw	154
   365  089F  343B               	retlw	59
   366  08A0                     __end_of_dpowers:	
   367  001E                     _ADRESH	set	30
   368  001F                     _ADCON0	set	31
   369  00FA                     _GO_nDONE	set	250
   370  0032                     _RB2	set	50
   371  0031                     _RB1	set	49
   372  0037                     _RB7	set	55
   373  0036                     _RB6	set	54
   374  0035                     _RB5	set	53
   375  0034                     _RB4	set	52
   376  0086                     _TRISB	set	134
   377  009E                     _ADRESL	set	158
   378  009F                     _ADCON1	set	159
   379  08A0                     STR_3:	
   380  08A0  3443               	retlw	67	;'C'
   381  08A1  3475               	retlw	117	;'u'
   382  08A2  3472               	retlw	114	;'r'
   383  08A3  3472               	retlw	114	;'r'
   384  08A4  3420               	retlw	32	;' '
   385  08A5  344C               	retlw	76	;'L'
   386  08A6  3469               	retlw	105	;'i'
   387  08A7  346D               	retlw	109	;'m'
   388  08A8  3469               	retlw	105	;'i'
   389  08A9  3474               	retlw	116	;'t'
   390  08AA  3400               	retlw	0
   391  08AB                     STR_7:	
   392  08AB  3425               	retlw	37	;'%'
   393  08AC  342E               	retlw	46	;'.'
   394  08AD  3431               	retlw	49	;'1'
   395  08AE  3466               	retlw	102	;'f'
   396  08AF  3400               	retlw	0
   397  08B0                     STR_5:	
   398  08B0  3425               	retlw	37	;'%'
   399  08B1  342E               	retlw	46	;'.'
   400  08B2  3432               	retlw	50	;'2'
   401  08B3  3466               	retlw	102	;'f'
   402  08B4  3400               	retlw	0
   403  08B5                     STR_2:	
   404  08B5  3441               	retlw	65	;'A'
   405  08B6  3400               	retlw	0
   406  08B7                     STR_1:	
   407  08B7  3456               	retlw	86	;'V'
   408  08B8  3400               	retlw	0
   409  08B5                     
   410                           ; #config settings
   411  0000                     
   412                           	psect	cinit
   413  07FC                     start_initialization:	
   414  07FC                     __initialization:	
   415  07FC                     end_of_initialization:	
   416                           ;End of C runtime variable initialization code
   417                           
   418  07FC                     __end_of__initialization:	
   419  07FC  0183               	clrf	3
   420  07FD  120A  158A  2AF1   	ljmp	_main	;jump to C main() function
   421                           
   422                           	psect	cstackBANK1
   423  00A0                     __pcstackBANK1:	
   424  00A0                     ?_sprintf:	
   425  00A0                     ?___fldiv:	
   426                           ; 2 bytes @ 0x0
   427                           
   428  00A0                     sprintf@f:	
   429                           ; 4 bytes @ 0x0
   430                           
   431  00A0                     ___fldiv@a:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 4 bytes @ 0x0
   436  00A0                     	ds	4
   437  00A4                     ___fldiv@b:	
   438                           
   439                           ; 4 bytes @ 0x4
   440  00A4                     	ds	1
   441  00A5                     ??_sprintf:	
   442                           
   443                           ; 1 bytes @ 0x5
   444  00A5                     	ds	3
   445  00A8                     ??___fldiv:	
   446                           
   447                           ; 1 bytes @ 0x8
   448  00A8                     	ds	2
   449  00AA                     _sprintf$806:	
   450                           
   451                           ; 4 bytes @ 0xA
   452  00AA                     	ds	3
   453  00AD                     ___fldiv@rem:	
   454                           
   455                           ; 4 bytes @ 0xD
   456  00AD                     	ds	1
   457  00AE                     sprintf@ap:	
   458                           
   459                           ; 1 bytes @ 0xE
   460  00AE                     	ds	1
   461  00AF                     sprintf@flag:	
   462                           
   463                           ; 2 bytes @ 0xF
   464  00AF                     	ds	2
   465  00B1                     ___fldiv@sign:	
   466  00B1                     sprintf@val:	
   467                           ; 1 bytes @ 0x11
   468                           
   469                           
   470                           ; 4 bytes @ 0x11
   471  00B1                     	ds	1
   472  00B2                     ___fldiv@new_exp:	
   473                           
   474                           ; 2 bytes @ 0x12
   475  00B2                     	ds	2
   476  00B4                     ___fldiv@grs:	
   477                           
   478                           ; 4 bytes @ 0x14
   479  00B4                     	ds	1
   480  00B5                     sprintf@eexp:	
   481                           
   482                           ; 2 bytes @ 0x15
   483  00B5                     	ds	2
   484  00B7                     sprintf@tmpval:	
   485                           
   486                           ; 4 bytes @ 0x17
   487  00B7                     	ds	1
   488  00B8                     ___fldiv@bexp:	
   489                           
   490                           ; 1 bytes @ 0x18
   491  00B8                     	ds	1
   492  00B9                     ___fldiv@aexp:	
   493                           
   494                           ; 1 bytes @ 0x19
   495  00B9                     	ds	2
   496  00BB                     sprintf@prec:	
   497                           
   498                           ; 2 bytes @ 0x1B
   499  00BB                     	ds	2
   500  00BD                     sprintf@sp:	
   501                           
   502                           ; 1 bytes @ 0x1D
   503  00BD                     	ds	1
   504  00BE                     sprintf@fval:	
   505                           
   506                           ; 4 bytes @ 0x1E
   507  00BE                     	ds	4
   508  00C2                     sprintf@c:	
   509                           
   510                           ; 1 bytes @ 0x22
   511  00C2                     	ds	1
   512  00C3                     main@RLim:	
   513                           
   514                           ; 4 bytes @ 0x23
   515  00C3                     	ds	4
   516  00C7                     main@voltage_val_prev:	
   517                           
   518                           ; 4 bytes @ 0x27
   519  00C7                     	ds	4
   520  00CB                     main@current_val_prev:	
   521                           
   522                           ; 4 bytes @ 0x2B
   523  00CB                     	ds	4
   524  00CF                     main@current_limit_val_prev:	
   525                           
   526                           ; 4 bytes @ 0x2F
   527  00CF                     	ds	4
   528  00D3                     main@str:	
   529                           
   530                           ; 8 bytes @ 0x33
   531  00D3                     	ds	8
   532  00DB                     _main$802:	
   533                           
   534                           ; 4 bytes @ 0x3B
   535  00DB                     	ds	4
   536  00DF                     main@voltage_val:	
   537                           
   538                           ; 4 bytes @ 0x3F
   539  00DF                     	ds	4
   540  00E3                     main@current_val:	
   541                           
   542                           ; 4 bytes @ 0x43
   543  00E3                     	ds	4
   544  00E7                     main@adc:	
   545                           
   546                           ; 2 bytes @ 0x47
   547  00E7                     	ds	2
   548  00E9                     main@current_limit_val:	
   549                           
   550                           ; 4 bytes @ 0x49
   551  00E9                     	ds	4
   552                           
   553                           	psect	cstackCOMMON
   554  0070                     __pcstackCOMMON:	
   555  0070                     ?_isdigit:	
   556  0070                     ?___fleq:	
   557                           ; 1 bit 
   558                           
   559  0070                     ?___flge:	
   560                           ; 1 bit 
   561                           
   562  0070                     ??_isdigit:	
   563                           ; 1 bit 
   564                           
   565  0070                     ?_Lcd_SetBit:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ??_Lcd_SetBit:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_Lcd_Cmd:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_Lcd_Start:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_Lcd_Print_Char:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_ADC_Initialize:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ??_ADC_Initialize:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?__Umul8_16:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_Lcd_Clear:	
   590                           ; 2 bytes @ 0x0
   591                           
   592  0070                     ?_ADC_Read:	
   593                           ; 2 bytes @ 0x0
   594                           
   595  0070                     ?_main:	
   596                           ; 2 bytes @ 0x0
   597                           
   598  0070                     ?___wmul:	
   599                           ; 2 bytes @ 0x0
   600                           
   601  0070                     ?___awmod:	
   602                           ; 2 bytes @ 0x0
   603                           
   604  0070                     ?___lwmod:	
   605                           ; 2 bytes @ 0x0
   606                           
   607  0070                     ?__tdiv_to_l_:	
   608                           ; 2 bytes @ 0x0
   609                           
   610  0070                     ?__div_to_l_:	
   611                           ; 4 bytes @ 0x0
   612                           
   613  0070                     ?___lldiv:	
   614                           ; 4 bytes @ 0x0
   615                           
   616  0070                     ?___flneg:	
   617                           ; 4 bytes @ 0x0
   618                           
   619  0070                     ?___llmod:	
   620                           ; 4 bytes @ 0x0
   621                           
   622  0070                     ?___xxtofl:	
   623                           ; 4 bytes @ 0x0
   624                           
   625  0070                     Lcd_SetBit@data_bit:	
   626                           ; 4 bytes @ 0x0
   627                           
   628  0070                     _isdigit$613:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     __Umul8_16@multiplicand:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ___wmul@multiplier:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ___awmod@divisor:	
   638                           ; 2 bytes @ 0x0
   639                           
   640  0070                     ___lwmod@divisor:	
   641                           ; 2 bytes @ 0x0
   642                           
   643  0070                     ___lldiv@divisor:	
   644                           ; 2 bytes @ 0x0
   645                           
   646  0070                     __div_to_l_@f1:	
   647                           ; 4 bytes @ 0x0
   648                           
   649  0070                     ___fleq@ff1:	
   650                           ; 4 bytes @ 0x0
   651                           
   652  0070                     ___flge@ff1:	
   653                           ; 4 bytes @ 0x0
   654                           
   655  0070                     ___flneg@f1:	
   656                           ; 4 bytes @ 0x0
   657                           
   658  0070                     __tdiv_to_l_@f1:	
   659                           ; 4 bytes @ 0x0
   660                           
   661  0070                     ___llmod@divisor:	
   662                           ; 4 bytes @ 0x0
   663                           
   664  0070                     ___xxtofl@val:	
   665                           ; 4 bytes @ 0x0
   666                           
   667                           
   668                           ; 4 bytes @ 0x0
   669  0070                     	ds	1
   670  0071                     ??_Lcd_Cmd:	
   671  0071                     ??_Lcd_Print_Char:	
   672                           ; 1 bytes @ 0x1
   673                           
   674  0071                     isdigit@c:	
   675                           ; 1 bytes @ 0x1
   676                           
   677                           
   678                           ; 1 bytes @ 0x1
   679  0071                     	ds	1
   680  0072                     ??__Umul8_16:	
   681  0072                     ??_ADC_Read:	
   682                           ; 1 bytes @ 0x2
   683                           
   684  0072                     Lcd_Print_Char@Lower_Nibble:	
   685                           ; 1 bytes @ 0x2
   686                           
   687  0072                     ___wmul@multiplicand:	
   688                           ; 1 bytes @ 0x2
   689                           
   690  0072                     ___awmod@dividend:	
   691                           ; 2 bytes @ 0x2
   692                           
   693  0072                     ___lwmod@dividend:	
   694                           ; 2 bytes @ 0x2
   695                           
   696                           
   697                           ; 2 bytes @ 0x2
   698  0072                     	ds	1
   699  0073                     Lcd_Cmd@a:	
   700  0073                     Lcd_Print_Char@Upper_Nibble:	
   701                           ; 1 bytes @ 0x3
   702                           
   703                           
   704                           ; 1 bytes @ 0x3
   705  0073                     	ds	1
   706  0074                     ??_Lcd_Clear:	
   707  0074                     ?_Lcd_Set_Cursor:	
   708                           ; 1 bytes @ 0x4
   709                           
   710  0074                     ??_Lcd_Start:	
   711                           ; 1 bytes @ 0x4
   712                           
   713  0074                     ??___wmul:	
   714                           ; 1 bytes @ 0x4
   715                           
   716  0074                     ??___awmod:	
   717                           ; 1 bytes @ 0x4
   718                           
   719  0074                     ??___flneg:	
   720                           ; 1 bytes @ 0x4
   721                           
   722  0074                     ??___lwmod:	
   723                           ; 1 bytes @ 0x4
   724                           
   725  0074                     ??___xxtofl:	
   726                           ; 1 bytes @ 0x4
   727                           
   728  0074                     Lcd_Set_Cursor@b:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0074                     Lcd_Print_Char@data:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0074                     ADC_Read@channel:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0074                     ___wmul@product:	
   738                           ; 1 bytes @ 0x4
   739                           
   740  0074                     __Umul8_16@product:	
   741                           ; 2 bytes @ 0x4
   742                           
   743  0074                     ___lldiv@dividend:	
   744                           ; 2 bytes @ 0x4
   745                           
   746  0074                     __div_to_l_@f2:	
   747                           ; 4 bytes @ 0x4
   748                           
   749  0074                     ___fleq@ff2:	
   750                           ; 4 bytes @ 0x4
   751                           
   752  0074                     ___flge@ff2:	
   753                           ; 4 bytes @ 0x4
   754                           
   755  0074                     __tdiv_to_l_@f2:	
   756                           ; 4 bytes @ 0x4
   757                           
   758  0074                     ___llmod@dividend:	
   759                           ; 4 bytes @ 0x4
   760                           
   761                           
   762                           ; 4 bytes @ 0x4
   763  0074                     	ds	1
   764  0075                     ??_Lcd_Set_Cursor:	
   765  0075                     ___awmod@counter:	
   766                           ; 1 bytes @ 0x5
   767                           
   768  0075                     ___lwmod@counter:	
   769                           ; 1 bytes @ 0x5
   770                           
   771  0075                     Lcd_Print_Char@i:	
   772                           ; 1 bytes @ 0x5
   773                           
   774                           
   775                           ; 2 bytes @ 0x5
   776  0075                     	ds	1
   777  0076                     ?___lwdiv:	
   778  0076                     ___awmod@sign:	
   779                           ; 2 bytes @ 0x6
   780                           
   781  0076                     ___lwdiv@divisor:	
   782                           ; 1 bytes @ 0x6
   783                           
   784  0076                     __Umul8_16@word_mpld:	
   785                           ; 2 bytes @ 0x6
   786                           
   787                           
   788                           ; 2 bytes @ 0x6
   789  0076                     	ds	1
   790  0077                     ?___awdiv:	
   791  0077                     Lcd_Set_Cursor@a:	
   792                           ; 2 bytes @ 0x7
   793                           
   794  0077                     Lcd_Print_Char@i_70:	
   795                           ; 1 bytes @ 0x7
   796                           
   797  0077                     ___awdiv@divisor:	
   798                           ; 2 bytes @ 0x7
   799                           
   800                           
   801                           ; 2 bytes @ 0x7
   802  0077                     	ds	1
   803  0078                     ??__tdiv_to_l_:	
   804  0078                     ??__div_to_l_:	
   805                           ; 1 bytes @ 0x8
   806                           
   807  0078                     ??___lldiv:	
   808                           ; 1 bytes @ 0x8
   809                           
   810  0078                     ??___fleq:	
   811                           ; 1 bytes @ 0x8
   812                           
   813  0078                     ??___flge:	
   814                           ; 1 bytes @ 0x8
   815                           
   816  0078                     ??___llmod:	
   817                           ; 1 bytes @ 0x8
   818                           
   819  0078                     Lcd_Set_Cursor@z:	
   820                           ; 1 bytes @ 0x8
   821                           
   822  0078                     ___xxtofl@sign:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0078                     __Umul8_16@multiplier:	
   826                           ; 1 bytes @ 0x8
   827                           
   828  0078                     ___lwdiv@dividend:	
   829                           ; 1 bytes @ 0x8
   830                           
   831                           
   832                           ; 2 bytes @ 0x8
   833  0078                     	ds	1
   834  0079                     ?_Lcd_Print_String:	
   835  0079                     Lcd_Set_Cursor@y:	
   836                           ; 1 bytes @ 0x9
   837                           
   838  0079                     ___llmod@counter:	
   839                           ; 1 bytes @ 0x9
   840                           
   841  0079                     ___xxtofl@exp:	
   842                           ; 1 bytes @ 0x9
   843                           
   844  0079                     Lcd_Print_String@a:	
   845                           ; 1 bytes @ 0x9
   846                           
   847  0079                     ___awdiv@dividend:	
   848                           ; 2 bytes @ 0x9
   849                           
   850  0079                     ___lldiv@quotient:	
   851                           ; 2 bytes @ 0x9
   852                           
   853                           
   854                           ; 4 bytes @ 0x9
   855  0079                     	ds	1
   856  007A                     ??___lwdiv:	
   857  007A                     Lcd_Set_Cursor@temp:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  007A                     ___xxtofl@arg:	
   861                           ; 1 bytes @ 0xA
   862                           
   863                           
   864                           ; 4 bytes @ 0xA
   865  007A                     	ds	1
   866  007B                     ??_Lcd_Print_String:	
   867  007B                     ??___awdiv:	
   868                           ; 1 bytes @ 0xB
   869                           
   870  007B                     ___lwdiv@quotient:	
   871                           ; 1 bytes @ 0xB
   872                           
   873                           
   874                           ; 2 bytes @ 0xB
   875  007B                     	ds	2
   876  007D                     ___lldiv@counter:	
   877  007D                     ___lwdiv@counter:	
   878                           ; 1 bytes @ 0xD
   879                           
   880                           
   881                           ; 1 bytes @ 0xD
   882  007D                     	ds	1
   883  007E                     ??___flsub:	
   884                           
   885                           	psect	cstackBANK0
   886  0020                     __pcstackBANK0:	
   887                           ; 1 bytes @ 0xE
   888                           
   889  0020                     ___awdiv@counter:	
   890  0020                     Lcd_Print_String@i:	
   891                           ; 1 bytes @ 0x0
   892                           
   893  0020                     __div_to_l_@quot:	
   894                           ; 2 bytes @ 0x0
   895                           
   896  0020                     __tdiv_to_l_@quot:	
   897                           ; 4 bytes @ 0x0
   898                           
   899                           
   900                           ; 4 bytes @ 0x0
   901  0020                     	ds	1
   902  0021                     ___awdiv@sign:	
   903                           
   904                           ; 1 bytes @ 0x1
   905  0021                     	ds	1
   906  0022                     ___awdiv@quotient:	
   907                           
   908                           ; 2 bytes @ 0x2
   909  0022                     	ds	2
   910  0024                     ?___flmul:	
   911  0024                     __div_to_l_@cntr:	
   912                           ; 4 bytes @ 0x4
   913                           
   914  0024                     __tdiv_to_l_@cntr:	
   915                           ; 1 bytes @ 0x4
   916                           
   917  0024                     ___flmul@b:	
   918                           ; 1 bytes @ 0x4
   919                           
   920                           
   921                           ; 4 bytes @ 0x4
   922  0024                     	ds	1
   923  0025                     __div_to_l_@exp1:	
   924  0025                     __tdiv_to_l_@exp1:	
   925                           ; 1 bytes @ 0x5
   926                           
   927                           
   928                           ; 1 bytes @ 0x5
   929  0025                     	ds	3
   930  0028                     ___flmul@a:	
   931                           
   932                           ; 4 bytes @ 0x8
   933  0028                     	ds	4
   934  002C                     ??___flmul:	
   935                           
   936                           ; 1 bytes @ 0xC
   937  002C                     	ds	5
   938  0031                     ___flmul@sign:	
   939                           
   940                           ; 1 bytes @ 0x11
   941  0031                     	ds	1
   942  0032                     ___flmul@grs:	
   943                           
   944                           ; 4 bytes @ 0x12
   945  0032                     	ds	4
   946  0036                     ___flmul@aexp:	
   947                           
   948                           ; 1 bytes @ 0x16
   949  0036                     	ds	1
   950  0037                     ___flmul@bexp:	
   951                           
   952                           ; 1 bytes @ 0x17
   953  0037                     	ds	1
   954  0038                     ___flmul@prod:	
   955                           
   956                           ; 4 bytes @ 0x18
   957  0038                     	ds	4
   958  003C                     ___flmul@temp:	
   959                           
   960                           ; 2 bytes @ 0x1C
   961  003C                     	ds	2
   962  003E                     ?_fround:	
   963  003E                     ?_scale:	
   964                           ; 4 bytes @ 0x1E
   965                           
   966                           
   967                           ; 4 bytes @ 0x1E
   968  003E                     	ds	4
   969  0042                     ??_fround:	
   970  0042                     ??_scale:	
   971                           ; 1 bytes @ 0x22
   972                           
   973                           
   974                           ; 1 bytes @ 0x22
   975  0042                     	ds	7
   976  0049                     _fround$804:	
   977                           
   978                           ; 4 bytes @ 0x29
   979  0049                     	ds	3
   980  004C                     _scale$805:	
   981                           
   982                           ; 4 bytes @ 0x2C
   983  004C                     	ds	1
   984  004D                     _fround$803:	
   985                           
   986                           ; 4 bytes @ 0x2D
   987  004D                     	ds	3
   988  0050                     scale@scl:	
   989                           
   990                           ; 1 bytes @ 0x30
   991  0050                     	ds	1
   992  0051                     ?___fltol:	
   993  0051                     fround@prec:	
   994                           ; 4 bytes @ 0x31
   995                           
   996  0051                     ___fltol@f1:	
   997                           ; 1 bytes @ 0x31
   998                           
   999                           
  1000                           ; 4 bytes @ 0x31
  1001  0051                     	ds	1
  1002  0052                     ?___fladd:	
  1003  0052                     ___fladd@b:	
  1004                           ; 4 bytes @ 0x32
  1005                           
  1006                           
  1007                           ; 4 bytes @ 0x32
  1008  0052                     	ds	3
  1009  0055                     ??___fltol:	
  1010                           
  1011                           ; 1 bytes @ 0x35
  1012  0055                     	ds	1
  1013  0056                     ___fladd@a:	
  1014                           
  1015                           ; 4 bytes @ 0x36
  1016  0056                     	ds	4
  1017  005A                     ??___fladd:	
  1018  005A                     ___fltol@sign1:	
  1019                           ; 1 bytes @ 0x3A
  1020                           
  1021                           
  1022                           ; 1 bytes @ 0x3A
  1023  005A                     	ds	1
  1024  005B                     ___fltol@exp1:	
  1025                           
  1026                           ; 1 bytes @ 0x3B
  1027  005B                     	ds	7
  1028  0062                     ___fladd@signs:	
  1029                           
  1030                           ; 1 bytes @ 0x42
  1031  0062                     	ds	1
  1032  0063                     ___fladd@aexp:	
  1033                           
  1034                           ; 1 bytes @ 0x43
  1035  0063                     	ds	1
  1036  0064                     ___fladd@bexp:	
  1037                           
  1038                           ; 1 bytes @ 0x44
  1039  0064                     	ds	1
  1040  0065                     ___fladd@grs:	
  1041                           
  1042                           ; 1 bytes @ 0x45
  1043  0065                     	ds	1
  1044  0066                     ?___flsub:	
  1045  0066                     ___flsub@a:	
  1046                           ; 4 bytes @ 0x46
  1047                           
  1048                           
  1049                           ; 4 bytes @ 0x46
  1050  0066                     	ds	4
  1051  006A                     ___flsub@b:	
  1052                           
  1053                           ; 4 bytes @ 0x4A
  1054  006A                     	ds	4
  1055  006E                     ??_main:	
  1056                           
  1057                           ; 1 bytes @ 0x4E
  1058  006E                     	ds	1
  1059                           
  1060                           	psect	maintext
  1061  0AF1                     __pmaintext:	
  1062 ;;
  1063 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1064 ;;
  1065 ;; *************** function _main *****************
  1066 ;; Defined at:
  1067 ;;		line 147 in file "main.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;		None
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;  str             8   51[BANK1 ] unsigned char [8]
  1072 ;;  current_limi    4   73[BANK1 ] float 
  1073 ;;  current_val     4   67[BANK1 ] float 
  1074 ;;  voltage_val     4   63[BANK1 ] float 
  1075 ;;  current_limi    4   47[BANK1 ] float 
  1076 ;;  current_val_    4   43[BANK1 ] float 
  1077 ;;  voltage_val_    4   39[BANK1 ] float 
  1078 ;;  RLim            4   35[BANK1 ] float 
  1079 ;;  adc             2   71[BANK1 ] int 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  2   84[None  ] int 
  1082 ;; Registers used:
  1083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1084 ;; Tracked objects:
  1085 ;;		On entry : B00/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1089 ;;      Params:         0       0       0       0       0
  1090 ;;      Locals:         0       0      42       0       0
  1091 ;;      Temps:          0       1       0       0       0
  1092 ;;      Totals:         0       1      42       0       0
  1093 ;;Total ram usage:       43 bytes
  1094 ;; Hardware stack levels required when called:    4
  1095 ;; This function calls:
  1096 ;;		_ADC_Initialize
  1097 ;;		_ADC_Read
  1098 ;;		_Lcd_Clear
  1099 ;;		_Lcd_Print_String
  1100 ;;		_Lcd_Set_Cursor
  1101 ;;		_Lcd_Start
  1102 ;;		___fldiv
  1103 ;;		___fleq
  1104 ;;		___flge
  1105 ;;		___flmul
  1106 ;;		___flsub
  1107 ;;		___xxtofl
  1108 ;;		_sprintf
  1109 ;; This function is called by:
  1110 ;;		Startup code after reset
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           
  1115                           ;psect for function _main
  1116  0AF1                     _main:	
  1117                           
  1118                           ;main.c: 149:     TRISB = 0x00;
  1119                           
  1120                           ;incstack = 0
  1121                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1122  0AF1  1683               	bsf	3,5	;RP0=1, select bank1
  1123  0AF2  1303               	bcf	3,6	;RP1=0, select bank1
  1124  0AF3  0186               	clrf	6	;volatile
  1125                           
  1126                           ;main.c: 150:     Lcd_Start();
  1127  0AF4  160A  158A  2354  120A  158A  	fcall	_Lcd_Start
  1128                           
  1129                           ;main.c: 151:     Lcd_Clear();
  1130  0AF9  160A  158A  20EC  120A  158A  	fcall	_Lcd_Clear
  1131                           
  1132                           ;main.c: 159:     ADC_Initialize();
  1133  0AFE  160A  158A  20E3  120A  158A  	fcall	_ADC_Initialize
  1134                           
  1135                           ;main.c: 162:     Lcd_Set_Cursor(1,6);
  1136  0B03  3006               	movlw	6
  1137  0B04  1283               	bcf	3,5	;RP0=0, select bank0
  1138  0B05  1303               	bcf	3,6	;RP1=0, select bank0
  1139  0B06  00EE               	movwf	??_main
  1140  0B07  086E               	movf	??_main,w
  1141  0B08  00F4               	movwf	Lcd_Set_Cursor@b
  1142  0B09  3001               	movlw	1
  1143  0B0A  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1144                           
  1145                           ;main.c: 163:     Lcd_Print_String("V");
  1146  0B0F  30A8               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1147  0B10  00F9               	movwf	Lcd_Print_String@a
  1148  0B11  3080               	movlw	128
  1149  0B12  00FA               	movwf	Lcd_Print_String@a+1
  1150  0B13  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1151                           
  1152                           ;main.c: 164:     Lcd_Set_Cursor(1,16);
  1153  0B18  3010               	movlw	16
  1154  0B19  1283               	bcf	3,5	;RP0=0, select bank0
  1155  0B1A  1303               	bcf	3,6	;RP1=0, select bank0
  1156  0B1B  00EE               	movwf	??_main
  1157  0B1C  086E               	movf	??_main,w
  1158  0B1D  00F4               	movwf	Lcd_Set_Cursor@b
  1159  0B1E  3001               	movlw	1
  1160  0B1F  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1161                           
  1162                           ;main.c: 165:     Lcd_Print_String("A");
  1163  0B24  30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1164  0B25  00F9               	movwf	Lcd_Print_String@a
  1165  0B26  3080               	movlw	128
  1166  0B27  00FA               	movwf	Lcd_Print_String@a+1
  1167  0B28  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1168                           
  1169                           ;main.c: 166:     Lcd_Set_Cursor(2,1);
  1170  0B2D  01F4               	clrf	Lcd_Set_Cursor@b
  1171  0B2E  0AF4               	incf	Lcd_Set_Cursor@b,f
  1172  0B2F  3002               	movlw	2
  1173  0B30  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1174                           
  1175                           ;main.c: 167:     Lcd_Print_String("Curr Limit");
  1176  0B35  3091               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1177  0B36  00F9               	movwf	Lcd_Print_String@a
  1178  0B37  3080               	movlw	128
  1179  0B38  00FA               	movwf	Lcd_Print_String@a+1
  1180  0B39  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1181                           
  1182                           ;main.c: 168:     Lcd_Set_Cursor(2,16);
  1183  0B3E  3010               	movlw	16
  1184  0B3F  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0B40  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0B41  00EE               	movwf	??_main
  1187  0B42  086E               	movf	??_main,w
  1188  0B43  00F4               	movwf	Lcd_Set_Cursor@b
  1189  0B44  3002               	movlw	2
  1190  0B45  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1191                           
  1192                           ;main.c: 169:     Lcd_Print_String("A");
  1193  0B4A  30A6               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1194  0B4B  00F9               	movwf	Lcd_Print_String@a
  1195  0B4C  3080               	movlw	128
  1196  0B4D  00FA               	movwf	Lcd_Print_String@a+1
  1197  0B4E  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1198                           
  1199                           ;main.c: 171:     adc = (ADC_Read(0));
  1200  0B53  3000               	movlw	0
  1201  0B54  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1202  0B59  0871               	movf	?_ADC_Read+1,w
  1203  0B5A  1683               	bsf	3,5	;RP0=1, select bank1
  1204  0B5B  1303               	bcf	3,6	;RP1=0, select bank1
  1205  0B5C  00E8               	movwf	(main@adc+1)^(0+128)
  1206  0B5D  0870               	movf	?_ADC_Read,w
  1207  0B5E  00E7               	movwf	main@adc^(0+128)
  1208                           
  1209                           ;main.c: 172:     voltage_val = adc*0.488281/100/0.2;
  1210  0B5F  3042               	movlw	66
  1211  0B60  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1212  0B61  30C8               	movlw	200
  1213  0B62  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1214  0B63  3000               	movlw	0
  1215  0B64  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1216  0B65  3000               	movlw	0
  1217  0B66  00A0               	movwf	___fldiv@a^(0+128)
  1218  0B67  303E               	movlw	62
  1219  0B68  1283               	bcf	3,5	;RP0=0, select bank0
  1220  0B69  1303               	bcf	3,6	;RP1=0, select bank0
  1221  0B6A  00A7               	movwf	___flmul@b+3
  1222  0B6B  30F9               	movlw	249
  1223  0B6C  00A6               	movwf	___flmul@b+2
  1224  0B6D  30FF               	movlw	255
  1225  0B6E  00A5               	movwf	___flmul@b+1
  1226  0B6F  30F8               	movlw	248
  1227  0B70  00A4               	movwf	___flmul@b
  1228  0B71  1683               	bsf	3,5	;RP0=1, select bank1
  1229  0B72  1303               	bcf	3,6	;RP1=0, select bank1
  1230  0B73  0867               	movf	main@adc^(0+128),w
  1231  0B74  00F0               	movwf	___xxtofl@val
  1232  0B75  0868               	movf	(main@adc+1)^(0+128),w
  1233  0B76  00F1               	movwf	___xxtofl@val+1
  1234  0B77  3000               	movlw	0
  1235  0B78  1BF1               	btfsc	___xxtofl@val+1,7
  1236  0B79  30FF               	movlw	255
  1237  0B7A  00F2               	movwf	___xxtofl@val+2
  1238  0B7B  00F3               	movwf	___xxtofl@val+3
  1239  0B7C  3001               	movlw	1
  1240  0B7D  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  1241  0B82  0873               	movf	?___xxtofl+3,w
  1242  0B83  1283               	bcf	3,5	;RP0=0, select bank0
  1243  0B84  1303               	bcf	3,6	;RP1=0, select bank0
  1244  0B85  00AB               	movwf	___flmul@a+3
  1245  0B86  0872               	movf	?___xxtofl+2,w
  1246  0B87  00AA               	movwf	___flmul@a+2
  1247  0B88  0871               	movf	?___xxtofl+1,w
  1248  0B89  00A9               	movwf	___flmul@a+1
  1249  0B8A  0870               	movf	?___xxtofl,w
  1250  0B8B  00A8               	movwf	___flmul@a
  1251  0B8C  160A  118A  21A2  120A  158A  	fcall	___flmul
  1252  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0B93  0827               	movf	?___flmul+3,w
  1255  0B94  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0B95  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0B96  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1258  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0B99  0826               	movf	?___flmul+2,w
  1261  0B9A  1683               	bsf	3,5	;RP0=1, select bank1
  1262  0B9B  1303               	bcf	3,6	;RP1=0, select bank1
  1263  0B9C  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1264  0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0B9F  0825               	movf	?___flmul+1,w
  1267  0BA0  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0BA1  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0BA2  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1270  0BA3  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0BA4  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0BA5  0824               	movf	?___flmul,w
  1273  0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  1274  0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  1275  0BA8  00A4               	movwf	___fldiv@b^(0+128)
  1276  0BA9  160A  158A  265D  120A  158A  	fcall	___fldiv
  1277  0BAE  1683               	bsf	3,5	;RP0=1, select bank1
  1278  0BAF  1303               	bcf	3,6	;RP1=0, select bank1
  1279  0BB0  0823               	movf	(?___fldiv+3)^(0+128),w
  1280  0BB1  00DE               	movwf	(_main$802+3)^(0+128)
  1281  0BB2  0822               	movf	(?___fldiv+2)^(0+128),w
  1282  0BB3  00DD               	movwf	(_main$802+2)^(0+128)
  1283  0BB4  0821               	movf	(?___fldiv+1)^(0+128),w
  1284  0BB5  00DC               	movwf	(_main$802+1)^(0+128)
  1285  0BB6  0820               	movf	?___fldiv^(0+128),w
  1286  0BB7  00DB               	movwf	_main$802^(0+128)
  1287                           
  1288                           ;main.c: 172:     voltage_val = adc*0.488281/100/0.2;
  1289  0BB8  303E               	movlw	62
  1290  0BB9  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1291  0BBA  304C               	movlw	76
  1292  0BBB  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1293  0BBC  30CC               	movlw	204
  1294  0BBD  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1295  0BBE  30CD               	movlw	205
  1296  0BBF  00A0               	movwf	___fldiv@a^(0+128)
  1297  0BC0  085E               	movf	(_main$802+3)^(0+128),w
  1298  0BC1  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1299  0BC2  085D               	movf	(_main$802+2)^(0+128),w
  1300  0BC3  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1301  0BC4  085C               	movf	(_main$802+1)^(0+128),w
  1302  0BC5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1303  0BC6  085B               	movf	_main$802^(0+128),w
  1304  0BC7  00A4               	movwf	___fldiv@b^(0+128)
  1305  0BC8  160A  158A  265D  120A  158A  	fcall	___fldiv
  1306  0BCD  1683               	bsf	3,5	;RP0=1, select bank1
  1307  0BCE  1303               	bcf	3,6	;RP1=0, select bank1
  1308  0BCF  0823               	movf	(?___fldiv+3)^(0+128),w
  1309  0BD0  00E2               	movwf	(main@voltage_val+3)^(0+128)
  1310  0BD1  0822               	movf	(?___fldiv+2)^(0+128),w
  1311  0BD2  00E1               	movwf	(main@voltage_val+2)^(0+128)
  1312  0BD3  0821               	movf	(?___fldiv+1)^(0+128),w
  1313  0BD4  00E0               	movwf	(main@voltage_val+1)^(0+128)
  1314  0BD5  0820               	movf	?___fldiv^(0+128),w
  1315  0BD6  00DF               	movwf	main@voltage_val^(0+128)
  1316                           
  1317                           ;main.c: 174:     sprintf(str, "%.2f", (float) voltage_val);
  1318  0BD7  30A1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1319  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  1320  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  1321  0BDA  00EE               	movwf	??_main
  1322  0BDB  086E               	movf	??_main,w
  1323  0BDC  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0BDD  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0BDE  00A0               	movwf	sprintf@f^(0+128)
  1326  0BDF  0862               	movf	(main@voltage_val+3)^(0+128),w
  1327  0BE0  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1328  0BE1  0861               	movf	(main@voltage_val+2)^(0+128),w
  1329  0BE2  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1330  0BE3  0860               	movf	(main@voltage_val+1)^(0+128),w
  1331  0BE4  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1332  0BE5  085F               	movf	main@voltage_val^(0+128),w
  1333  0BE6  00A1               	movwf	(?_sprintf^(0+128)+1)
  1334  0BE7  30D3               	movlw	(low (main@str| 0))& (0+255)
  1335  0BE8  120A  118A  2205  120A  158A  	fcall	_sprintf
  1336                           
  1337                           ;main.c: 175:     Lcd_Set_Cursor(1,1);
  1338  0BED  01F4               	clrf	Lcd_Set_Cursor@b
  1339  0BEE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1340  0BEF  3001               	movlw	1
  1341  0BF0  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1342                           
  1343                           ;main.c: 176:     Lcd_Print_String(str);
  1344  0BF5  30D3               	movlw	(low (main@str| 0))& (0+255)
  1345  0BF6  00F9               	movwf	Lcd_Print_String@a
  1346  0BF7  3000               	movlw	0
  1347  0BF8  00FA               	movwf	Lcd_Print_String@a+1
  1348  0BF9  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1349                           
  1350                           ;main.c: 177:     voltage_val_prev = voltage_val;
  1351  0BFE  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0BFF  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0C00  0862               	movf	(main@voltage_val+3)^(0+128),w
  1354  0C01  00CA               	movwf	(main@voltage_val_prev+3)^(0+128)
  1355  0C02  0861               	movf	(main@voltage_val+2)^(0+128),w
  1356  0C03  00C9               	movwf	(main@voltage_val_prev+2)^(0+128)
  1357  0C04  0860               	movf	(main@voltage_val+1)^(0+128),w
  1358  0C05  00C8               	movwf	(main@voltage_val_prev+1)^(0+128)
  1359  0C06  085F               	movf	main@voltage_val^(0+128),w
  1360  0C07  00C7               	movwf	main@voltage_val_prev^(0+128)
  1361                           
  1362                           ;main.c: 179:     adc = (ADC_Read(1));
  1363  0C08  3001               	movlw	1
  1364  0C09  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1365  0C0E  0871               	movf	?_ADC_Read+1,w
  1366  0C0F  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0C10  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0C11  00E8               	movwf	(main@adc+1)^(0+128)
  1369  0C12  0870               	movf	?_ADC_Read,w
  1370  0C13  00E7               	movwf	main@adc^(0+128)
  1371                           
  1372                           ;main.c: 180:     current_val = adc*0.488281/100;
  1373  0C14  3042               	movlw	66
  1374  0C15  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1375  0C16  30C8               	movlw	200
  1376  0C17  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1377  0C18  3000               	movlw	0
  1378  0C19  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1379  0C1A  3000               	movlw	0
  1380  0C1B  00A0               	movwf	___fldiv@a^(0+128)
  1381  0C1C  303E               	movlw	62
  1382  0C1D  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0C1E  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0C1F  00A7               	movwf	___flmul@b+3
  1385  0C20  30F9               	movlw	249
  1386  0C21  00A6               	movwf	___flmul@b+2
  1387  0C22  30FF               	movlw	255
  1388  0C23  00A5               	movwf	___flmul@b+1
  1389  0C24  30F8               	movlw	248
  1390  0C25  00A4               	movwf	___flmul@b
  1391  0C26  1683               	bsf	3,5	;RP0=1, select bank1
  1392  0C27  1303               	bcf	3,6	;RP1=0, select bank1
  1393  0C28  0867               	movf	main@adc^(0+128),w
  1394  0C29  00F0               	movwf	___xxtofl@val
  1395  0C2A  0868               	movf	(main@adc+1)^(0+128),w
  1396  0C2B  00F1               	movwf	___xxtofl@val+1
  1397  0C2C  3000               	movlw	0
  1398  0C2D  1BF1               	btfsc	___xxtofl@val+1,7
  1399  0C2E  30FF               	movlw	255
  1400  0C2F  00F2               	movwf	___xxtofl@val+2
  1401  0C30  00F3               	movwf	___xxtofl@val+3
  1402  0C31  3001               	movlw	1
  1403  0C32  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  1404  0C37  0873               	movf	?___xxtofl+3,w
  1405  0C38  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0C39  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0C3A  00AB               	movwf	___flmul@a+3
  1408  0C3B  0872               	movf	?___xxtofl+2,w
  1409  0C3C  00AA               	movwf	___flmul@a+2
  1410  0C3D  0871               	movf	?___xxtofl+1,w
  1411  0C3E  00A9               	movwf	___flmul@a+1
  1412  0C3F  0870               	movf	?___xxtofl,w
  1413  0C40  00A8               	movwf	___flmul@a
  1414  0C41  160A  118A  21A2  120A  158A  	fcall	___flmul
  1415  0C46  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0C47  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0C48  0827               	movf	?___flmul+3,w
  1418  0C49  1683               	bsf	3,5	;RP0=1, select bank1
  1419  0C4A  1303               	bcf	3,6	;RP1=0, select bank1
  1420  0C4B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1421  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  1422  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  1423  0C4E  0826               	movf	?___flmul+2,w
  1424  0C4F  1683               	bsf	3,5	;RP0=1, select bank1
  1425  0C50  1303               	bcf	3,6	;RP1=0, select bank1
  1426  0C51  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1427  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  1428  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  1429  0C54  0825               	movf	?___flmul+1,w
  1430  0C55  1683               	bsf	3,5	;RP0=1, select bank1
  1431  0C56  1303               	bcf	3,6	;RP1=0, select bank1
  1432  0C57  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1433  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  1434  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  1435  0C5A  0824               	movf	?___flmul,w
  1436  0C5B  1683               	bsf	3,5	;RP0=1, select bank1
  1437  0C5C  1303               	bcf	3,6	;RP1=0, select bank1
  1438  0C5D  00A4               	movwf	___fldiv@b^(0+128)
  1439  0C5E  160A  158A  265D  120A  158A  	fcall	___fldiv
  1440  0C63  1683               	bsf	3,5	;RP0=1, select bank1
  1441  0C64  1303               	bcf	3,6	;RP1=0, select bank1
  1442  0C65  0823               	movf	(?___fldiv+3)^(0+128),w
  1443  0C66  00E6               	movwf	(main@current_val+3)^(0+128)
  1444  0C67  0822               	movf	(?___fldiv+2)^(0+128),w
  1445  0C68  00E5               	movwf	(main@current_val+2)^(0+128)
  1446  0C69  0821               	movf	(?___fldiv+1)^(0+128),w
  1447  0C6A  00E4               	movwf	(main@current_val+1)^(0+128)
  1448  0C6B  0820               	movf	?___fldiv^(0+128),w
  1449  0C6C  00E3               	movwf	main@current_val^(0+128)
  1450                           
  1451                           ;main.c: 182:     sprintf(str, "%.2f", (float) current_val);
  1452  0C6D  30A1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1453  0C6E  1283               	bcf	3,5	;RP0=0, select bank0
  1454  0C6F  1303               	bcf	3,6	;RP1=0, select bank0
  1455  0C70  00EE               	movwf	??_main
  1456  0C71  086E               	movf	??_main,w
  1457  0C72  1683               	bsf	3,5	;RP0=1, select bank1
  1458  0C73  1303               	bcf	3,6	;RP1=0, select bank1
  1459  0C74  00A0               	movwf	sprintf@f^(0+128)
  1460  0C75  0866               	movf	(main@current_val+3)^(0+128),w
  1461  0C76  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1462  0C77  0865               	movf	(main@current_val+2)^(0+128),w
  1463  0C78  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1464  0C79  0864               	movf	(main@current_val+1)^(0+128),w
  1465  0C7A  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1466  0C7B  0863               	movf	main@current_val^(0+128),w
  1467  0C7C  00A1               	movwf	(?_sprintf^(0+128)+1)
  1468  0C7D  30D3               	movlw	(low (main@str| 0))& (0+255)
  1469  0C7E  120A  118A  2205  120A  158A  	fcall	_sprintf
  1470                           
  1471                           ;main.c: 183:     Lcd_Set_Cursor(1,11);
  1472  0C83  300B               	movlw	11
  1473  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0C86  00EE               	movwf	??_main
  1476  0C87  086E               	movf	??_main,w
  1477  0C88  00F4               	movwf	Lcd_Set_Cursor@b
  1478  0C89  3001               	movlw	1
  1479  0C8A  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1480                           
  1481                           ;main.c: 184:     Lcd_Print_String(str);
  1482  0C8F  30D3               	movlw	(low (main@str| 0))& (0+255)
  1483  0C90  00F9               	movwf	Lcd_Print_String@a
  1484  0C91  3000               	movlw	0
  1485  0C92  00FA               	movwf	Lcd_Print_String@a+1
  1486  0C93  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1487                           
  1488                           ;main.c: 185:     current_val_prev = current_val;
  1489  0C98  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0C99  1303               	bcf	3,6	;RP1=0, select bank1
  1491  0C9A  0866               	movf	(main@current_val+3)^(0+128),w
  1492  0C9B  00CE               	movwf	(main@current_val_prev+3)^(0+128)
  1493  0C9C  0865               	movf	(main@current_val+2)^(0+128),w
  1494  0C9D  00CD               	movwf	(main@current_val_prev+2)^(0+128)
  1495  0C9E  0864               	movf	(main@current_val+1)^(0+128),w
  1496  0C9F  00CC               	movwf	(main@current_val_prev+1)^(0+128)
  1497  0CA0  0863               	movf	main@current_val^(0+128),w
  1498  0CA1  00CB               	movwf	main@current_val_prev^(0+128)
  1499                           
  1500                           ;main.c: 188:     adc = (ADC_Read(2));
  1501  0CA2  3002               	movlw	2
  1502  0CA3  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1503  0CA8  0871               	movf	?_ADC_Read+1,w
  1504  0CA9  1683               	bsf	3,5	;RP0=1, select bank1
  1505  0CAA  1303               	bcf	3,6	;RP1=0, select bank1
  1506  0CAB  00E8               	movwf	(main@adc+1)^(0+128)
  1507  0CAC  0870               	movf	?_ADC_Read,w
  1508  0CAD  00E7               	movwf	main@adc^(0+128)
  1509                           
  1510                           ;main.c: 189:     current_limit_val = adc*0.488281/100;
  1511  0CAE  3042               	movlw	66
  1512  0CAF  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1513  0CB0  30C8               	movlw	200
  1514  0CB1  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1515  0CB2  3000               	movlw	0
  1516  0CB3  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1517  0CB4  3000               	movlw	0
  1518  0CB5  00A0               	movwf	___fldiv@a^(0+128)
  1519  0CB6  303E               	movlw	62
  1520  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  1521  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  1522  0CB9  00A7               	movwf	___flmul@b+3
  1523  0CBA  30F9               	movlw	249
  1524  0CBB  00A6               	movwf	___flmul@b+2
  1525  0CBC  30FF               	movlw	255
  1526  0CBD  00A5               	movwf	___flmul@b+1
  1527  0CBE  30F8               	movlw	248
  1528  0CBF  00A4               	movwf	___flmul@b
  1529  0CC0  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0CC1  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0CC2  0867               	movf	main@adc^(0+128),w
  1532  0CC3  00F0               	movwf	___xxtofl@val
  1533  0CC4  0868               	movf	(main@adc+1)^(0+128),w
  1534  0CC5  00F1               	movwf	___xxtofl@val+1
  1535  0CC6  3000               	movlw	0
  1536  0CC7  1BF1               	btfsc	___xxtofl@val+1,7
  1537  0CC8  30FF               	movlw	255
  1538  0CC9  00F2               	movwf	___xxtofl@val+2
  1539  0CCA  00F3               	movwf	___xxtofl@val+3
  1540  0CCB  3001               	movlw	1
  1541  0CCC  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  1542  0CD1  0873               	movf	?___xxtofl+3,w
  1543  0CD2  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0CD3  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0CD4  00AB               	movwf	___flmul@a+3
  1546  0CD5  0872               	movf	?___xxtofl+2,w
  1547  0CD6  00AA               	movwf	___flmul@a+2
  1548  0CD7  0871               	movf	?___xxtofl+1,w
  1549  0CD8  00A9               	movwf	___flmul@a+1
  1550  0CD9  0870               	movf	?___xxtofl,w
  1551  0CDA  00A8               	movwf	___flmul@a
  1552  0CDB  160A  118A  21A2  120A  158A  	fcall	___flmul
  1553  0CE0  1283               	bcf	3,5	;RP0=0, select bank0
  1554  0CE1  1303               	bcf	3,6	;RP1=0, select bank0
  1555  0CE2  0827               	movf	?___flmul+3,w
  1556  0CE3  1683               	bsf	3,5	;RP0=1, select bank1
  1557  0CE4  1303               	bcf	3,6	;RP1=0, select bank1
  1558  0CE5  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1559  0CE6  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0CE7  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0CE8  0826               	movf	?___flmul+2,w
  1562  0CE9  1683               	bsf	3,5	;RP0=1, select bank1
  1563  0CEA  1303               	bcf	3,6	;RP1=0, select bank1
  1564  0CEB  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1565  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  1566  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  1567  0CEE  0825               	movf	?___flmul+1,w
  1568  0CEF  1683               	bsf	3,5	;RP0=1, select bank1
  1569  0CF0  1303               	bcf	3,6	;RP1=0, select bank1
  1570  0CF1  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1571  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0CF4  0824               	movf	?___flmul,w
  1574  0CF5  1683               	bsf	3,5	;RP0=1, select bank1
  1575  0CF6  1303               	bcf	3,6	;RP1=0, select bank1
  1576  0CF7  00A4               	movwf	___fldiv@b^(0+128)
  1577  0CF8  160A  158A  265D  120A  158A  	fcall	___fldiv
  1578  0CFD  1683               	bsf	3,5	;RP0=1, select bank1
  1579  0CFE  1303               	bcf	3,6	;RP1=0, select bank1
  1580  0CFF  0823               	movf	(?___fldiv+3)^(0+128),w
  1581  0D00  00EC               	movwf	(main@current_limit_val+3)^(0+128)
  1582  0D01  0822               	movf	(?___fldiv+2)^(0+128),w
  1583  0D02  00EB               	movwf	(main@current_limit_val+2)^(0+128)
  1584  0D03  0821               	movf	(?___fldiv+1)^(0+128),w
  1585  0D04  00EA               	movwf	(main@current_limit_val+1)^(0+128)
  1586  0D05  0820               	movf	?___fldiv^(0+128),w
  1587  0D06                     L2:	
  1588  0D06  00E9               	movwf	main@current_limit_val^(0+128)
  1589  0D07                     L1:	
  1590                           
  1591                           ;main.c: 191:     sprintf(str, "%.1f", (float) current_limit_val);
  1592  0D07  309C               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1593  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  1594  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  1595  0D0A  00EE               	movwf	??_main
  1596  0D0B  086E               	movf	??_main,w
  1597  0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  1598  0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  1599  0D0E  00A0               	movwf	sprintf@f^(0+128)
  1600  0D0F  086C               	movf	(main@current_limit_val+3)^(0+128),w
  1601  0D10  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1602  0D11  086B               	movf	(main@current_limit_val+2)^(0+128),w
  1603  0D12  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1604  0D13  086A               	movf	(main@current_limit_val+1)^(0+128),w
  1605  0D14  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1606  0D15  0869               	movf	main@current_limit_val^(0+128),w
  1607  0D16  00A1               	movwf	(?_sprintf^(0+128)+1)
  1608  0D17  30D3               	movlw	(low (main@str| 0))& (0+255)
  1609  0D18  120A  118A  2205  120A  158A  	fcall	_sprintf
  1610                           
  1611                           ;main.c: 192:     Lcd_Set_Cursor(2,12);
  1612  0D1D  300C               	movlw	12
  1613  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  1614  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  1615  0D20  00EE               	movwf	??_main
  1616  0D21  086E               	movf	??_main,w
  1617  0D22  00F4               	movwf	Lcd_Set_Cursor@b
  1618  0D23  3002               	movlw	2
  1619  0D24  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1620                           
  1621                           ;main.c: 193:     Lcd_Print_String(str);
  1622  0D29  30D3               	movlw	(low (main@str| 0))& (0+255)
  1623  0D2A  00F9               	movwf	Lcd_Print_String@a
  1624  0D2B  3000               	movlw	0
  1625  0D2C  00FA               	movwf	Lcd_Print_String@a+1
  1626  0D2D  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1627                           
  1628                           ;main.c: 194:     current_limit_val_prev = current_limit_val;
  1629  0D32  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0D33  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0D34  086C               	movf	(main@current_limit_val+3)^(0+128),w
  1632  0D35  00D2               	movwf	(main@current_limit_val_prev+3)^(0+128)
  1633  0D36  086B               	movf	(main@current_limit_val+2)^(0+128),w
  1634  0D37  00D1               	movwf	(main@current_limit_val_prev+2)^(0+128)
  1635  0D38  086A               	movf	(main@current_limit_val+1)^(0+128),w
  1636  0D39  00D0               	movwf	(main@current_limit_val_prev+1)^(0+128)
  1637  0D3A  0869               	movf	main@current_limit_val^(0+128),w
  1638  0D3B  00CF               	movwf	main@current_limit_val_prev^(0+128)
  1639  0D3C                     l3698:	
  1640                           
  1641                           ;main.c: 196:     {;main.c: 198:         adc = (ADC_Read(0));
  1642  0D3C  3000               	movlw	0
  1643  0D3D  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1644  0D42  0871               	movf	?_ADC_Read+1,w
  1645  0D43  1683               	bsf	3,5	;RP0=1, select bank1
  1646  0D44  1303               	bcf	3,6	;RP1=0, select bank1
  1647  0D45  00E8               	movwf	(main@adc+1)^(0+128)
  1648  0D46  0870               	movf	?_ADC_Read,w
  1649  0D47  00E7               	movwf	main@adc^(0+128)
  1650                           
  1651                           ;main.c: 199:         voltage_val = adc*0.488281/100/0.2;
  1652  0D48  3042               	movlw	66
  1653  0D49  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1654  0D4A  30C8               	movlw	200
  1655  0D4B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1656  0D4C  3000               	movlw	0
  1657  0D4D  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1658  0D4E  3000               	movlw	0
  1659  0D4F  00A0               	movwf	___fldiv@a^(0+128)
  1660  0D50  303E               	movlw	62
  1661  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  1662  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  1663  0D53  00A7               	movwf	___flmul@b+3
  1664  0D54  30F9               	movlw	249
  1665  0D55  00A6               	movwf	___flmul@b+2
  1666  0D56  30FF               	movlw	255
  1667  0D57  00A5               	movwf	___flmul@b+1
  1668  0D58  30F8               	movlw	248
  1669  0D59  00A4               	movwf	___flmul@b
  1670  0D5A  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0D5B  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0D5C  0867               	movf	main@adc^(0+128),w
  1673  0D5D  00F0               	movwf	___xxtofl@val
  1674  0D5E  0868               	movf	(main@adc+1)^(0+128),w
  1675  0D5F  00F1               	movwf	___xxtofl@val+1
  1676  0D60  3000               	movlw	0
  1677  0D61  1BF1               	btfsc	___xxtofl@val+1,7
  1678  0D62  30FF               	movlw	255
  1679  0D63  00F2               	movwf	___xxtofl@val+2
  1680  0D64  00F3               	movwf	___xxtofl@val+3
  1681  0D65  3001               	movlw	1
  1682  0D66  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  1683  0D6B  0873               	movf	?___xxtofl+3,w
  1684  0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  1685  0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  1686  0D6E  00AB               	movwf	___flmul@a+3
  1687  0D6F  0872               	movf	?___xxtofl+2,w
  1688  0D70  00AA               	movwf	___flmul@a+2
  1689  0D71  0871               	movf	?___xxtofl+1,w
  1690  0D72  00A9               	movwf	___flmul@a+1
  1691  0D73  0870               	movf	?___xxtofl,w
  1692  0D74  00A8               	movwf	___flmul@a
  1693  0D75  160A  118A  21A2  120A  158A  	fcall	___flmul
  1694  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0D7C  0827               	movf	?___flmul+3,w
  1697  0D7D  1683               	bsf	3,5	;RP0=1, select bank1
  1698  0D7E  1303               	bcf	3,6	;RP1=0, select bank1
  1699  0D7F  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1700  0D80  1283               	bcf	3,5	;RP0=0, select bank0
  1701  0D81  1303               	bcf	3,6	;RP1=0, select bank0
  1702  0D82  0826               	movf	?___flmul+2,w
  1703  0D83  1683               	bsf	3,5	;RP0=1, select bank1
  1704  0D84  1303               	bcf	3,6	;RP1=0, select bank1
  1705  0D85  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1706  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  1708  0D88  0825               	movf	?___flmul+1,w
  1709  0D89  1683               	bsf	3,5	;RP0=1, select bank1
  1710  0D8A  1303               	bcf	3,6	;RP1=0, select bank1
  1711  0D8B  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1712  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0D8E  0824               	movf	?___flmul,w
  1715  0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  1716  0D90  1303               	bcf	3,6	;RP1=0, select bank1
  1717  0D91  00A4               	movwf	___fldiv@b^(0+128)
  1718  0D92  160A  158A  265D  120A  158A  	fcall	___fldiv
  1719  0D97  1683               	bsf	3,5	;RP0=1, select bank1
  1720  0D98  1303               	bcf	3,6	;RP1=0, select bank1
  1721  0D99  0823               	movf	(?___fldiv+3)^(0+128),w
  1722  0D9A  00DE               	movwf	(_main$802+3)^(0+128)
  1723  0D9B  0822               	movf	(?___fldiv+2)^(0+128),w
  1724  0D9C  00DD               	movwf	(_main$802+2)^(0+128)
  1725  0D9D  0821               	movf	(?___fldiv+1)^(0+128),w
  1726  0D9E  00DC               	movwf	(_main$802+1)^(0+128)
  1727  0D9F  0820               	movf	?___fldiv^(0+128),w
  1728  0DA0  00DB               	movwf	_main$802^(0+128)
  1729                           
  1730                           ;main.c: 199:         voltage_val = adc*0.488281/100/0.2;
  1731  0DA1  303E               	movlw	62
  1732  0DA2  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1733  0DA3  304C               	movlw	76
  1734  0DA4  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1735  0DA5  30CC               	movlw	204
  1736  0DA6  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1737  0DA7  30CD               	movlw	205
  1738  0DA8  00A0               	movwf	___fldiv@a^(0+128)
  1739  0DA9  085E               	movf	(_main$802+3)^(0+128),w
  1740  0DAA  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1741  0DAB  085D               	movf	(_main$802+2)^(0+128),w
  1742  0DAC  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1743  0DAD  085C               	movf	(_main$802+1)^(0+128),w
  1744  0DAE  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1745  0DAF  085B               	movf	_main$802^(0+128),w
  1746  0DB0  00A4               	movwf	___fldiv@b^(0+128)
  1747  0DB1  160A  158A  265D  120A  158A  	fcall	___fldiv
  1748  0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  1749  0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  1750  0DB8  0823               	movf	(?___fldiv+3)^(0+128),w
  1751  0DB9  00E2               	movwf	(main@voltage_val+3)^(0+128)
  1752  0DBA  0822               	movf	(?___fldiv+2)^(0+128),w
  1753  0DBB  00E1               	movwf	(main@voltage_val+2)^(0+128)
  1754  0DBC  0821               	movf	(?___fldiv+1)^(0+128),w
  1755  0DBD  00E0               	movwf	(main@voltage_val+1)^(0+128)
  1756  0DBE  0820               	movf	?___fldiv^(0+128),w
  1757  0DBF  00DF               	movwf	main@voltage_val^(0+128)
  1758                           
  1759                           ;main.c: 200:         if (voltage_val != voltage_val_prev)
  1760  0DC0  0862               	movf	(main@voltage_val+3)^(0+128),w
  1761  0DC1  00F3               	movwf	___fleq@ff1+3
  1762  0DC2  0861               	movf	(main@voltage_val+2)^(0+128),w
  1763  0DC3  00F2               	movwf	___fleq@ff1+2
  1764  0DC4  0860               	movf	(main@voltage_val+1)^(0+128),w
  1765  0DC5  00F1               	movwf	___fleq@ff1+1
  1766  0DC6  085F               	movf	main@voltage_val^(0+128),w
  1767  0DC7  00F0               	movwf	___fleq@ff1
  1768  0DC8  084A               	movf	(main@voltage_val_prev+3)^(0+128),w
  1769  0DC9  00F7               	movwf	___fleq@ff2+3
  1770  0DCA  0849               	movf	(main@voltage_val_prev+2)^(0+128),w
  1771  0DCB  00F6               	movwf	___fleq@ff2+2
  1772  0DCC  0848               	movf	(main@voltage_val_prev+1)^(0+128),w
  1773  0DCD  00F5               	movwf	___fleq@ff2+1
  1774  0DCE  0847               	movf	main@voltage_val_prev^(0+128),w
  1775  0DCF  00F4               	movwf	___fleq@ff2
  1776  0DD0  160A  158A  2277  120A  158A  	fcall	___fleq
  1777  0DD5  1803               	btfsc	3,0
  1778  0DD6  2E08               	goto	l3714
  1779                           
  1780                           ;main.c: 201:         {;main.c: 202:             sprintf(str, "%.2f", (float) voltage_va
      +                          l);
  1781  0DD7  30A1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1782  0DD8  1283               	bcf	3,5	;RP0=0, select bank0
  1783  0DD9  1303               	bcf	3,6	;RP1=0, select bank0
  1784  0DDA  00EE               	movwf	??_main
  1785  0DDB  086E               	movf	??_main,w
  1786  0DDC  1683               	bsf	3,5	;RP0=1, select bank1
  1787  0DDD  1303               	bcf	3,6	;RP1=0, select bank1
  1788  0DDE  00A0               	movwf	sprintf@f^(0+128)
  1789  0DDF  0862               	movf	(main@voltage_val+3)^(0+128),w
  1790  0DE0  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1791  0DE1  0861               	movf	(main@voltage_val+2)^(0+128),w
  1792  0DE2  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1793  0DE3  0860               	movf	(main@voltage_val+1)^(0+128),w
  1794  0DE4  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1795  0DE5  085F               	movf	main@voltage_val^(0+128),w
  1796  0DE6  00A1               	movwf	(?_sprintf^(0+128)+1)
  1797  0DE7  30D3               	movlw	(low (main@str| 0))& (0+255)
  1798  0DE8  120A  118A  2205  120A  158A  	fcall	_sprintf
  1799                           
  1800                           ;main.c: 203:             Lcd_Set_Cursor(1,1);
  1801  0DED  01F4               	clrf	Lcd_Set_Cursor@b
  1802  0DEE  0AF4               	incf	Lcd_Set_Cursor@b,f
  1803  0DEF  3001               	movlw	1
  1804  0DF0  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1805                           
  1806                           ;main.c: 204:             Lcd_Print_String(str);
  1807  0DF5  30D3               	movlw	(low (main@str| 0))& (0+255)
  1808  0DF6  00F9               	movwf	Lcd_Print_String@a
  1809  0DF7  3000               	movlw	0
  1810  0DF8  00FA               	movwf	Lcd_Print_String@a+1
  1811  0DF9  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1812                           
  1813                           ;main.c: 205:             voltage_val_prev = voltage_val;
  1814  0DFE  1683               	bsf	3,5	;RP0=1, select bank1
  1815  0DFF  1303               	bcf	3,6	;RP1=0, select bank1
  1816  0E00  0862               	movf	(main@voltage_val+3)^(0+128),w
  1817  0E01  00CA               	movwf	(main@voltage_val_prev+3)^(0+128)
  1818  0E02  0861               	movf	(main@voltage_val+2)^(0+128),w
  1819  0E03  00C9               	movwf	(main@voltage_val_prev+2)^(0+128)
  1820  0E04  0860               	movf	(main@voltage_val+1)^(0+128),w
  1821  0E05  00C8               	movwf	(main@voltage_val_prev+1)^(0+128)
  1822  0E06  085F               	movf	main@voltage_val^(0+128),w
  1823  0E07  00C7               	movwf	main@voltage_val_prev^(0+128)
  1824  0E08                     l3714:	
  1825                           
  1826                           ;main.c: 209:         adc = (ADC_Read(1));
  1827  0E08  3001               	movlw	1
  1828  0E09  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1829  0E0E  0871               	movf	?_ADC_Read+1,w
  1830  0E0F  1683               	bsf	3,5	;RP0=1, select bank1
  1831  0E10  1303               	bcf	3,6	;RP1=0, select bank1
  1832  0E11  00E8               	movwf	(main@adc+1)^(0+128)
  1833  0E12  0870               	movf	?_ADC_Read,w
  1834  0E13  00E7               	movwf	main@adc^(0+128)
  1835                           
  1836                           ;main.c: 210:         current_val = adc*0.488281/100;
  1837  0E14  3042               	movlw	66
  1838  0E15  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1839  0E16  30C8               	movlw	200
  1840  0E17  00A2               	movwf	(___fldiv@a+2)^(0+128)
  1841  0E18  3000               	movlw	0
  1842  0E19  00A1               	movwf	(___fldiv@a+1)^(0+128)
  1843  0E1A  3000               	movlw	0
  1844  0E1B  00A0               	movwf	___fldiv@a^(0+128)
  1845  0E1C  303E               	movlw	62
  1846  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0E1F  00A7               	movwf	___flmul@b+3
  1849  0E20  30F9               	movlw	249
  1850  0E21  00A6               	movwf	___flmul@b+2
  1851  0E22  30FF               	movlw	255
  1852  0E23  00A5               	movwf	___flmul@b+1
  1853  0E24  30F8               	movlw	248
  1854  0E25  00A4               	movwf	___flmul@b
  1855  0E26  1683               	bsf	3,5	;RP0=1, select bank1
  1856  0E27  1303               	bcf	3,6	;RP1=0, select bank1
  1857  0E28  0867               	movf	main@adc^(0+128),w
  1858  0E29  00F0               	movwf	___xxtofl@val
  1859  0E2A  0868               	movf	(main@adc+1)^(0+128),w
  1860  0E2B  00F1               	movwf	___xxtofl@val+1
  1861  0E2C  3000               	movlw	0
  1862  0E2D  1BF1               	btfsc	___xxtofl@val+1,7
  1863  0E2E  30FF               	movlw	255
  1864  0E2F  00F2               	movwf	___xxtofl@val+2
  1865  0E30  00F3               	movwf	___xxtofl@val+3
  1866  0E31  3001               	movlw	1
  1867  0E32  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  1868  0E37  0873               	movf	?___xxtofl+3,w
  1869  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  1870  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  1871  0E3A  00AB               	movwf	___flmul@a+3
  1872  0E3B  0872               	movf	?___xxtofl+2,w
  1873  0E3C  00AA               	movwf	___flmul@a+2
  1874  0E3D  0871               	movf	?___xxtofl+1,w
  1875  0E3E  00A9               	movwf	___flmul@a+1
  1876  0E3F  0870               	movf	?___xxtofl,w
  1877  0E40  00A8               	movwf	___flmul@a
  1878  0E41  160A  118A  21A2  120A  158A  	fcall	___flmul
  1879  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0E48  0827               	movf	?___flmul+3,w
  1882  0E49  1683               	bsf	3,5	;RP0=1, select bank1
  1883  0E4A  1303               	bcf	3,6	;RP1=0, select bank1
  1884  0E4B  00A7               	movwf	(___fldiv@b+3)^(0+128)
  1885  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0E4E  0826               	movf	?___flmul+2,w
  1888  0E4F  1683               	bsf	3,5	;RP0=1, select bank1
  1889  0E50  1303               	bcf	3,6	;RP1=0, select bank1
  1890  0E51  00A6               	movwf	(___fldiv@b+2)^(0+128)
  1891  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  1892  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  1893  0E54  0825               	movf	?___flmul+1,w
  1894  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  1895  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  1896  0E57  00A5               	movwf	(___fldiv@b+1)^(0+128)
  1897  0E58  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0E59  1303               	bcf	3,6	;RP1=0, select bank0
  1899  0E5A  0824               	movf	?___flmul,w
  1900  0E5B  1683               	bsf	3,5	;RP0=1, select bank1
  1901  0E5C  1303               	bcf	3,6	;RP1=0, select bank1
  1902  0E5D  00A4               	movwf	___fldiv@b^(0+128)
  1903  0E5E  160A  158A  265D  120A  158A  	fcall	___fldiv
  1904  0E63  1683               	bsf	3,5	;RP0=1, select bank1
  1905  0E64  1303               	bcf	3,6	;RP1=0, select bank1
  1906  0E65  0823               	movf	(?___fldiv+3)^(0+128),w
  1907  0E66  00E6               	movwf	(main@current_val+3)^(0+128)
  1908  0E67  0822               	movf	(?___fldiv+2)^(0+128),w
  1909  0E68  00E5               	movwf	(main@current_val+2)^(0+128)
  1910  0E69  0821               	movf	(?___fldiv+1)^(0+128),w
  1911  0E6A  00E4               	movwf	(main@current_val+1)^(0+128)
  1912  0E6B  0820               	movf	?___fldiv^(0+128),w
  1913  0E6C  00E3               	movwf	main@current_val^(0+128)
  1914                           
  1915                           ;main.c: 211:         if (current_val != current_val_prev)
  1916  0E6D  0866               	movf	(main@current_val+3)^(0+128),w
  1917  0E6E  00F3               	movwf	___fleq@ff1+3
  1918  0E6F  0865               	movf	(main@current_val+2)^(0+128),w
  1919  0E70  00F2               	movwf	___fleq@ff1+2
  1920  0E71  0864               	movf	(main@current_val+1)^(0+128),w
  1921  0E72  00F1               	movwf	___fleq@ff1+1
  1922  0E73  0863               	movf	main@current_val^(0+128),w
  1923  0E74  00F0               	movwf	___fleq@ff1
  1924  0E75  084E               	movf	(main@current_val_prev+3)^(0+128),w
  1925  0E76  00F7               	movwf	___fleq@ff2+3
  1926  0E77  084D               	movf	(main@current_val_prev+2)^(0+128),w
  1927  0E78  00F6               	movwf	___fleq@ff2+2
  1928  0E79  084C               	movf	(main@current_val_prev+1)^(0+128),w
  1929  0E7A  00F5               	movwf	___fleq@ff2+1
  1930  0E7B  084B               	movf	main@current_val_prev^(0+128),w
  1931  0E7C  00F4               	movwf	___fleq@ff2
  1932  0E7D  160A  158A  2277  120A  158A  	fcall	___fleq
  1933  0E82  1803               	btfsc	3,0
  1934  0E83  2EB9               	goto	l3728
  1935                           
  1936                           ;main.c: 212:         {;main.c: 213:             sprintf(str, "%.2f", (float) current_va
      +                          l);
  1937  0E84  30A1               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1938  0E85  1283               	bcf	3,5	;RP0=0, select bank0
  1939  0E86  1303               	bcf	3,6	;RP1=0, select bank0
  1940  0E87  00EE               	movwf	??_main
  1941  0E88  086E               	movf	??_main,w
  1942  0E89  1683               	bsf	3,5	;RP0=1, select bank1
  1943  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
  1944  0E8B  00A0               	movwf	sprintf@f^(0+128)
  1945  0E8C  0866               	movf	(main@current_val+3)^(0+128),w
  1946  0E8D  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1947  0E8E  0865               	movf	(main@current_val+2)^(0+128),w
  1948  0E8F  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1949  0E90  0864               	movf	(main@current_val+1)^(0+128),w
  1950  0E91  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1951  0E92  0863               	movf	main@current_val^(0+128),w
  1952  0E93  00A1               	movwf	(?_sprintf^(0+128)+1)
  1953  0E94  30D3               	movlw	(low (main@str| 0))& (0+255)
  1954  0E95  120A  118A  2205  120A  158A  	fcall	_sprintf
  1955                           
  1956                           ;main.c: 214:             Lcd_Set_Cursor(1,11);
  1957  0E9A  300B               	movlw	11
  1958  0E9B  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0E9C  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0E9D  00EE               	movwf	??_main
  1961  0E9E  086E               	movf	??_main,w
  1962  0E9F  00F4               	movwf	Lcd_Set_Cursor@b
  1963  0EA0  3001               	movlw	1
  1964  0EA1  160A  158A  22BF  120A  158A  	fcall	_Lcd_Set_Cursor
  1965                           
  1966                           ;main.c: 215:             Lcd_Print_String(str);
  1967  0EA6  30D3               	movlw	(low (main@str| 0))& (0+255)
  1968  0EA7  00F9               	movwf	Lcd_Print_String@a
  1969  0EA8  3000               	movlw	0
  1970  0EA9  00FA               	movwf	Lcd_Print_String@a+1
  1971  0EAA  160A  158A  2236  120A  158A  	fcall	_Lcd_Print_String
  1972                           
  1973                           ;main.c: 216:             current_val_prev = current_val;
  1974  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  1975  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  1976  0EB1  0866               	movf	(main@current_val+3)^(0+128),w
  1977  0EB2  00CE               	movwf	(main@current_val_prev+3)^(0+128)
  1978  0EB3  0865               	movf	(main@current_val+2)^(0+128),w
  1979  0EB4  00CD               	movwf	(main@current_val_prev+2)^(0+128)
  1980  0EB5  0864               	movf	(main@current_val+1)^(0+128),w
  1981  0EB6  00CC               	movwf	(main@current_val_prev+1)^(0+128)
  1982  0EB7  0863               	movf	main@current_val^(0+128),w
  1983  0EB8  00CB               	movwf	main@current_val_prev^(0+128)
  1984  0EB9                     l3728:	
  1985                           
  1986                           ;main.c: 219:         adc = (ADC_Read(2));
  1987  0EB9  3002               	movlw	2
  1988  0EBA  160A  158A  219F  120A  158A  	fcall	_ADC_Read
  1989  0EBF  0871               	movf	?_ADC_Read+1,w
  1990  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  1991  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  1992  0EC2  00E8               	movwf	(main@adc+1)^(0+128)
  1993  0EC3  0870               	movf	?_ADC_Read,w
  1994  0EC4  00E7               	movwf	main@adc^(0+128)
  1995                           
  1996                           ;main.c: 220:         current_limit_val = adc*0.488281/100;
  1997  0EC5  3042               	movlw	66
  1998  0EC6  00A3               	movwf	(___fldiv@a+3)^(0+128)
  1999  0EC7  30C8               	movlw	200
  2000  0EC8  00A2               	movwf	(___fldiv@a+2)^(0+128)
  2001  0EC9  3000               	movlw	0
  2002  0ECA  00A1               	movwf	(___fldiv@a+1)^(0+128)
  2003  0ECB  3000               	movlw	0
  2004  0ECC  00A0               	movwf	___fldiv@a^(0+128)
  2005  0ECD  303E               	movlw	62
  2006  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  2007  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  2008  0ED0  00A7               	movwf	___flmul@b+3
  2009  0ED1  30F9               	movlw	249
  2010  0ED2  00A6               	movwf	___flmul@b+2
  2011  0ED3  30FF               	movlw	255
  2012  0ED4  00A5               	movwf	___flmul@b+1
  2013  0ED5  30F8               	movlw	248
  2014  0ED6  00A4               	movwf	___flmul@b
  2015  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
  2016  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
  2017  0ED9  0867               	movf	main@adc^(0+128),w
  2018  0EDA  00F0               	movwf	___xxtofl@val
  2019  0EDB  0868               	movf	(main@adc+1)^(0+128),w
  2020  0EDC  00F1               	movwf	___xxtofl@val+1
  2021  0EDD  3000               	movlw	0
  2022  0EDE  1BF1               	btfsc	___xxtofl@val+1,7
  2023  0EDF  30FF               	movlw	255
  2024  0EE0  00F2               	movwf	___xxtofl@val+2
  2025  0EE1  00F3               	movwf	___xxtofl@val+3
  2026  0EE2  3001               	movlw	1
  2027  0EE3  160A  158A  25BA  120A  158A  	fcall	___xxtofl
  2028  0EE8  0873               	movf	?___xxtofl+3,w
  2029  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0EEB  00AB               	movwf	___flmul@a+3
  2032  0EEC  0872               	movf	?___xxtofl+2,w
  2033  0EED  00AA               	movwf	___flmul@a+2
  2034  0EEE  0871               	movf	?___xxtofl+1,w
  2035  0EEF  00A9               	movwf	___flmul@a+1
  2036  0EF0  0870               	movf	?___xxtofl,w
  2037  0EF1  00A8               	movwf	___flmul@a
  2038  0EF2  160A  118A  21A2  120A  158A  	fcall	___flmul
  2039  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0EF9  0827               	movf	?___flmul+3,w
  2042  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
  2043  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
  2044  0EFC  00A7               	movwf	(___fldiv@b+3)^(0+128)
  2045  0EFD  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0EFE  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0EFF  0826               	movf	?___flmul+2,w
  2048  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  2049  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  2050  0F02  00A6               	movwf	(___fldiv@b+2)^(0+128)
  2051  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  2052  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  2053  0F05  0825               	movf	?___flmul+1,w
  2054  0F06  1683               	bsf	3,5	;RP0=1, select bank1
  2055  0F07  1303               	bcf	3,6	;RP1=0, select bank1
  2056  0F08  00A5               	movwf	(___fldiv@b+1)^(0+128)
  2057  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  2058  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  2059  0F0B  0824               	movf	?___flmul,w
  2060  0F0C  1683               	bsf	3,5	;RP0=1, select bank1
  2061  0F0D  1303               	bcf	3,6	;RP1=0, select bank1
  2062  0F0E  00A4               	movwf	___fldiv@b^(0+128)
  2063  0F0F  160A  158A  265D  120A  158A  	fcall	___fldiv
  2064  0F14  1683               	bsf	3,5	;RP0=1, select bank1
  2065  0F15  1303               	bcf	3,6	;RP1=0, select bank1
  2066  0F16  0823               	movf	(?___fldiv+3)^(0+128),w
  2067  0F17  00EC               	movwf	(main@current_limit_val+3)^(0+128)
  2068  0F18  0822               	movf	(?___fldiv+2)^(0+128),w
  2069  0F19  00EB               	movwf	(main@current_limit_val+2)^(0+128)
  2070  0F1A  0821               	movf	(?___fldiv+1)^(0+128),w
  2071  0F1B  00EA               	movwf	(main@current_limit_val+1)^(0+128)
  2072  0F1C  0820               	movf	?___fldiv^(0+128),w
  2073  0F1D  00E9               	movwf	main@current_limit_val^(0+128)
  2074                           
  2075                           ;main.c: 221:         RLim = 10000*current_limit_val/(5-current_limit_val);
  2076  0F1E  086C               	movf	(main@current_limit_val+3)^(0+128),w
  2077  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  2078  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  2079  0F21  00E9               	movwf	___flsub@a+3
  2080  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  2081  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  2082  0F24  086B               	movf	(main@current_limit_val+2)^(0+128),w
  2083  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2084  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2085  0F27  00E8               	movwf	___flsub@a+2
  2086  0F28  1683               	bsf	3,5	;RP0=1, select bank1
  2087  0F29  1303               	bcf	3,6	;RP1=0, select bank1
  2088  0F2A  086A               	movf	(main@current_limit_val+1)^(0+128),w
  2089  0F2B  1283               	bcf	3,5	;RP0=0, select bank0
  2090  0F2C  1303               	bcf	3,6	;RP1=0, select bank0
  2091  0F2D  00E7               	movwf	___flsub@a+1
  2092  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
  2093  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
  2094  0F30  0869               	movf	main@current_limit_val^(0+128),w
  2095  0F31  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0F32  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0F33  00E6               	movwf	___flsub@a
  2098  0F34  3040               	movlw	64
  2099  0F35  00ED               	movwf	___flsub@b+3
  2100  0F36  30A0               	movlw	160
  2101  0F37  00EC               	movwf	___flsub@b+2
  2102  0F38  3000               	movlw	0
  2103  0F39  00EB               	movwf	___flsub@b+1
  2104  0F3A  3000               	movlw	0
  2105  0F3B  00EA               	movwf	___flsub@b
  2106  0F3C  160A  158A  215A  120A  158A  	fcall	___flsub
  2107  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  2108  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  2109  0F43  0869               	movf	?___flsub+3,w
  2110  0F44  1683               	bsf	3,5	;RP0=1, select bank1
  2111  0F45  1303               	bcf	3,6	;RP1=0, select bank1
  2112  0F46  00A3               	movwf	(___fldiv@a+3)^(0+128)
  2113  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  2114  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  2115  0F49  0868               	movf	?___flsub+2,w
  2116  0F4A  1683               	bsf	3,5	;RP0=1, select bank1
  2117  0F4B  1303               	bcf	3,6	;RP1=0, select bank1
  2118  0F4C  00A2               	movwf	(___fldiv@a+2)^(0+128)
  2119  0F4D  1283               	bcf	3,5	;RP0=0, select bank0
  2120  0F4E  1303               	bcf	3,6	;RP1=0, select bank0
  2121  0F4F  0867               	movf	?___flsub+1,w
  2122  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  2123  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  2124  0F52  00A1               	movwf	(___fldiv@a+1)^(0+128)
  2125  0F53  1283               	bcf	3,5	;RP0=0, select bank0
  2126  0F54  1303               	bcf	3,6	;RP1=0, select bank0
  2127  0F55  0866               	movf	?___flsub,w
  2128  0F56  1683               	bsf	3,5	;RP0=1, select bank1
  2129  0F57  1303               	bcf	3,6	;RP1=0, select bank1
  2130  0F58  00A0               	movwf	___fldiv@a^(0+128)
  2131  0F59  3046               	movlw	70
  2132  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  2133  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  2134  0F5C  00A7               	movwf	___flmul@b+3
  2135  0F5D  301C               	movlw	28
  2136  0F5E  00A6               	movwf	___flmul@b+2
  2137  0F5F  3040               	movlw	64
  2138  0F60  00A5               	movwf	___flmul@b+1
  2139  0F61  3000               	movlw	0
  2140  0F62  00A4               	movwf	___flmul@b
  2141  0F63  1683               	bsf	3,5	;RP0=1, select bank1
  2142  0F64  1303               	bcf	3,6	;RP1=0, select bank1
  2143  0F65  086C               	movf	(main@current_limit_val+3)^(0+128),w
  2144  0F66  1283               	bcf	3,5	;RP0=0, select bank0
  2145  0F67  1303               	bcf	3,6	;RP1=0, select bank0
  2146  0F68  00AB               	movwf	___flmul@a+3
  2147  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  2148  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  2149  0F6B  086B               	movf	(main@current_limit_val+2)^(0+128),w
  2150  0F6C  1283               	bcf	3,5	;RP0=0, select bank0
  2151  0F6D  1303               	bcf	3,6	;RP1=0, select bank0
  2152  0F6E  00AA               	movwf	___flmul@a+2
  2153  0F6F  1683               	bsf	3,5	;RP0=1, select bank1
  2154  0F70  1303               	bcf	3,6	;RP1=0, select bank1
  2155  0F71  086A               	movf	(main@current_limit_val+1)^(0+128),w
  2156  0F72  1283               	bcf	3,5	;RP0=0, select bank0
  2157  0F73  1303               	bcf	3,6	;RP1=0, select bank0
  2158  0F74  00A9               	movwf	___flmul@a+1
  2159  0F75  1683               	bsf	3,5	;RP0=1, select bank1
  2160  0F76  1303               	bcf	3,6	;RP1=0, select bank1
  2161  0F77  0869               	movf	main@current_limit_val^(0+128),w
  2162  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0F7A  00A8               	movwf	___flmul@a
  2165  0F7B  160A  118A  21A2  120A  158A  	fcall	___flmul
  2166  0F80  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0F81  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0F82  0827               	movf	?___flmul+3,w
  2169  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0F85  00A7               	movwf	(___fldiv@b+3)^(0+128)
  2172  0F86  1283               	bcf	3,5	;RP0=0, select bank0
  2173  0F87  1303               	bcf	3,6	;RP1=0, select bank0
  2174  0F88  0826               	movf	?___flmul+2,w
  2175  0F89  1683               	bsf	3,5	;RP0=1, select bank1
  2176  0F8A  1303               	bcf	3,6	;RP1=0, select bank1
  2177  0F8B  00A6               	movwf	(___fldiv@b+2)^(0+128)
  2178  0F8C  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0F8D  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0F8E  0825               	movf	?___flmul+1,w
  2181  0F8F  1683               	bsf	3,5	;RP0=1, select bank1
  2182  0F90  1303               	bcf	3,6	;RP1=0, select bank1
  2183  0F91  00A5               	movwf	(___fldiv@b+1)^(0+128)
  2184  0F92  1283               	bcf	3,5	;RP0=0, select bank0
  2185  0F93  1303               	bcf	3,6	;RP1=0, select bank0
  2186  0F94  0824               	movf	?___flmul,w
  2187  0F95  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0F96  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0F97  00A4               	movwf	___fldiv@b^(0+128)
  2190  0F98  160A  158A  265D  120A  158A  	fcall	___fldiv
  2191  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0F9F  0823               	movf	(?___fldiv+3)^(0+128),w
  2194  0FA0  00C6               	movwf	(main@RLim+3)^(0+128)
  2195  0FA1  0822               	movf	(?___fldiv+2)^(0+128),w
  2196  0FA2  00C5               	movwf	(main@RLim+2)^(0+128)
  2197  0FA3  0821               	movf	(?___fldiv+1)^(0+128),w
  2198  0FA4  00C4               	movwf	(main@RLim+1)^(0+128)
  2199  0FA5  0820               	movf	?___fldiv^(0+128),w
  2200  0FA6  00C3               	movwf	main@RLim^(0+128)
  2201                           
  2202                           ;main.c: 222:         current_limit_val = 0.8*1000/RLim;
  2203  0FA7  0846               	movf	(main@RLim+3)^(0+128),w
  2204  0FA8  00A3               	movwf	(___fldiv@a+3)^(0+128)
  2205  0FA9  0845               	movf	(main@RLim+2)^(0+128),w
  2206  0FAA  00A2               	movwf	(___fldiv@a+2)^(0+128)
  2207  0FAB  0844               	movf	(main@RLim+1)^(0+128),w
  2208  0FAC  00A1               	movwf	(___fldiv@a+1)^(0+128)
  2209  0FAD  0843               	movf	main@RLim^(0+128),w
  2210  0FAE  00A0               	movwf	___fldiv@a^(0+128)
  2211  0FAF  3044               	movlw	68
  2212  0FB0  00A7               	movwf	(___fldiv@b+3)^(0+128)
  2213  0FB1  3048               	movlw	72
  2214  0FB2  00A6               	movwf	(___fldiv@b+2)^(0+128)
  2215  0FB3  3000               	movlw	0
  2216  0FB4  00A5               	movwf	(___fldiv@b+1)^(0+128)
  2217  0FB5  3000               	movlw	0
  2218  0FB6  00A4               	movwf	___fldiv@b^(0+128)
  2219  0FB7  160A  158A  265D  120A  158A  	fcall	___fldiv
  2220  0FBC  1683               	bsf	3,5	;RP0=1, select bank1
  2221  0FBD  1303               	bcf	3,6	;RP1=0, select bank1
  2222  0FBE  0823               	movf	(?___fldiv+3)^(0+128),w
  2223  0FBF  00EC               	movwf	(main@current_limit_val+3)^(0+128)
  2224  0FC0  0822               	movf	(?___fldiv+2)^(0+128),w
  2225  0FC1  00EB               	movwf	(main@current_limit_val+2)^(0+128)
  2226  0FC2  0821               	movf	(?___fldiv+1)^(0+128),w
  2227  0FC3  00EA               	movwf	(main@current_limit_val+1)^(0+128)
  2228  0FC4  0820               	movf	?___fldiv^(0+128),w
  2229  0FC5  00E9               	movwf	main@current_limit_val^(0+128)
  2230                           
  2231                           ;main.c: 224:         if (current_limit_val != current_limit_val_prev)
  2232  0FC6  086C               	movf	(main@current_limit_val+3)^(0+128),w
  2233  0FC7  00F3               	movwf	___fleq@ff1+3
  2234  0FC8  086B               	movf	(main@current_limit_val+2)^(0+128),w
  2235  0FC9  00F2               	movwf	___fleq@ff1+2
  2236  0FCA  086A               	movf	(main@current_limit_val+1)^(0+128),w
  2237  0FCB  00F1               	movwf	___fleq@ff1+1
  2238  0FCC  0869               	movf	main@current_limit_val^(0+128),w
  2239  0FCD  00F0               	movwf	___fleq@ff1
  2240  0FCE  0852               	movf	(main@current_limit_val_prev+3)^(0+128),w
  2241  0FCF  00F7               	movwf	___fleq@ff2+3
  2242  0FD0  0851               	movf	(main@current_limit_val_prev+2)^(0+128),w
  2243  0FD1  00F6               	movwf	___fleq@ff2+2
  2244  0FD2  0850               	movf	(main@current_limit_val_prev+1)^(0+128),w
  2245  0FD3  00F5               	movwf	___fleq@ff2+1
  2246  0FD4  084F               	movf	main@current_limit_val_prev^(0+128),w
  2247  0FD5  00F4               	movwf	___fleq@ff2
  2248  0FD6  160A  158A  2277  120A  158A  	fcall	___fleq
  2249  0FDB  1803               	btfsc	3,0
  2250  0FDC  2D3C               	goto	l3698
  2251                           
  2252                           ;main.c: 225:         {;main.c: 226:             if (current_limit_val >= 2.5)
  2253  0FDD  1683               	bsf	3,5	;RP0=1, select bank1
  2254  0FDE  1303               	bcf	3,6	;RP1=0, select bank1
  2255  0FDF  086C               	movf	(main@current_limit_val+3)^(0+128),w
  2256  0FE0  00F3               	movwf	___flge@ff1+3
  2257  0FE1  086B               	movf	(main@current_limit_val+2)^(0+128),w
  2258  0FE2  00F2               	movwf	___flge@ff1+2
  2259  0FE3  086A               	movf	(main@current_limit_val+1)^(0+128),w
  2260  0FE4  00F1               	movwf	___flge@ff1+1
  2261  0FE5  0869               	movf	main@current_limit_val^(0+128),w
  2262  0FE6  00F0               	movwf	___flge@ff1
  2263  0FE7  3040               	movlw	64
  2264  0FE8  00F7               	movwf	___flge@ff2+3
  2265  0FE9  3020               	movlw	32
  2266  0FEA  00F6               	movwf	___flge@ff2+2
  2267  0FEB  3000               	movlw	0
  2268  0FEC  00F5               	movwf	___flge@ff2+1
  2269  0FED  3000               	movlw	0
  2270  0FEE  00F4               	movwf	___flge@ff2
  2271  0FEF  160A  158A  2527  120A  158A  	fcall	___flge
  2272  0FF4  1C03               	btfss	3,0
  2273  0FF5  2D07               	goto	L1
  2274                           
  2275                           ;main.c: 227:             {;main.c: 228:                 current_limit_val = 2.5;
  2276  0FF6  3040               	movlw	64
  2277  0FF7  1683               	bsf	3,5	;RP0=1, select bank1
  2278  0FF8  1303               	bcf	3,6	;RP1=0, select bank1
  2279  0FF9  00EC               	movwf	(main@current_limit_val+3)^(0+128)
  2280  0FFA  3020               	movlw	32
  2281  0FFB  00EB               	movwf	(main@current_limit_val+2)^(0+128)
  2282  0FFC  3000               	movlw	0
  2283  0FFD  00EA               	movwf	(main@current_limit_val+1)^(0+128)
  2284  0FFE  3000               	movlw	0
  2285  0FFF  2D06               	goto	L2
  2286  1000                     __end_of_main:	
  2287                           ;main.c: 231:             Lcd_Set_Cursor(2,12);
  2288                           
  2289                           ;main.c: 230:             sprintf(str, "%.1f", (float) current_limit_val);
  2290                           
  2291                           
  2292                           	psect	text1
  2293  0205                     __ptext1:	
  2294 ;; *************** function _sprintf *****************
  2295 ;; Defined at:
  2296 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;  sp              1    wreg     PTR unsigned char 
  2299 ;;		 -> main@str(8), 
  2300 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  2301 ;;		 -> STR_10(5), STR_9(5), STR_8(5), STR_7(5), 
  2302 ;;		 -> STR_6(5), STR_5(5), 
  2303 ;; Auto vars:     Size  Location     Type
  2304 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  2305 ;;		 -> main@str(8), 
  2306 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  2307 ;;  tmpval          4   23[BANK1 ] struct .
  2308 ;;  val             4   17[BANK1 ] unsigned long 
  2309 ;;  prec            2   27[BANK1 ] int 
  2310 ;;  eexp            2   21[BANK1 ] int 
  2311 ;;  flag            2   15[BANK1 ] unsigned short 
  2312 ;;  cp              2    0        PTR const unsigned char 
  2313 ;;  len             2    0        unsigned int 
  2314 ;;  width           2    0        int 
  2315 ;;  c               1   34[BANK1 ] unsigned char 
  2316 ;;  ap              1   14[BANK1 ] PTR void [1]
  2317 ;;		 -> ?_sprintf(2), 
  2318 ;;  d               1    0        unsigned char 
  2319 ;; Return value:  Size  Location     Type
  2320 ;;                  2    0[BANK1 ] int 
  2321 ;; Registers used:
  2322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2328 ;;      Params:         0       0       5       0       0
  2329 ;;      Locals:         0       0      25       0       0
  2330 ;;      Temps:          0       0       5       0       0
  2331 ;;      Totals:         0       0      35       0       0
  2332 ;;Total ram usage:       35 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:    3
  2335 ;; This function calls:
  2336 ;;		___awdiv
  2337 ;;		___fladd
  2338 ;;		___fleq
  2339 ;;		___flge
  2340 ;;		___flmul
  2341 ;;		___flneg
  2342 ;;		___flsub
  2343 ;;		___fltol
  2344 ;;		___lldiv
  2345 ;;		___llmod
  2346 ;;		___wmul
  2347 ;;		___xxtofl
  2348 ;;		__div_to_l_
  2349 ;;		__tdiv_to_l_
  2350 ;;		_fround
  2351 ;;		_isdigit
  2352 ;;		_scale
  2353 ;; This function is called by:
  2354 ;;		_main
  2355 ;; This function uses a non-reentrant model
  2356 ;;
  2357                           
  2358                           
  2359                           ;psect for function _sprintf
  2360  0205                     _sprintf:	
  2361                           
  2362                           ;incstack = 0
  2363                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2364                           ;sprintf@sp stored from wreg
  2365  0205  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0206  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0207  00BD               	movwf	sprintf@sp^(0+128)
  2368                           
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  2370  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2371  0209  00A5               	movwf	??_sprintf^(0+128)
  2372  020A  0825               	movf	??_sprintf^(0+128),w
  2373  020B  00AE               	movwf	sprintf@ap^(0+128)
  2374  020C                     l3472:	
  2375                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2376                           
  2377                           
  2378                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  2379  020C  3001               	movlw	1
  2380  020D  07A0               	addwf	sprintf@f^(0+128),f
  2381  020E  30FF               	movlw	-1
  2382  020F  0720               	addwf	sprintf@f^(0+128),w
  2383  0210  0084               	movwf	4
  2384  0211  120A  158A  200A  120A  118A  	fcall	stringdir
  2385  0216  00A5               	movwf	??_sprintf^(0+128)
  2386  0217  0825               	movf	??_sprintf^(0+128),w
  2387  0218  00C2               	movwf	sprintf@c^(0+128)
  2388  0219  0842               	movf	sprintf@c^(0+128),w
  2389  021A  1903               	btfsc	3,2
  2390  021B  2FF7               	goto	l3474
  2391                           
  2392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  2393  021C  3025               	movlw	37
  2394  021D  0642               	xorwf	sprintf@c^(0+128),w
  2395  021E  1903               	btfsc	3,2
  2396  021F  2A22               	goto	l3288
  2397                           
  2398                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  2399  0220  0842               	movf	sprintf@c^(0+128),w
  2400  0221  2FEC               	goto	L8
  2401  0222                     l3288:	
  2402                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  2403                           
  2404                           
  2405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  2406  0222  01AF               	clrf	sprintf@flag^(0+128)
  2407  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  2408                           
  2409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  2410  0224  0820               	movf	sprintf@f^(0+128),w
  2411  0225  0084               	movwf	4
  2412  0226  120A  158A  200A  120A  118A  	fcall	stringdir
  2413  022B  3A2E               	xorlw	46
  2414  022C  1D03               	skipz
  2415  022D  2A6F               	goto	l3304
  2416                           
  2417                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  2418  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  2419                           
  2420                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  2421  022F  3001               	movlw	1
  2422  0230  00A5               	movwf	??_sprintf^(0+128)
  2423  0231  0825               	movf	??_sprintf^(0+128),w
  2424  0232  07A0               	addwf	sprintf@f^(0+128),f
  2425                           
  2426                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  2427  0233  01BB               	clrf	sprintf@prec^(0+128)
  2428  0234  01BC               	clrf	(sprintf@prec+1)^(0+128)
  2429  0235                     l3302:	
  2430                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  2431                           
  2432                           
  2433                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  2434  0235  0820               	movf	sprintf@f^(0+128),w
  2435  0236  0084               	movwf	4
  2436  0237  120A  158A  200A  120A  118A  	fcall	stringdir
  2437  023C  160A  158A  20F7  120A  118A  	fcall	_isdigit
  2438  0241  1C03               	btfss	3,0
  2439  0242  2A75               	goto	l3310
  2440                           
  2441                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  2442  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0245  083C               	movf	(sprintf@prec+1)^(0+128),w
  2445  0246  00F1               	movwf	___wmul@multiplier+1
  2446  0247  083B               	movf	sprintf@prec^(0+128),w
  2447  0248  00F0               	movwf	___wmul@multiplier
  2448  0249  300A               	movlw	10
  2449  024A  00F2               	movwf	___wmul@multiplicand
  2450  024B  3000               	movlw	0
  2451  024C  00F3               	movwf	___wmul@multiplicand+1
  2452  024D  160A  158A  2139  120A  118A  	fcall	___wmul
  2453  0252  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0253  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0254  0820               	movf	sprintf@f^(0+128),w
  2456  0255  0084               	movwf	4
  2457  0256  120A  158A  200A  120A  118A  	fcall	stringdir
  2458  025B  0770               	addwf	?___wmul,w
  2459  025C  00A5               	movwf	??_sprintf^(0+128)
  2460  025D  3000               	movlw	0
  2461  025E  1803               	skipnc
  2462  025F  3001               	movlw	1
  2463  0260  0771               	addwf	?___wmul+1,w
  2464  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  2465  0262  0825               	movf	??_sprintf^(0+128),w
  2466  0263  3ED0               	addlw	208
  2467  0264  00BB               	movwf	sprintf@prec^(0+128)
  2468  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  2469  0266  1803               	skipnc
  2470  0267  3E01               	addlw	1
  2471  0268  3EFF               	addlw	255
  2472  0269  00BC               	movwf	(sprintf@prec+1)^(0+128)
  2473  026A  3001               	movlw	1
  2474  026B  00A5               	movwf	??_sprintf^(0+128)
  2475  026C  0825               	movf	??_sprintf^(0+128),w
  2476  026D  07A0               	addwf	sprintf@f^(0+128),f
  2477  026E  2A35               	goto	l3302
  2478  026F                     l3304:	
  2479                           
  2480                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  2481  026F  01BB               	clrf	sprintf@prec^(0+128)
  2482  0270  01BC               	clrf	(sprintf@prec+1)^(0+128)
  2483                           
  2484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  2485  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  2486  0272  2A75               	goto	l3310
  2487  0273                     l220:	
  2488                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  2489                           
  2490                           
  2491                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  2492  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  2493                           
  2494                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  2495  0274  2A91               	goto	l3312
  2496  0275                     l3310:	
  2497  0275  3001               	movlw	1
  2498  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0278  07A0               	addwf	sprintf@f^(0+128),f
  2501  0279  30FF               	movlw	-1
  2502  027A  0720               	addwf	sprintf@f^(0+128),w
  2503  027B  0084               	movwf	4
  2504  027C  120A  158A  200A  120A  118A  	fcall	stringdir
  2505  0281  00C2               	movwf	sprintf@c^(0+128)
  2506  0282  00A5               	movwf	??_sprintf^(0+128)
  2507  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  2508                           
  2509                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2510                           ; Switch size 1, requested type "simple"
  2511                           ; Number of cases is 1, Range of values is 0 to 0
  2512                           ; switch strategies available:
  2513                           ; Name         Instructions Cycles
  2514                           ; simple_byte            4     3 (average)
  2515                           ; direct_byte           11     8 (fixed)
  2516                           ; jumptable            260     6 (fixed)
  2517                           ;	Chosen strategy is simple_byte
  2518  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  2519  0285  3A00               	xorlw	0	; case 0
  2520  0286  1903               	skipnz
  2521  0287  2A89               	goto	l3780
  2522  0288  2A0C               	goto	l3472
  2523  0289                     l3780:	
  2524                           
  2525                           ; Switch size 1, requested type "simple"
  2526                           ; Number of cases is 2, Range of values is 0 to 102
  2527                           ; switch strategies available:
  2528                           ; Name         Instructions Cycles
  2529                           ; simple_byte            7     4 (average)
  2530                           ; jumptable            260     6 (fixed)
  2531                           ;	Chosen strategy is simple_byte
  2532  0289  0825               	movf	??_sprintf^(0+128),w
  2533  028A  3A00               	xorlw	0	; case 0
  2534  028B  1903               	skipnz
  2535  028C  2FF7               	goto	l3474
  2536  028D  3A66               	xorlw	102	; case 102
  2537  028E  1903               	skipnz
  2538  028F  2A73               	goto	l220
  2539  0290  2A0C               	goto	l3472
  2540  0291                     l3312:	
  2541                           
  2542                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  2543  0291  3000               	movlw	0
  2544  0292  052F               	andwf	sprintf@flag^(0+128),w
  2545  0293  00A5               	movwf	??_sprintf^(0+128)
  2546  0294  3007               	movlw	7
  2547  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2548  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  2549  0297  0825               	movf	??_sprintf^(0+128),w
  2550  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2551  0299  1903               	btfsc	3,2
  2552  029A  2FB9               	goto	l3454
  2553                           
  2554                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  2555  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  2556  029C  2AA1               	goto	l3318
  2557                           
  2558                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  2559  029D  3006               	movlw	6
  2560  029E  00BB               	movwf	sprintf@prec^(0+128)
  2561  029F  3000               	movlw	0
  2562  02A0  00BC               	movwf	(sprintf@prec^(0+128)+1)
  2563  02A1                     l3318:	
  2564                           
  2565                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  2566  02A1  082E               	movf	sprintf@ap^(0+128),w
  2567  02A2  0084               	movwf	4
  2568  02A3  1383               	bcf	3,7	;select IRP bank0
  2569  02A4  0800               	movf	0,w
  2570  02A5  00BE               	movwf	sprintf@fval^(0+128)
  2571  02A6  0A84               	incf	4,f
  2572  02A7  0800               	movf	0,w
  2573  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2574  02A9  0A84               	incf	4,f
  2575  02AA  0800               	movf	0,w
  2576  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2577  02AC  0A84               	incf	4,f
  2578  02AD  0800               	movf	0,w
  2579  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2580  02AF  3004               	movlw	4
  2581  02B0  00A5               	movwf	??_sprintf^(0+128)
  2582  02B1  0825               	movf	??_sprintf^(0+128),w
  2583  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  2584                           
  2585                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  2586  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  2587  02B4  00F3               	movwf	___flge@ff1+3
  2588  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  2589  02B6  00F2               	movwf	___flge@ff1+2
  2590  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2591  02B8  00F1               	movwf	___flge@ff1+1
  2592  02B9  083E               	movf	sprintf@fval^(0+128),w
  2593  02BA  00F0               	movwf	___flge@ff1
  2594  02BB  3000               	movlw	0
  2595  02BC  00F7               	movwf	___flge@ff2+3
  2596  02BD  3000               	movlw	0
  2597  02BE  00F6               	movwf	___flge@ff2+2
  2598  02BF  3000               	movlw	0
  2599  02C0  00F5               	movwf	___flge@ff2+1
  2600  02C1  3000               	movlw	0
  2601  02C2  00F4               	movwf	___flge@ff2
  2602  02C3  160A  158A  2527  120A  118A  	fcall	___flge
  2603  02C8  1803               	btfsc	3,0
  2604  02C9  2AE7               	goto	l3328
  2605                           
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  2607  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  2608  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  2609  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  2610  02CD  00F3               	movwf	___flneg@f1+3
  2611  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  2612  02CF  00F2               	movwf	___flneg@f1+2
  2613  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  2614  02D1  00F1               	movwf	___flneg@f1+1
  2615  02D2  083E               	movf	sprintf@fval^(0+128),w
  2616  02D3  00F0               	movwf	___flneg@f1
  2617  02D4  120A  158A  20B9  120A  118A  	fcall	___flneg
  2618  02D9  0873               	movf	?___flneg+3,w
  2619  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  2620  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  2621  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2622  02DD  0872               	movf	?___flneg+2,w
  2623  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2624  02DF  0871               	movf	?___flneg+1,w
  2625  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2626  02E1  0870               	movf	?___flneg,w
  2627  02E2  00BE               	movwf	sprintf@fval^(0+128)
  2628                           
  2629                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  2630  02E3  3003               	movlw	3
  2631  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  2632  02E5  3000               	movlw	0
  2633  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  2634  02E7                     l3328:	
  2635                           
  2636                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  2637  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  2638  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  2639  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  2640  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2641                           
  2642                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  2643  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2644  02EC  00F3               	movwf	___fleq@ff1+3
  2645  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  2646  02EE  00F2               	movwf	___fleq@ff1+2
  2647  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  2648  02F0  00F1               	movwf	___fleq@ff1+1
  2649  02F1  083E               	movf	sprintf@fval^(0+128),w
  2650  02F2  00F0               	movwf	___fleq@ff1
  2651  02F3  3000               	movlw	0
  2652  02F4  00F7               	movwf	___fleq@ff2+3
  2653  02F5  3000               	movlw	0
  2654  02F6  00F6               	movwf	___fleq@ff2+2
  2655  02F7  3000               	movlw	0
  2656  02F8  00F5               	movwf	___fleq@ff2+1
  2657  02F9  3000               	movlw	0
  2658  02FA  00F4               	movwf	___fleq@ff2
  2659  02FB  160A  158A  2277  120A  118A  	fcall	___fleq
  2660  0300  1803               	btfsc	3,0
  2661  0301  2BEB               	goto	l3356
  2662                           
  2663                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2664  0302  1003               	clrc
  2665  0303  1683               	bsf	3,5	;RP0=1, select bank1
  2666  0304  1303               	bcf	3,6	;RP1=0, select bank1
  2667  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  2668  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  2669  0307  3E82               	addlw	130
  2670  0308  00B5               	movwf	sprintf@eexp^(0+128)
  2671  0309  30FF               	movlw	255
  2672  030A  1803               	skipnc
  2673  030B  3000               	movlw	0
  2674  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  2675                           
  2676                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  2677  030D  30FF               	movlw	255
  2678  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  2679  030F  1803               	skipnc
  2680  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2681  0311  30FF               	movlw	255
  2682  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2683                           
  2684                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  2685  0313  3003               	movlw	3
  2686  0314  00F0               	movwf	___wmul@multiplier
  2687  0315  3000               	movlw	0
  2688  0316  00F1               	movwf	___wmul@multiplier+1
  2689  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2690  0318  00F3               	movwf	___wmul@multiplicand+1
  2691  0319  0835               	movf	sprintf@eexp^(0+128),w
  2692  031A  00F2               	movwf	___wmul@multiplicand
  2693  031B  160A  158A  2139  120A  118A  	fcall	___wmul
  2694  0320  0871               	movf	?___wmul+1,w
  2695  0321  1683               	bsf	3,5	;RP0=1, select bank1
  2696  0322  1303               	bcf	3,6	;RP1=0, select bank1
  2697  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2698  0324  0870               	movf	?___wmul,w
  2699  0325  00B5               	movwf	sprintf@eexp^(0+128)
  2700                           
  2701                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  2702  0326  300A               	movlw	10
  2703  0327  00F7               	movwf	___awdiv@divisor
  2704  0328  3000               	movlw	0
  2705  0329  00F8               	movwf	___awdiv@divisor+1
  2706  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2707  032B  00FA               	movwf	___awdiv@dividend+1
  2708  032C  0835               	movf	sprintf@eexp^(0+128),w
  2709  032D  00F9               	movwf	___awdiv@dividend
  2710  032E  160A  158A  2401  120A  118A  	fcall	___awdiv
  2711  0333  0878               	movf	?___awdiv+1,w
  2712  0334  1683               	bsf	3,5	;RP0=1, select bank1
  2713  0335  1303               	bcf	3,6	;RP1=0, select bank1
  2714  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  2715  0337  0877               	movf	?___awdiv,w
  2716  0338  00B5               	movwf	sprintf@eexp^(0+128)
  2717                           
  2718                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  2719  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  2720  033A  2B41               	goto	l3344
  2721                           
  2722                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  2723  033B  30FF               	movlw	255
  2724  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  2725  033D  1803               	skipnc
  2726  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2727  033F  30FF               	movlw	255
  2728  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2729  0341                     l3344:	
  2730                           
  2731                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  2732  0341  0335               	decf	sprintf@eexp^(0+128),w
  2733  0342  3AFF               	xorlw	255
  2734  0343  160A  118A  24B7  120A  118A  	fcall	_scale
  2735  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2737  034A  0841               	movf	?_scale+3,w
  2738  034B  1683               	bsf	3,5	;RP0=1, select bank1
  2739  034C  1303               	bcf	3,6	;RP1=0, select bank1
  2740  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2741  034E  1283               	bcf	3,5	;RP0=0, select bank0
  2742  034F  1303               	bcf	3,6	;RP1=0, select bank0
  2743  0350  0840               	movf	?_scale+2,w
  2744  0351  1683               	bsf	3,5	;RP0=1, select bank1
  2745  0352  1303               	bcf	3,6	;RP1=0, select bank1
  2746  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2747  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2748  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2749  0356  083F               	movf	?_scale+1,w
  2750  0357  1683               	bsf	3,5	;RP0=1, select bank1
  2751  0358  1303               	bcf	3,6	;RP1=0, select bank1
  2752  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2753  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2754  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2755  035C  083E               	movf	?_scale,w
  2756  035D  1683               	bsf	3,5	;RP0=1, select bank1
  2757  035E  1303               	bcf	3,6	;RP1=0, select bank1
  2758  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  2759                           
  2760                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  2761  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  2762  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0363  00A7               	movwf	___flmul@b+3
  2765  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2767  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  2768  0367  1283               	bcf	3,5	;RP0=0, select bank0
  2769  0368  1303               	bcf	3,6	;RP1=0, select bank0
  2770  0369  00A6               	movwf	___flmul@b+2
  2771  036A  1683               	bsf	3,5	;RP0=1, select bank1
  2772  036B  1303               	bcf	3,6	;RP1=0, select bank1
  2773  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  2774  036D  1283               	bcf	3,5	;RP0=0, select bank0
  2775  036E  1303               	bcf	3,6	;RP1=0, select bank0
  2776  036F  00A5               	movwf	___flmul@b+1
  2777  0370  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0371  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0372  083E               	movf	sprintf@fval^(0+128),w
  2780  0373  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0374  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0375  00A4               	movwf	___flmul@b
  2783  0376  1683               	bsf	3,5	;RP0=1, select bank1
  2784  0377  1303               	bcf	3,6	;RP1=0, select bank1
  2785  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2786  0379  1283               	bcf	3,5	;RP0=0, select bank0
  2787  037A  1303               	bcf	3,6	;RP1=0, select bank0
  2788  037B  00AB               	movwf	___flmul@a+3
  2789  037C  1683               	bsf	3,5	;RP0=1, select bank1
  2790  037D  1303               	bcf	3,6	;RP1=0, select bank1
  2791  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2792  037F  1283               	bcf	3,5	;RP0=0, select bank0
  2793  0380  1303               	bcf	3,6	;RP1=0, select bank0
  2794  0381  00AA               	movwf	___flmul@a+2
  2795  0382  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0383  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2798  0385  1283               	bcf	3,5	;RP0=0, select bank0
  2799  0386  1303               	bcf	3,6	;RP1=0, select bank0
  2800  0387  00A9               	movwf	___flmul@a+1
  2801  0388  1683               	bsf	3,5	;RP0=1, select bank1
  2802  0389  1303               	bcf	3,6	;RP1=0, select bank1
  2803  038A  0837               	movf	sprintf@tmpval^(0+128),w
  2804  038B  1283               	bcf	3,5	;RP0=0, select bank0
  2805  038C  1303               	bcf	3,6	;RP1=0, select bank0
  2806  038D  00A8               	movwf	___flmul@a
  2807  038E  160A  118A  21A2  120A  118A  	fcall	___flmul
  2808  0393  1283               	bcf	3,5	;RP0=0, select bank0
  2809  0394  1303               	bcf	3,6	;RP1=0, select bank0
  2810  0395  0827               	movf	?___flmul+3,w
  2811  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2812  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2813  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2814  0399  1283               	bcf	3,5	;RP0=0, select bank0
  2815  039A  1303               	bcf	3,6	;RP1=0, select bank0
  2816  039B  0826               	movf	?___flmul+2,w
  2817  039C  1683               	bsf	3,5	;RP0=1, select bank1
  2818  039D  1303               	bcf	3,6	;RP1=0, select bank1
  2819  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2820  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2821  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2822  03A1  0825               	movf	?___flmul+1,w
  2823  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  2824  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  2825  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2826  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2827  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2828  03A7  0824               	movf	?___flmul,w
  2829  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2830  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2831  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  2832                           
  2833                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  2834  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2835  03AC  00F3               	movwf	___flge@ff1+3
  2836  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2837  03AE  00F2               	movwf	___flge@ff1+2
  2838  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2839  03B0  00F1               	movwf	___flge@ff1+1
  2840  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  2841  03B2  00F0               	movwf	___flge@ff1
  2842  03B3  303F               	movlw	63
  2843  03B4  00F7               	movwf	___flge@ff2+3
  2844  03B5  3080               	movlw	128
  2845  03B6  00F6               	movwf	___flge@ff2+2
  2846  03B7  3000               	movlw	0
  2847  03B8  00F5               	movwf	___flge@ff2+1
  2848  03B9  3000               	movlw	0
  2849  03BA  00F4               	movwf	___flge@ff2
  2850  03BB  160A  158A  2527  120A  118A  	fcall	___flge
  2851  03C0  1803               	btfsc	3,0
  2852  03C1  2BCA               	goto	l3352
  2853                           
  2854                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  2855  03C2  30FF               	movlw	255
  2856  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  2857  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  2858  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  2859  03C6  1803               	skipnc
  2860  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2861  03C8  30FF               	movlw	255
  2862  03C9  2BEA               	goto	L3
  2863  03CA                     l3352:	
  2864  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  2865  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  2866  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2867  03CD  00F3               	movwf	___flge@ff1+3
  2868  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2869  03CF  00F2               	movwf	___flge@ff1+2
  2870  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2871  03D1  00F1               	movwf	___flge@ff1+1
  2872  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  2873  03D3  00F0               	movwf	___flge@ff1
  2874  03D4  3041               	movlw	65
  2875  03D5  00F7               	movwf	___flge@ff2+3
  2876  03D6  3020               	movlw	32
  2877  03D7  00F6               	movwf	___flge@ff2+2
  2878  03D8  3000               	movlw	0
  2879  03D9  00F5               	movwf	___flge@ff2+1
  2880  03DA  3000               	movlw	0
  2881  03DB  00F4               	movwf	___flge@ff2
  2882  03DC  160A  158A  2527  120A  118A  	fcall	___flge
  2883  03E1  1C03               	btfss	3,0
  2884  03E2  2BEB               	goto	l3356
  2885                           
  2886                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  2887  03E3  3001               	movlw	1
  2888  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  2889  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  2890  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  2891  03E7  1803               	skipnc
  2892  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2893  03E9  3000               	movlw	0
  2894  03EA                     L3:	
  2895  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2896  03EB                     l3356:	
  2897                           
  2898                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  2899  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2900  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2901  03ED  083C               	movf	(sprintf@prec+1)^(0+128),w
  2902  03EE  3A80               	xorlw	128
  2903  03EF  00FF               	movwf	127
  2904  03F0  3080               	movlw	128
  2905  03F1  027F               	subwf	127,w
  2906  03F2  1D03               	skipz
  2907  03F3  2BF6               	goto	u5575
  2908  03F4  300D               	movlw	13
  2909  03F5  023B               	subwf	sprintf@prec^(0+128),w
  2910  03F6                     u5575:	
  2911  03F6  1803               	skipnc
  2912  03F7  2C3F               	goto	l3360
  2913                           
  2914                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  2915  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2916  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2917  03FA  083B               	movf	sprintf@prec^(0+128),w
  2918  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  2919  0400  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0401  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0402  0841               	movf	?_fround+3,w
  2922  0403  00D5               	movwf	___fladd@b+3
  2923  0404  0840               	movf	?_fround+2,w
  2924  0405  00D4               	movwf	___fladd@b+2
  2925  0406  083F               	movf	?_fround+1,w
  2926  0407  00D3               	movwf	___fladd@b+1
  2927  0408  083E               	movf	?_fround,w
  2928  0409  00D2               	movwf	___fladd@b
  2929  040A  1683               	bsf	3,5	;RP0=1, select bank1
  2930  040B  1303               	bcf	3,6	;RP1=0, select bank1
  2931  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  2932  040D  1283               	bcf	3,5	;RP0=0, select bank0
  2933  040E  1303               	bcf	3,6	;RP1=0, select bank0
  2934  040F  00D9               	movwf	___fladd@a+3
  2935  0410  1683               	bsf	3,5	;RP0=1, select bank1
  2936  0411  1303               	bcf	3,6	;RP1=0, select bank1
  2937  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  2938  0413  1283               	bcf	3,5	;RP0=0, select bank0
  2939  0414  1303               	bcf	3,6	;RP1=0, select bank0
  2940  0415  00D8               	movwf	___fladd@a+2
  2941  0416  1683               	bsf	3,5	;RP0=1, select bank1
  2942  0417  1303               	bcf	3,6	;RP1=0, select bank1
  2943  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  2944  0419  1283               	bcf	3,5	;RP0=0, select bank0
  2945  041A  1303               	bcf	3,6	;RP1=0, select bank0
  2946  041B  00D7               	movwf	___fladd@a+1
  2947  041C  1683               	bsf	3,5	;RP0=1, select bank1
  2948  041D  1303               	bcf	3,6	;RP1=0, select bank1
  2949  041E  083E               	movf	sprintf@fval^(0+128),w
  2950  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2951  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2952  0421  00D6               	movwf	___fladd@a
  2953  0422  120A  158A  20C2  120A  118A  	fcall	___fladd
  2954  0427  1283               	bcf	3,5	;RP0=0, select bank0
  2955  0428  1303               	bcf	3,6	;RP1=0, select bank0
  2956  0429  0855               	movf	?___fladd+3,w
  2957  042A  1683               	bsf	3,5	;RP0=1, select bank1
  2958  042B  1303               	bcf	3,6	;RP1=0, select bank1
  2959  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2960  042D  1283               	bcf	3,5	;RP0=0, select bank0
  2961  042E  1303               	bcf	3,6	;RP1=0, select bank0
  2962  042F  0854               	movf	?___fladd+2,w
  2963  0430  1683               	bsf	3,5	;RP0=1, select bank1
  2964  0431  1303               	bcf	3,6	;RP1=0, select bank1
  2965  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2966  0433  1283               	bcf	3,5	;RP0=0, select bank0
  2967  0434  1303               	bcf	3,6	;RP1=0, select bank0
  2968  0435  0853               	movf	?___fladd+1,w
  2969  0436  1683               	bsf	3,5	;RP0=1, select bank1
  2970  0437  1303               	bcf	3,6	;RP1=0, select bank1
  2971  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2972  0439  1283               	bcf	3,5	;RP0=0, select bank0
  2973  043A  1303               	bcf	3,6	;RP1=0, select bank0
  2974  043B  0852               	movf	?___fladd,w
  2975  043C  1683               	bsf	3,5	;RP0=1, select bank1
  2976  043D  1303               	bcf	3,6	;RP1=0, select bank1
  2977  043E  00BE               	movwf	sprintf@fval^(0+128)
  2978  043F                     l3360:	
  2979                           
  2980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2981  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2982  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2983  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2984  0442  3A80               	xorlw	128
  2985  0443  00FF               	movwf	127
  2986  0444  3080               	movlw	128
  2987  0445  027F               	subwf	127,w
  2988  0446  1D03               	skipz
  2989  0447  2C4A               	goto	u5585
  2990  0448  300A               	movlw	10
  2991  0449  0235               	subwf	sprintf@eexp^(0+128),w
  2992  044A                     u5585:	
  2993  044A  1803               	skipnc
  2994  044B  2C97               	goto	l3368
  2995  044C  1683               	bsf	3,5	;RP0=1, select bank1
  2996  044D  1303               	bcf	3,6	;RP1=0, select bank1
  2997  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  2998  044F  00F3               	movwf	___fleq@ff1+3
  2999  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  3000  0451  00F2               	movwf	___fleq@ff1+2
  3001  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  3002  0453  00F1               	movwf	___fleq@ff1+1
  3003  0454  083E               	movf	sprintf@fval^(0+128),w
  3004  0455  00F0               	movwf	___fleq@ff1
  3005  0456  3000               	movlw	0
  3006  0457  00F7               	movwf	___fleq@ff2+3
  3007  0458  3000               	movlw	0
  3008  0459  00F6               	movwf	___fleq@ff2+2
  3009  045A  3000               	movlw	0
  3010  045B  00F5               	movwf	___fleq@ff2+1
  3011  045C  3000               	movlw	0
  3012  045D  00F4               	movwf	___fleq@ff2
  3013  045E  160A  158A  2277  120A  118A  	fcall	___fleq
  3014  0463  1803               	btfsc	3,0
  3015  0464  2D00               	goto	l3382
  3016  0465  1683               	bsf	3,5	;RP0=1, select bank1
  3017  0466  1303               	bcf	3,6	;RP1=0, select bank1
  3018  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  3019  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3020  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3021  046A  00D4               	movwf	___fltol@f1+3
  3022  046B  1683               	bsf	3,5	;RP0=1, select bank1
  3023  046C  1303               	bcf	3,6	;RP1=0, select bank1
  3024  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  3025  046E  1283               	bcf	3,5	;RP0=0, select bank0
  3026  046F  1303               	bcf	3,6	;RP1=0, select bank0
  3027  0470  00D3               	movwf	___fltol@f1+2
  3028  0471  1683               	bsf	3,5	;RP0=1, select bank1
  3029  0472  1303               	bcf	3,6	;RP1=0, select bank1
  3030  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  3031  0474  1283               	bcf	3,5	;RP0=0, select bank0
  3032  0475  1303               	bcf	3,6	;RP1=0, select bank0
  3033  0476  00D2               	movwf	___fltol@f1+1
  3034  0477  1683               	bsf	3,5	;RP0=1, select bank1
  3035  0478  1303               	bcf	3,6	;RP1=0, select bank1
  3036  0479  083E               	movf	sprintf@fval^(0+128),w
  3037  047A  1283               	bcf	3,5	;RP0=0, select bank0
  3038  047B  1303               	bcf	3,6	;RP1=0, select bank0
  3039  047C  00D1               	movwf	___fltol@f1
  3040  047D  160A  158A  24BA  120A  118A  	fcall	___fltol
  3041  0482  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0483  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0484  0854               	movf	?___fltol+3,w
  3044  0485  0453               	iorwf	?___fltol+2,w
  3045  0486  0452               	iorwf	?___fltol+1,w
  3046  0487  0451               	iorwf	?___fltol,w
  3047  0488  1D03               	skipz
  3048  0489  2D00               	goto	l3382
  3049  048A  1683               	bsf	3,5	;RP0=1, select bank1
  3050  048B  1303               	bcf	3,6	;RP1=0, select bank1
  3051  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3052  048D  3A80               	xorlw	128
  3053  048E  00FF               	movwf	127
  3054  048F  3080               	movlw	128
  3055  0490  027F               	subwf	127,w
  3056  0491  1D03               	skipz
  3057  0492  2C95               	goto	u5615
  3058  0493  3002               	movlw	2
  3059  0494  0235               	subwf	sprintf@eexp^(0+128),w
  3060  0495                     u5615:	
  3061  0495  1C03               	skipc
  3062  0496  2D00               	goto	l3382
  3063  0497                     l3368:	
  3064                           
  3065                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  3066  0497  1683               	bsf	3,5	;RP0=1, select bank1
  3067  0498  1303               	bcf	3,6	;RP1=0, select bank1
  3068  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3069  049A  00F3               	movwf	___flge@ff1+3
  3070  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3071  049C  00F2               	movwf	___flge@ff1+2
  3072  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3073  049E  00F1               	movwf	___flge@ff1+1
  3074  049F  0837               	movf	sprintf@tmpval^(0+128),w
  3075  04A0  00F0               	movwf	___flge@ff1
  3076  04A1  3040               	movlw	64
  3077  04A2  00F7               	movwf	___flge@ff2+3
  3078  04A3  3089               	movlw	137
  3079  04A4  00F6               	movwf	___flge@ff2+2
  3080  04A5  3070               	movlw	112
  3081  04A6  00F5               	movwf	___flge@ff2+1
  3082  04A7  305F               	movlw	95
  3083  04A8  00F4               	movwf	___flge@ff2
  3084  04A9  160A  158A  2527  120A  118A  	fcall	___flge
  3085  04AE  1803               	btfsc	3,0
  3086  04AF  2CB2               	goto	l3372
  3087                           
  3088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3089  04B0  30F7               	movlw	247
  3090  04B1  2CB3               	goto	L4
  3091  04B2                     l3372:	
  3092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  3093                           
  3094                           
  3095                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3096  04B2  30F8               	movlw	248
  3097  04B3                     L4:	
  3098  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  3099  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  3100  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  3101  04B6  1803               	skipnc
  3102  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3103  04B8  30FF               	movlw	255
  3104  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3105                           
  3106                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  3107  04BA  0835               	movf	sprintf@eexp^(0+128),w
  3108  04BB  160A  118A  24B7  120A  118A  	fcall	_scale
  3109  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3110  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3111  04C2  0841               	movf	?_scale+3,w
  3112  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3113  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3114  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3115  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  3116  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  3117  04C8  0840               	movf	?_scale+2,w
  3118  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  3119  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  3120  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3121  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3122  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3123  04CE  083F               	movf	?_scale+1,w
  3124  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3125  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3126  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3127  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  3128  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  3129  04D4  083E               	movf	?_scale,w
  3130  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  3131  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  3132  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  3133  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  3134  04D9  00F3               	movwf	__div_to_l_@f1+3
  3135  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  3136  04DB  00F2               	movwf	__div_to_l_@f1+2
  3137  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  3138  04DD  00F1               	movwf	__div_to_l_@f1+1
  3139  04DE  083E               	movf	sprintf@fval^(0+128),w
  3140  04DF  00F0               	movwf	__div_to_l_@f1
  3141  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3142  04E1  00F7               	movwf	__div_to_l_@f2+3
  3143  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3144  04E3  00F6               	movwf	__div_to_l_@f2+2
  3145  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3146  04E5  00F5               	movwf	__div_to_l_@f2+1
  3147  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  3148  04E7  00F4               	movwf	__div_to_l_@f2
  3149  04E8  160A  118A  20F8  120A  118A  	fcall	__div_to_l_
  3150  04ED  0873               	movf	?__div_to_l_+3,w
  3151  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  3152  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  3153  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  3154  04F1  0872               	movf	?__div_to_l_+2,w
  3155  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  3156  04F3  0871               	movf	?__div_to_l_+1,w
  3157  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  3158  04F5  0870               	movf	?__div_to_l_,w
  3159  04F6  00B1               	movwf	sprintf@val^(0+128)
  3160                           
  3161                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  3162  04F7  3000               	movlw	0
  3163  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3164  04F9  3000               	movlw	0
  3165  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3166  04FB  3000               	movlw	0
  3167  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3168  04FD  3000               	movlw	0
  3169  04FE  00BE               	movwf	sprintf@fval^(0+128)
  3170                           
  3171                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  3172  04FF  2D84               	goto	l3388
  3173  0500                     l3382:	
  3174                           
  3175                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  3176  0500  1683               	bsf	3,5	;RP0=1, select bank1
  3177  0501  1303               	bcf	3,6	;RP1=0, select bank1
  3178  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  3179  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0505  00D4               	movwf	___fltol@f1+3
  3182  0506  1683               	bsf	3,5	;RP0=1, select bank1
  3183  0507  1303               	bcf	3,6	;RP1=0, select bank1
  3184  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  3185  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3186  050A  1303               	bcf	3,6	;RP1=0, select bank0
  3187  050B  00D3               	movwf	___fltol@f1+2
  3188  050C  1683               	bsf	3,5	;RP0=1, select bank1
  3189  050D  1303               	bcf	3,6	;RP1=0, select bank1
  3190  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  3191  050F  1283               	bcf	3,5	;RP0=0, select bank0
  3192  0510  1303               	bcf	3,6	;RP1=0, select bank0
  3193  0511  00D2               	movwf	___fltol@f1+1
  3194  0512  1683               	bsf	3,5	;RP0=1, select bank1
  3195  0513  1303               	bcf	3,6	;RP1=0, select bank1
  3196  0514  083E               	movf	sprintf@fval^(0+128),w
  3197  0515  1283               	bcf	3,5	;RP0=0, select bank0
  3198  0516  1303               	bcf	3,6	;RP1=0, select bank0
  3199  0517  00D1               	movwf	___fltol@f1
  3200  0518  160A  158A  24BA  120A  118A  	fcall	___fltol
  3201  051D  1283               	bcf	3,5	;RP0=0, select bank0
  3202  051E  1303               	bcf	3,6	;RP1=0, select bank0
  3203  051F  0854               	movf	?___fltol+3,w
  3204  0520  1683               	bsf	3,5	;RP0=1, select bank1
  3205  0521  1303               	bcf	3,6	;RP1=0, select bank1
  3206  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  3207  0523  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0524  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0525  0853               	movf	?___fltol+2,w
  3210  0526  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0527  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  3213  0529  1283               	bcf	3,5	;RP0=0, select bank0
  3214  052A  1303               	bcf	3,6	;RP1=0, select bank0
  3215  052B  0852               	movf	?___fltol+1,w
  3216  052C  1683               	bsf	3,5	;RP0=1, select bank1
  3217  052D  1303               	bcf	3,6	;RP1=0, select bank1
  3218  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  3219  052F  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0530  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0531  0851               	movf	?___fltol,w
  3222  0532  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0533  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0534  00B1               	movwf	sprintf@val^(0+128)
  3225                           
  3226                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  3227  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  3228  0536  00F3               	movwf	___xxtofl@val+3
  3229  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  3230  0538  00F2               	movwf	___xxtofl@val+2
  3231  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  3232  053A  00F1               	movwf	___xxtofl@val+1
  3233  053B  0831               	movf	sprintf@val^(0+128),w
  3234  053C  00F0               	movwf	___xxtofl@val
  3235  053D  3000               	movlw	0
  3236  053E  160A  158A  25BA  120A  118A  	fcall	___xxtofl
  3237  0543  0873               	movf	?___xxtofl+3,w
  3238  0544  1283               	bcf	3,5	;RP0=0, select bank0
  3239  0545  1303               	bcf	3,6	;RP1=0, select bank0
  3240  0546  00E9               	movwf	___flsub@a+3
  3241  0547  0872               	movf	?___xxtofl+2,w
  3242  0548  00E8               	movwf	___flsub@a+2
  3243  0549  0871               	movf	?___xxtofl+1,w
  3244  054A  00E7               	movwf	___flsub@a+1
  3245  054B  0870               	movf	?___xxtofl,w
  3246  054C  00E6               	movwf	___flsub@a
  3247  054D  1683               	bsf	3,5	;RP0=1, select bank1
  3248  054E  1303               	bcf	3,6	;RP1=0, select bank1
  3249  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  3250  0550  1283               	bcf	3,5	;RP0=0, select bank0
  3251  0551  1303               	bcf	3,6	;RP1=0, select bank0
  3252  0552  00ED               	movwf	___flsub@b+3
  3253  0553  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0554  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  3256  0556  1283               	bcf	3,5	;RP0=0, select bank0
  3257  0557  1303               	bcf	3,6	;RP1=0, select bank0
  3258  0558  00EC               	movwf	___flsub@b+2
  3259  0559  1683               	bsf	3,5	;RP0=1, select bank1
  3260  055A  1303               	bcf	3,6	;RP1=0, select bank1
  3261  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  3262  055C  1283               	bcf	3,5	;RP0=0, select bank0
  3263  055D  1303               	bcf	3,6	;RP1=0, select bank0
  3264  055E  00EB               	movwf	___flsub@b+1
  3265  055F  1683               	bsf	3,5	;RP0=1, select bank1
  3266  0560  1303               	bcf	3,6	;RP1=0, select bank1
  3267  0561  083E               	movf	sprintf@fval^(0+128),w
  3268  0562  1283               	bcf	3,5	;RP0=0, select bank0
  3269  0563  1303               	bcf	3,6	;RP1=0, select bank0
  3270  0564  00EA               	movwf	___flsub@b
  3271  0565  160A  158A  215A  120A  118A  	fcall	___flsub
  3272  056A  1283               	bcf	3,5	;RP0=0, select bank0
  3273  056B  1303               	bcf	3,6	;RP1=0, select bank0
  3274  056C  0869               	movf	?___flsub+3,w
  3275  056D  1683               	bsf	3,5	;RP0=1, select bank1
  3276  056E  1303               	bcf	3,6	;RP1=0, select bank1
  3277  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  3278  0570  1283               	bcf	3,5	;RP0=0, select bank0
  3279  0571  1303               	bcf	3,6	;RP1=0, select bank0
  3280  0572  0868               	movf	?___flsub+2,w
  3281  0573  1683               	bsf	3,5	;RP0=1, select bank1
  3282  0574  1303               	bcf	3,6	;RP1=0, select bank1
  3283  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  3284  0576  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0577  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0578  0867               	movf	?___flsub+1,w
  3287  0579  1683               	bsf	3,5	;RP0=1, select bank1
  3288  057A  1303               	bcf	3,6	;RP1=0, select bank1
  3289  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  3290  057C  1283               	bcf	3,5	;RP0=0, select bank0
  3291  057D  1303               	bcf	3,6	;RP1=0, select bank0
  3292  057E  0866               	movf	?___flsub,w
  3293  057F  1683               	bsf	3,5	;RP0=1, select bank1
  3294  0580  1303               	bcf	3,6	;RP1=0, select bank1
  3295  0581  00BE               	movwf	sprintf@fval^(0+128)
  3296                           
  3297                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  3298  0582  01B5               	clrf	sprintf@eexp^(0+128)
  3299  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  3300  0584                     l3388:	
  3301                           
  3302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3303  0584  01C2               	clrf	sprintf@c^(0+128)
  3304  0585  0AC2               	incf	sprintf@c^(0+128),f
  3305  0586                     l3394:	
  3306                           
  3307                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  3308  0586  0842               	movf	sprintf@c^(0+128),w
  3309  0587  00A5               	movwf	??_sprintf^(0+128)
  3310  0588  3001               	movlw	1
  3311  0589                     u5635:	
  3312  0589  1003               	clrc
  3313  058A  0DA5               	rlf	??_sprintf^(0+128),f
  3314  058B  3EFF               	addlw	-1
  3315  058C  1D03               	skipz
  3316  058D  2D89               	goto	u5635
  3317  058E  1003               	clrc
  3318  058F  0D25               	rlf	??_sprintf^(0+128),w
  3319  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3320  0591  0084               	movwf	4
  3321  0592  120A  158A  200A  120A  118A  	fcall	stringdir
  3322  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  3323  0598  120A  158A  200A  120A  118A  	fcall	stringdir
  3324  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3325  059E  120A  158A  200A  120A  118A  	fcall	stringdir
  3326  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3327  05A4  120A  158A  200A  120A  118A  	fcall	stringdir
  3328  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3329  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  3330  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  3331  05AC  1D03               	skipz
  3332  05AD  2DB8               	goto	u5645
  3333  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  3334  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  3335  05B0  1D03               	skipz
  3336  05B1  2DB8               	goto	u5645
  3337  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  3338  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  3339  05B4  1D03               	skipz
  3340  05B5  2DB8               	goto	u5645
  3341  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  3342  05B7  0231               	subwf	sprintf@val^(0+128),w
  3343  05B8                     u5645:	
  3344  05B8  1C03               	btfss	3,0
  3345  05B9  2DC2               	goto	l3400
  3346  05BA  3001               	movlw	1
  3347  05BB  00A5               	movwf	??_sprintf^(0+128)
  3348  05BC  0825               	movf	??_sprintf^(0+128),w
  3349  05BD  07C2               	addwf	sprintf@c^(0+128),f
  3350  05BE  300A               	movlw	10
  3351  05BF  0642               	xorwf	sprintf@c^(0+128),w
  3352  05C0  1D03               	btfss	3,2
  3353  05C1  2D86               	goto	l3394
  3354  05C2                     l3400:	
  3355                           
  3356                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  3357  05C2  3003               	movlw	3
  3358  05C3  052F               	andwf	sprintf@flag^(0+128),w
  3359  05C4  00A5               	movwf	??_sprintf^(0+128)
  3360  05C5  3000               	movlw	0
  3361  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3362  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  3363  05C8  0825               	movf	??_sprintf^(0+128),w
  3364  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3365  05CA  1903               	btfsc	3,2
  3366  05CB  2DD7               	goto	l246
  3367                           
  3368                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  3369  05CC  302D               	movlw	45
  3370  05CD                     L5:	
  3371  05CD  00A5               	movwf	??_sprintf^(0+128)
  3372  05CE  083D               	movf	sprintf@sp^(0+128),w
  3373  05CF  0084               	movwf	4
  3374  05D0  0825               	movf	??_sprintf^(0+128),w
  3375  05D1  1383               	bcf	3,7	;select IRP bank0
  3376  05D2  0080               	movwf	0
  3377  05D3  3001               	movlw	1
  3378  05D4  00A5               	movwf	??_sprintf^(0+128)
  3379  05D5  0825               	movf	??_sprintf^(0+128),w
  3380  05D6  07BD               	addwf	sprintf@sp^(0+128),f
  3381  05D7                     l246:	
  3382                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  3383                           
  3384                           
  3385                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  3386  05D7  3001               	movlw	1
  3387  05D8  02C2               	subwf	sprintf@c^(0+128),f
  3388  05D9  0A42               	incf	sprintf@c^(0+128),w
  3389  05DA  1903               	btfsc	3,2
  3390  05DB  2E4C               	goto	l3418
  3391                           
  3392                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  3393  05DC  0842               	movf	sprintf@c^(0+128),w
  3394  05DD  00A5               	movwf	??_sprintf^(0+128)
  3395  05DE  3001               	movlw	1
  3396  05DF                     u5675:	
  3397  05DF  1003               	clrc
  3398  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  3399  05E1  3EFF               	addlw	-1
  3400  05E2  1D03               	skipz
  3401  05E3  2DDF               	goto	u5675
  3402  05E4  1003               	clrc
  3403  05E5  0D25               	rlf	??_sprintf^(0+128),w
  3404  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3405  05E7  0084               	movwf	4
  3406  05E8  120A  158A  200A  120A  118A  	fcall	stringdir
  3407  05ED  00F0               	movwf	___lldiv@divisor
  3408  05EE  120A  158A  200A  120A  118A  	fcall	stringdir
  3409  05F3  00F1               	movwf	___lldiv@divisor+1
  3410  05F4  120A  158A  200A  120A  118A  	fcall	stringdir
  3411  05F9  00F2               	movwf	___lldiv@divisor+2
  3412  05FA  120A  158A  200A  120A  118A  	fcall	stringdir
  3413  05FF  00F3               	movwf	___lldiv@divisor+3
  3414  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  3415  0601  00F7               	movwf	___lldiv@dividend+3
  3416  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  3417  0603  00F6               	movwf	___lldiv@dividend+2
  3418  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  3419  0605  00F5               	movwf	___lldiv@dividend+1
  3420  0606  0831               	movf	sprintf@val^(0+128),w
  3421  0607  00F4               	movwf	___lldiv@dividend
  3422  0608  160A  158A  245C  120A  118A  	fcall	___lldiv
  3423  060D  0873               	movf	?___lldiv+3,w
  3424  060E  1683               	bsf	3,5	;RP0=1, select bank1
  3425  060F  1303               	bcf	3,6	;RP1=0, select bank1
  3426  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3427  0611  0872               	movf	?___lldiv+2,w
  3428  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3429  0613  0871               	movf	?___lldiv+1,w
  3430  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3431  0615  0870               	movf	?___lldiv,w
  3432  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  3433                           
  3434                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  3435  0617  3000               	movlw	0
  3436  0618  00F3               	movwf	___llmod@divisor+3
  3437  0619  3000               	movlw	0
  3438  061A  00F2               	movwf	___llmod@divisor+2
  3439  061B  3000               	movlw	0
  3440  061C  00F1               	movwf	___llmod@divisor+1
  3441  061D  300A               	movlw	10
  3442  061E  00F0               	movwf	___llmod@divisor
  3443  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3444  0620  00F7               	movwf	___llmod@dividend+3
  3445  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3446  0622  00F6               	movwf	___llmod@dividend+2
  3447  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3448  0624  00F5               	movwf	___llmod@dividend+1
  3449  0625  0837               	movf	sprintf@tmpval^(0+128),w
  3450  0626  00F4               	movwf	___llmod@dividend
  3451  0627  160A  118A  2003  120A  118A  	fcall	___llmod
  3452  062C  0873               	movf	?___llmod+3,w
  3453  062D  1683               	bsf	3,5	;RP0=1, select bank1
  3454  062E  1303               	bcf	3,6	;RP1=0, select bank1
  3455  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3456  0630  0872               	movf	?___llmod+2,w
  3457  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3458  0632  0871               	movf	?___llmod+1,w
  3459  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3460  0634  0870               	movf	?___llmod,w
  3461  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  3462                           
  3463                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  3464  0636  0837               	movf	sprintf@tmpval^(0+128),w
  3465  0637  3E30               	addlw	48
  3466  0638  2DCD               	goto	L5
  3467  0639                     l3412:	
  3468                           
  3469                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  3470  0639  3030               	movlw	48
  3471  063A  1683               	bsf	3,5	;RP0=1, select bank1
  3472  063B  1303               	bcf	3,6	;RP1=0, select bank1
  3473  063C  00A5               	movwf	??_sprintf^(0+128)
  3474  063D  083D               	movf	sprintf@sp^(0+128),w
  3475  063E  0084               	movwf	4
  3476  063F  0825               	movf	??_sprintf^(0+128),w
  3477  0640  1383               	bcf	3,7	;select IRP bank0
  3478  0641  0080               	movwf	0
  3479  0642  3001               	movlw	1
  3480  0643  00A5               	movwf	??_sprintf^(0+128)
  3481  0644  0825               	movf	??_sprintf^(0+128),w
  3482  0645  07BD               	addwf	sprintf@sp^(0+128),f
  3483                           
  3484                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  3485  0646  30FF               	movlw	255
  3486  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  3487  0648  1803               	skipnc
  3488  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  3489  064A  30FF               	movlw	255
  3490  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  3491  064C                     l3418:	
  3492                           
  3493                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  3494  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  3495  064D  3A80               	xorlw	128
  3496  064E  00FF               	movwf	127
  3497  064F  3080               	movlw	128
  3498  0650  027F               	subwf	127,w
  3499  0651  1D03               	skipz
  3500  0652  2E55               	goto	u5695
  3501  0653  3001               	movlw	1
  3502  0654  0235               	subwf	sprintf@eexp^(0+128),w
  3503  0655                     u5695:	
  3504  0655  1803               	skipnc
  3505  0656  2E39               	goto	l3412
  3506                           
  3507                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3508  0657  1683               	bsf	3,5	;RP0=1, select bank1
  3509  0658  1303               	bcf	3,6	;RP1=0, select bank1
  3510  0659  083C               	movf	(sprintf@prec+1)^(0+128),w
  3511  065A  3A80               	xorlw	128
  3512  065B  00FF               	movwf	127
  3513  065C  3080               	movlw	128
  3514  065D  027F               	subwf	127,w
  3515  065E  1D03               	skipz
  3516  065F  2E62               	goto	u5705
  3517  0660  3009               	movlw	9
  3518  0661  023B               	subwf	sprintf@prec^(0+128),w
  3519  0662                     u5705:	
  3520  0662  1C03               	skipc
  3521  0663  2E68               	goto	l3424
  3522                           
  3523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  3524  0664  3008               	movlw	8
  3525  0665  1683               	bsf	3,5	;RP0=1, select bank1
  3526  0666  1303               	bcf	3,6	;RP1=0, select bank1
  3527  0667  2E6B               	goto	L6
  3528  0668                     l3424:	
  3529                           
  3530                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  3531  0668  1683               	bsf	3,5	;RP0=1, select bank1
  3532  0669  1303               	bcf	3,6	;RP1=0, select bank1
  3533  066A  083B               	movf	sprintf@prec^(0+128),w
  3534  066B                     L6:	
  3535  066B  00A5               	movwf	??_sprintf^(0+128)
  3536  066C  0825               	movf	??_sprintf^(0+128),w
  3537  066D  00C2               	movwf	sprintf@c^(0+128)
  3538                           
  3539                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  3540  066E  0842               	movf	sprintf@c^(0+128),w
  3541  066F  00A5               	movwf	??_sprintf^(0+128)
  3542  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  3543  0671  0825               	movf	??_sprintf^(0+128),w
  3544  0672  02BB               	subwf	sprintf@prec^(0+128),f
  3545  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  3546  0674  1C03               	skipc
  3547  0675  03BC               	decf	(sprintf@prec+1)^(0+128),f
  3548  0676  02BC               	subwf	(sprintf@prec+1)^(0+128),f
  3549                           
  3550                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  3551  0677  0842               	movf	sprintf@c^(0+128),w
  3552  0678  1903               	btfsc	3,2
  3553  0679  2E85               	goto	l3432
  3554                           
  3555                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  3556  067A  302E               	movlw	46
  3557  067B  00A5               	movwf	??_sprintf^(0+128)
  3558  067C  083D               	movf	sprintf@sp^(0+128),w
  3559  067D  0084               	movwf	4
  3560  067E  0825               	movf	??_sprintf^(0+128),w
  3561  067F  1383               	bcf	3,7	;select IRP bank0
  3562  0680  0080               	movwf	0
  3563  0681  3001               	movlw	1
  3564  0682  00A5               	movwf	??_sprintf^(0+128)
  3565  0683  0825               	movf	??_sprintf^(0+128),w
  3566  0684  07BD               	addwf	sprintf@sp^(0+128),f
  3567  0685                     l3432:	
  3568                           
  3569                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3570  0685  0842               	movf	sprintf@c^(0+128),w
  3571  0686  160A  118A  24B7  120A  118A  	fcall	_scale
  3572  068B  1283               	bcf	3,5	;RP0=0, select bank0
  3573  068C  1303               	bcf	3,6	;RP1=0, select bank0
  3574  068D  0841               	movf	?_scale+3,w
  3575  068E  1683               	bsf	3,5	;RP0=1, select bank1
  3576  068F  1303               	bcf	3,6	;RP1=0, select bank1
  3577  0690  00AD               	movwf	(_sprintf$806+3)^(0+128)
  3578  0691  1283               	bcf	3,5	;RP0=0, select bank0
  3579  0692  1303               	bcf	3,6	;RP1=0, select bank0
  3580  0693  0840               	movf	?_scale+2,w
  3581  0694  1683               	bsf	3,5	;RP0=1, select bank1
  3582  0695  1303               	bcf	3,6	;RP1=0, select bank1
  3583  0696  00AC               	movwf	(_sprintf$806+2)^(0+128)
  3584  0697  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0698  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0699  083F               	movf	?_scale+1,w
  3587  069A  1683               	bsf	3,5	;RP0=1, select bank1
  3588  069B  1303               	bcf	3,6	;RP1=0, select bank1
  3589  069C  00AB               	movwf	(_sprintf$806+1)^(0+128)
  3590  069D  1283               	bcf	3,5	;RP0=0, select bank0
  3591  069E  1303               	bcf	3,6	;RP1=0, select bank0
  3592  069F  083E               	movf	?_scale,w
  3593  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  3594  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  3595  06A2  00AA               	movwf	_sprintf$806^(0+128)
  3596                           
  3597                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  3598  06A3  082D               	movf	(_sprintf$806+3)^(0+128),w
  3599  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  3600  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  3601  06A6  00AB               	movwf	___flmul@a+3
  3602  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  3603  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  3604  06A9  082C               	movf	(_sprintf$806+2)^(0+128),w
  3605  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  3606  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  3607  06AC  00AA               	movwf	___flmul@a+2
  3608  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  3609  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  3610  06AF  082B               	movf	(_sprintf$806+1)^(0+128),w
  3611  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  3612  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  3613  06B2  00A9               	movwf	___flmul@a+1
  3614  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  3615  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  3616  06B5  082A               	movf	_sprintf$806^(0+128),w
  3617  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  3618  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  3619  06B8  00A8               	movwf	___flmul@a
  3620  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  3621  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  3622  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  3623  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  3624  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  3625  06BE  00A7               	movwf	___flmul@b+3
  3626  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  3627  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  3628  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  3629  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  3630  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  3631  06C4  00A6               	movwf	___flmul@b+2
  3632  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  3633  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  3634  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  3635  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  3636  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  3637  06CA  00A5               	movwf	___flmul@b+1
  3638  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  3639  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  3640  06CD  083E               	movf	sprintf@fval^(0+128),w
  3641  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  3642  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  3643  06D0  00A4               	movwf	___flmul@b
  3644  06D1  160A  118A  21A2  120A  118A  	fcall	___flmul
  3645  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  3646  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  3647  06D8  0827               	movf	?___flmul+3,w
  3648  06D9  00D4               	movwf	___fltol@f1+3
  3649  06DA  0826               	movf	?___flmul+2,w
  3650  06DB  00D3               	movwf	___fltol@f1+2
  3651  06DC  0825               	movf	?___flmul+1,w
  3652  06DD  00D2               	movwf	___fltol@f1+1
  3653  06DE  0824               	movf	?___flmul,w
  3654  06DF  00D1               	movwf	___fltol@f1
  3655  06E0  160A  158A  24BA  120A  118A  	fcall	___fltol
  3656  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  3657  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  3658  06E7  0854               	movf	?___fltol+3,w
  3659  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  3660  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  3661  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  3662  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  3663  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  3664  06ED  0853               	movf	?___fltol+2,w
  3665  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  3666  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  3667  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  3668  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  3669  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  3670  06F3  0852               	movf	?___fltol+1,w
  3671  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  3672  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  3673  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  3674  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  3675  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  3676  06F9  0851               	movf	?___fltol,w
  3677  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  3678  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  3679  06FC                     L7:	
  3680  06FC  00B1               	movwf	sprintf@val^(0+128)
  3681                           
  3682                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3683  06FD  3001               	movlw	1
  3684  06FE  02C2               	subwf	sprintf@c^(0+128),f
  3685  06FF  0A42               	incf	sprintf@c^(0+128),w
  3686  0700  1903               	btfsc	3,2
  3687  0701  2FB4               	goto	l3452
  3688                           
  3689                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  3690                           
  3691                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  3692  0702  0842               	movf	sprintf@c^(0+128),w
  3693  0703  00A5               	movwf	??_sprintf^(0+128)
  3694  0704  3001               	movlw	1
  3695  0705                     u5725:	
  3696  0705  1003               	clrc
  3697  0706  0DA5               	rlf	??_sprintf^(0+128),f
  3698  0707  3EFF               	addlw	-1
  3699  0708  1D03               	skipz
  3700  0709  2F05               	goto	u5725
  3701  070A  1003               	clrc
  3702  070B  0D25               	rlf	??_sprintf^(0+128),w
  3703  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3704  070D  0084               	movwf	4
  3705  070E  120A  158A  200A  120A  118A  	fcall	stringdir
  3706  0713  00F0               	movwf	___lldiv@divisor
  3707  0714  120A  158A  200A  120A  118A  	fcall	stringdir
  3708  0719  00F1               	movwf	___lldiv@divisor+1
  3709  071A  120A  158A  200A  120A  118A  	fcall	stringdir
  3710  071F  00F2               	movwf	___lldiv@divisor+2
  3711  0720  120A  158A  200A  120A  118A  	fcall	stringdir
  3712  0725  00F3               	movwf	___lldiv@divisor+3
  3713  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  3714  0727  00F7               	movwf	___lldiv@dividend+3
  3715  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  3716  0729  00F6               	movwf	___lldiv@dividend+2
  3717  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  3718  072B  00F5               	movwf	___lldiv@dividend+1
  3719  072C  0831               	movf	sprintf@val^(0+128),w
  3720  072D  00F4               	movwf	___lldiv@dividend
  3721  072E  160A  158A  245C  120A  118A  	fcall	___lldiv
  3722  0733  0873               	movf	?___lldiv+3,w
  3723  0734  1683               	bsf	3,5	;RP0=1, select bank1
  3724  0735  1303               	bcf	3,6	;RP1=0, select bank1
  3725  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3726  0737  0872               	movf	?___lldiv+2,w
  3727  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3728  0739  0871               	movf	?___lldiv+1,w
  3729  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3730  073B  0870               	movf	?___lldiv,w
  3731  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  3732                           
  3733                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  3734  073D  3000               	movlw	0
  3735  073E  00F3               	movwf	___llmod@divisor+3
  3736  073F  3000               	movlw	0
  3737  0740  00F2               	movwf	___llmod@divisor+2
  3738  0741  3000               	movlw	0
  3739  0742  00F1               	movwf	___llmod@divisor+1
  3740  0743  300A               	movlw	10
  3741  0744  00F0               	movwf	___llmod@divisor
  3742  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3743  0746  00F7               	movwf	___llmod@dividend+3
  3744  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3745  0748  00F6               	movwf	___llmod@dividend+2
  3746  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3747  074A  00F5               	movwf	___llmod@dividend+1
  3748  074B  0837               	movf	sprintf@tmpval^(0+128),w
  3749  074C  00F4               	movwf	___llmod@dividend
  3750  074D  160A  118A  2003  120A  118A  	fcall	___llmod
  3751  0752  0873               	movf	?___llmod+3,w
  3752  0753  1683               	bsf	3,5	;RP0=1, select bank1
  3753  0754  1303               	bcf	3,6	;RP1=0, select bank1
  3754  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3755  0756  0872               	movf	?___llmod+2,w
  3756  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3757  0758  0871               	movf	?___llmod+1,w
  3758  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3759  075A  0870               	movf	?___llmod,w
  3760  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  3761                           
  3762                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  3763  075C  0837               	movf	sprintf@tmpval^(0+128),w
  3764  075D  3E30               	addlw	48
  3765  075E  00A5               	movwf	??_sprintf^(0+128)
  3766  075F  083D               	movf	sprintf@sp^(0+128),w
  3767  0760  0084               	movwf	4
  3768  0761  0825               	movf	??_sprintf^(0+128),w
  3769  0762  1383               	bcf	3,7	;select IRP bank0
  3770  0763  0080               	movwf	0
  3771  0764  3001               	movlw	1
  3772  0765  00A5               	movwf	??_sprintf^(0+128)
  3773  0766  0825               	movf	??_sprintf^(0+128),w
  3774  0767  07BD               	addwf	sprintf@sp^(0+128),f
  3775                           
  3776                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  3777  0768  0842               	movf	sprintf@c^(0+128),w
  3778  0769  00A5               	movwf	??_sprintf^(0+128)
  3779  076A  3001               	movlw	1
  3780  076B                     u5735:	
  3781  076B  1003               	clrc
  3782  076C  0DA5               	rlf	??_sprintf^(0+128),f
  3783  076D  3EFF               	addlw	-1
  3784  076E  1D03               	skipz
  3785  076F  2F6B               	goto	u5735
  3786  0770  1003               	clrc
  3787  0771  0D25               	rlf	??_sprintf^(0+128),w
  3788  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3789  0773  0084               	movwf	4
  3790  0774  120A  158A  200A  120A  118A  	fcall	stringdir
  3791  0779  00F0               	movwf	___llmod@divisor
  3792  077A  120A  158A  200A  120A  118A  	fcall	stringdir
  3793  077F  00F1               	movwf	___llmod@divisor+1
  3794  0780  120A  158A  200A  120A  118A  	fcall	stringdir
  3795  0785  00F2               	movwf	___llmod@divisor+2
  3796  0786  120A  158A  200A  120A  118A  	fcall	stringdir
  3797  078B  00F3               	movwf	___llmod@divisor+3
  3798  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  3799  078D  00F7               	movwf	___llmod@dividend+3
  3800  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  3801  078F  00F6               	movwf	___llmod@dividend+2
  3802  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  3803  0791  00F5               	movwf	___llmod@dividend+1
  3804  0792  0831               	movf	sprintf@val^(0+128),w
  3805  0793  00F4               	movwf	___llmod@dividend
  3806  0794  160A  118A  2003  120A  118A  	fcall	___llmod
  3807  0799  0873               	movf	?___llmod+3,w
  3808  079A  1683               	bsf	3,5	;RP0=1, select bank1
  3809  079B  1303               	bcf	3,6	;RP1=0, select bank1
  3810  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  3811  079D  0872               	movf	?___llmod+2,w
  3812  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  3813  079F  0871               	movf	?___llmod+1,w
  3814  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  3815  07A1  0870               	movf	?___llmod,w
  3816  07A2  2EFC               	goto	L7
  3817  07A3                     l3446:	
  3818                           
  3819                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  3820  07A3  3030               	movlw	48
  3821  07A4  00A5               	movwf	??_sprintf^(0+128)
  3822  07A5  083D               	movf	sprintf@sp^(0+128),w
  3823  07A6  0084               	movwf	4
  3824  07A7  0825               	movf	??_sprintf^(0+128),w
  3825  07A8  1383               	bcf	3,7	;select IRP bank0
  3826  07A9  0080               	movwf	0
  3827  07AA  3001               	movlw	1
  3828  07AB  00A5               	movwf	??_sprintf^(0+128)
  3829  07AC  0825               	movf	??_sprintf^(0+128),w
  3830  07AD  07BD               	addwf	sprintf@sp^(0+128),f
  3831                           
  3832                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  3833  07AE  30FF               	movlw	255
  3834  07AF  07BB               	addwf	sprintf@prec^(0+128),f
  3835  07B0  1803               	skipnc
  3836  07B1  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3837  07B2  30FF               	movlw	255
  3838  07B3  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3839  07B4                     l3452:	
  3840                           
  3841                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  3842  07B4  083B               	movf	sprintf@prec^(0+128),w
  3843  07B5  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  3844  07B6  1903               	btfsc	3,2
  3845  07B7  2A0C               	goto	l3472
  3846  07B8  2FA3               	goto	l3446
  3847  07B9                     l3454:	
  3848                           
  3849                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  3850  07B9  083B               	movf	sprintf@prec^(0+128),w
  3851  07BA  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  3852  07BB  1D03               	btfss	3,2
  3853  07BC  2FC9               	goto	l261
  3854  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  3855  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  3856  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  3857  07C0  0431               	iorwf	sprintf@val^(0+128),w
  3858  07C1  1D03               	skipz
  3859  07C2  2FC9               	goto	l261
  3860                           
  3861                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  3862  07C3  3001               	movlw	1
  3863  07C4  07BB               	addwf	sprintf@prec^(0+128),f
  3864  07C5  1803               	skipnc
  3865  07C6  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  3866  07C7  3000               	movlw	0
  3867  07C8  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  3868  07C9                     l261:	
  3869                           
  3870                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  3871  07C9  083C               	movf	(sprintf@prec+1)^(0+128),w
  3872  07CA  3A80               	xorlw	128
  3873  07CB  3C80               	sublw	128
  3874  07CC  1D03               	skipz
  3875  07CD  2FD0               	goto	u5785
  3876  07CE  083B               	movf	sprintf@prec^(0+128),w
  3877  07CF  0242               	subwf	sprintf@c^(0+128),w
  3878  07D0                     u5785:	
  3879  07D0  1C03               	btfss	3,0
  3880  07D1  2FDF               	goto	l3466
  3881  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  3882  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  3883  07D4  083C               	movf	(sprintf@prec+1)^(0+128),w
  3884  07D5  3A80               	xorlw	128
  3885  07D6  00A5               	movwf	??_sprintf^(0+128)
  3886  07D7  3080               	movlw	128
  3887  07D8  0225               	subwf	??_sprintf^(0+128),w
  3888  07D9  1D03               	skipz
  3889  07DA  2FDD               	goto	u5795
  3890  07DB  0842               	movf	sprintf@c^(0+128),w
  3891  07DC  023B               	subwf	sprintf@prec^(0+128),w
  3892  07DD                     u5795:	
  3893  07DD  1C03               	btfss	3,0
  3894  07DE  2FDF               	goto	l3466
  3895  07DF                     l3466:	
  3896                           
  3897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  3898  07DF  3003               	movlw	3
  3899  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  3900  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  3901  07E2  052F               	andwf	sprintf@flag^(0+128),w
  3902  07E3  00A5               	movwf	??_sprintf^(0+128)
  3903  07E4  3000               	movlw	0
  3904  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  3905  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3906  07E7  0825               	movf	??_sprintf^(0+128),w
  3907  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3908  07E9  1903               	btfsc	3,2
  3909  07EA  2A0C               	goto	l3472
  3910                           
  3911                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  3912  07EB  302D               	movlw	45
  3913  07EC                     L8:	
  3914  07EC  00A5               	movwf	??_sprintf^(0+128)
  3915  07ED  083D               	movf	sprintf@sp^(0+128),w
  3916  07EE  0084               	movwf	4
  3917  07EF  0825               	movf	??_sprintf^(0+128),w
  3918  07F0  1383               	bcf	3,7	;select IRP bank0
  3919  07F1  0080               	movwf	0
  3920  07F2  3001               	movlw	1
  3921  07F3  00A5               	movwf	??_sprintf^(0+128)
  3922  07F4  0825               	movf	??_sprintf^(0+128),w
  3923  07F5  07BD               	addwf	sprintf@sp^(0+128),f
  3924  07F6  2A0C               	goto	l3472
  3925  07F7                     l3474:	
  3926                           
  3927                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  3928  07F7  083D               	movf	sprintf@sp^(0+128),w
  3929  07F8  0084               	movwf	4
  3930  07F9  1383               	bcf	3,7	;select IRP bank0
  3931  07FA  0180               	clrf	0
  3932  07FB  0008               	return
  3933  07FC                     __end_of_sprintf:	
  3934                           
  3935                           	psect	text2
  3936  14B7                     __ptext2:	
  3937 ;; *************** function _scale *****************
  3938 ;; Defined at:
  3939 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;  scl             1    wreg     char 
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;  scl             1   48[BANK0 ] char 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  4   30[BANK0 ] char 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       4       0       0       0
  3954 ;;      Locals:         0       5       0       0       0
  3955 ;;      Temps:          0      10       0       0       0
  3956 ;;      Totals:         0      19       0       0       0
  3957 ;;Total ram usage:       19 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; Hardware stack levels required when called:    2
  3960 ;; This function calls:
  3961 ;;		___awdiv
  3962 ;;		___awmod
  3963 ;;		___flmul
  3964 ;; This function is called by:
  3965 ;;		_sprintf
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           
  3970                           ;psect for function _scale
  3971  14B7                     _scale:	
  3972                           
  3973                           ;incstack = 0
  3974                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3975                           ;scale@scl stored from wreg
  3976  14B7  1283               	bcf	3,5	;RP0=0, select bank0
  3977  14B8  1303               	bcf	3,6	;RP1=0, select bank0
  3978  14B9  00D0               	movwf	scale@scl
  3979                           
  3980                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  3981  14BA  1FD0               	btfss	scale@scl,7
  3982  14BB  2E5F               	goto	l2886
  3983                           
  3984                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  3985  14BC  09D0               	comf	scale@scl,f
  3986  14BD  0AD0               	incf	scale@scl,f
  3987                           
  3988                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  3989  14BE  0850               	movf	scale@scl,w
  3990  14BF  3A80               	xorlw	128
  3991  14C0  3E12               	addlw	-238
  3992  14C1  1C03               	skipc
  3993  14C2  2DA9               	goto	l2876
  3994                           
  3995                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3996  14C3  300A               	movlw	10
  3997  14C4  00F7               	movwf	___awdiv@divisor
  3998  14C5  3000               	movlw	0
  3999  14C6  00F8               	movwf	___awdiv@divisor+1
  4000  14C7  0850               	movf	scale@scl,w
  4001  14C8  00F2               	movwf	___awmod@dividend
  4002  14C9  01F3               	clrf	___awmod@dividend+1
  4003  14CA  1BF2               	btfsc	___awmod@dividend,7
  4004  14CB  03F3               	decf	___awmod@dividend+1,f
  4005  14CC  3064               	movlw	100
  4006  14CD  00F0               	movwf	___awmod@divisor
  4007  14CE  3000               	movlw	0
  4008  14CF  00F1               	movwf	___awmod@divisor+1
  4009  14D0  160A  158A  2309  160A  118A  	fcall	___awmod
  4010  14D5  0871               	movf	?___awmod+1,w
  4011  14D6  00FA               	movwf	___awdiv@dividend+1
  4012  14D7  0870               	movf	?___awmod,w
  4013  14D8  00F9               	movwf	___awdiv@dividend
  4014  14D9  160A  158A  2401  160A  118A  	fcall	___awdiv
  4015  14DE  0877               	movf	?___awdiv,w
  4016  14DF  1283               	bcf	3,5	;RP0=0, select bank0
  4017  14E0  1303               	bcf	3,6	;RP1=0, select bank0
  4018  14E1  00C2               	movwf	??_scale
  4019  14E2  3001               	movlw	1
  4020  14E3                     u4435:	
  4021  14E3  1003               	clrc
  4022  14E4  0DC2               	rlf	??_scale,f
  4023  14E5  3EFF               	addlw	-1
  4024  14E6  1D03               	skipz
  4025  14E7  2CE3               	goto	u4435
  4026  14E8  1003               	clrc
  4027  14E9  0D42               	rlf	??_scale,w
  4028  14EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4029  14EB  0084               	movwf	4
  4030  14EC  120A  158A  200A  160A  118A  	fcall	stringdir
  4031  14F1  00C3               	movwf	??_scale+1
  4032  14F2  120A  158A  200A  160A  118A  	fcall	stringdir
  4033  14F7  00C4               	movwf	??_scale+2
  4034  14F8  120A  158A  200A  160A  118A  	fcall	stringdir
  4035  14FD  00C5               	movwf	??_scale+3
  4036  14FE  120A  158A  200A  160A  118A  	fcall	stringdir
  4037  1503  00C6               	movwf	??_scale+4
  4038  1504  0846               	movf	??_scale+4,w
  4039  1505  00A7               	movwf	___flmul@b+3
  4040  1506  0845               	movf	??_scale+3,w
  4041  1507  00A6               	movwf	___flmul@b+2
  4042  1508  0844               	movf	??_scale+2,w
  4043  1509  00A5               	movwf	___flmul@b+1
  4044  150A  0843               	movf	??_scale+1,w
  4045  150B  00A4               	movwf	___flmul@b
  4046  150C  3064               	movlw	100
  4047  150D  00F7               	movwf	___awdiv@divisor
  4048  150E  3000               	movlw	0
  4049  150F  00F8               	movwf	___awdiv@divisor+1
  4050  1510  0850               	movf	scale@scl,w
  4051  1511  00F9               	movwf	___awdiv@dividend
  4052  1512  01FA               	clrf	___awdiv@dividend+1
  4053  1513  1BF9               	btfsc	___awdiv@dividend,7
  4054  1514  03FA               	decf	___awdiv@dividend+1,f
  4055  1515  160A  158A  2401  160A  118A  	fcall	___awdiv
  4056  151A  0877               	movf	?___awdiv,w
  4057  151B  1283               	bcf	3,5	;RP0=0, select bank0
  4058  151C  1303               	bcf	3,6	;RP1=0, select bank0
  4059  151D  00C7               	movwf	??_scale+5
  4060  151E  3001               	movlw	1
  4061  151F                     u4445:	
  4062  151F  1003               	clrc
  4063  1520  0DC7               	rlf	??_scale+5,f
  4064  1521  3EFF               	addlw	-1
  4065  1522  1D03               	skipz
  4066  1523  2D1F               	goto	u4445
  4067  1524  1003               	clrc
  4068  1525  0D47               	rlf	??_scale+5,w
  4069  1526  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4070  1527  0084               	movwf	4
  4071  1528  120A  158A  200A  160A  118A  	fcall	stringdir
  4072  152D  00C8               	movwf	??_scale+6
  4073  152E  120A  158A  200A  160A  118A  	fcall	stringdir
  4074  1533  00C9               	movwf	??_scale+7
  4075  1534  120A  158A  200A  160A  118A  	fcall	stringdir
  4076  1539  00CA               	movwf	??_scale+8
  4077  153A  120A  158A  200A  160A  118A  	fcall	stringdir
  4078  153F  00CB               	movwf	??_scale+9
  4079  1540  084B               	movf	??_scale+9,w
  4080  1541  00AB               	movwf	___flmul@a+3
  4081  1542  084A               	movf	??_scale+8,w
  4082  1543  00AA               	movwf	___flmul@a+2
  4083  1544  0849               	movf	??_scale+7,w
  4084  1545  00A9               	movwf	___flmul@a+1
  4085  1546  0848               	movf	??_scale+6,w
  4086  1547  00A8               	movwf	___flmul@a
  4087  1548  160A  118A  21A2  160A  118A  	fcall	___flmul
  4088  154D  1283               	bcf	3,5	;RP0=0, select bank0
  4089  154E  1303               	bcf	3,6	;RP1=0, select bank0
  4090  154F  0827               	movf	?___flmul+3,w
  4091  1550  00CF               	movwf	_scale$805+3
  4092  1551  0826               	movf	?___flmul+2,w
  4093  1552  00CE               	movwf	_scale$805+2
  4094  1553  0825               	movf	?___flmul+1,w
  4095  1554  00CD               	movwf	_scale$805+1
  4096  1555  0824               	movf	?___flmul,w
  4097  1556  00CC               	movwf	_scale$805
  4098                           
  4099                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  4100  1557  300A               	movlw	10
  4101  1558  00F0               	movwf	___awmod@divisor
  4102  1559  3000               	movlw	0
  4103  155A  00F1               	movwf	___awmod@divisor+1
  4104  155B  0850               	movf	scale@scl,w
  4105  155C  00F2               	movwf	___awmod@dividend
  4106  155D  01F3               	clrf	___awmod@dividend+1
  4107  155E  1BF2               	btfsc	___awmod@dividend,7
  4108  155F  03F3               	decf	___awmod@dividend+1,f
  4109  1560  160A  158A  2309  160A  118A  	fcall	___awmod
  4110  1565  0870               	movf	?___awmod,w
  4111  1566  1283               	bcf	3,5	;RP0=0, select bank0
  4112  1567  1303               	bcf	3,6	;RP1=0, select bank0
  4113  1568  00C2               	movwf	??_scale
  4114  1569  3001               	movlw	1
  4115  156A                     u4455:	
  4116  156A  1003               	clrc
  4117  156B  0DC2               	rlf	??_scale,f
  4118  156C  3EFF               	addlw	-1
  4119  156D  1D03               	skipz
  4120  156E  2D6A               	goto	u4455
  4121  156F  1003               	clrc
  4122  1570  0D42               	rlf	??_scale,w
  4123  1571  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4124  1572  0084               	movwf	4
  4125  1573  120A  158A  200A  160A  118A  	fcall	stringdir
  4126  1578  00C3               	movwf	??_scale+1
  4127  1579  120A  158A  200A  160A  118A  	fcall	stringdir
  4128  157E  00C4               	movwf	??_scale+2
  4129  157F  120A  158A  200A  160A  118A  	fcall	stringdir
  4130  1584  00C5               	movwf	??_scale+3
  4131  1585  120A  158A  200A  160A  118A  	fcall	stringdir
  4132  158A  00C6               	movwf	??_scale+4
  4133  158B  0846               	movf	??_scale+4,w
  4134  158C  00A7               	movwf	___flmul@b+3
  4135  158D  0845               	movf	??_scale+3,w
  4136  158E  00A6               	movwf	___flmul@b+2
  4137  158F  0844               	movf	??_scale+2,w
  4138  1590  00A5               	movwf	___flmul@b+1
  4139  1591  0843               	movf	??_scale+1,w
  4140  1592  00A4               	movwf	___flmul@b
  4141  1593  084F               	movf	_scale$805+3,w
  4142  1594  00AB               	movwf	___flmul@a+3
  4143  1595  084E               	movf	_scale$805+2,w
  4144  1596  00AA               	movwf	___flmul@a+2
  4145  1597  084D               	movf	_scale$805+1,w
  4146  1598  00A9               	movwf	___flmul@a+1
  4147  1599  084C               	movf	_scale$805,w
  4148  159A  00A8               	movwf	___flmul@a
  4149  159B  160A  118A  21A2   	fcall	___flmul
  4150  159E  1283               	bcf	3,5	;RP0=0, select bank0
  4151  159F  1303               	bcf	3,6	;RP1=0, select bank0
  4152  15A0  0827               	movf	?___flmul+3,w
  4153  15A1  00C1               	movwf	?_scale+3
  4154  15A2  0826               	movf	?___flmul+2,w
  4155  15A3  00C0               	movwf	?_scale+2
  4156  15A4  0825               	movf	?___flmul+1,w
  4157  15A5  00BF               	movwf	?_scale+1
  4158  15A6  0824               	movf	?___flmul,w
  4159  15A7  00BE               	movwf	?_scale
  4160  15A8  0008               	return
  4161  15A9                     l2876:	
  4162  15A9  0850               	movf	scale@scl,w
  4163  15AA  3A80               	xorlw	128
  4164  15AB  3E75               	addlw	-139
  4165  15AC  1C03               	skipc
  4166  15AD  2E34               	goto	l2882
  4167                           
  4168                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4169  15AE  300A               	movlw	10
  4170  15AF  00F0               	movwf	___awmod@divisor
  4171  15B0  3000               	movlw	0
  4172  15B1  00F1               	movwf	___awmod@divisor+1
  4173  15B2  0850               	movf	scale@scl,w
  4174  15B3  00F2               	movwf	___awmod@dividend
  4175  15B4  01F3               	clrf	___awmod@dividend+1
  4176  15B5  1BF2               	btfsc	___awmod@dividend,7
  4177  15B6  03F3               	decf	___awmod@dividend+1,f
  4178  15B7  160A  158A  2309  160A  118A  	fcall	___awmod
  4179  15BC  0870               	movf	?___awmod,w
  4180  15BD  1283               	bcf	3,5	;RP0=0, select bank0
  4181  15BE  1303               	bcf	3,6	;RP1=0, select bank0
  4182  15BF  00C2               	movwf	??_scale
  4183  15C0  3001               	movlw	1
  4184  15C1                     u4475:	
  4185  15C1  1003               	clrc
  4186  15C2  0DC2               	rlf	??_scale,f
  4187  15C3  3EFF               	addlw	-1
  4188  15C4  1D03               	skipz
  4189  15C5  2DC1               	goto	u4475
  4190  15C6  1003               	clrc
  4191  15C7  0D42               	rlf	??_scale,w
  4192  15C8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4193  15C9  0084               	movwf	4
  4194  15CA  120A  158A  200A  160A  118A  	fcall	stringdir
  4195  15CF  00C3               	movwf	??_scale+1
  4196  15D0  120A  158A  200A  160A  118A  	fcall	stringdir
  4197  15D5  00C4               	movwf	??_scale+2
  4198  15D6  120A  158A  200A  160A  118A  	fcall	stringdir
  4199  15DB  00C5               	movwf	??_scale+3
  4200  15DC  120A  158A  200A  160A  118A  	fcall	stringdir
  4201  15E1  00C6               	movwf	??_scale+4
  4202  15E2  0846               	movf	??_scale+4,w
  4203  15E3  00A7               	movwf	___flmul@b+3
  4204  15E4  0845               	movf	??_scale+3,w
  4205  15E5  00A6               	movwf	___flmul@b+2
  4206  15E6  0844               	movf	??_scale+2,w
  4207  15E7  00A5               	movwf	___flmul@b+1
  4208  15E8  0843               	movf	??_scale+1,w
  4209  15E9  00A4               	movwf	___flmul@b
  4210  15EA  300A               	movlw	10
  4211  15EB  00F7               	movwf	___awdiv@divisor
  4212  15EC  3000               	movlw	0
  4213  15ED  00F8               	movwf	___awdiv@divisor+1
  4214  15EE  0850               	movf	scale@scl,w
  4215  15EF  00F9               	movwf	___awdiv@dividend
  4216  15F0  01FA               	clrf	___awdiv@dividend+1
  4217  15F1  1BF9               	btfsc	___awdiv@dividend,7
  4218  15F2  03FA               	decf	___awdiv@dividend+1,f
  4219  15F3  160A  158A  2401  160A  118A  	fcall	___awdiv
  4220  15F8  0877               	movf	?___awdiv,w
  4221  15F9  1283               	bcf	3,5	;RP0=0, select bank0
  4222  15FA  1303               	bcf	3,6	;RP1=0, select bank0
  4223  15FB  00C7               	movwf	??_scale+5
  4224  15FC  3001               	movlw	1
  4225  15FD                     u4485:	
  4226  15FD  1003               	clrc
  4227  15FE  0DC7               	rlf	??_scale+5,f
  4228  15FF  3EFF               	addlw	-1
  4229  1600  1D03               	skipz
  4230  1601  2DFD               	goto	u4485
  4231  1602  1003               	clrc
  4232  1603  0D47               	rlf	??_scale+5,w
  4233  1604  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4234  1605  0084               	movwf	4
  4235  1606  120A  158A  200A  160A  118A  	fcall	stringdir
  4236  160B  00C8               	movwf	??_scale+6
  4237  160C  120A  158A  200A  160A  118A  	fcall	stringdir
  4238  1611  00C9               	movwf	??_scale+7
  4239  1612  120A  158A  200A  160A  118A  	fcall	stringdir
  4240  1617  00CA               	movwf	??_scale+8
  4241  1618  120A  158A  200A  160A  118A  	fcall	stringdir
  4242  161D  00CB               	movwf	??_scale+9
  4243  161E  084B               	movf	??_scale+9,w
  4244  161F  00AB               	movwf	___flmul@a+3
  4245  1620  084A               	movf	??_scale+8,w
  4246  1621  00AA               	movwf	___flmul@a+2
  4247  1622  0849               	movf	??_scale+7,w
  4248  1623  00A9               	movwf	___flmul@a+1
  4249  1624  0848               	movf	??_scale+6,w
  4250  1625  00A8               	movwf	___flmul@a
  4251  1626  160A  118A  21A2   	fcall	___flmul
  4252  1629  1283               	bcf	3,5	;RP0=0, select bank0
  4253  162A  1303               	bcf	3,6	;RP1=0, select bank0
  4254  162B  0827               	movf	?___flmul+3,w
  4255  162C  00C1               	movwf	?_scale+3
  4256  162D  0826               	movf	?___flmul+2,w
  4257  162E  00C0               	movwf	?_scale+2
  4258  162F  0825               	movf	?___flmul+1,w
  4259  1630  00BF               	movwf	?_scale+1
  4260  1631  0824               	movf	?___flmul,w
  4261  1632  00BE               	movwf	?_scale
  4262  1633  0008               	return
  4263  1634                     l2882:	
  4264                           
  4265                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  4266  1634  0850               	movf	scale@scl,w
  4267  1635  00C2               	movwf	??_scale
  4268  1636  3001               	movlw	1
  4269  1637                     u4495:	
  4270  1637  1003               	clrc
  4271  1638  0DC2               	rlf	??_scale,f
  4272  1639  3EFF               	addlw	-1
  4273  163A  1D03               	skipz
  4274  163B  2E37               	goto	u4495
  4275  163C  1003               	clrc
  4276  163D  0D42               	rlf	??_scale,w
  4277  163E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4278  163F  0084               	movwf	4
  4279  1640  120A  158A  200A  160A  118A  	fcall	stringdir
  4280  1645  00C3               	movwf	??_scale+1
  4281  1646  120A  158A  200A  160A  118A  	fcall	stringdir
  4282  164B  00C4               	movwf	??_scale+2
  4283  164C  120A  158A  200A  160A  118A  	fcall	stringdir
  4284  1651  00C5               	movwf	??_scale+3
  4285  1652  120A  158A  200A   	fcall	stringdir
  4286  1655  00C6               	movwf	??_scale+4
  4287  1656  0846               	movf	??_scale+4,w
  4288  1657  00C1               	movwf	?_scale+3
  4289  1658  0845               	movf	??_scale+3,w
  4290  1659  00C0               	movwf	?_scale+2
  4291  165A  0844               	movf	??_scale+2,w
  4292  165B  00BF               	movwf	?_scale+1
  4293  165C  0843               	movf	??_scale+1,w
  4294  165D  00BE               	movwf	?_scale
  4295  165E  0008               	return
  4296  165F                     l2886:	
  4297                           
  4298                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  4299  165F  0850               	movf	scale@scl,w
  4300  1660  3A80               	xorlw	128
  4301  1661  3E12               	addlw	-238
  4302  1662  1C03               	skipc
  4303  1663  2F4A               	goto	l2894
  4304                           
  4305                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4306  1664  300A               	movlw	10
  4307  1665  00F7               	movwf	___awdiv@divisor
  4308  1666  3000               	movlw	0
  4309  1667  00F8               	movwf	___awdiv@divisor+1
  4310  1668  0850               	movf	scale@scl,w
  4311  1669  00F2               	movwf	___awmod@dividend
  4312  166A  01F3               	clrf	___awmod@dividend+1
  4313  166B  1BF2               	btfsc	___awmod@dividend,7
  4314  166C  03F3               	decf	___awmod@dividend+1,f
  4315  166D  3064               	movlw	100
  4316  166E  00F0               	movwf	___awmod@divisor
  4317  166F  3000               	movlw	0
  4318  1670  00F1               	movwf	___awmod@divisor+1
  4319  1671  160A  158A  2309  160A  118A  	fcall	___awmod
  4320  1676  0871               	movf	?___awmod+1,w
  4321  1677  00FA               	movwf	___awdiv@dividend+1
  4322  1678  0870               	movf	?___awmod,w
  4323  1679  00F9               	movwf	___awdiv@dividend
  4324  167A  160A  158A  2401  160A  118A  	fcall	___awdiv
  4325  167F  0877               	movf	?___awdiv,w
  4326  1680  1283               	bcf	3,5	;RP0=0, select bank0
  4327  1681  1303               	bcf	3,6	;RP1=0, select bank0
  4328  1682  00C2               	movwf	??_scale
  4329  1683  3001               	movlw	1
  4330  1684                     u4515:	
  4331  1684  1003               	clrc
  4332  1685  0DC2               	rlf	??_scale,f
  4333  1686  3EFF               	addlw	-1
  4334  1687  1D03               	skipz
  4335  1688  2E84               	goto	u4515
  4336  1689  1003               	clrc
  4337  168A  0D42               	rlf	??_scale,w
  4338  168B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4339  168C  0084               	movwf	4
  4340  168D  120A  158A  200A  160A  118A  	fcall	stringdir
  4341  1692  00C3               	movwf	??_scale+1
  4342  1693  120A  158A  200A  160A  118A  	fcall	stringdir
  4343  1698  00C4               	movwf	??_scale+2
  4344  1699  120A  158A  200A  160A  118A  	fcall	stringdir
  4345  169E  00C5               	movwf	??_scale+3
  4346  169F  120A  158A  200A  160A  118A  	fcall	stringdir
  4347  16A4  00C6               	movwf	??_scale+4
  4348  16A5  0846               	movf	??_scale+4,w
  4349  16A6  00A7               	movwf	___flmul@b+3
  4350  16A7  0845               	movf	??_scale+3,w
  4351  16A8  00A6               	movwf	___flmul@b+2
  4352  16A9  0844               	movf	??_scale+2,w
  4353  16AA  00A5               	movwf	___flmul@b+1
  4354  16AB  0843               	movf	??_scale+1,w
  4355  16AC  00A4               	movwf	___flmul@b
  4356  16AD  3064               	movlw	100
  4357  16AE  00F7               	movwf	___awdiv@divisor
  4358  16AF  3000               	movlw	0
  4359  16B0  00F8               	movwf	___awdiv@divisor+1
  4360  16B1  0850               	movf	scale@scl,w
  4361  16B2  00F9               	movwf	___awdiv@dividend
  4362  16B3  01FA               	clrf	___awdiv@dividend+1
  4363  16B4  1BF9               	btfsc	___awdiv@dividend,7
  4364  16B5  03FA               	decf	___awdiv@dividend+1,f
  4365  16B6  160A  158A  2401  160A  118A  	fcall	___awdiv
  4366  16BB  0877               	movf	?___awdiv,w
  4367  16BC  1283               	bcf	3,5	;RP0=0, select bank0
  4368  16BD  1303               	bcf	3,6	;RP1=0, select bank0
  4369  16BE  00C7               	movwf	??_scale+5
  4370  16BF  3001               	movlw	1
  4371  16C0                     u4525:	
  4372  16C0  1003               	clrc
  4373  16C1  0DC7               	rlf	??_scale+5,f
  4374  16C2  3EFF               	addlw	-1
  4375  16C3  1D03               	skipz
  4376  16C4  2EC0               	goto	u4525
  4377  16C5  1003               	clrc
  4378  16C6  0D47               	rlf	??_scale+5,w
  4379  16C7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4380  16C8  0084               	movwf	4
  4381  16C9  120A  158A  200A  160A  118A  	fcall	stringdir
  4382  16CE  00C8               	movwf	??_scale+6
  4383  16CF  120A  158A  200A  160A  118A  	fcall	stringdir
  4384  16D4  00C9               	movwf	??_scale+7
  4385  16D5  120A  158A  200A  160A  118A  	fcall	stringdir
  4386  16DA  00CA               	movwf	??_scale+8
  4387  16DB  120A  158A  200A  160A  118A  	fcall	stringdir
  4388  16E0  00CB               	movwf	??_scale+9
  4389  16E1  084B               	movf	??_scale+9,w
  4390  16E2  00AB               	movwf	___flmul@a+3
  4391  16E3  084A               	movf	??_scale+8,w
  4392  16E4  00AA               	movwf	___flmul@a+2
  4393  16E5  0849               	movf	??_scale+7,w
  4394  16E6  00A9               	movwf	___flmul@a+1
  4395  16E7  0848               	movf	??_scale+6,w
  4396  16E8  00A8               	movwf	___flmul@a
  4397  16E9  160A  118A  21A2  160A  118A  	fcall	___flmul
  4398  16EE  1283               	bcf	3,5	;RP0=0, select bank0
  4399  16EF  1303               	bcf	3,6	;RP1=0, select bank0
  4400  16F0  0827               	movf	?___flmul+3,w
  4401  16F1  00CF               	movwf	_scale$805+3
  4402  16F2  0826               	movf	?___flmul+2,w
  4403  16F3  00CE               	movwf	_scale$805+2
  4404  16F4  0825               	movf	?___flmul+1,w
  4405  16F5  00CD               	movwf	_scale$805+1
  4406  16F6  0824               	movf	?___flmul,w
  4407  16F7  00CC               	movwf	_scale$805
  4408                           
  4409                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  4410  16F8  300A               	movlw	10
  4411  16F9  00F0               	movwf	___awmod@divisor
  4412  16FA  3000               	movlw	0
  4413  16FB  00F1               	movwf	___awmod@divisor+1
  4414  16FC  0850               	movf	scale@scl,w
  4415  16FD  00F2               	movwf	___awmod@dividend
  4416  16FE  01F3               	clrf	___awmod@dividend+1
  4417  16FF  1BF2               	btfsc	___awmod@dividend,7
  4418  1700  03F3               	decf	___awmod@dividend+1,f
  4419  1701  160A  158A  2309  160A  118A  	fcall	___awmod
  4420  1706  0870               	movf	?___awmod,w
  4421  1707  1283               	bcf	3,5	;RP0=0, select bank0
  4422  1708  1303               	bcf	3,6	;RP1=0, select bank0
  4423  1709  00C2               	movwf	??_scale
  4424  170A  3001               	movlw	1
  4425  170B                     u4535:	
  4426  170B  1003               	clrc
  4427  170C  0DC2               	rlf	??_scale,f
  4428  170D  3EFF               	addlw	-1
  4429  170E  1D03               	skipz
  4430  170F  2F0B               	goto	u4535
  4431  1710  1003               	clrc
  4432  1711  0D42               	rlf	??_scale,w
  4433  1712  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4434  1713  0084               	movwf	4
  4435  1714  120A  158A  200A  160A  118A  	fcall	stringdir
  4436  1719  00C3               	movwf	??_scale+1
  4437  171A  120A  158A  200A  160A  118A  	fcall	stringdir
  4438  171F  00C4               	movwf	??_scale+2
  4439  1720  120A  158A  200A  160A  118A  	fcall	stringdir
  4440  1725  00C5               	movwf	??_scale+3
  4441  1726  120A  158A  200A  160A  118A  	fcall	stringdir
  4442  172B  00C6               	movwf	??_scale+4
  4443  172C  0846               	movf	??_scale+4,w
  4444  172D  00A7               	movwf	___flmul@b+3
  4445  172E  0845               	movf	??_scale+3,w
  4446  172F  00A6               	movwf	___flmul@b+2
  4447  1730  0844               	movf	??_scale+2,w
  4448  1731  00A5               	movwf	___flmul@b+1
  4449  1732  0843               	movf	??_scale+1,w
  4450  1733  00A4               	movwf	___flmul@b
  4451  1734  084F               	movf	_scale$805+3,w
  4452  1735  00AB               	movwf	___flmul@a+3
  4453  1736  084E               	movf	_scale$805+2,w
  4454  1737  00AA               	movwf	___flmul@a+2
  4455  1738  084D               	movf	_scale$805+1,w
  4456  1739  00A9               	movwf	___flmul@a+1
  4457  173A  084C               	movf	_scale$805,w
  4458  173B  00A8               	movwf	___flmul@a
  4459  173C  160A  118A  21A2   	fcall	___flmul
  4460  173F  1283               	bcf	3,5	;RP0=0, select bank0
  4461  1740  1303               	bcf	3,6	;RP1=0, select bank0
  4462  1741  0827               	movf	?___flmul+3,w
  4463  1742  00C1               	movwf	?_scale+3
  4464  1743  0826               	movf	?___flmul+2,w
  4465  1744  00C0               	movwf	?_scale+2
  4466  1745  0825               	movf	?___flmul+1,w
  4467  1746  00BF               	movwf	?_scale+1
  4468  1747  0824               	movf	?___flmul,w
  4469  1748  00BE               	movwf	?_scale
  4470  1749  0008               	return
  4471  174A                     l2894:	
  4472  174A  0850               	movf	scale@scl,w
  4473  174B  3A80               	xorlw	128
  4474  174C  3E75               	addlw	-139
  4475  174D  1C03               	skipc
  4476  174E  2FD5               	goto	l2900
  4477                           
  4478                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4479  174F  300A               	movlw	10
  4480  1750  00F0               	movwf	___awmod@divisor
  4481  1751  3000               	movlw	0
  4482  1752  00F1               	movwf	___awmod@divisor+1
  4483  1753  0850               	movf	scale@scl,w
  4484  1754  00F2               	movwf	___awmod@dividend
  4485  1755  01F3               	clrf	___awmod@dividend+1
  4486  1756  1BF2               	btfsc	___awmod@dividend,7
  4487  1757  03F3               	decf	___awmod@dividend+1,f
  4488  1758  160A  158A  2309  160A  118A  	fcall	___awmod
  4489  175D  0870               	movf	?___awmod,w
  4490  175E  1283               	bcf	3,5	;RP0=0, select bank0
  4491  175F  1303               	bcf	3,6	;RP1=0, select bank0
  4492  1760  00C2               	movwf	??_scale
  4493  1761  3001               	movlw	1
  4494  1762                     u4555:	
  4495  1762  1003               	clrc
  4496  1763  0DC2               	rlf	??_scale,f
  4497  1764  3EFF               	addlw	-1
  4498  1765  1D03               	skipz
  4499  1766  2F62               	goto	u4555
  4500  1767  1003               	clrc
  4501  1768  0D42               	rlf	??_scale,w
  4502  1769  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4503  176A  0084               	movwf	4
  4504  176B  120A  158A  200A  160A  118A  	fcall	stringdir
  4505  1770  00C3               	movwf	??_scale+1
  4506  1771  120A  158A  200A  160A  118A  	fcall	stringdir
  4507  1776  00C4               	movwf	??_scale+2
  4508  1777  120A  158A  200A  160A  118A  	fcall	stringdir
  4509  177C  00C5               	movwf	??_scale+3
  4510  177D  120A  158A  200A  160A  118A  	fcall	stringdir
  4511  1782  00C6               	movwf	??_scale+4
  4512  1783  0846               	movf	??_scale+4,w
  4513  1784  00A7               	movwf	___flmul@b+3
  4514  1785  0845               	movf	??_scale+3,w
  4515  1786  00A6               	movwf	___flmul@b+2
  4516  1787  0844               	movf	??_scale+2,w
  4517  1788  00A5               	movwf	___flmul@b+1
  4518  1789  0843               	movf	??_scale+1,w
  4519  178A  00A4               	movwf	___flmul@b
  4520  178B  300A               	movlw	10
  4521  178C  00F7               	movwf	___awdiv@divisor
  4522  178D  3000               	movlw	0
  4523  178E  00F8               	movwf	___awdiv@divisor+1
  4524  178F  0850               	movf	scale@scl,w
  4525  1790  00F9               	movwf	___awdiv@dividend
  4526  1791  01FA               	clrf	___awdiv@dividend+1
  4527  1792  1BF9               	btfsc	___awdiv@dividend,7
  4528  1793  03FA               	decf	___awdiv@dividend+1,f
  4529  1794  160A  158A  2401  160A  118A  	fcall	___awdiv
  4530  1799  0877               	movf	?___awdiv,w
  4531  179A  1283               	bcf	3,5	;RP0=0, select bank0
  4532  179B  1303               	bcf	3,6	;RP1=0, select bank0
  4533  179C  00C7               	movwf	??_scale+5
  4534  179D  3001               	movlw	1
  4535  179E                     u4565:	
  4536  179E  1003               	clrc
  4537  179F  0DC7               	rlf	??_scale+5,f
  4538  17A0  3EFF               	addlw	-1
  4539  17A1  1D03               	skipz
  4540  17A2  2F9E               	goto	u4565
  4541  17A3  1003               	clrc
  4542  17A4  0D47               	rlf	??_scale+5,w
  4543  17A5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4544  17A6  0084               	movwf	4
  4545  17A7  120A  158A  200A  160A  118A  	fcall	stringdir
  4546  17AC  00C8               	movwf	??_scale+6
  4547  17AD  120A  158A  200A  160A  118A  	fcall	stringdir
  4548  17B2  00C9               	movwf	??_scale+7
  4549  17B3  120A  158A  200A  160A  118A  	fcall	stringdir
  4550  17B8  00CA               	movwf	??_scale+8
  4551  17B9  120A  158A  200A  160A  118A  	fcall	stringdir
  4552  17BE  00CB               	movwf	??_scale+9
  4553  17BF  084B               	movf	??_scale+9,w
  4554  17C0  00AB               	movwf	___flmul@a+3
  4555  17C1  084A               	movf	??_scale+8,w
  4556  17C2  00AA               	movwf	___flmul@a+2
  4557  17C3  0849               	movf	??_scale+7,w
  4558  17C4  00A9               	movwf	___flmul@a+1
  4559  17C5  0848               	movf	??_scale+6,w
  4560  17C6  00A8               	movwf	___flmul@a
  4561  17C7  160A  118A  21A2   	fcall	___flmul
  4562  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  4563  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  4564  17CC  0827               	movf	?___flmul+3,w
  4565  17CD  00C1               	movwf	?_scale+3
  4566  17CE  0826               	movf	?___flmul+2,w
  4567  17CF  00C0               	movwf	?_scale+2
  4568  17D0  0825               	movf	?___flmul+1,w
  4569  17D1  00BF               	movwf	?_scale+1
  4570  17D2  0824               	movf	?___flmul,w
  4571  17D3  00BE               	movwf	?_scale
  4572  17D4  0008               	return
  4573  17D5                     l2900:	
  4574                           
  4575                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  4576  17D5  0850               	movf	scale@scl,w
  4577  17D6  00C2               	movwf	??_scale
  4578  17D7  3001               	movlw	1
  4579  17D8                     u4575:	
  4580  17D8  1003               	clrc
  4581  17D9  0DC2               	rlf	??_scale,f
  4582  17DA  3EFF               	addlw	-1
  4583  17DB  1D03               	skipz
  4584  17DC  2FD8               	goto	u4575
  4585  17DD  1003               	clrc
  4586  17DE  0D42               	rlf	??_scale,w
  4587  17DF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4588  17E0  0084               	movwf	4
  4589  17E1  120A  158A  200A  160A  118A  	fcall	stringdir
  4590  17E6  00C3               	movwf	??_scale+1
  4591  17E7  120A  158A  200A  160A  118A  	fcall	stringdir
  4592  17EC  00C4               	movwf	??_scale+2
  4593  17ED  120A  158A  200A  160A  118A  	fcall	stringdir
  4594  17F2  00C5               	movwf	??_scale+3
  4595  17F3  120A  158A  200A   	fcall	stringdir
  4596  17F6  00C6               	movwf	??_scale+4
  4597  17F7  0846               	movf	??_scale+4,w
  4598  17F8  00C1               	movwf	?_scale+3
  4599  17F9  0845               	movf	??_scale+3,w
  4600  17FA  00C0               	movwf	?_scale+2
  4601  17FB  0844               	movf	??_scale+2,w
  4602  17FC  00BF               	movwf	?_scale+1
  4603  17FD  0843               	movf	??_scale+1,w
  4604  17FE  00BE               	movwf	?_scale
  4605  17FF  0008               	return
  4606  1800                     __end_of_scale:	
  4607                           
  4608                           	psect	text3
  4609  1B09                     __ptext3:	
  4610 ;; *************** function ___awmod *****************
  4611 ;; Defined at:
  4612 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  4613 ;; Parameters:    Size  Location     Type
  4614 ;;  divisor         2    0[COMMON] int 
  4615 ;;  dividend        2    2[COMMON] int 
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  sign            1    6[COMMON] unsigned char 
  4618 ;;  counter         1    5[COMMON] unsigned char 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  2    0[COMMON] int 
  4621 ;; Registers used:
  4622 ;;		wreg, status,2, status,0
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4628 ;;      Params:         4       0       0       0       0
  4629 ;;      Locals:         2       0       0       0       0
  4630 ;;      Temps:          1       0       0       0       0
  4631 ;;      Totals:         7       0       0       0       0
  4632 ;;Total ram usage:        7 bytes
  4633 ;; Hardware stack levels used:    1
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_scale
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function ___awmod
  4643  1B09                     ___awmod:	
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4647  1B09  01F6               	clrf	___awmod@sign
  4648  1B0A  1FF3               	btfss	___awmod@dividend+1,7
  4649  1B0B  2B13               	goto	l2392
  4650  1B0C  09F2               	comf	___awmod@dividend,f
  4651  1B0D  09F3               	comf	___awmod@dividend+1,f
  4652  1B0E  0AF2               	incf	___awmod@dividend,f
  4653  1B0F  1903               	skipnz
  4654  1B10  0AF3               	incf	___awmod@dividend+1,f
  4655  1B11  01F6               	clrf	___awmod@sign
  4656  1B12  0AF6               	incf	___awmod@sign,f
  4657  1B13                     l2392:	
  4658  1B13  1FF1               	btfss	___awmod@divisor+1,7
  4659  1B14  2B1A               	goto	l2396
  4660  1B15  09F0               	comf	___awmod@divisor,f
  4661  1B16  09F1               	comf	___awmod@divisor+1,f
  4662  1B17  0AF0               	incf	___awmod@divisor,f
  4663  1B18  1903               	skipnz
  4664  1B19  0AF1               	incf	___awmod@divisor+1,f
  4665  1B1A                     l2396:	
  4666  1B1A  0870               	movf	___awmod@divisor,w
  4667  1B1B  0471               	iorwf	___awmod@divisor+1,w
  4668  1B1C  1903               	btfsc	3,2
  4669  1B1D  2B47               	goto	l2414
  4670  1B1E  01F5               	clrf	___awmod@counter
  4671  1B1F  0AF5               	incf	___awmod@counter,f
  4672  1B20                     l2404:	
  4673  1B20  1BF1               	btfsc	___awmod@divisor+1,7
  4674  1B21  2B2E               	goto	l2406
  4675  1B22  3001               	movlw	1
  4676  1B23                     u3285:	
  4677  1B23  1003               	clrc
  4678  1B24  0DF0               	rlf	___awmod@divisor,f
  4679  1B25  0DF1               	rlf	___awmod@divisor+1,f
  4680  1B26  3EFF               	addlw	-1
  4681  1B27  1D03               	skipz
  4682  1B28  2B23               	goto	u3285
  4683  1B29  3001               	movlw	1
  4684  1B2A  00F4               	movwf	??___awmod
  4685  1B2B  0874               	movf	??___awmod,w
  4686  1B2C  07F5               	addwf	___awmod@counter,f
  4687  1B2D  2B20               	goto	l2404
  4688  1B2E                     l2406:	
  4689  1B2E  0871               	movf	___awmod@divisor+1,w
  4690  1B2F  0273               	subwf	___awmod@dividend+1,w
  4691  1B30  1D03               	skipz
  4692  1B31  2B34               	goto	u3305
  4693  1B32  0870               	movf	___awmod@divisor,w
  4694  1B33  0272               	subwf	___awmod@dividend,w
  4695  1B34                     u3305:	
  4696  1B34  1C03               	skipc
  4697  1B35  2B3C               	goto	l2410
  4698  1B36  0870               	movf	___awmod@divisor,w
  4699  1B37  02F2               	subwf	___awmod@dividend,f
  4700  1B38  0871               	movf	___awmod@divisor+1,w
  4701  1B39  1C03               	skipc
  4702  1B3A  03F3               	decf	___awmod@dividend+1,f
  4703  1B3B  02F3               	subwf	___awmod@dividend+1,f
  4704  1B3C                     l2410:	
  4705  1B3C  3001               	movlw	1
  4706  1B3D                     u3315:	
  4707  1B3D  1003               	clrc
  4708  1B3E  0CF1               	rrf	___awmod@divisor+1,f
  4709  1B3F  0CF0               	rrf	___awmod@divisor,f
  4710  1B40  3EFF               	addlw	-1
  4711  1B41  1D03               	skipz
  4712  1B42  2B3D               	goto	u3315
  4713  1B43  3001               	movlw	1
  4714  1B44  02F5               	subwf	___awmod@counter,f
  4715  1B45  1D03               	btfss	3,2
  4716  1B46  2B2E               	goto	l2406
  4717  1B47                     l2414:	
  4718  1B47  0876               	movf	___awmod@sign,w
  4719  1B48  1903               	btfsc	3,2
  4720  1B49  2B4F               	goto	l2418
  4721  1B4A  09F2               	comf	___awmod@dividend,f
  4722  1B4B  09F3               	comf	___awmod@dividend+1,f
  4723  1B4C  0AF2               	incf	___awmod@dividend,f
  4724  1B4D  1903               	skipnz
  4725  1B4E  0AF3               	incf	___awmod@dividend+1,f
  4726  1B4F                     l2418:	
  4727  1B4F  0873               	movf	___awmod@dividend+1,w
  4728  1B50  00F1               	movwf	?___awmod+1
  4729  1B51  0872               	movf	___awmod@dividend,w
  4730  1B52  00F0               	movwf	?___awmod
  4731  1B53  0008               	return
  4732  1B54                     __end_of___awmod:	
  4733                           
  4734                           	psect	text4
  4735  1C01                     __ptext4:	
  4736 ;; *************** function ___awdiv *****************
  4737 ;; Defined at:
  4738 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  divisor         2    7[COMMON] int 
  4741 ;;  dividend        2    9[COMMON] int 
  4742 ;; Auto vars:     Size  Location     Type
  4743 ;;  quotient        2    2[BANK0 ] int 
  4744 ;;  sign            1    1[BANK0 ] unsigned char 
  4745 ;;  counter         1    0[BANK0 ] unsigned char 
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  2    7[COMMON] int 
  4748 ;; Registers used:
  4749 ;;		wreg, status,2, status,0
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4755 ;;      Params:         4       0       0       0       0
  4756 ;;      Locals:         0       4       0       0       0
  4757 ;;      Temps:          1       0       0       0       0
  4758 ;;      Totals:         5       4       0       0       0
  4759 ;;Total ram usage:        9 bytes
  4760 ;; Hardware stack levels used:    1
  4761 ;; This function calls:
  4762 ;;		Nothing
  4763 ;; This function is called by:
  4764 ;;		_scale
  4765 ;;		_sprintf
  4766 ;; This function uses a non-reentrant model
  4767 ;;
  4768                           
  4769                           
  4770                           ;psect for function ___awdiv
  4771  1C01                     ___awdiv:	
  4772                           
  4773                           ;incstack = 0
  4774                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4775  1C01  1283               	bcf	3,5	;RP0=0, select bank0
  4776  1C02  1303               	bcf	3,6	;RP1=0, select bank0
  4777  1C03  01A1               	clrf	___awdiv@sign
  4778  1C04  1FF8               	btfss	___awdiv@divisor+1,7
  4779  1C05  2C0D               	goto	l2348
  4780  1C06  09F7               	comf	___awdiv@divisor,f
  4781  1C07  09F8               	comf	___awdiv@divisor+1,f
  4782  1C08  0AF7               	incf	___awdiv@divisor,f
  4783  1C09  1903               	skipnz
  4784  1C0A  0AF8               	incf	___awdiv@divisor+1,f
  4785  1C0B  01A1               	clrf	___awdiv@sign
  4786  1C0C  0AA1               	incf	___awdiv@sign,f
  4787  1C0D                     l2348:	
  4788  1C0D  1FFA               	btfss	___awdiv@dividend+1,7
  4789  1C0E  2C18               	goto	l2354
  4790  1C0F  09F9               	comf	___awdiv@dividend,f
  4791  1C10  09FA               	comf	___awdiv@dividend+1,f
  4792  1C11  0AF9               	incf	___awdiv@dividend,f
  4793  1C12  1903               	skipnz
  4794  1C13  0AFA               	incf	___awdiv@dividend+1,f
  4795  1C14  3001               	movlw	1
  4796  1C15  00FB               	movwf	??___awdiv
  4797  1C16  087B               	movf	??___awdiv,w
  4798  1C17  06A1               	xorwf	___awdiv@sign,f
  4799  1C18                     l2354:	
  4800  1C18  01A2               	clrf	___awdiv@quotient
  4801  1C19  01A3               	clrf	___awdiv@quotient+1
  4802  1C1A  0877               	movf	___awdiv@divisor,w
  4803  1C1B  0478               	iorwf	___awdiv@divisor+1,w
  4804  1C1C  1903               	btfsc	3,2
  4805  1C1D  2C4F               	goto	l2376
  4806  1C1E  01A0               	clrf	___awdiv@counter
  4807  1C1F  0AA0               	incf	___awdiv@counter,f
  4808  1C20                     l2364:	
  4809  1C20  1BF8               	btfsc	___awdiv@divisor+1,7
  4810  1C21  2C2E               	goto	l2366
  4811  1C22  3001               	movlw	1
  4812  1C23                     u3185:	
  4813  1C23  1003               	clrc
  4814  1C24  0DF7               	rlf	___awdiv@divisor,f
  4815  1C25  0DF8               	rlf	___awdiv@divisor+1,f
  4816  1C26  3EFF               	addlw	-1
  4817  1C27  1D03               	skipz
  4818  1C28  2C23               	goto	u3185
  4819  1C29  3001               	movlw	1
  4820  1C2A  00FB               	movwf	??___awdiv
  4821  1C2B  087B               	movf	??___awdiv,w
  4822  1C2C  07A0               	addwf	___awdiv@counter,f
  4823  1C2D  2C20               	goto	l2364
  4824  1C2E                     l2366:	
  4825  1C2E  3001               	movlw	1
  4826  1C2F                     u3205:	
  4827  1C2F  1003               	clrc
  4828  1C30  0DA2               	rlf	___awdiv@quotient,f
  4829  1C31  0DA3               	rlf	___awdiv@quotient+1,f
  4830  1C32  3EFF               	addlw	-1
  4831  1C33  1D03               	skipz
  4832  1C34  2C2F               	goto	u3205
  4833  1C35  0878               	movf	___awdiv@divisor+1,w
  4834  1C36  027A               	subwf	___awdiv@dividend+1,w
  4835  1C37  1D03               	skipz
  4836  1C38  2C3B               	goto	u3215
  4837  1C39  0877               	movf	___awdiv@divisor,w
  4838  1C3A  0279               	subwf	___awdiv@dividend,w
  4839  1C3B                     u3215:	
  4840  1C3B  1C03               	skipc
  4841  1C3C  2C44               	goto	l2372
  4842  1C3D  0877               	movf	___awdiv@divisor,w
  4843  1C3E  02F9               	subwf	___awdiv@dividend,f
  4844  1C3F  0878               	movf	___awdiv@divisor+1,w
  4845  1C40  1C03               	skipc
  4846  1C41  03FA               	decf	___awdiv@dividend+1,f
  4847  1C42  02FA               	subwf	___awdiv@dividend+1,f
  4848  1C43  1422               	bsf	___awdiv@quotient,0
  4849  1C44                     l2372:	
  4850  1C44  3001               	movlw	1
  4851  1C45                     u3225:	
  4852  1C45  1003               	clrc
  4853  1C46  0CF8               	rrf	___awdiv@divisor+1,f
  4854  1C47  0CF7               	rrf	___awdiv@divisor,f
  4855  1C48  3EFF               	addlw	-1
  4856  1C49  1D03               	skipz
  4857  1C4A  2C45               	goto	u3225
  4858  1C4B  3001               	movlw	1
  4859  1C4C  02A0               	subwf	___awdiv@counter,f
  4860  1C4D  1D03               	btfss	3,2
  4861  1C4E  2C2E               	goto	l2366
  4862  1C4F                     l2376:	
  4863  1C4F  0821               	movf	___awdiv@sign,w
  4864  1C50  1903               	btfsc	3,2
  4865  1C51  2C57               	goto	l2380
  4866  1C52  09A2               	comf	___awdiv@quotient,f
  4867  1C53  09A3               	comf	___awdiv@quotient+1,f
  4868  1C54  0AA2               	incf	___awdiv@quotient,f
  4869  1C55  1903               	skipnz
  4870  1C56  0AA3               	incf	___awdiv@quotient+1,f
  4871  1C57                     l2380:	
  4872  1C57  0823               	movf	___awdiv@quotient+1,w
  4873  1C58  00F8               	movwf	?___awdiv+1
  4874  1C59  0822               	movf	___awdiv@quotient,w
  4875  1C5A  00F7               	movwf	?___awdiv
  4876  1C5B  0008               	return
  4877  1C5C                     __end_of___awdiv:	
  4878                           
  4879                           	psect	text5
  4880  18F7                     __ptext5:	
  4881 ;; *************** function _isdigit *****************
  4882 ;; Defined at:
  4883 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  c               1    wreg     unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  c               1    1[COMMON] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;		None               void
  4890 ;; Registers used:
  4891 ;;		wreg, status,2, status,0
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4897 ;;      Params:         0       0       0       0       0
  4898 ;;      Locals:         2       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0
  4900 ;;      Totals:         2       0       0       0       0
  4901 ;;Total ram usage:        2 bytes
  4902 ;; Hardware stack levels used:    1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_sprintf
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           
  4911                           ;psect for function _isdigit
  4912  18F7                     _isdigit:	
  4913                           
  4914                           ;incstack = 0
  4915                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4916                           ;isdigit@c stored from wreg
  4917  18F7  00F1               	movwf	isdigit@c
  4918  18F8  01F0               	clrf	_isdigit$613
  4919  18F9  303A               	movlw	58
  4920  18FA  0271               	subwf	isdigit@c,w
  4921  18FB  1803               	skipnc
  4922  18FC  2903               	goto	l2912
  4923  18FD  3030               	movlw	48
  4924  18FE  0271               	subwf	isdigit@c,w
  4925  18FF  1C03               	skipc
  4926  1900  2903               	goto	l2912
  4927  1901  01F0               	clrf	_isdigit$613
  4928  1902  0AF0               	incf	_isdigit$613,f
  4929  1903                     l2912:	
  4930  1903  0C70               	rrf	_isdigit$613,w
  4931  1904  0008               	return
  4932  1905                     __end_of_isdigit:	
  4933                           
  4934                           	psect	text6
  4935  0004                     __ptext6:	
  4936 ;; *************** function _fround *****************
  4937 ;; Defined at:
  4938 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  prec            1    wreg     unsigned char 
  4941 ;; Auto vars:     Size  Location     Type
  4942 ;;  prec            1   49[BANK0 ] unsigned char 
  4943 ;; Return value:  Size  Location     Type
  4944 ;;                  4   30[BANK0 ] unsigned char 
  4945 ;; Registers used:
  4946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4947 ;; Tracked objects:
  4948 ;;		On entry : 0/0
  4949 ;;		On exit  : 0/0
  4950 ;;		Unchanged: 0/0
  4951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4952 ;;      Params:         0       4       0       0       0
  4953 ;;      Locals:         0       9       0       0       0
  4954 ;;      Temps:          0       7       0       0       0
  4955 ;;      Totals:         0      20       0       0       0
  4956 ;;Total ram usage:       20 bytes
  4957 ;; Hardware stack levels used:    1
  4958 ;; Hardware stack levels required when called:    2
  4959 ;; This function calls:
  4960 ;;		___flmul
  4961 ;;		___lwdiv
  4962 ;;		___lwmod
  4963 ;; This function is called by:
  4964 ;;		_sprintf
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           
  4969                           ;psect for function _fround
  4970  0004                     _fround:	
  4971                           
  4972                           ;incstack = 0
  4973                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4974                           ;fround@prec stored from wreg
  4975  0004  1283               	bcf	3,5	;RP0=0, select bank0
  4976  0005  1303               	bcf	3,6	;RP1=0, select bank0
  4977  0006  00D1               	movwf	fround@prec
  4978                           
  4979                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  4980  0007  306E               	movlw	110
  4981  0008  0251               	subwf	fround@prec,w
  4982  0009  1C03               	skipc
  4983  000A  2916               	goto	l2854
  4984                           
  4985                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4986  000B  303F               	movlw	63
  4987  000C  00A7               	movwf	___flmul@b+3
  4988  000D  3000               	movlw	0
  4989  000E  00A6               	movwf	___flmul@b+2
  4990  000F  3000               	movlw	0
  4991  0010  00A5               	movwf	___flmul@b+1
  4992  0011  3000               	movlw	0
  4993  0012  00A4               	movwf	___flmul@b
  4994  0013  3064               	movlw	100
  4995  0014  00F6               	movwf	___lwdiv@divisor
  4996  0015  3000               	movlw	0
  4997  0016  00F7               	movwf	___lwdiv@divisor+1
  4998  0017  0851               	movf	fround@prec,w
  4999  0018  00C2               	movwf	??_fround
  5000  0019  01C3               	clrf	??_fround+1
  5001  001A  0842               	movf	??_fround,w
  5002  001B  00F8               	movwf	___lwdiv@dividend
  5003  001C  0843               	movf	??_fround+1,w
  5004  001D  00F9               	movwf	___lwdiv@dividend+1
  5005  001E  160A  158A  21FA  120A  118A  	fcall	___lwdiv
  5006  0023  0876               	movf	?___lwdiv,w
  5007  0024  1283               	bcf	3,5	;RP0=0, select bank0
  5008  0025  1303               	bcf	3,6	;RP1=0, select bank0
  5009  0026  00C4               	movwf	??_fround+2
  5010  0027  3001               	movlw	1
  5011  0028                     u4345:	
  5012  0028  1003               	clrc
  5013  0029  0DC4               	rlf	??_fround+2,f
  5014  002A  3EFF               	addlw	-1
  5015  002B  1D03               	skipz
  5016  002C  2828               	goto	u4345
  5017  002D  1003               	clrc
  5018  002E  0D44               	rlf	??_fround+2,w
  5019  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5020  0030  0084               	movwf	4
  5021  0031  120A  158A  200A  120A  118A  	fcall	stringdir
  5022  0036  00C5               	movwf	??_fround+3
  5023  0037  120A  158A  200A  120A  118A  	fcall	stringdir
  5024  003C  00C6               	movwf	??_fround+4
  5025  003D  120A  158A  200A  120A  118A  	fcall	stringdir
  5026  0042  00C7               	movwf	??_fround+5
  5027  0043  120A  158A  200A  120A  118A  	fcall	stringdir
  5028  0048  00C8               	movwf	??_fround+6
  5029  0049  0848               	movf	??_fround+6,w
  5030  004A  00AB               	movwf	___flmul@a+3
  5031  004B  0847               	movf	??_fround+5,w
  5032  004C  00AA               	movwf	___flmul@a+2
  5033  004D  0846               	movf	??_fround+4,w
  5034  004E  00A9               	movwf	___flmul@a+1
  5035  004F  0845               	movf	??_fround+3,w
  5036  0050  00A8               	movwf	___flmul@a
  5037  0051  160A  118A  21A2  120A  118A  	fcall	___flmul
  5038  0056  1283               	bcf	3,5	;RP0=0, select bank0
  5039  0057  1303               	bcf	3,6	;RP1=0, select bank0
  5040  0058  0827               	movf	?___flmul+3,w
  5041  0059  00D0               	movwf	_fround$803+3
  5042  005A  0826               	movf	?___flmul+2,w
  5043  005B  00CF               	movwf	_fround$803+2
  5044  005C  0825               	movf	?___flmul+1,w
  5045  005D  00CE               	movwf	_fround$803+1
  5046  005E  0824               	movf	?___flmul,w
  5047  005F  00CD               	movwf	_fround$803
  5048                           
  5049                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5050  0060  300A               	movlw	10
  5051  0061  00F6               	movwf	___lwdiv@divisor
  5052  0062  3000               	movlw	0
  5053  0063  00F7               	movwf	___lwdiv@divisor+1
  5054  0064  0851               	movf	fround@prec,w
  5055  0065  00C2               	movwf	??_fround
  5056  0066  01C3               	clrf	??_fround+1
  5057  0067  0842               	movf	??_fround,w
  5058  0068  00F2               	movwf	___lwmod@dividend
  5059  0069  0843               	movf	??_fround+1,w
  5060  006A  00F3               	movwf	___lwmod@dividend+1
  5061  006B  3064               	movlw	100
  5062  006C  00F0               	movwf	___lwmod@divisor
  5063  006D  3000               	movlw	0
  5064  006E  00F1               	movwf	___lwmod@divisor+1
  5065  006F  160A  158A  21C8  120A  118A  	fcall	___lwmod
  5066  0074  0871               	movf	?___lwmod+1,w
  5067  0075  00F9               	movwf	___lwdiv@dividend+1
  5068  0076  0870               	movf	?___lwmod,w
  5069  0077  00F8               	movwf	___lwdiv@dividend
  5070  0078  160A  158A  21FA  120A  118A  	fcall	___lwdiv
  5071  007D  0876               	movf	?___lwdiv,w
  5072  007E  1283               	bcf	3,5	;RP0=0, select bank0
  5073  007F  1303               	bcf	3,6	;RP1=0, select bank0
  5074  0080  00C4               	movwf	??_fround+2
  5075  0081  3001               	movlw	1
  5076  0082                     u4355:	
  5077  0082  1003               	clrc
  5078  0083  0DC4               	rlf	??_fround+2,f
  5079  0084  3EFF               	addlw	-1
  5080  0085  1D03               	skipz
  5081  0086  2882               	goto	u4355
  5082  0087  1003               	clrc
  5083  0088  0D44               	rlf	??_fround+2,w
  5084  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5085  008A  0084               	movwf	4
  5086  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  5087  0090  00C5               	movwf	??_fround+3
  5088  0091  120A  158A  200A  120A  118A  	fcall	stringdir
  5089  0096  00C6               	movwf	??_fround+4
  5090  0097  120A  158A  200A  120A  118A  	fcall	stringdir
  5091  009C  00C7               	movwf	??_fround+5
  5092  009D  120A  158A  200A  120A  118A  	fcall	stringdir
  5093  00A2  00C8               	movwf	??_fround+6
  5094  00A3  0848               	movf	??_fround+6,w
  5095  00A4  00A7               	movwf	___flmul@b+3
  5096  00A5  0847               	movf	??_fround+5,w
  5097  00A6  00A6               	movwf	___flmul@b+2
  5098  00A7  0846               	movf	??_fround+4,w
  5099  00A8  00A5               	movwf	___flmul@b+1
  5100  00A9  0845               	movf	??_fround+3,w
  5101  00AA  00A4               	movwf	___flmul@b
  5102  00AB  0850               	movf	_fround$803+3,w
  5103  00AC  00AB               	movwf	___flmul@a+3
  5104  00AD  084F               	movf	_fround$803+2,w
  5105  00AE  00AA               	movwf	___flmul@a+2
  5106  00AF  084E               	movf	_fround$803+1,w
  5107  00B0  00A9               	movwf	___flmul@a+1
  5108  00B1  084D               	movf	_fround$803,w
  5109  00B2  00A8               	movwf	___flmul@a
  5110  00B3  160A  118A  21A2  120A  118A  	fcall	___flmul
  5111  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  5112  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  5113  00BA  0827               	movf	?___flmul+3,w
  5114  00BB  00CC               	movwf	_fround$804+3
  5115  00BC  0826               	movf	?___flmul+2,w
  5116  00BD  00CB               	movwf	_fround$804+2
  5117  00BE  0825               	movf	?___flmul+1,w
  5118  00BF  00CA               	movwf	_fround$804+1
  5119  00C0  0824               	movf	?___flmul,w
  5120  00C1  00C9               	movwf	_fround$804
  5121                           
  5122                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5123  00C2  300A               	movlw	10
  5124  00C3  00F0               	movwf	___lwmod@divisor
  5125  00C4  3000               	movlw	0
  5126  00C5  00F1               	movwf	___lwmod@divisor+1
  5127  00C6  0851               	movf	fround@prec,w
  5128  00C7  00C2               	movwf	??_fround
  5129  00C8  01C3               	clrf	??_fround+1
  5130  00C9  0842               	movf	??_fround,w
  5131  00CA  00F2               	movwf	___lwmod@dividend
  5132  00CB  0843               	movf	??_fround+1,w
  5133  00CC  00F3               	movwf	___lwmod@dividend+1
  5134  00CD  160A  158A  21C8  120A  118A  	fcall	___lwmod
  5135  00D2  0870               	movf	?___lwmod,w
  5136  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  5137  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  5138  00D5  00C4               	movwf	??_fround+2
  5139  00D6  3001               	movlw	1
  5140  00D7                     u4365:	
  5141  00D7  1003               	clrc
  5142  00D8  0DC4               	rlf	??_fround+2,f
  5143  00D9  3EFF               	addlw	-1
  5144  00DA  1D03               	skipz
  5145  00DB  28D7               	goto	u4365
  5146  00DC  1003               	clrc
  5147  00DD  0D44               	rlf	??_fround+2,w
  5148  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5149  00DF  0084               	movwf	4
  5150  00E0  120A  158A  200A  120A  118A  	fcall	stringdir
  5151  00E5  00C5               	movwf	??_fround+3
  5152  00E6  120A  158A  200A  120A  118A  	fcall	stringdir
  5153  00EB  00C6               	movwf	??_fround+4
  5154  00EC  120A  158A  200A  120A  118A  	fcall	stringdir
  5155  00F1  00C7               	movwf	??_fround+5
  5156  00F2  120A  158A  200A  120A  118A  	fcall	stringdir
  5157  00F7  00C8               	movwf	??_fround+6
  5158  00F8  0848               	movf	??_fround+6,w
  5159  00F9  00A7               	movwf	___flmul@b+3
  5160  00FA  0847               	movf	??_fround+5,w
  5161  00FB  00A6               	movwf	___flmul@b+2
  5162  00FC  0846               	movf	??_fround+4,w
  5163  00FD  00A5               	movwf	___flmul@b+1
  5164  00FE  0845               	movf	??_fround+3,w
  5165  00FF  00A4               	movwf	___flmul@b
  5166  0100  084C               	movf	_fround$804+3,w
  5167  0101  00AB               	movwf	___flmul@a+3
  5168  0102  084B               	movf	_fround$804+2,w
  5169  0103  00AA               	movwf	___flmul@a+2
  5170  0104  084A               	movf	_fround$804+1,w
  5171  0105  00A9               	movwf	___flmul@a+1
  5172  0106  0849               	movf	_fround$804,w
  5173  0107  00A8               	movwf	___flmul@a
  5174  0108  160A  118A  21A2   	fcall	___flmul
  5175  010B  1283               	bcf	3,5	;RP0=0, select bank0
  5176  010C  1303               	bcf	3,6	;RP1=0, select bank0
  5177  010D  0827               	movf	?___flmul+3,w
  5178  010E  00C1               	movwf	?_fround+3
  5179  010F  0826               	movf	?___flmul+2,w
  5180  0110  00C0               	movwf	?_fround+2
  5181  0111  0825               	movf	?___flmul+1,w
  5182  0112  00BF               	movwf	?_fround+1
  5183  0113  0824               	movf	?___flmul,w
  5184  0114  00BE               	movwf	?_fround
  5185  0115  0008               	return
  5186  0116                     l2854:	
  5187  0116  300B               	movlw	11
  5188  0117  0251               	subwf	fround@prec,w
  5189  0118  1C03               	skipc
  5190  0119  29C3               	goto	l2860
  5191                           
  5192                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5193  011A  303F               	movlw	63
  5194  011B  00A7               	movwf	___flmul@b+3
  5195  011C  3000               	movlw	0
  5196  011D  00A6               	movwf	___flmul@b+2
  5197  011E  3000               	movlw	0
  5198  011F  00A5               	movwf	___flmul@b+1
  5199  0120  3000               	movlw	0
  5200  0121  00A4               	movwf	___flmul@b
  5201  0122  300A               	movlw	10
  5202  0123  00F6               	movwf	___lwdiv@divisor
  5203  0124  3000               	movlw	0
  5204  0125  00F7               	movwf	___lwdiv@divisor+1
  5205  0126  0851               	movf	fround@prec,w
  5206  0127  00C2               	movwf	??_fround
  5207  0128  01C3               	clrf	??_fround+1
  5208  0129  0842               	movf	??_fround,w
  5209  012A  00F8               	movwf	___lwdiv@dividend
  5210  012B  0843               	movf	??_fround+1,w
  5211  012C  00F9               	movwf	___lwdiv@dividend+1
  5212  012D  160A  158A  21FA  120A  118A  	fcall	___lwdiv
  5213  0132  0876               	movf	?___lwdiv,w
  5214  0133  1283               	bcf	3,5	;RP0=0, select bank0
  5215  0134  1303               	bcf	3,6	;RP1=0, select bank0
  5216  0135  00C4               	movwf	??_fround+2
  5217  0136  3001               	movlw	1
  5218  0137                     u4385:	
  5219  0137  1003               	clrc
  5220  0138  0DC4               	rlf	??_fround+2,f
  5221  0139  3EFF               	addlw	-1
  5222  013A  1D03               	skipz
  5223  013B  2937               	goto	u4385
  5224  013C  1003               	clrc
  5225  013D  0D44               	rlf	??_fround+2,w
  5226  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5227  013F  0084               	movwf	4
  5228  0140  120A  158A  200A  120A  118A  	fcall	stringdir
  5229  0145  00C5               	movwf	??_fround+3
  5230  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  5231  014B  00C6               	movwf	??_fround+4
  5232  014C  120A  158A  200A  120A  118A  	fcall	stringdir
  5233  0151  00C7               	movwf	??_fround+5
  5234  0152  120A  158A  200A  120A  118A  	fcall	stringdir
  5235  0157  00C8               	movwf	??_fround+6
  5236  0158  0848               	movf	??_fround+6,w
  5237  0159  00AB               	movwf	___flmul@a+3
  5238  015A  0847               	movf	??_fround+5,w
  5239  015B  00AA               	movwf	___flmul@a+2
  5240  015C  0846               	movf	??_fround+4,w
  5241  015D  00A9               	movwf	___flmul@a+1
  5242  015E  0845               	movf	??_fround+3,w
  5243  015F  00A8               	movwf	___flmul@a
  5244  0160  160A  118A  21A2  120A  118A  	fcall	___flmul
  5245  0165  1283               	bcf	3,5	;RP0=0, select bank0
  5246  0166  1303               	bcf	3,6	;RP1=0, select bank0
  5247  0167  0827               	movf	?___flmul+3,w
  5248  0168  00D0               	movwf	_fround$803+3
  5249  0169  0826               	movf	?___flmul+2,w
  5250  016A  00CF               	movwf	_fround$803+2
  5251  016B  0825               	movf	?___flmul+1,w
  5252  016C  00CE               	movwf	_fround$803+1
  5253  016D  0824               	movf	?___flmul,w
  5254  016E  00CD               	movwf	_fround$803
  5255                           
  5256                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5257  016F  300A               	movlw	10
  5258  0170  00F0               	movwf	___lwmod@divisor
  5259  0171  3000               	movlw	0
  5260  0172  00F1               	movwf	___lwmod@divisor+1
  5261  0173  0851               	movf	fround@prec,w
  5262  0174  00C2               	movwf	??_fround
  5263  0175  01C3               	clrf	??_fround+1
  5264  0176  0842               	movf	??_fround,w
  5265  0177  00F2               	movwf	___lwmod@dividend
  5266  0178  0843               	movf	??_fround+1,w
  5267  0179  00F3               	movwf	___lwmod@dividend+1
  5268  017A  160A  158A  21C8  120A  118A  	fcall	___lwmod
  5269  017F  0870               	movf	?___lwmod,w
  5270  0180  1283               	bcf	3,5	;RP0=0, select bank0
  5271  0181  1303               	bcf	3,6	;RP1=0, select bank0
  5272  0182  00C4               	movwf	??_fround+2
  5273  0183  3001               	movlw	1
  5274  0184                     u4395:	
  5275  0184  1003               	clrc
  5276  0185  0DC4               	rlf	??_fround+2,f
  5277  0186  3EFF               	addlw	-1
  5278  0187  1D03               	skipz
  5279  0188  2984               	goto	u4395
  5280  0189  1003               	clrc
  5281  018A  0D44               	rlf	??_fround+2,w
  5282  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5283  018C  0084               	movwf	4
  5284  018D  120A  158A  200A  120A  118A  	fcall	stringdir
  5285  0192  00C5               	movwf	??_fround+3
  5286  0193  120A  158A  200A  120A  118A  	fcall	stringdir
  5287  0198  00C6               	movwf	??_fround+4
  5288  0199  120A  158A  200A  120A  118A  	fcall	stringdir
  5289  019E  00C7               	movwf	??_fround+5
  5290  019F  120A  158A  200A  120A  118A  	fcall	stringdir
  5291  01A4  00C8               	movwf	??_fround+6
  5292  01A5  0848               	movf	??_fround+6,w
  5293  01A6  00A7               	movwf	___flmul@b+3
  5294  01A7  0847               	movf	??_fround+5,w
  5295  01A8  00A6               	movwf	___flmul@b+2
  5296  01A9  0846               	movf	??_fround+4,w
  5297  01AA  00A5               	movwf	___flmul@b+1
  5298  01AB  0845               	movf	??_fround+3,w
  5299  01AC  00A4               	movwf	___flmul@b
  5300  01AD  0850               	movf	_fround$803+3,w
  5301  01AE  00AB               	movwf	___flmul@a+3
  5302  01AF  084F               	movf	_fround$803+2,w
  5303  01B0  00AA               	movwf	___flmul@a+2
  5304  01B1  084E               	movf	_fround$803+1,w
  5305  01B2  00A9               	movwf	___flmul@a+1
  5306  01B3  084D               	movf	_fround$803,w
  5307  01B4  00A8               	movwf	___flmul@a
  5308  01B5  160A  118A  21A2   	fcall	___flmul
  5309  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  5310  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  5311  01BA  0827               	movf	?___flmul+3,w
  5312  01BB  00C1               	movwf	?_fround+3
  5313  01BC  0826               	movf	?___flmul+2,w
  5314  01BD  00C0               	movwf	?_fround+2
  5315  01BE  0825               	movf	?___flmul+1,w
  5316  01BF  00BF               	movwf	?_fround+1
  5317  01C0  0824               	movf	?___flmul,w
  5318  01C1  00BE               	movwf	?_fround
  5319  01C2  0008               	return
  5320  01C3                     l2860:	
  5321                           
  5322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  5323  01C3  303F               	movlw	63
  5324  01C4  00A7               	movwf	___flmul@b+3
  5325  01C5  3000               	movlw	0
  5326  01C6  00A6               	movwf	___flmul@b+2
  5327  01C7  3000               	movlw	0
  5328  01C8  00A5               	movwf	___flmul@b+1
  5329  01C9  3000               	movlw	0
  5330  01CA  00A4               	movwf	___flmul@b
  5331  01CB  0851               	movf	fround@prec,w
  5332  01CC  00C2               	movwf	??_fround
  5333  01CD  3001               	movlw	1
  5334  01CE                     u4405:	
  5335  01CE  1003               	clrc
  5336  01CF  0DC2               	rlf	??_fround,f
  5337  01D0  3EFF               	addlw	-1
  5338  01D1  1D03               	skipz
  5339  01D2  29CE               	goto	u4405
  5340  01D3  1003               	clrc
  5341  01D4  0D42               	rlf	??_fround,w
  5342  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5343  01D6  0084               	movwf	4
  5344  01D7  120A  158A  200A  120A  118A  	fcall	stringdir
  5345  01DC  00C3               	movwf	??_fround+1
  5346  01DD  120A  158A  200A  120A  118A  	fcall	stringdir
  5347  01E2  00C4               	movwf	??_fround+2
  5348  01E3  120A  158A  200A  120A  118A  	fcall	stringdir
  5349  01E8  00C5               	movwf	??_fround+3
  5350  01E9  120A  158A  200A  120A  118A  	fcall	stringdir
  5351  01EE  00C6               	movwf	??_fround+4
  5352  01EF  0846               	movf	??_fround+4,w
  5353  01F0  00AB               	movwf	___flmul@a+3
  5354  01F1  0845               	movf	??_fround+3,w
  5355  01F2  00AA               	movwf	___flmul@a+2
  5356  01F3  0844               	movf	??_fround+2,w
  5357  01F4  00A9               	movwf	___flmul@a+1
  5358  01F5  0843               	movf	??_fround+1,w
  5359  01F6  00A8               	movwf	___flmul@a
  5360  01F7  160A  118A  21A2   	fcall	___flmul
  5361  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  5362  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  5363  01FC  0827               	movf	?___flmul+3,w
  5364  01FD  00C1               	movwf	?_fround+3
  5365  01FE  0826               	movf	?___flmul+2,w
  5366  01FF  00C0               	movwf	?_fround+2
  5367  0200  0825               	movf	?___flmul+1,w
  5368  0201  00BF               	movwf	?_fround+1
  5369  0202  0824               	movf	?___flmul,w
  5370  0203  00BE               	movwf	?_fround
  5371  0204  0008               	return
  5372  0205                     __end_of_fround:	
  5373                           
  5374                           	psect	text7
  5375  19C8                     __ptext7:	
  5376 ;; *************** function ___lwmod *****************
  5377 ;; Defined at:
  5378 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  divisor         2    0[COMMON] unsigned int 
  5381 ;;  dividend        2    2[COMMON] unsigned int 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  counter         1    5[COMMON] unsigned char 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  2    0[COMMON] unsigned int 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5393 ;;      Params:         4       0       0       0       0
  5394 ;;      Locals:         1       0       0       0       0
  5395 ;;      Temps:          1       0       0       0       0
  5396 ;;      Totals:         6       0       0       0       0
  5397 ;;Total ram usage:        6 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_fround
  5403 ;; This function uses a non-reentrant model
  5404 ;;
  5405                           
  5406                           
  5407                           ;psect for function ___lwmod
  5408  19C8                     ___lwmod:	
  5409                           
  5410                           ;incstack = 0
  5411                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5412  19C8  0870               	movf	___lwmod@divisor,w
  5413  19C9  0471               	iorwf	___lwmod@divisor+1,w
  5414  19CA  1903               	btfsc	3,2
  5415  19CB  29F5               	goto	l2466
  5416  19CC  01F5               	clrf	___lwmod@counter
  5417  19CD  0AF5               	incf	___lwmod@counter,f
  5418  19CE                     l2456:	
  5419  19CE  1BF1               	btfsc	___lwmod@divisor+1,7
  5420  19CF  29DC               	goto	l2458
  5421  19D0  3001               	movlw	1
  5422  19D1                     u3425:	
  5423  19D1  1003               	clrc
  5424  19D2  0DF0               	rlf	___lwmod@divisor,f
  5425  19D3  0DF1               	rlf	___lwmod@divisor+1,f
  5426  19D4  3EFF               	addlw	-1
  5427  19D5  1D03               	skipz
  5428  19D6  29D1               	goto	u3425
  5429  19D7  3001               	movlw	1
  5430  19D8  00F4               	movwf	??___lwmod
  5431  19D9  0874               	movf	??___lwmod,w
  5432  19DA  07F5               	addwf	___lwmod@counter,f
  5433  19DB  29CE               	goto	l2456
  5434  19DC                     l2458:	
  5435  19DC  0871               	movf	___lwmod@divisor+1,w
  5436  19DD  0273               	subwf	___lwmod@dividend+1,w
  5437  19DE  1D03               	skipz
  5438  19DF  29E2               	goto	u3445
  5439  19E0  0870               	movf	___lwmod@divisor,w
  5440  19E1  0272               	subwf	___lwmod@dividend,w
  5441  19E2                     u3445:	
  5442  19E2  1C03               	skipc
  5443  19E3  29EA               	goto	l2462
  5444  19E4  0870               	movf	___lwmod@divisor,w
  5445  19E5  02F2               	subwf	___lwmod@dividend,f
  5446  19E6  0871               	movf	___lwmod@divisor+1,w
  5447  19E7  1C03               	skipc
  5448  19E8  03F3               	decf	___lwmod@dividend+1,f
  5449  19E9  02F3               	subwf	___lwmod@dividend+1,f
  5450  19EA                     l2462:	
  5451  19EA  3001               	movlw	1
  5452  19EB                     u3455:	
  5453  19EB  1003               	clrc
  5454  19EC  0CF1               	rrf	___lwmod@divisor+1,f
  5455  19ED  0CF0               	rrf	___lwmod@divisor,f
  5456  19EE  3EFF               	addlw	-1
  5457  19EF  1D03               	skipz
  5458  19F0  29EB               	goto	u3455
  5459  19F1  3001               	movlw	1
  5460  19F2  02F5               	subwf	___lwmod@counter,f
  5461  19F3  1D03               	btfss	3,2
  5462  19F4  29DC               	goto	l2458
  5463  19F5                     l2466:	
  5464  19F5  0873               	movf	___lwmod@dividend+1,w
  5465  19F6  00F1               	movwf	?___lwmod+1
  5466  19F7  0872               	movf	___lwmod@dividend,w
  5467  19F8  00F0               	movwf	?___lwmod
  5468  19F9  0008               	return
  5469  19FA                     __end_of___lwmod:	
  5470                           
  5471                           	psect	text8
  5472  19FA                     __ptext8:	
  5473 ;; *************** function ___lwdiv *****************
  5474 ;; Defined at:
  5475 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  divisor         2    6[COMMON] unsigned int 
  5478 ;;  dividend        2    8[COMMON] unsigned int 
  5479 ;; Auto vars:     Size  Location     Type
  5480 ;;  quotient        2   11[COMMON] unsigned int 
  5481 ;;  counter         1   13[COMMON] unsigned char 
  5482 ;; Return value:  Size  Location     Type
  5483 ;;                  2    6[COMMON] unsigned int 
  5484 ;; Registers used:
  5485 ;;		wreg, status,2, status,0
  5486 ;; Tracked objects:
  5487 ;;		On entry : 0/0
  5488 ;;		On exit  : 0/0
  5489 ;;		Unchanged: 0/0
  5490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5491 ;;      Params:         4       0       0       0       0
  5492 ;;      Locals:         3       0       0       0       0
  5493 ;;      Temps:          1       0       0       0       0
  5494 ;;      Totals:         8       0       0       0       0
  5495 ;;Total ram usage:        8 bytes
  5496 ;; Hardware stack levels used:    1
  5497 ;; This function calls:
  5498 ;;		Nothing
  5499 ;; This function is called by:
  5500 ;;		_fround
  5501 ;; This function uses a non-reentrant model
  5502 ;;
  5503                           
  5504                           
  5505                           ;psect for function ___lwdiv
  5506  19FA                     ___lwdiv:	
  5507                           
  5508                           ;incstack = 0
  5509                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5510  19FA  01FB               	clrf	___lwdiv@quotient
  5511  19FB  01FC               	clrf	___lwdiv@quotient+1
  5512  19FC  0876               	movf	___lwdiv@divisor,w
  5513  19FD  0477               	iorwf	___lwdiv@divisor+1,w
  5514  19FE  1903               	btfsc	3,2
  5515  19FF  2A31               	goto	l2444
  5516  1A00  01FD               	clrf	___lwdiv@counter
  5517  1A01  0AFD               	incf	___lwdiv@counter,f
  5518  1A02                     l2432:	
  5519  1A02  1BF7               	btfsc	___lwdiv@divisor+1,7
  5520  1A03  2A10               	goto	l2434
  5521  1A04  3001               	movlw	1
  5522  1A05                     u3355:	
  5523  1A05  1003               	clrc
  5524  1A06  0DF6               	rlf	___lwdiv@divisor,f
  5525  1A07  0DF7               	rlf	___lwdiv@divisor+1,f
  5526  1A08  3EFF               	addlw	-1
  5527  1A09  1D03               	skipz
  5528  1A0A  2A05               	goto	u3355
  5529  1A0B  3001               	movlw	1
  5530  1A0C  00FA               	movwf	??___lwdiv
  5531  1A0D  087A               	movf	??___lwdiv,w
  5532  1A0E  07FD               	addwf	___lwdiv@counter,f
  5533  1A0F  2A02               	goto	l2432
  5534  1A10                     l2434:	
  5535  1A10  3001               	movlw	1
  5536  1A11                     u3375:	
  5537  1A11  1003               	clrc
  5538  1A12  0DFB               	rlf	___lwdiv@quotient,f
  5539  1A13  0DFC               	rlf	___lwdiv@quotient+1,f
  5540  1A14  3EFF               	addlw	-1
  5541  1A15  1D03               	skipz
  5542  1A16  2A11               	goto	u3375
  5543  1A17  0877               	movf	___lwdiv@divisor+1,w
  5544  1A18  0279               	subwf	___lwdiv@dividend+1,w
  5545  1A19  1D03               	skipz
  5546  1A1A  2A1D               	goto	u3385
  5547  1A1B  0876               	movf	___lwdiv@divisor,w
  5548  1A1C  0278               	subwf	___lwdiv@dividend,w
  5549  1A1D                     u3385:	
  5550  1A1D  1C03               	skipc
  5551  1A1E  2A26               	goto	l2440
  5552  1A1F  0876               	movf	___lwdiv@divisor,w
  5553  1A20  02F8               	subwf	___lwdiv@dividend,f
  5554  1A21  0877               	movf	___lwdiv@divisor+1,w
  5555  1A22  1C03               	skipc
  5556  1A23  03F9               	decf	___lwdiv@dividend+1,f
  5557  1A24  02F9               	subwf	___lwdiv@dividend+1,f
  5558  1A25  147B               	bsf	___lwdiv@quotient,0
  5559  1A26                     l2440:	
  5560  1A26  3001               	movlw	1
  5561  1A27                     u3395:	
  5562  1A27  1003               	clrc
  5563  1A28  0CF7               	rrf	___lwdiv@divisor+1,f
  5564  1A29  0CF6               	rrf	___lwdiv@divisor,f
  5565  1A2A  3EFF               	addlw	-1
  5566  1A2B  1D03               	skipz
  5567  1A2C  2A27               	goto	u3395
  5568  1A2D  3001               	movlw	1
  5569  1A2E  02FD               	subwf	___lwdiv@counter,f
  5570  1A2F  1D03               	btfss	3,2
  5571  1A30  2A10               	goto	l2434
  5572  1A31                     l2444:	
  5573  1A31  087C               	movf	___lwdiv@quotient+1,w
  5574  1A32  00F7               	movwf	?___lwdiv+1
  5575  1A33  087B               	movf	___lwdiv@quotient,w
  5576  1A34  00F6               	movwf	?___lwdiv
  5577  1A35  0008               	return
  5578  1A36                     __end_of___lwdiv:	
  5579                           
  5580                           	psect	text9
  5581  11A2                     __ptext9:	
  5582 ;; *************** function ___flmul *****************
  5583 ;; Defined at:
  5584 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;  b               4    4[BANK0 ] unsigned int 
  5587 ;;  a               4    8[BANK0 ] unsigned int 
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;  prod            4   24[BANK0 ] struct .
  5590 ;;  grs             4   18[BANK0 ] unsigned long 
  5591 ;;  temp            2   28[BANK0 ] struct .
  5592 ;;  bexp            1   23[BANK0 ] unsigned char 
  5593 ;;  aexp            1   22[BANK0 ] unsigned char 
  5594 ;;  sign            1   17[BANK0 ] unsigned char 
  5595 ;; Return value:  Size  Location     Type
  5596 ;;                  4    4[BANK0 ] unsigned char 
  5597 ;; Registers used:
  5598 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5599 ;; Tracked objects:
  5600 ;;		On entry : 0/0
  5601 ;;		On exit  : 0/0
  5602 ;;		Unchanged: 0/0
  5603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5604 ;;      Params:         0       8       0       0       0
  5605 ;;      Locals:         0      13       0       0       0
  5606 ;;      Temps:          0       5       0       0       0
  5607 ;;      Totals:         0      26       0       0       0
  5608 ;;Total ram usage:       26 bytes
  5609 ;; Hardware stack levels used:    1
  5610 ;; Hardware stack levels required when called:    1
  5611 ;; This function calls:
  5612 ;;		__Umul8_16
  5613 ;; This function is called by:
  5614 ;;		_main
  5615 ;;		_fround
  5616 ;;		_scale
  5617 ;;		_sprintf
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function ___flmul
  5623  11A2                     ___flmul:	
  5624                           
  5625                           ;incstack = 0
  5626                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5627  11A2  1283               	bcf	3,5	;RP0=0, select bank0
  5628  11A3  1303               	bcf	3,6	;RP1=0, select bank0
  5629  11A4  0827               	movf	___flmul@b+3,w
  5630  11A5  3980               	andlw	128
  5631  11A6  00AC               	movwf	??___flmul
  5632  11A7  082C               	movf	??___flmul,w
  5633  11A8  00B1               	movwf	___flmul@sign
  5634  11A9  0827               	movf	___flmul@b+3,w
  5635  11AA  00AC               	movwf	??___flmul
  5636  11AB  072C               	addwf	??___flmul,w
  5637  11AC  00AD               	movwf	??___flmul+1
  5638  11AD  082D               	movf	??___flmul+1,w
  5639  11AE  00B7               	movwf	___flmul@bexp
  5640  11AF  1BA6               	btfsc	___flmul@b+2,7
  5641  11B0  1437               	bsf	___flmul@bexp,0
  5642  11B1  0837               	movf	___flmul@bexp,w
  5643  11B2  1903               	btfsc	3,2
  5644  11B3  29C1               	goto	l2680
  5645  11B4  0A37               	incf	___flmul@bexp,w
  5646  11B5  1D03               	btfss	3,2
  5647  11B6  29BF               	goto	l2678
  5648  11B7  3000               	movlw	0
  5649  11B8  00A7               	movwf	___flmul@b+3
  5650  11B9  3000               	movlw	0
  5651  11BA  00A6               	movwf	___flmul@b+2
  5652  11BB  3000               	movlw	0
  5653  11BC  00A5               	movwf	___flmul@b+1
  5654  11BD  3000               	movlw	0
  5655  11BE  00A4               	movwf	___flmul@b
  5656  11BF                     l2678:	
  5657  11BF  17A6               	bsf	___flmul@b+2,7
  5658  11C0  29C9               	goto	l2682
  5659  11C1                     l2680:	
  5660  11C1  3000               	movlw	0
  5661  11C2  00A7               	movwf	___flmul@b+3
  5662  11C3  3000               	movlw	0
  5663  11C4  00A6               	movwf	___flmul@b+2
  5664  11C5  3000               	movlw	0
  5665  11C6  00A5               	movwf	___flmul@b+1
  5666  11C7  3000               	movlw	0
  5667  11C8  00A4               	movwf	___flmul@b
  5668  11C9                     l2682:	
  5669  11C9  082B               	movf	___flmul@a+3,w
  5670  11CA  3980               	andlw	128
  5671  11CB  00AC               	movwf	??___flmul
  5672  11CC  082C               	movf	??___flmul,w
  5673  11CD  06B1               	xorwf	___flmul@sign,f
  5674  11CE  082B               	movf	___flmul@a+3,w
  5675  11CF  00AC               	movwf	??___flmul
  5676  11D0  072C               	addwf	??___flmul,w
  5677  11D1  00AD               	movwf	??___flmul+1
  5678  11D2  082D               	movf	??___flmul+1,w
  5679  11D3  00B6               	movwf	___flmul@aexp
  5680  11D4  1BAA               	btfsc	___flmul@a+2,7
  5681  11D5  1436               	bsf	___flmul@aexp,0
  5682  11D6  0836               	movf	___flmul@aexp,w
  5683  11D7  1903               	btfsc	3,2
  5684  11D8  29E6               	goto	l2698
  5685  11D9  0A36               	incf	___flmul@aexp,w
  5686  11DA  1D03               	btfss	3,2
  5687  11DB  29E4               	goto	l2696
  5688  11DC  3000               	movlw	0
  5689  11DD  00AB               	movwf	___flmul@a+3
  5690  11DE  3000               	movlw	0
  5691  11DF  00AA               	movwf	___flmul@a+2
  5692  11E0  3000               	movlw	0
  5693  11E1  00A9               	movwf	___flmul@a+1
  5694  11E2  3000               	movlw	0
  5695  11E3  00A8               	movwf	___flmul@a
  5696  11E4                     l2696:	
  5697  11E4  17AA               	bsf	___flmul@a+2,7
  5698  11E5  29EE               	goto	l2700
  5699  11E6                     l2698:	
  5700  11E6  3000               	movlw	0
  5701  11E7  00AB               	movwf	___flmul@a+3
  5702  11E8  3000               	movlw	0
  5703  11E9  00AA               	movwf	___flmul@a+2
  5704  11EA  3000               	movlw	0
  5705  11EB  00A9               	movwf	___flmul@a+1
  5706  11EC  3000               	movlw	0
  5707  11ED  00A8               	movwf	___flmul@a
  5708  11EE                     l2700:	
  5709  11EE  0836               	movf	___flmul@aexp,w
  5710  11EF  1D03               	btfss	3,2
  5711  11F0  0837               	movf	___flmul@bexp,w
  5712  11F1  1D03               	btfss	3,2
  5713  11F2  29FC               	goto	l2708
  5714  11F3  3000               	movlw	0
  5715  11F4  00A7               	movwf	?___flmul+3
  5716  11F5  3000               	movlw	0
  5717  11F6  00A6               	movwf	?___flmul+2
  5718  11F7  3000               	movlw	0
  5719  11F8  00A5               	movwf	?___flmul+1
  5720  11F9  3000               	movlw	0
  5721  11FA  00A4               	movwf	?___flmul
  5722  11FB  0008               	return
  5723  11FC                     l2708:	
  5724  11FC  0824               	movf	___flmul@b,w
  5725  11FD  00AC               	movwf	??___flmul
  5726  11FE  082C               	movf	??___flmul,w
  5727  11FF  00F0               	movwf	__Umul8_16@multiplicand
  5728  1200  082A               	movf	___flmul@a+2,w
  5729  1201  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5730  1206  0871               	movf	?__Umul8_16+1,w
  5731  1207  1283               	bcf	3,5	;RP0=0, select bank0
  5732  1208  1303               	bcf	3,6	;RP1=0, select bank0
  5733  1209  00BD               	movwf	___flmul@temp+1
  5734  120A  0870               	movf	?__Umul8_16,w
  5735  120B  00BC               	movwf	___flmul@temp
  5736  120C  083C               	movf	___flmul@temp,w
  5737  120D  00AC               	movwf	??___flmul
  5738  120E  01AD               	clrf	??___flmul+1
  5739  120F  01AE               	clrf	??___flmul+2
  5740  1210  01AF               	clrf	??___flmul+3
  5741  1211  082F               	movf	??___flmul+3,w
  5742  1212  00B5               	movwf	___flmul@grs+3
  5743  1213  082E               	movf	??___flmul+2,w
  5744  1214  00B4               	movwf	___flmul@grs+2
  5745  1215  082D               	movf	??___flmul+1,w
  5746  1216  00B3               	movwf	___flmul@grs+1
  5747  1217  082C               	movf	??___flmul,w
  5748  1218  00B2               	movwf	___flmul@grs
  5749  1219  083D               	movf	___flmul@temp+1,w
  5750  121A  00AC               	movwf	??___flmul
  5751  121B  01AD               	clrf	??___flmul+1
  5752  121C  01AE               	clrf	??___flmul+2
  5753  121D  01AF               	clrf	??___flmul+3
  5754  121E  082F               	movf	??___flmul+3,w
  5755  121F  00BB               	movwf	___flmul@prod+3
  5756  1220  082E               	movf	??___flmul+2,w
  5757  1221  00BA               	movwf	___flmul@prod+2
  5758  1222  082D               	movf	??___flmul+1,w
  5759  1223  00B9               	movwf	___flmul@prod+1
  5760  1224  082C               	movf	??___flmul,w
  5761  1225  00B8               	movwf	___flmul@prod
  5762  1226  0825               	movf	___flmul@b+1,w
  5763  1227  00AC               	movwf	??___flmul
  5764  1228  082C               	movf	??___flmul,w
  5765  1229  00F0               	movwf	__Umul8_16@multiplicand
  5766  122A  0829               	movf	___flmul@a+1,w
  5767  122B  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5768  1230  0871               	movf	?__Umul8_16+1,w
  5769  1231  1283               	bcf	3,5	;RP0=0, select bank0
  5770  1232  1303               	bcf	3,6	;RP1=0, select bank0
  5771  1233  00BD               	movwf	___flmul@temp+1
  5772  1234  0870               	movf	?__Umul8_16,w
  5773  1235  00BC               	movwf	___flmul@temp
  5774  1236  083C               	movf	___flmul@temp,w
  5775  1237  00AC               	movwf	??___flmul
  5776  1238  01AD               	clrf	??___flmul+1
  5777  1239  01AE               	clrf	??___flmul+2
  5778  123A  01AF               	clrf	??___flmul+3
  5779  123B  082C               	movf	??___flmul,w
  5780  123C  07B2               	addwf	___flmul@grs,f
  5781  123D  082D               	movf	??___flmul+1,w
  5782  123E  1103               	clrz
  5783  123F  1803               	skipnc
  5784  1240  3E01               	addlw	1
  5785  1241  1D03               	btfss	3,2
  5786  1242  07B3               	addwf	___flmul@grs+1,f
  5787  1243  082E               	movf	??___flmul+2,w
  5788  1244  1103               	clrz
  5789  1245  1803               	skipnc
  5790  1246  3E01               	addlw	1
  5791  1247  1D03               	btfss	3,2
  5792  1248  07B4               	addwf	___flmul@grs+2,f
  5793  1249  082F               	movf	??___flmul+3,w
  5794  124A  1103               	clrz
  5795  124B  1803               	skipnc
  5796  124C  3E01               	addlw	1
  5797  124D  1D03               	btfss	3,2
  5798  124E  07B5               	addwf	___flmul@grs+3,f
  5799  124F  083D               	movf	___flmul@temp+1,w
  5800  1250  00AC               	movwf	??___flmul
  5801  1251  01AD               	clrf	??___flmul+1
  5802  1252  01AE               	clrf	??___flmul+2
  5803  1253  01AF               	clrf	??___flmul+3
  5804  1254  082C               	movf	??___flmul,w
  5805  1255  07B8               	addwf	___flmul@prod,f
  5806  1256  082D               	movf	??___flmul+1,w
  5807  1257  1103               	clrz
  5808  1258  1803               	skipnc
  5809  1259  3E01               	addlw	1
  5810  125A  1D03               	btfss	3,2
  5811  125B  07B9               	addwf	___flmul@prod+1,f
  5812  125C  082E               	movf	??___flmul+2,w
  5813  125D  1103               	clrz
  5814  125E  1803               	skipnc
  5815  125F  3E01               	addlw	1
  5816  1260  1D03               	btfss	3,2
  5817  1261  07BA               	addwf	___flmul@prod+2,f
  5818  1262  082F               	movf	??___flmul+3,w
  5819  1263  1103               	clrz
  5820  1264  1803               	skipnc
  5821  1265  3E01               	addlw	1
  5822  1266  1D03               	btfss	3,2
  5823  1267  07BB               	addwf	___flmul@prod+3,f
  5824  1268  0826               	movf	___flmul@b+2,w
  5825  1269  00AC               	movwf	??___flmul
  5826  126A  082C               	movf	??___flmul,w
  5827  126B  00F0               	movwf	__Umul8_16@multiplicand
  5828  126C  0828               	movf	___flmul@a,w
  5829  126D  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5830  1272  0871               	movf	?__Umul8_16+1,w
  5831  1273  1283               	bcf	3,5	;RP0=0, select bank0
  5832  1274  1303               	bcf	3,6	;RP1=0, select bank0
  5833  1275  00BD               	movwf	___flmul@temp+1
  5834  1276  0870               	movf	?__Umul8_16,w
  5835  1277  00BC               	movwf	___flmul@temp
  5836  1278  083C               	movf	___flmul@temp,w
  5837  1279  00AC               	movwf	??___flmul
  5838  127A  01AD               	clrf	??___flmul+1
  5839  127B  01AE               	clrf	??___flmul+2
  5840  127C  01AF               	clrf	??___flmul+3
  5841  127D  082C               	movf	??___flmul,w
  5842  127E  07B2               	addwf	___flmul@grs,f
  5843  127F  082D               	movf	??___flmul+1,w
  5844  1280  1103               	clrz
  5845  1281  1803               	skipnc
  5846  1282  3E01               	addlw	1
  5847  1283  1D03               	btfss	3,2
  5848  1284  07B3               	addwf	___flmul@grs+1,f
  5849  1285  082E               	movf	??___flmul+2,w
  5850  1286  1103               	clrz
  5851  1287  1803               	skipnc
  5852  1288  3E01               	addlw	1
  5853  1289  1D03               	btfss	3,2
  5854  128A  07B4               	addwf	___flmul@grs+2,f
  5855  128B  082F               	movf	??___flmul+3,w
  5856  128C  1103               	clrz
  5857  128D  1803               	skipnc
  5858  128E  3E01               	addlw	1
  5859  128F  1D03               	btfss	3,2
  5860  1290  07B5               	addwf	___flmul@grs+3,f
  5861  1291  083D               	movf	___flmul@temp+1,w
  5862  1292  00AC               	movwf	??___flmul
  5863  1293  01AD               	clrf	??___flmul+1
  5864  1294  01AE               	clrf	??___flmul+2
  5865  1295  01AF               	clrf	??___flmul+3
  5866  1296  082C               	movf	??___flmul,w
  5867  1297  07B8               	addwf	___flmul@prod,f
  5868  1298  082D               	movf	??___flmul+1,w
  5869  1299  1103               	clrz
  5870  129A  1803               	skipnc
  5871  129B  3E01               	addlw	1
  5872  129C  1D03               	btfss	3,2
  5873  129D  07B9               	addwf	___flmul@prod+1,f
  5874  129E  082E               	movf	??___flmul+2,w
  5875  129F  1103               	clrz
  5876  12A0  1803               	skipnc
  5877  12A1  3E01               	addlw	1
  5878  12A2  1D03               	btfss	3,2
  5879  12A3  07BA               	addwf	___flmul@prod+2,f
  5880  12A4  082F               	movf	??___flmul+3,w
  5881  12A5  1103               	clrz
  5882  12A6  1803               	skipnc
  5883  12A7  3E01               	addlw	1
  5884  12A8  1D03               	btfss	3,2
  5885  12A9  07BB               	addwf	___flmul@prod+3,f
  5886  12AA  3008               	movlw	8
  5887  12AB  00AC               	movwf	??___flmul
  5888  12AC                     u4055:	
  5889  12AC  1003               	clrc
  5890  12AD  0DB2               	rlf	___flmul@grs,f
  5891  12AE  0DB3               	rlf	___flmul@grs+1,f
  5892  12AF  0DB4               	rlf	___flmul@grs+2,f
  5893  12B0  0DB5               	rlf	___flmul@grs+3,f
  5894  12B1  0BAC               	decfsz	??___flmul,f
  5895  12B2  2AAC               	goto	u4055
  5896  12B3  0825               	movf	___flmul@b+1,w
  5897  12B4  00AC               	movwf	??___flmul
  5898  12B5  082C               	movf	??___flmul,w
  5899  12B6  00F0               	movwf	__Umul8_16@multiplicand
  5900  12B7  0828               	movf	___flmul@a,w
  5901  12B8  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5902  12BD  0871               	movf	?__Umul8_16+1,w
  5903  12BE  1283               	bcf	3,5	;RP0=0, select bank0
  5904  12BF  1303               	bcf	3,6	;RP1=0, select bank0
  5905  12C0  00BD               	movwf	___flmul@temp+1
  5906  12C1  0870               	movf	?__Umul8_16,w
  5907  12C2  00BC               	movwf	___flmul@temp
  5908  12C3  083C               	movf	___flmul@temp,w
  5909  12C4  00AC               	movwf	??___flmul
  5910  12C5  083D               	movf	___flmul@temp+1,w
  5911  12C6  00AD               	movwf	??___flmul+1
  5912  12C7  01AE               	clrf	??___flmul+2
  5913  12C8  01AF               	clrf	??___flmul+3
  5914  12C9  082C               	movf	??___flmul,w
  5915  12CA  07B2               	addwf	___flmul@grs,f
  5916  12CB  082D               	movf	??___flmul+1,w
  5917  12CC  1103               	clrz
  5918  12CD  1803               	skipnc
  5919  12CE  3E01               	addlw	1
  5920  12CF  1D03               	btfss	3,2
  5921  12D0  07B3               	addwf	___flmul@grs+1,f
  5922  12D1  082E               	movf	??___flmul+2,w
  5923  12D2  1103               	clrz
  5924  12D3  1803               	skipnc
  5925  12D4  3E01               	addlw	1
  5926  12D5  1D03               	btfss	3,2
  5927  12D6  07B4               	addwf	___flmul@grs+2,f
  5928  12D7  082F               	movf	??___flmul+3,w
  5929  12D8  1103               	clrz
  5930  12D9  1803               	skipnc
  5931  12DA  3E01               	addlw	1
  5932  12DB  1D03               	btfss	3,2
  5933  12DC  07B5               	addwf	___flmul@grs+3,f
  5934  12DD  0824               	movf	___flmul@b,w
  5935  12DE  00AC               	movwf	??___flmul
  5936  12DF  082C               	movf	??___flmul,w
  5937  12E0  00F0               	movwf	__Umul8_16@multiplicand
  5938  12E1  0829               	movf	___flmul@a+1,w
  5939  12E2  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5940  12E7  0871               	movf	?__Umul8_16+1,w
  5941  12E8  1283               	bcf	3,5	;RP0=0, select bank0
  5942  12E9  1303               	bcf	3,6	;RP1=0, select bank0
  5943  12EA  00BD               	movwf	___flmul@temp+1
  5944  12EB  0870               	movf	?__Umul8_16,w
  5945  12EC  00BC               	movwf	___flmul@temp
  5946  12ED  083C               	movf	___flmul@temp,w
  5947  12EE  00AC               	movwf	??___flmul
  5948  12EF  083D               	movf	___flmul@temp+1,w
  5949  12F0  00AD               	movwf	??___flmul+1
  5950  12F1  01AE               	clrf	??___flmul+2
  5951  12F2  01AF               	clrf	??___flmul+3
  5952  12F3  082C               	movf	??___flmul,w
  5953  12F4  07B2               	addwf	___flmul@grs,f
  5954  12F5  082D               	movf	??___flmul+1,w
  5955  12F6  1103               	clrz
  5956  12F7  1803               	skipnc
  5957  12F8  3E01               	addlw	1
  5958  12F9  1D03               	btfss	3,2
  5959  12FA  07B3               	addwf	___flmul@grs+1,f
  5960  12FB  082E               	movf	??___flmul+2,w
  5961  12FC  1103               	clrz
  5962  12FD  1803               	skipnc
  5963  12FE  3E01               	addlw	1
  5964  12FF  1D03               	btfss	3,2
  5965  1300  07B4               	addwf	___flmul@grs+2,f
  5966  1301  082F               	movf	??___flmul+3,w
  5967  1302  1103               	clrz
  5968  1303  1803               	skipnc
  5969  1304  3E01               	addlw	1
  5970  1305  1D03               	btfss	3,2
  5971  1306  07B5               	addwf	___flmul@grs+3,f
  5972  1307  3008               	movlw	8
  5973  1308  00AC               	movwf	??___flmul
  5974  1309                     u4085:	
  5975  1309  1003               	clrc
  5976  130A  0DB2               	rlf	___flmul@grs,f
  5977  130B  0DB3               	rlf	___flmul@grs+1,f
  5978  130C  0DB4               	rlf	___flmul@grs+2,f
  5979  130D  0DB5               	rlf	___flmul@grs+3,f
  5980  130E  0BAC               	decfsz	??___flmul,f
  5981  130F  2B09               	goto	u4085
  5982  1310  0824               	movf	___flmul@b,w
  5983  1311  00AC               	movwf	??___flmul
  5984  1312  082C               	movf	??___flmul,w
  5985  1313  00F0               	movwf	__Umul8_16@multiplicand
  5986  1314  0828               	movf	___flmul@a,w
  5987  1315  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  5988  131A  0871               	movf	?__Umul8_16+1,w
  5989  131B  1283               	bcf	3,5	;RP0=0, select bank0
  5990  131C  1303               	bcf	3,6	;RP1=0, select bank0
  5991  131D  00BD               	movwf	___flmul@temp+1
  5992  131E  0870               	movf	?__Umul8_16,w
  5993  131F  00BC               	movwf	___flmul@temp
  5994  1320  083C               	movf	___flmul@temp,w
  5995  1321  00AC               	movwf	??___flmul
  5996  1322  083D               	movf	___flmul@temp+1,w
  5997  1323  00AD               	movwf	??___flmul+1
  5998  1324  01AE               	clrf	??___flmul+2
  5999  1325  01AF               	clrf	??___flmul+3
  6000  1326  082C               	movf	??___flmul,w
  6001  1327  07B2               	addwf	___flmul@grs,f
  6002  1328  082D               	movf	??___flmul+1,w
  6003  1329  1103               	clrz
  6004  132A  1803               	skipnc
  6005  132B  3E01               	addlw	1
  6006  132C  1D03               	btfss	3,2
  6007  132D  07B3               	addwf	___flmul@grs+1,f
  6008  132E  082E               	movf	??___flmul+2,w
  6009  132F  1103               	clrz
  6010  1330  1803               	skipnc
  6011  1331  3E01               	addlw	1
  6012  1332  1D03               	btfss	3,2
  6013  1333  07B4               	addwf	___flmul@grs+2,f
  6014  1334  082F               	movf	??___flmul+3,w
  6015  1335  1103               	clrz
  6016  1336  1803               	skipnc
  6017  1337  3E01               	addlw	1
  6018  1338  1D03               	btfss	3,2
  6019  1339  07B5               	addwf	___flmul@grs+3,f
  6020  133A  0825               	movf	___flmul@b+1,w
  6021  133B  00AC               	movwf	??___flmul
  6022  133C  082C               	movf	??___flmul,w
  6023  133D  00F0               	movwf	__Umul8_16@multiplicand
  6024  133E  082A               	movf	___flmul@a+2,w
  6025  133F  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  6026  1344  0871               	movf	?__Umul8_16+1,w
  6027  1345  1283               	bcf	3,5	;RP0=0, select bank0
  6028  1346  1303               	bcf	3,6	;RP1=0, select bank0
  6029  1347  00BD               	movwf	___flmul@temp+1
  6030  1348  0870               	movf	?__Umul8_16,w
  6031  1349  00BC               	movwf	___flmul@temp
  6032  134A  083C               	movf	___flmul@temp,w
  6033  134B  00AC               	movwf	??___flmul
  6034  134C  083D               	movf	___flmul@temp+1,w
  6035  134D  00AD               	movwf	??___flmul+1
  6036  134E  01AE               	clrf	??___flmul+2
  6037  134F  01AF               	clrf	??___flmul+3
  6038  1350  082C               	movf	??___flmul,w
  6039  1351  07B8               	addwf	___flmul@prod,f
  6040  1352  082D               	movf	??___flmul+1,w
  6041  1353  1103               	clrz
  6042  1354  1803               	skipnc
  6043  1355  3E01               	addlw	1
  6044  1356  1D03               	btfss	3,2
  6045  1357  07B9               	addwf	___flmul@prod+1,f
  6046  1358  082E               	movf	??___flmul+2,w
  6047  1359  1103               	clrz
  6048  135A  1803               	skipnc
  6049  135B  3E01               	addlw	1
  6050  135C  1D03               	btfss	3,2
  6051  135D  07BA               	addwf	___flmul@prod+2,f
  6052  135E  082F               	movf	??___flmul+3,w
  6053  135F  1103               	clrz
  6054  1360  1803               	skipnc
  6055  1361  3E01               	addlw	1
  6056  1362  1D03               	btfss	3,2
  6057  1363  07BB               	addwf	___flmul@prod+3,f
  6058  1364  0826               	movf	___flmul@b+2,w
  6059  1365  00AC               	movwf	??___flmul
  6060  1366  082C               	movf	??___flmul,w
  6061  1367  00F0               	movwf	__Umul8_16@multiplicand
  6062  1368  0829               	movf	___flmul@a+1,w
  6063  1369  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  6064  136E  0871               	movf	?__Umul8_16+1,w
  6065  136F  1283               	bcf	3,5	;RP0=0, select bank0
  6066  1370  1303               	bcf	3,6	;RP1=0, select bank0
  6067  1371  00BD               	movwf	___flmul@temp+1
  6068  1372  0870               	movf	?__Umul8_16,w
  6069  1373  00BC               	movwf	___flmul@temp
  6070  1374  083C               	movf	___flmul@temp,w
  6071  1375  00AC               	movwf	??___flmul
  6072  1376  083D               	movf	___flmul@temp+1,w
  6073  1377  00AD               	movwf	??___flmul+1
  6074  1378  01AE               	clrf	??___flmul+2
  6075  1379  01AF               	clrf	??___flmul+3
  6076  137A  082C               	movf	??___flmul,w
  6077  137B  07B8               	addwf	___flmul@prod,f
  6078  137C  082D               	movf	??___flmul+1,w
  6079  137D  1103               	clrz
  6080  137E  1803               	skipnc
  6081  137F  3E01               	addlw	1
  6082  1380  1D03               	btfss	3,2
  6083  1381  07B9               	addwf	___flmul@prod+1,f
  6084  1382  082E               	movf	??___flmul+2,w
  6085  1383  1103               	clrz
  6086  1384  1803               	skipnc
  6087  1385  3E01               	addlw	1
  6088  1386  1D03               	btfss	3,2
  6089  1387  07BA               	addwf	___flmul@prod+2,f
  6090  1388  082F               	movf	??___flmul+3,w
  6091  1389  1103               	clrz
  6092  138A  1803               	skipnc
  6093  138B  3E01               	addlw	1
  6094  138C  1D03               	btfss	3,2
  6095  138D  07BB               	addwf	___flmul@prod+3,f
  6096  138E  0826               	movf	___flmul@b+2,w
  6097  138F  00AC               	movwf	??___flmul
  6098  1390  082C               	movf	??___flmul,w
  6099  1391  00F0               	movwf	__Umul8_16@multiplicand
  6100  1392  082A               	movf	___flmul@a+2,w
  6101  1393  160A  158A  217C  160A  118A  	fcall	__Umul8_16
  6102  1398  0871               	movf	?__Umul8_16+1,w
  6103  1399  1283               	bcf	3,5	;RP0=0, select bank0
  6104  139A  1303               	bcf	3,6	;RP1=0, select bank0
  6105  139B  00BD               	movwf	___flmul@temp+1
  6106  139C  0870               	movf	?__Umul8_16,w
  6107  139D  00BC               	movwf	___flmul@temp
  6108  139E  083C               	movf	___flmul@temp,w
  6109  139F  00AC               	movwf	??___flmul
  6110  13A0  083D               	movf	___flmul@temp+1,w
  6111  13A1  00AD               	movwf	??___flmul+1
  6112  13A2  01AE               	clrf	??___flmul+2
  6113  13A3  01AF               	clrf	??___flmul+3
  6114  13A4  3008               	movlw	8
  6115  13A5                     u4125:	
  6116  13A5  1003               	clrc
  6117  13A6  0DAC               	rlf	??___flmul,f
  6118  13A7  0DAD               	rlf	??___flmul+1,f
  6119  13A8  0DAE               	rlf	??___flmul+2,f
  6120  13A9  0DAF               	rlf	??___flmul+3,f
  6121  13AA  3EFF               	addlw	-1
  6122  13AB  1D03               	skipz
  6123  13AC  2BA5               	goto	u4125
  6124  13AD  082C               	movf	??___flmul,w
  6125  13AE  07B8               	addwf	___flmul@prod,f
  6126  13AF  082D               	movf	??___flmul+1,w
  6127  13B0  1103               	clrz
  6128  13B1  1803               	skipnc
  6129  13B2  3E01               	addlw	1
  6130  13B3  1D03               	btfss	3,2
  6131  13B4  07B9               	addwf	___flmul@prod+1,f
  6132  13B5  082E               	movf	??___flmul+2,w
  6133  13B6  1103               	clrz
  6134  13B7  1803               	skipnc
  6135  13B8  3E01               	addlw	1
  6136  13B9  1D03               	btfss	3,2
  6137  13BA  07BA               	addwf	___flmul@prod+2,f
  6138  13BB  082F               	movf	??___flmul+3,w
  6139  13BC  1103               	clrz
  6140  13BD  1803               	skipnc
  6141  13BE  3E01               	addlw	1
  6142  13BF  1D03               	btfss	3,2
  6143  13C0  07BB               	addwf	___flmul@prod+3,f
  6144  13C1  0832               	movf	___flmul@grs,w
  6145  13C2  00AC               	movwf	??___flmul
  6146  13C3  0833               	movf	___flmul@grs+1,w
  6147  13C4  00AD               	movwf	??___flmul+1
  6148  13C5  0834               	movf	___flmul@grs+2,w
  6149  13C6  00AE               	movwf	??___flmul+2
  6150  13C7  0835               	movf	___flmul@grs+3,w
  6151  13C8  00AF               	movwf	??___flmul+3
  6152  13C9  3018               	movlw	24
  6153  13CA                     u4145:	
  6154  13CA  1003               	clrc
  6155  13CB  0CAF               	rrf	??___flmul+3,f
  6156  13CC  0CAE               	rrf	??___flmul+2,f
  6157  13CD  0CAD               	rrf	??___flmul+1,f
  6158  13CE  0CAC               	rrf	??___flmul,f
  6159  13CF  3EFF               	addlw	-1
  6160  13D0  1D03               	skipz
  6161  13D1  2BCA               	goto	u4145
  6162  13D2  082C               	movf	??___flmul,w
  6163  13D3  07B8               	addwf	___flmul@prod,f
  6164  13D4  082D               	movf	??___flmul+1,w
  6165  13D5  1103               	clrz
  6166  13D6  1803               	skipnc
  6167  13D7  3E01               	addlw	1
  6168  13D8  1D03               	btfss	3,2
  6169  13D9  07B9               	addwf	___flmul@prod+1,f
  6170  13DA  082E               	movf	??___flmul+2,w
  6171  13DB  1103               	clrz
  6172  13DC  1803               	skipnc
  6173  13DD  3E01               	addlw	1
  6174  13DE  1D03               	btfss	3,2
  6175  13DF  07BA               	addwf	___flmul@prod+2,f
  6176  13E0  082F               	movf	??___flmul+3,w
  6177  13E1  1103               	clrz
  6178  13E2  1803               	skipnc
  6179  13E3  3E01               	addlw	1
  6180  13E4  1D03               	btfss	3,2
  6181  13E5  07BB               	addwf	___flmul@prod+3,f
  6182  13E6  3008               	movlw	8
  6183  13E7  00AC               	movwf	??___flmul
  6184  13E8                     u4165:	
  6185  13E8  1003               	clrc
  6186  13E9  0DB2               	rlf	___flmul@grs,f
  6187  13EA  0DB3               	rlf	___flmul@grs+1,f
  6188  13EB  0DB4               	rlf	___flmul@grs+2,f
  6189  13EC  0DB5               	rlf	___flmul@grs+3,f
  6190  13ED  0BAC               	decfsz	??___flmul,f
  6191  13EE  2BE8               	goto	u4165
  6192  13EF  0837               	movf	___flmul@bexp,w
  6193  13F0  0736               	addwf	___flmul@aexp,w
  6194  13F1  00AC               	movwf	??___flmul
  6195  13F2  01AD               	clrf	??___flmul+1
  6196  13F3  0DAD               	rlf	??___flmul+1,f
  6197  13F4  082C               	movf	??___flmul,w
  6198  13F5  3E82               	addlw	130
  6199  13F6  00BC               	movwf	___flmul@temp
  6200  13F7  082D               	movf	??___flmul+1,w
  6201  13F8  1803               	skipnc
  6202  13F9  3E01               	addlw	1
  6203  13FA  3EFF               	addlw	255
  6204  13FB  00BD               	movwf	___flmul@temp+1
  6205  13FC                     l2760:	
  6206  13FC  1BBA               	btfsc	___flmul@prod+2,7
  6207  13FD  2C19               	goto	l2762
  6208  13FE  3001               	movlw	1
  6209  13FF  00AC               	movwf	??___flmul
  6210  1400                     u4175:	
  6211  1400  1003               	clrc
  6212  1401  0DB8               	rlf	___flmul@prod,f
  6213  1402  0DB9               	rlf	___flmul@prod+1,f
  6214  1403  0DBA               	rlf	___flmul@prod+2,f
  6215  1404  0DBB               	rlf	___flmul@prod+3,f
  6216  1405  0BAC               	decfsz	??___flmul,f
  6217  1406  2C00               	goto	u4175
  6218  1407  1BB5               	btfsc	___flmul@grs+3,7
  6219  1408  1438               	bsf	___flmul@prod,0
  6220  1409  3001               	movlw	1
  6221  140A  00AC               	movwf	??___flmul
  6222  140B                     u4195:	
  6223  140B  1003               	clrc
  6224  140C  0DB2               	rlf	___flmul@grs,f
  6225  140D  0DB3               	rlf	___flmul@grs+1,f
  6226  140E  0DB4               	rlf	___flmul@grs+2,f
  6227  140F  0DB5               	rlf	___flmul@grs+3,f
  6228  1410  0BAC               	decfsz	??___flmul,f
  6229  1411  2C0B               	goto	u4195
  6230  1412  30FF               	movlw	255
  6231  1413  07BC               	addwf	___flmul@temp,f
  6232  1414  1803               	skipnc
  6233  1415  0ABD               	incf	___flmul@temp+1,f
  6234  1416  30FF               	movlw	255
  6235  1417  07BD               	addwf	___flmul@temp+1,f
  6236  1418  2BFC               	goto	l2760
  6237  1419                     l2762:	
  6238  1419  01B6               	clrf	___flmul@aexp
  6239  141A  1FB5               	btfss	___flmul@grs+3,7
  6240  141B  2C32               	goto	l2772
  6241  141C  30FF               	movlw	255
  6242  141D  0532               	andwf	___flmul@grs,w
  6243  141E  00AC               	movwf	??___flmul
  6244  141F  30FF               	movlw	255
  6245  1420  0533               	andwf	___flmul@grs+1,w
  6246  1421  00AD               	movwf	??___flmul+1
  6247  1422  30FF               	movlw	255
  6248  1423  0534               	andwf	___flmul@grs+2,w
  6249  1424  00AE               	movwf	??___flmul+2
  6250  1425  307F               	movlw	127
  6251  1426  0535               	andwf	___flmul@grs+3,w
  6252  1427  00AF               	movwf	??___flmul+3
  6253  1428  082F               	movf	??___flmul+3,w
  6254  1429  042E               	iorwf	??___flmul+2,w
  6255  142A  042D               	iorwf	??___flmul+1,w
  6256  142B  042C               	iorwf	??___flmul,w
  6257  142C  1903               	skipnz
  6258  142D  1838               	btfsc	___flmul@prod,0
  6259  142E  2C30               	goto	l2768
  6260  142F  2C32               	goto	l2772
  6261  1430                     l2768:	
  6262  1430  01B6               	clrf	___flmul@aexp
  6263  1431  0AB6               	incf	___flmul@aexp,f
  6264  1432                     l2772:	
  6265  1432  0836               	movf	___flmul@aexp,w
  6266  1433  1903               	btfsc	3,2
  6267  1434  2C64               	goto	l2782
  6268  1435  3001               	movlw	1
  6269  1436  07B8               	addwf	___flmul@prod,f
  6270  1437  3000               	movlw	0
  6271  1438  1803               	skipnc
  6272  1439  3001               	movlw	1
  6273  143A  07B9               	addwf	___flmul@prod+1,f
  6274  143B  3000               	movlw	0
  6275  143C  1803               	skipnc
  6276  143D  3001               	movlw	1
  6277  143E  07BA               	addwf	___flmul@prod+2,f
  6278  143F  3000               	movlw	0
  6279  1440  1803               	skipnc
  6280  1441  3001               	movlw	1
  6281  1442  07BB               	addwf	___flmul@prod+3,f
  6282  1443  1C3B               	btfss	___flmul@prod+3,0
  6283  1444  2C64               	goto	l2782
  6284  1445  0838               	movf	___flmul@prod,w
  6285  1446  00AC               	movwf	??___flmul
  6286  1447  0839               	movf	___flmul@prod+1,w
  6287  1448  00AD               	movwf	??___flmul+1
  6288  1449  083A               	movf	___flmul@prod+2,w
  6289  144A  00AE               	movwf	??___flmul+2
  6290  144B  083B               	movf	___flmul@prod+3,w
  6291  144C  00AF               	movwf	??___flmul+3
  6292  144D  3001               	movlw	1
  6293  144E  00B0               	movwf	??___flmul+4
  6294  144F                     u4265:	
  6295  144F  0D2F               	rlf	??___flmul+3,w
  6296  1450  0CAF               	rrf	??___flmul+3,f
  6297  1451  0CAE               	rrf	??___flmul+2,f
  6298  1452  0CAD               	rrf	??___flmul+1,f
  6299  1453  0CAC               	rrf	??___flmul,f
  6300  1454  0BB0               	decfsz	??___flmul+4,f
  6301  1455  2C4F               	goto	u4265
  6302  1456  082F               	movf	??___flmul+3,w
  6303  1457  00BB               	movwf	___flmul@prod+3
  6304  1458  082E               	movf	??___flmul+2,w
  6305  1459  00BA               	movwf	___flmul@prod+2
  6306  145A  082D               	movf	??___flmul+1,w
  6307  145B  00B9               	movwf	___flmul@prod+1
  6308  145C  082C               	movf	??___flmul,w
  6309  145D  00B8               	movwf	___flmul@prod
  6310  145E  3001               	movlw	1
  6311  145F  07BC               	addwf	___flmul@temp,f
  6312  1460  1803               	skipnc
  6313  1461  0ABD               	incf	___flmul@temp+1,f
  6314  1462  3000               	movlw	0
  6315  1463  07BD               	addwf	___flmul@temp+1,f
  6316  1464                     l2782:	
  6317  1464  083D               	movf	___flmul@temp+1,w
  6318  1465  3A80               	xorlw	128
  6319  1466  00FF               	movwf	127
  6320  1467  3080               	movlw	128
  6321  1468  027F               	subwf	127,w
  6322  1469  1D03               	skipz
  6323  146A  2C6D               	goto	u4275
  6324  146B  30FF               	movlw	255
  6325  146C  023C               	subwf	___flmul@temp,w
  6326  146D                     u4275:	
  6327  146D  1C03               	skipc
  6328  146E  2C7A               	goto	l2786
  6329  146F  307F               	movlw	127
  6330  1470  1283               	bcf	3,5	;RP0=0, select bank0
  6331  1471  1303               	bcf	3,6	;RP1=0, select bank0
  6332  1472  00BB               	movwf	___flmul@prod+3
  6333  1473  3080               	movlw	128
  6334  1474  00BA               	movwf	___flmul@prod+2
  6335  1475  3000               	movlw	0
  6336  1476  00B9               	movwf	___flmul@prod+1
  6337  1477  3000               	movlw	0
  6338  1478  00B8               	movwf	___flmul@prod
  6339  1479  2CAA               	goto	l706
  6340  147A                     l2786:	
  6341  147A  1283               	bcf	3,5	;RP0=0, select bank0
  6342  147B  1303               	bcf	3,6	;RP1=0, select bank0
  6343  147C  083D               	movf	___flmul@temp+1,w
  6344  147D  3A80               	xorlw	128
  6345  147E  00FF               	movwf	127
  6346  147F  3080               	movlw	128
  6347  1480  027F               	subwf	127,w
  6348  1481  1D03               	skipz
  6349  1482  2C85               	goto	u4285
  6350  1483  3001               	movlw	1
  6351  1484  023C               	subwf	___flmul@temp,w
  6352  1485                     u4285:	
  6353  1485  1803               	skipnc
  6354  1486  2C93               	goto	l2792
  6355  1487  3000               	movlw	0
  6356  1488  1283               	bcf	3,5	;RP0=0, select bank0
  6357  1489  1303               	bcf	3,6	;RP1=0, select bank0
  6358  148A  00BB               	movwf	___flmul@prod+3
  6359  148B  3000               	movlw	0
  6360  148C  00BA               	movwf	___flmul@prod+2
  6361  148D  3000               	movlw	0
  6362  148E  00B9               	movwf	___flmul@prod+1
  6363  148F  3000               	movlw	0
  6364  1490  00B8               	movwf	___flmul@prod
  6365  1491  01B1               	clrf	___flmul@sign
  6366  1492  2CAA               	goto	l706
  6367  1493                     l2792:	
  6368  1493  1283               	bcf	3,5	;RP0=0, select bank0
  6369  1494  1303               	bcf	3,6	;RP1=0, select bank0
  6370  1495  083C               	movf	___flmul@temp,w
  6371  1496  00AC               	movwf	??___flmul
  6372  1497  082C               	movf	??___flmul,w
  6373  1498  00B7               	movwf	___flmul@bexp
  6374  1499  30FF               	movlw	255
  6375  149A  05B8               	andwf	___flmul@prod,f
  6376  149B  30FF               	movlw	255
  6377  149C  05B9               	andwf	___flmul@prod+1,f
  6378  149D  307F               	movlw	127
  6379  149E  05BA               	andwf	___flmul@prod+2,f
  6380  149F  3000               	movlw	0
  6381  14A0  05BB               	andwf	___flmul@prod+3,f
  6382  14A1  1837               	btfsc	___flmul@bexp,0
  6383  14A2  17BA               	bsf	___flmul@prod+2,7
  6384  14A3  0837               	movf	___flmul@bexp,w
  6385  14A4  00AC               	movwf	??___flmul
  6386  14A5  1003               	clrc
  6387  14A6  0C2C               	rrf	??___flmul,w
  6388  14A7  00AD               	movwf	??___flmul+1
  6389  14A8  082D               	movf	??___flmul+1,w
  6390  14A9  00BB               	movwf	___flmul@prod+3
  6391  14AA                     l706:	
  6392  14AA  0831               	movf	___flmul@sign,w
  6393  14AB  00AC               	movwf	??___flmul
  6394  14AC  082C               	movf	??___flmul,w
  6395  14AD  04BB               	iorwf	___flmul@prod+3,f
  6396  14AE  083B               	movf	___flmul@prod+3,w
  6397  14AF  00A7               	movwf	?___flmul+3
  6398  14B0  083A               	movf	___flmul@prod+2,w
  6399  14B1  00A6               	movwf	?___flmul+2
  6400  14B2  0839               	movf	___flmul@prod+1,w
  6401  14B3  00A5               	movwf	?___flmul+1
  6402  14B4  0838               	movf	___flmul@prod,w
  6403  14B5  00A4               	movwf	?___flmul
  6404  14B6  0008               	return
  6405  14B7                     __end_of___flmul:	
  6406                           
  6407                           	psect	text10
  6408  197C                     __ptext10:	
  6409 ;; *************** function __Umul8_16 *****************
  6410 ;; Defined at:
  6411 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;  multiplier      1    wreg     unsigned char 
  6414 ;;  multiplicand    1    0[COMMON] unsigned char 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  multiplier      1    8[COMMON] unsigned char 
  6417 ;;  word_mpld       2    6[COMMON] unsigned int 
  6418 ;;  product         2    4[COMMON] unsigned int 
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2    0[COMMON] unsigned int 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/0
  6425 ;;		On exit  : 0/0
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6428 ;;      Params:         2       0       0       0       0
  6429 ;;      Locals:         5       0       0       0       0
  6430 ;;      Temps:          2       0       0       0       0
  6431 ;;      Totals:         9       0       0       0       0
  6432 ;;Total ram usage:        9 bytes
  6433 ;; Hardware stack levels used:    1
  6434 ;; This function calls:
  6435 ;;		Nothing
  6436 ;; This function is called by:
  6437 ;;		___flmul
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function __Umul8_16
  6443  197C                     __Umul8_16:	
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6447                           ;__Umul8_16@multiplier stored from wreg
  6448  197C  00F8               	movwf	__Umul8_16@multiplier
  6449  197D  01F4               	clrf	__Umul8_16@product
  6450  197E  01F5               	clrf	__Umul8_16@product+1
  6451  197F  0870               	movf	__Umul8_16@multiplicand,w
  6452  1980  00F2               	movwf	??__Umul8_16
  6453  1981  01F3               	clrf	??__Umul8_16+1
  6454  1982  0872               	movf	??__Umul8_16,w
  6455  1983  00F6               	movwf	__Umul8_16@word_mpld
  6456  1984  0873               	movf	??__Umul8_16+1,w
  6457  1985  00F7               	movwf	__Umul8_16@word_mpld+1
  6458  1986                     l2320:	
  6459  1986  1C78               	btfss	__Umul8_16@multiplier,0
  6460  1987  298E               	goto	l760
  6461  1988  0876               	movf	__Umul8_16@word_mpld,w
  6462  1989  07F4               	addwf	__Umul8_16@product,f
  6463  198A  1803               	skipnc
  6464  198B  0AF5               	incf	__Umul8_16@product+1,f
  6465  198C  0877               	movf	__Umul8_16@word_mpld+1,w
  6466  198D  07F5               	addwf	__Umul8_16@product+1,f
  6467  198E                     l760:	
  6468  198E  3001               	movlw	1
  6469  198F                     u3095:	
  6470  198F  1003               	clrc
  6471  1990  0DF6               	rlf	__Umul8_16@word_mpld,f
  6472  1991  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6473  1992  3EFF               	addlw	-1
  6474  1993  1D03               	skipz
  6475  1994  298F               	goto	u3095
  6476  1995  1003               	clrc
  6477  1996  0CF8               	rrf	__Umul8_16@multiplier,f
  6478  1997  0878               	movf	__Umul8_16@multiplier,w
  6479  1998  1D03               	btfss	3,2
  6480  1999  2986               	goto	l2320
  6481  199A  0875               	movf	__Umul8_16@product+1,w
  6482  199B  00F1               	movwf	?__Umul8_16+1
  6483  199C  0874               	movf	__Umul8_16@product,w
  6484  199D  00F0               	movwf	?__Umul8_16
  6485  199E  0008               	return
  6486  199F                     __end_of__Umul8_16:	
  6487                           
  6488                           	psect	text11
  6489  104F                     __ptext11:	
  6490 ;; *************** function __tdiv_to_l_ *****************
  6491 ;; Defined at:
  6492 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  f1              4    0[COMMON] float 
  6495 ;;  f2              4    4[COMMON] float 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  quot            4    0[BANK0 ] unsigned long 
  6498 ;;  exp1            1    5[BANK0 ] unsigned char 
  6499 ;;  cntr            1    4[BANK0 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  4    0[COMMON] unsigned long 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6509 ;;      Params:         8       0       0       0       0
  6510 ;;      Locals:         0       6       0       0       0
  6511 ;;      Temps:          4       0       0       0       0
  6512 ;;      Totals:        12       6       0       0       0
  6513 ;;Total ram usage:       18 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; This function calls:
  6516 ;;		Nothing
  6517 ;; This function is called by:
  6518 ;;		_sprintf
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function __tdiv_to_l_
  6524  104F                     __tdiv_to_l_:	
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6528  104F  0870               	movf	__tdiv_to_l_@f1,w
  6529  1050  00F8               	movwf	??__tdiv_to_l_
  6530  1051  0871               	movf	__tdiv_to_l_@f1+1,w
  6531  1052  00F9               	movwf	??__tdiv_to_l_+1
  6532  1053  0872               	movf	__tdiv_to_l_@f1+2,w
  6533  1054  00FA               	movwf	??__tdiv_to_l_+2
  6534  1055  1003               	clrc
  6535  1056  0D79               	rlf	??__tdiv_to_l_+1,w
  6536  1057  0D7A               	rlf	??__tdiv_to_l_+2,w
  6537  1058  00FB               	movwf	??__tdiv_to_l_+3
  6538  1059  087B               	movf	??__tdiv_to_l_+3,w
  6539  105A  1283               	bcf	3,5	;RP0=0, select bank0
  6540  105B  1303               	bcf	3,6	;RP1=0, select bank0
  6541  105C  00A5               	movwf	__tdiv_to_l_@exp1
  6542  105D  0825               	movf	__tdiv_to_l_@exp1,w
  6543  105E  1D03               	btfss	3,2
  6544  105F  2869               	goto	l2922
  6545  1060                     l2918:	
  6546  1060  3000               	movlw	0
  6547  1061  00F3               	movwf	?__tdiv_to_l_+3
  6548  1062  3000               	movlw	0
  6549  1063  00F2               	movwf	?__tdiv_to_l_+2
  6550  1064  3000               	movlw	0
  6551  1065  00F1               	movwf	?__tdiv_to_l_+1
  6552  1066  3000               	movlw	0
  6553  1067  00F0               	movwf	?__tdiv_to_l_
  6554  1068  0008               	return
  6555  1069                     l2922:	
  6556  1069  0874               	movf	__tdiv_to_l_@f2,w
  6557  106A  00F8               	movwf	??__tdiv_to_l_
  6558  106B  0875               	movf	__tdiv_to_l_@f2+1,w
  6559  106C  00F9               	movwf	??__tdiv_to_l_+1
  6560  106D  0876               	movf	__tdiv_to_l_@f2+2,w
  6561  106E  00FA               	movwf	??__tdiv_to_l_+2
  6562  106F  1003               	clrc
  6563  1070  0D79               	rlf	??__tdiv_to_l_+1,w
  6564  1071  0D7A               	rlf	??__tdiv_to_l_+2,w
  6565  1072  00FB               	movwf	??__tdiv_to_l_+3
  6566  1073  087B               	movf	??__tdiv_to_l_+3,w
  6567  1074  00A4               	movwf	__tdiv_to_l_@cntr
  6568  1075  0824               	movf	__tdiv_to_l_@cntr,w
  6569  1076  1903               	btfsc	3,2
  6570  1077  2860               	goto	l2918
  6571  1078  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6572  1079  30FF               	movlw	255
  6573  107A  05F0               	andwf	__tdiv_to_l_@f1,f
  6574  107B  30FF               	movlw	255
  6575  107C  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6576  107D  3000               	movlw	0
  6577  107E  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6578  107F  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6579  1080  30FF               	movlw	255
  6580  1081  05F4               	andwf	__tdiv_to_l_@f2,f
  6581  1082  30FF               	movlw	255
  6582  1083  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6583  1084  3000               	movlw	0
  6584  1085  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6585  1086  3000               	movlw	0
  6586  1087  00A3               	movwf	__tdiv_to_l_@quot+3
  6587  1088  3000               	movlw	0
  6588  1089  00A2               	movwf	__tdiv_to_l_@quot+2
  6589  108A  3000               	movlw	0
  6590  108B  00A1               	movwf	__tdiv_to_l_@quot+1
  6591  108C  3000               	movlw	0
  6592  108D  00A0               	movwf	__tdiv_to_l_@quot
  6593  108E  307F               	movlw	127
  6594  108F  02A5               	subwf	__tdiv_to_l_@exp1,f
  6595  1090  3098               	movlw	152
  6596  1091  0724               	addwf	__tdiv_to_l_@cntr,w
  6597  1092  00F8               	movwf	??__tdiv_to_l_
  6598  1093  0878               	movf	??__tdiv_to_l_,w
  6599  1094  02A5               	subwf	__tdiv_to_l_@exp1,f
  6600  1095  3018               	movlw	24
  6601  1096  00F8               	movwf	??__tdiv_to_l_
  6602  1097  0878               	movf	??__tdiv_to_l_,w
  6603  1098  00A4               	movwf	__tdiv_to_l_@cntr
  6604  1099                     l2936:	
  6605  1099  3001               	movlw	1
  6606  109A  00F8               	movwf	??__tdiv_to_l_
  6607  109B                     u4625:	
  6608  109B  1003               	clrc
  6609  109C  0DA0               	rlf	__tdiv_to_l_@quot,f
  6610  109D  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6611  109E  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6612  109F  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6613  10A0  0BF8               	decfsz	??__tdiv_to_l_,f
  6614  10A1  289B               	goto	u4625
  6615  10A2  0876               	movf	__tdiv_to_l_@f2+2,w
  6616  10A3  0272               	subwf	__tdiv_to_l_@f1+2,w
  6617  10A4  1D03               	skipz
  6618  10A5  28AC               	goto	u4635
  6619  10A6  0875               	movf	__tdiv_to_l_@f2+1,w
  6620  10A7  0271               	subwf	__tdiv_to_l_@f1+1,w
  6621  10A8  1D03               	skipz
  6622  10A9  28AC               	goto	u4635
  6623  10AA  0874               	movf	__tdiv_to_l_@f2,w
  6624  10AB  0270               	subwf	__tdiv_to_l_@f1,w
  6625  10AC                     u4635:	
  6626  10AC  1C03               	skipc
  6627  10AD  28B9               	goto	l2944
  6628  10AE  0874               	movf	__tdiv_to_l_@f2,w
  6629  10AF  02F0               	subwf	__tdiv_to_l_@f1,f
  6630  10B0  0875               	movf	__tdiv_to_l_@f2+1,w
  6631  10B1  1C03               	skipc
  6632  10B2  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6633  10B3  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6634  10B4  0876               	movf	__tdiv_to_l_@f2+2,w
  6635  10B5  1C03               	skipc
  6636  10B6  0A76               	incf	__tdiv_to_l_@f2+2,w
  6637  10B7  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6638  10B8  1420               	bsf	__tdiv_to_l_@quot,0
  6639  10B9                     l2944:	
  6640  10B9  3001               	movlw	1
  6641  10BA                     u4645:	
  6642  10BA  1003               	clrc
  6643  10BB  0DF0               	rlf	__tdiv_to_l_@f1,f
  6644  10BC  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6645  10BD  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6646  10BE  3EFF               	addlw	-1
  6647  10BF  1D03               	skipz
  6648  10C0  28BA               	goto	u4645
  6649  10C1  3001               	movlw	1
  6650  10C2  02A4               	subwf	__tdiv_to_l_@cntr,f
  6651  10C3  1D03               	btfss	3,2
  6652  10C4  2899               	goto	l2936
  6653  10C5  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6654  10C6  28DC               	goto	l2956
  6655  10C7  0825               	movf	__tdiv_to_l_@exp1,w
  6656  10C8  3A80               	xorlw	128
  6657  10C9  3E97               	addlw	151
  6658  10CA  1C03               	btfss	3,0
  6659  10CB  2860               	goto	l2918
  6660  10CC                     l2954:	
  6661  10CC  3001               	movlw	1
  6662  10CD                     u4685:	
  6663  10CD  1003               	clrc
  6664  10CE  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6665  10CF  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6666  10D0  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6667  10D1  0CA0               	rrf	__tdiv_to_l_@quot,f
  6668  10D2  3EFF               	addlw	-1
  6669  10D3  1D03               	skipz
  6670  10D4  28CD               	goto	u4685
  6671  10D5  3001               	movlw	1
  6672  10D6  00F8               	movwf	??__tdiv_to_l_
  6673  10D7  0878               	movf	??__tdiv_to_l_,w
  6674  10D8  07A5               	addwf	__tdiv_to_l_@exp1,f
  6675  10D9  1903               	btfsc	3,2
  6676  10DA  28EF               	goto	l2964
  6677  10DB  28CC               	goto	l2954
  6678  10DC                     l2956:	
  6679  10DC  3018               	movlw	24
  6680  10DD  0225               	subwf	__tdiv_to_l_@exp1,w
  6681  10DE  1803               	btfsc	3,0
  6682  10DF  2860               	goto	l2918
  6683  10E0                     l499:	
  6684  10E0  0825               	movf	__tdiv_to_l_@exp1,w
  6685  10E1  1903               	btfsc	3,2
  6686  10E2  28EF               	goto	l2964
  6687  10E3  3001               	movlw	1
  6688  10E4  00F8               	movwf	??__tdiv_to_l_
  6689  10E5                     u4715:	
  6690  10E5  1003               	clrc
  6691  10E6  0DA0               	rlf	__tdiv_to_l_@quot,f
  6692  10E7  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6693  10E8  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6694  10E9  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6695  10EA  0BF8               	decfsz	??__tdiv_to_l_,f
  6696  10EB  28E5               	goto	u4715
  6697  10EC  3001               	movlw	1
  6698  10ED  02A5               	subwf	__tdiv_to_l_@exp1,f
  6699  10EE  28E0               	goto	l499
  6700  10EF                     l2964:	
  6701  10EF  0823               	movf	__tdiv_to_l_@quot+3,w
  6702  10F0  00F3               	movwf	?__tdiv_to_l_+3
  6703  10F1  0822               	movf	__tdiv_to_l_@quot+2,w
  6704  10F2  00F2               	movwf	?__tdiv_to_l_+2
  6705  10F3  0821               	movf	__tdiv_to_l_@quot+1,w
  6706  10F4  00F1               	movwf	?__tdiv_to_l_+1
  6707  10F5  0820               	movf	__tdiv_to_l_@quot,w
  6708  10F6  00F0               	movwf	?__tdiv_to_l_
  6709  10F7  0008               	return
  6710  10F8                     __end_of__tdiv_to_l_:	
  6711                           
  6712                           	psect	text12
  6713  10F8                     __ptext12:	
  6714 ;; *************** function __div_to_l_ *****************
  6715 ;; Defined at:
  6716 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  f1              4    0[COMMON] unsigned long 
  6719 ;;  f2              4    4[COMMON] unsigned long 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  quot            4    0[BANK0 ] unsigned long 
  6722 ;;  exp1            1    5[BANK0 ] unsigned char 
  6723 ;;  cntr            1    4[BANK0 ] unsigned char 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  4    0[COMMON] unsigned long 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         8       0       0       0       0
  6734 ;;      Locals:         0       6       0       0       0
  6735 ;;      Temps:          1       0       0       0       0
  6736 ;;      Totals:         9       6       0       0       0
  6737 ;;Total ram usage:       15 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_sprintf
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function __div_to_l_
  6748  10F8                     __div_to_l_:	
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6752  10F8  1003               	clrc
  6753  10F9  0D72               	rlf	__div_to_l_@f1+2,w
  6754  10FA  0D73               	rlf	__div_to_l_@f1+3,w
  6755  10FB  00F8               	movwf	??__div_to_l_
  6756  10FC  0878               	movf	??__div_to_l_,w
  6757  10FD  1283               	bcf	3,5	;RP0=0, select bank0
  6758  10FE  1303               	bcf	3,6	;RP1=0, select bank0
  6759  10FF  00A5               	movwf	__div_to_l_@exp1
  6760  1100  0825               	movf	__div_to_l_@exp1,w
  6761  1101  1D03               	btfss	3,2
  6762  1102  290C               	goto	l2974
  6763  1103                     l2970:	
  6764  1103  3000               	movlw	0
  6765  1104  00F3               	movwf	?__div_to_l_+3
  6766  1105  3000               	movlw	0
  6767  1106  00F2               	movwf	?__div_to_l_+2
  6768  1107  3000               	movlw	0
  6769  1108  00F1               	movwf	?__div_to_l_+1
  6770  1109  3000               	movlw	0
  6771  110A  00F0               	movwf	?__div_to_l_
  6772  110B  0008               	return
  6773  110C                     l2974:	
  6774  110C  1003               	clrc
  6775  110D  0D76               	rlf	__div_to_l_@f2+2,w
  6776  110E  0D77               	rlf	__div_to_l_@f2+3,w
  6777  110F  00F8               	movwf	??__div_to_l_
  6778  1110  0878               	movf	??__div_to_l_,w
  6779  1111  00A4               	movwf	__div_to_l_@cntr
  6780  1112  0824               	movf	__div_to_l_@cntr,w
  6781  1113  1903               	btfsc	3,2
  6782  1114  2903               	goto	l2970
  6783  1115  17F2               	bsf	__div_to_l_@f1+2,7
  6784  1116  30FF               	movlw	255
  6785  1117  05F0               	andwf	__div_to_l_@f1,f
  6786  1118  30FF               	movlw	255
  6787  1119  05F1               	andwf	__div_to_l_@f1+1,f
  6788  111A  30FF               	movlw	255
  6789  111B  05F2               	andwf	__div_to_l_@f1+2,f
  6790  111C  3000               	movlw	0
  6791  111D  05F3               	andwf	__div_to_l_@f1+3,f
  6792  111E  17F6               	bsf	__div_to_l_@f2+2,7
  6793  111F  30FF               	movlw	255
  6794  1120  05F4               	andwf	__div_to_l_@f2,f
  6795  1121  30FF               	movlw	255
  6796  1122  05F5               	andwf	__div_to_l_@f2+1,f
  6797  1123  30FF               	movlw	255
  6798  1124  05F6               	andwf	__div_to_l_@f2+2,f
  6799  1125  3000               	movlw	0
  6800  1126  05F7               	andwf	__div_to_l_@f2+3,f
  6801  1127  3000               	movlw	0
  6802  1128  00A3               	movwf	__div_to_l_@quot+3
  6803  1129  3000               	movlw	0
  6804  112A  00A2               	movwf	__div_to_l_@quot+2
  6805  112B  3000               	movlw	0
  6806  112C  00A1               	movwf	__div_to_l_@quot+1
  6807  112D  3000               	movlw	0
  6808  112E  00A0               	movwf	__div_to_l_@quot
  6809  112F  307F               	movlw	127
  6810  1130  02A5               	subwf	__div_to_l_@exp1,f
  6811  1131  30A0               	movlw	160
  6812  1132  0724               	addwf	__div_to_l_@cntr,w
  6813  1133  00F8               	movwf	??__div_to_l_
  6814  1134  0878               	movf	??__div_to_l_,w
  6815  1135  02A5               	subwf	__div_to_l_@exp1,f
  6816  1136  3020               	movlw	32
  6817  1137  00F8               	movwf	??__div_to_l_
  6818  1138  0878               	movf	??__div_to_l_,w
  6819  1139  00A4               	movwf	__div_to_l_@cntr
  6820  113A                     l2988:	
  6821  113A  3001               	movlw	1
  6822  113B  00F8               	movwf	??__div_to_l_
  6823  113C                     u4755:	
  6824  113C  1003               	clrc
  6825  113D  0DA0               	rlf	__div_to_l_@quot,f
  6826  113E  0DA1               	rlf	__div_to_l_@quot+1,f
  6827  113F  0DA2               	rlf	__div_to_l_@quot+2,f
  6828  1140  0DA3               	rlf	__div_to_l_@quot+3,f
  6829  1141  0BF8               	decfsz	??__div_to_l_,f
  6830  1142  293C               	goto	u4755
  6831  1143  0877               	movf	__div_to_l_@f2+3,w
  6832  1144  0273               	subwf	__div_to_l_@f1+3,w
  6833  1145  1D03               	skipz
  6834  1146  2951               	goto	u4765
  6835  1147  0876               	movf	__div_to_l_@f2+2,w
  6836  1148  0272               	subwf	__div_to_l_@f1+2,w
  6837  1149  1D03               	skipz
  6838  114A  2951               	goto	u4765
  6839  114B  0875               	movf	__div_to_l_@f2+1,w
  6840  114C  0271               	subwf	__div_to_l_@f1+1,w
  6841  114D  1D03               	skipz
  6842  114E  2951               	goto	u4765
  6843  114F  0874               	movf	__div_to_l_@f2,w
  6844  1150  0270               	subwf	__div_to_l_@f1,w
  6845  1151                     u4765:	
  6846  1151  1C03               	skipc
  6847  1152  2962               	goto	l2996
  6848  1153  0874               	movf	__div_to_l_@f2,w
  6849  1154  02F0               	subwf	__div_to_l_@f1,f
  6850  1155  0875               	movf	__div_to_l_@f2+1,w
  6851  1156  1C03               	skipc
  6852  1157  0F75               	incfsz	__div_to_l_@f2+1,w
  6853  1158  02F1               	subwf	__div_to_l_@f1+1,f
  6854  1159  0876               	movf	__div_to_l_@f2+2,w
  6855  115A  1C03               	skipc
  6856  115B  0F76               	incfsz	__div_to_l_@f2+2,w
  6857  115C  02F2               	subwf	__div_to_l_@f1+2,f
  6858  115D  0877               	movf	__div_to_l_@f2+3,w
  6859  115E  1C03               	skipc
  6860  115F  0F77               	incfsz	__div_to_l_@f2+3,w
  6861  1160  02F3               	subwf	__div_to_l_@f1+3,f
  6862  1161  1420               	bsf	__div_to_l_@quot,0
  6863  1162                     l2996:	
  6864  1162  3001               	movlw	1
  6865  1163  00F8               	movwf	??__div_to_l_
  6866  1164                     u4775:	
  6867  1164  1003               	clrc
  6868  1165  0DF0               	rlf	__div_to_l_@f1,f
  6869  1166  0DF1               	rlf	__div_to_l_@f1+1,f
  6870  1167  0DF2               	rlf	__div_to_l_@f1+2,f
  6871  1168  0DF3               	rlf	__div_to_l_@f1+3,f
  6872  1169  0BF8               	decfsz	??__div_to_l_,f
  6873  116A  2964               	goto	u4775
  6874  116B  3001               	movlw	1
  6875  116C  02A4               	subwf	__div_to_l_@cntr,f
  6876  116D  1D03               	btfss	3,2
  6877  116E  293A               	goto	l2988
  6878  116F  1FA5               	btfss	__div_to_l_@exp1,7
  6879  1170  2986               	goto	l3008
  6880  1171  0825               	movf	__div_to_l_@exp1,w
  6881  1172  3A80               	xorlw	128
  6882  1173  3E9F               	addlw	159
  6883  1174  1C03               	btfss	3,0
  6884  1175  2903               	goto	l2970
  6885  1176                     l3006:	
  6886  1176  3001               	movlw	1
  6887  1177                     u4815:	
  6888  1177  1003               	clrc
  6889  1178  0CA3               	rrf	__div_to_l_@quot+3,f
  6890  1179  0CA2               	rrf	__div_to_l_@quot+2,f
  6891  117A  0CA1               	rrf	__div_to_l_@quot+1,f
  6892  117B  0CA0               	rrf	__div_to_l_@quot,f
  6893  117C  3EFF               	addlw	-1
  6894  117D  1D03               	skipz
  6895  117E  2977               	goto	u4815
  6896  117F  3001               	movlw	1
  6897  1180  00F8               	movwf	??__div_to_l_
  6898  1181  0878               	movf	??__div_to_l_,w
  6899  1182  07A5               	addwf	__div_to_l_@exp1,f
  6900  1183  1903               	btfsc	3,2
  6901  1184  2999               	goto	l3016
  6902  1185  2976               	goto	l3006
  6903  1186                     l3008:	
  6904  1186  3020               	movlw	32
  6905  1187  0225               	subwf	__div_to_l_@exp1,w
  6906  1188  1803               	btfsc	3,0
  6907  1189  2903               	goto	l2970
  6908  118A                     l452:	
  6909  118A  0825               	movf	__div_to_l_@exp1,w
  6910  118B  1903               	btfsc	3,2
  6911  118C  2999               	goto	l3016
  6912  118D  3001               	movlw	1
  6913  118E  00F8               	movwf	??__div_to_l_
  6914  118F                     u4845:	
  6915  118F  1003               	clrc
  6916  1190  0DA0               	rlf	__div_to_l_@quot,f
  6917  1191  0DA1               	rlf	__div_to_l_@quot+1,f
  6918  1192  0DA2               	rlf	__div_to_l_@quot+2,f
  6919  1193  0DA3               	rlf	__div_to_l_@quot+3,f
  6920  1194  0BF8               	decfsz	??__div_to_l_,f
  6921  1195  298F               	goto	u4845
  6922  1196  3001               	movlw	1
  6923  1197  02A5               	subwf	__div_to_l_@exp1,f
  6924  1198  298A               	goto	l452
  6925  1199                     l3016:	
  6926  1199  0823               	movf	__div_to_l_@quot+3,w
  6927  119A  00F3               	movwf	?__div_to_l_+3
  6928  119B  0822               	movf	__div_to_l_@quot+2,w
  6929  119C  00F2               	movwf	?__div_to_l_+2
  6930  119D  0821               	movf	__div_to_l_@quot+1,w
  6931  119E  00F1               	movwf	?__div_to_l_+1
  6932  119F  0820               	movf	__div_to_l_@quot,w
  6933  11A0  00F0               	movwf	?__div_to_l_
  6934  11A1  0008               	return
  6935  11A2                     __end_of__div_to_l_:	
  6936                           
  6937                           	psect	text13
  6938  1DBA                     __ptext13:	
  6939 ;; *************** function ___xxtofl *****************
  6940 ;; Defined at:
  6941 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  6942 ;; Parameters:    Size  Location     Type
  6943 ;;  sign            1    wreg     unsigned char 
  6944 ;;  val             4    0[COMMON] long 
  6945 ;; Auto vars:     Size  Location     Type
  6946 ;;  sign            1    8[COMMON] unsigned char 
  6947 ;;  arg             4   10[COMMON] unsigned long 
  6948 ;;  exp             1    9[COMMON] unsigned char 
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  4    0[COMMON] unsigned char 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6958 ;;      Params:         4       0       0       0       0
  6959 ;;      Locals:         6       0       0       0       0
  6960 ;;      Temps:          4       0       0       0       0
  6961 ;;      Totals:        14       0       0       0       0
  6962 ;;Total ram usage:       14 bytes
  6963 ;; Hardware stack levels used:    1
  6964 ;; This function calls:
  6965 ;;		Nothing
  6966 ;; This function is called by:
  6967 ;;		_main
  6968 ;;		_sprintf
  6969 ;; This function uses a non-reentrant model
  6970 ;;
  6971                           
  6972                           
  6973                           ;psect for function ___xxtofl
  6974  1DBA                     ___xxtofl:	
  6975                           
  6976                           ;incstack = 0
  6977                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6978                           ;___xxtofl@sign stored from wreg
  6979  1DBA  00F8               	movwf	___xxtofl@sign
  6980  1DBB  0878               	movf	___xxtofl@sign,w
  6981  1DBC  1D03               	btfss	3,2
  6982  1DBD  1FF3               	btfss	___xxtofl@val+3,7
  6983  1DBE  2DCF               	goto	l3166
  6984  1DBF  0970               	comf	___xxtofl@val,w
  6985  1DC0  00FA               	movwf	___xxtofl@arg
  6986  1DC1  0971               	comf	___xxtofl@val+1,w
  6987  1DC2  00FB               	movwf	___xxtofl@arg+1
  6988  1DC3  0972               	comf	___xxtofl@val+2,w
  6989  1DC4  00FC               	movwf	___xxtofl@arg+2
  6990  1DC5  0973               	comf	___xxtofl@val+3,w
  6991  1DC6  00FD               	movwf	___xxtofl@arg+3
  6992  1DC7  0AFA               	incf	___xxtofl@arg,f
  6993  1DC8  1903               	skipnz
  6994  1DC9  0AFB               	incf	___xxtofl@arg+1,f
  6995  1DCA  1903               	skipnz
  6996  1DCB  0AFC               	incf	___xxtofl@arg+2,f
  6997  1DCC  1903               	skipnz
  6998  1DCD  0AFD               	incf	___xxtofl@arg+3,f
  6999  1DCE  2DD7               	goto	l732
  7000  1DCF                     l3166:	
  7001  1DCF  0873               	movf	___xxtofl@val+3,w
  7002  1DD0  00FD               	movwf	___xxtofl@arg+3
  7003  1DD1  0872               	movf	___xxtofl@val+2,w
  7004  1DD2  00FC               	movwf	___xxtofl@arg+2
  7005  1DD3  0871               	movf	___xxtofl@val+1,w
  7006  1DD4  00FB               	movwf	___xxtofl@arg+1
  7007  1DD5  0870               	movf	___xxtofl@val,w
  7008  1DD6  00FA               	movwf	___xxtofl@arg
  7009  1DD7                     l732:	
  7010  1DD7  0873               	movf	___xxtofl@val+3,w
  7011  1DD8  0472               	iorwf	___xxtofl@val+2,w
  7012  1DD9  0471               	iorwf	___xxtofl@val+1,w
  7013  1DDA  0470               	iorwf	___xxtofl@val,w
  7014  1DDB  1D03               	skipz
  7015  1DDC  2DE6               	goto	l3172
  7016  1DDD  3000               	movlw	0
  7017  1DDE  00F3               	movwf	?___xxtofl+3
  7018  1DDF  3000               	movlw	0
  7019  1DE0  00F2               	movwf	?___xxtofl+2
  7020  1DE1  3000               	movlw	0
  7021  1DE2  00F1               	movwf	?___xxtofl+1
  7022  1DE3  3000               	movlw	0
  7023  1DE4  00F0               	movwf	?___xxtofl
  7024  1DE5  0008               	return
  7025  1DE6                     l3172:	
  7026  1DE6  3096               	movlw	150
  7027  1DE7  00F4               	movwf	??___xxtofl
  7028  1DE8  0874               	movf	??___xxtofl,w
  7029  1DE9  00F9               	movwf	___xxtofl@exp
  7030  1DEA                     l3176:	
  7031  1DEA  30FE               	movlw	254
  7032  1DEB  057D               	andwf	___xxtofl@arg+3,w
  7033  1DEC  1903               	btfsc	3,2
  7034  1DED  2E17               	goto	l738
  7035  1DEE  3001               	movlw	1
  7036  1DEF  00F4               	movwf	??___xxtofl
  7037  1DF0  0874               	movf	??___xxtofl,w
  7038  1DF1  07F9               	addwf	___xxtofl@exp,f
  7039  1DF2  3001               	movlw	1
  7040  1DF3                     u5275:	
  7041  1DF3  1003               	clrc
  7042  1DF4  0CFD               	rrf	___xxtofl@arg+3,f
  7043  1DF5  0CFC               	rrf	___xxtofl@arg+2,f
  7044  1DF6  0CFB               	rrf	___xxtofl@arg+1,f
  7045  1DF7  0CFA               	rrf	___xxtofl@arg,f
  7046  1DF8  3EFF               	addlw	-1
  7047  1DF9  1D03               	skipz
  7048  1DFA  2DF3               	goto	u5275
  7049  1DFB  2DEA               	goto	l3176
  7050  1DFC                     l3178:	
  7051  1DFC  3001               	movlw	1
  7052  1DFD  00F4               	movwf	??___xxtofl
  7053  1DFE  0874               	movf	??___xxtofl,w
  7054  1DFF  07F9               	addwf	___xxtofl@exp,f
  7055  1E00  3001               	movlw	1
  7056  1E01  07FA               	addwf	___xxtofl@arg,f
  7057  1E02  3000               	movlw	0
  7058  1E03  1803               	skipnc
  7059  1E04  3001               	movlw	1
  7060  1E05  07FB               	addwf	___xxtofl@arg+1,f
  7061  1E06  3000               	movlw	0
  7062  1E07  1803               	skipnc
  7063  1E08  3001               	movlw	1
  7064  1E09  07FC               	addwf	___xxtofl@arg+2,f
  7065  1E0A  3000               	movlw	0
  7066  1E0B  1803               	skipnc
  7067  1E0C  3001               	movlw	1
  7068  1E0D  07FD               	addwf	___xxtofl@arg+3,f
  7069  1E0E  3001               	movlw	1
  7070  1E0F                     u5295:	
  7071  1E0F  1003               	clrc
  7072  1E10  0CFD               	rrf	___xxtofl@arg+3,f
  7073  1E11  0CFC               	rrf	___xxtofl@arg+2,f
  7074  1E12  0CFB               	rrf	___xxtofl@arg+1,f
  7075  1E13  0CFA               	rrf	___xxtofl@arg,f
  7076  1E14  3EFF               	addlw	-1
  7077  1E15  1D03               	skipz
  7078  1E16  2E0F               	goto	u5295
  7079  1E17                     l738:	
  7080  1E17  30FF               	movlw	255
  7081  1E18  057D               	andwf	___xxtofl@arg+3,w
  7082  1E19  1903               	btfsc	3,2
  7083  1E1A  2E2B               	goto	l3186
  7084  1E1B  2DFC               	goto	l3178
  7085  1E1C                     l3188:	
  7086  1E1C  3002               	movlw	2
  7087  1E1D  0279               	subwf	___xxtofl@exp,w
  7088  1E1E  1C03               	btfss	3,0
  7089  1E1F  2E2D               	goto	l745
  7090  1E20  3001               	movlw	1
  7091  1E21  02F9               	subwf	___xxtofl@exp,f
  7092  1E22  3001               	movlw	1
  7093  1E23  00F4               	movwf	??___xxtofl
  7094  1E24                     u5315:	
  7095  1E24  1003               	clrc
  7096  1E25  0DFA               	rlf	___xxtofl@arg,f
  7097  1E26  0DFB               	rlf	___xxtofl@arg+1,f
  7098  1E27  0DFC               	rlf	___xxtofl@arg+2,f
  7099  1E28  0DFD               	rlf	___xxtofl@arg+3,f
  7100  1E29  0BF4               	decfsz	??___xxtofl,f
  7101  1E2A  2E24               	goto	u5315
  7102  1E2B                     l3186:	
  7103  1E2B  1FFC               	btfss	___xxtofl@arg+2,7
  7104  1E2C  2E1C               	goto	l3188
  7105  1E2D                     l745:	
  7106  1E2D  1879               	btfsc	___xxtofl@exp,0
  7107  1E2E  2E37               	goto	l746
  7108  1E2F  30FF               	movlw	255
  7109  1E30  05FA               	andwf	___xxtofl@arg,f
  7110  1E31  30FF               	movlw	255
  7111  1E32  05FB               	andwf	___xxtofl@arg+1,f
  7112  1E33  307F               	movlw	127
  7113  1E34  05FC               	andwf	___xxtofl@arg+2,f
  7114  1E35  30FF               	movlw	255
  7115  1E36  05FD               	andwf	___xxtofl@arg+3,f
  7116  1E37                     l746:	
  7117  1E37  1003               	clrc
  7118  1E38  0CF9               	rrf	___xxtofl@exp,f
  7119  1E39  0879               	movf	___xxtofl@exp,w
  7120  1E3A  00F4               	movwf	??___xxtofl
  7121  1E3B  01F5               	clrf	??___xxtofl+1
  7122  1E3C  01F6               	clrf	??___xxtofl+2
  7123  1E3D  01F7               	clrf	??___xxtofl+3
  7124  1E3E  3018               	movlw	24
  7125  1E3F                     u5355:	
  7126  1E3F  1003               	clrc
  7127  1E40  0DF4               	rlf	??___xxtofl,f
  7128  1E41  0DF5               	rlf	??___xxtofl+1,f
  7129  1E42  0DF6               	rlf	??___xxtofl+2,f
  7130  1E43  0DF7               	rlf	??___xxtofl+3,f
  7131  1E44  3EFF               	addlw	-1
  7132  1E45  1D03               	skipz
  7133  1E46  2E3F               	goto	u5355
  7134  1E47  0874               	movf	??___xxtofl,w
  7135  1E48  04FA               	iorwf	___xxtofl@arg,f
  7136  1E49  0875               	movf	??___xxtofl+1,w
  7137  1E4A  04FB               	iorwf	___xxtofl@arg+1,f
  7138  1E4B  0876               	movf	??___xxtofl+2,w
  7139  1E4C  04FC               	iorwf	___xxtofl@arg+2,f
  7140  1E4D  0877               	movf	??___xxtofl+3,w
  7141  1E4E  04FD               	iorwf	___xxtofl@arg+3,f
  7142  1E4F  0878               	movf	___xxtofl@sign,w
  7143  1E50  1D03               	btfss	3,2
  7144  1E51  1FF3               	btfss	___xxtofl@val+3,7
  7145  1E52  2E54               	goto	l3200
  7146  1E53  17FD               	bsf	___xxtofl@arg+3,7
  7147  1E54                     l3200:	
  7148  1E54  087D               	movf	___xxtofl@arg+3,w
  7149  1E55  00F3               	movwf	?___xxtofl+3
  7150  1E56  087C               	movf	___xxtofl@arg+2,w
  7151  1E57  00F2               	movwf	?___xxtofl+2
  7152  1E58  087B               	movf	___xxtofl@arg+1,w
  7153  1E59  00F1               	movwf	?___xxtofl+1
  7154  1E5A  087A               	movf	___xxtofl@arg,w
  7155  1E5B  00F0               	movwf	?___xxtofl
  7156  1E5C  0008               	return
  7157  1E5D                     __end_of___xxtofl:	
  7158                           
  7159                           	psect	text14
  7160  1939                     __ptext14:	
  7161 ;; *************** function ___wmul *****************
  7162 ;; Defined at:
  7163 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  7164 ;; Parameters:    Size  Location     Type
  7165 ;;  multiplier      2    0[COMMON] unsigned int 
  7166 ;;  multiplicand    2    2[COMMON] unsigned int 
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;  product         2    4[COMMON] unsigned int 
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  2    0[COMMON] unsigned int 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7178 ;;      Params:         4       0       0       0       0
  7179 ;;      Locals:         2       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0
  7181 ;;      Totals:         6       0       0       0       0
  7182 ;;Total ram usage:        6 bytes
  7183 ;; Hardware stack levels used:    1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_sprintf
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           
  7192                           ;psect for function ___wmul
  7193  1939                     ___wmul:	
  7194                           
  7195                           ;incstack = 0
  7196                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7197  1939  01F4               	clrf	___wmul@product
  7198  193A  01F5               	clrf	___wmul@product+1
  7199  193B                     l3022:	
  7200  193B  1C70               	btfss	___wmul@multiplier,0
  7201  193C  2943               	goto	l271
  7202  193D  0872               	movf	___wmul@multiplicand,w
  7203  193E  07F4               	addwf	___wmul@product,f
  7204  193F  1803               	skipnc
  7205  1940  0AF5               	incf	___wmul@product+1,f
  7206  1941  0873               	movf	___wmul@multiplicand+1,w
  7207  1942  07F5               	addwf	___wmul@product+1,f
  7208  1943                     l271:	
  7209  1943  3001               	movlw	1
  7210  1944                     u4875:	
  7211  1944  1003               	clrc
  7212  1945  0DF2               	rlf	___wmul@multiplicand,f
  7213  1946  0DF3               	rlf	___wmul@multiplicand+1,f
  7214  1947  3EFF               	addlw	-1
  7215  1948  1D03               	skipz
  7216  1949  2944               	goto	u4875
  7217  194A  3001               	movlw	1
  7218  194B                     u4885:	
  7219  194B  1003               	clrc
  7220  194C  0CF1               	rrf	___wmul@multiplier+1,f
  7221  194D  0CF0               	rrf	___wmul@multiplier,f
  7222  194E  3EFF               	addlw	-1
  7223  194F  1D03               	skipz
  7224  1950  294B               	goto	u4885
  7225  1951  0870               	movf	___wmul@multiplier,w
  7226  1952  0471               	iorwf	___wmul@multiplier+1,w
  7227  1953  1D03               	btfss	3,2
  7228  1954  293B               	goto	l3022
  7229  1955  0875               	movf	___wmul@product+1,w
  7230  1956  00F1               	movwf	?___wmul+1
  7231  1957  0874               	movf	___wmul@product,w
  7232  1958  00F0               	movwf	?___wmul
  7233  1959  0008               	return
  7234  195A                     __end_of___wmul:	
  7235                           
  7236                           	psect	text15
  7237  1003                     __ptext15:	
  7238 ;; *************** function ___llmod *****************
  7239 ;; Defined at:
  7240 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  7241 ;; Parameters:    Size  Location     Type
  7242 ;;  divisor         4    0[COMMON] unsigned long 
  7243 ;;  dividend        4    4[COMMON] unsigned long 
  7244 ;; Auto vars:     Size  Location     Type
  7245 ;;  counter         1    9[COMMON] unsigned char 
  7246 ;; Return value:  Size  Location     Type
  7247 ;;                  4    0[COMMON] unsigned long 
  7248 ;; Registers used:
  7249 ;;		wreg, status,2, status,0
  7250 ;; Tracked objects:
  7251 ;;		On entry : 0/0
  7252 ;;		On exit  : 0/0
  7253 ;;		Unchanged: 0/0
  7254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7255 ;;      Params:         8       0       0       0       0
  7256 ;;      Locals:         1       0       0       0       0
  7257 ;;      Temps:          1       0       0       0       0
  7258 ;;      Totals:        10       0       0       0       0
  7259 ;;Total ram usage:       10 bytes
  7260 ;; Hardware stack levels used:    1
  7261 ;; This function calls:
  7262 ;;		Nothing
  7263 ;; This function is called by:
  7264 ;;		_sprintf
  7265 ;; This function uses a non-reentrant model
  7266 ;;
  7267                           
  7268                           
  7269                           ;psect for function ___llmod
  7270  1003                     ___llmod:	
  7271                           
  7272                           ;incstack = 0
  7273                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7274  1003  0873               	movf	___llmod@divisor+3,w
  7275  1004  0472               	iorwf	___llmod@divisor+2,w
  7276  1005  0471               	iorwf	___llmod@divisor+1,w
  7277  1006  0470               	iorwf	___llmod@divisor,w
  7278  1007  1903               	skipnz
  7279  1008  2846               	goto	l3150
  7280  1009  01F9               	clrf	___llmod@counter
  7281  100A  0AF9               	incf	___llmod@counter,f
  7282  100B                     l3140:	
  7283  100B  1BF3               	btfsc	___llmod@divisor+3,7
  7284  100C  281B               	goto	l3142
  7285  100D  3001               	movlw	1
  7286  100E  00F8               	movwf	??___llmod
  7287  100F                     u5195:	
  7288  100F  1003               	clrc
  7289  1010  0DF0               	rlf	___llmod@divisor,f
  7290  1011  0DF1               	rlf	___llmod@divisor+1,f
  7291  1012  0DF2               	rlf	___llmod@divisor+2,f
  7292  1013  0DF3               	rlf	___llmod@divisor+3,f
  7293  1014  0BF8               	decfsz	??___llmod,f
  7294  1015  280F               	goto	u5195
  7295  1016  3001               	movlw	1
  7296  1017  00F8               	movwf	??___llmod
  7297  1018  0878               	movf	??___llmod,w
  7298  1019  07F9               	addwf	___llmod@counter,f
  7299  101A  280B               	goto	l3140
  7300  101B                     l3142:	
  7301  101B  0873               	movf	___llmod@divisor+3,w
  7302  101C  0277               	subwf	___llmod@dividend+3,w
  7303  101D  1D03               	skipz
  7304  101E  2829               	goto	u5215
  7305  101F  0872               	movf	___llmod@divisor+2,w
  7306  1020  0276               	subwf	___llmod@dividend+2,w
  7307  1021  1D03               	skipz
  7308  1022  2829               	goto	u5215
  7309  1023  0871               	movf	___llmod@divisor+1,w
  7310  1024  0275               	subwf	___llmod@dividend+1,w
  7311  1025  1D03               	skipz
  7312  1026  2829               	goto	u5215
  7313  1027  0870               	movf	___llmod@divisor,w
  7314  1028  0274               	subwf	___llmod@dividend,w
  7315  1029                     u5215:	
  7316  1029  1C03               	skipc
  7317  102A  2839               	goto	l3146
  7318  102B  0870               	movf	___llmod@divisor,w
  7319  102C  02F4               	subwf	___llmod@dividend,f
  7320  102D  0871               	movf	___llmod@divisor+1,w
  7321  102E  1C03               	skipc
  7322  102F  0F71               	incfsz	___llmod@divisor+1,w
  7323  1030  02F5               	subwf	___llmod@dividend+1,f
  7324  1031  0872               	movf	___llmod@divisor+2,w
  7325  1032  1C03               	skipc
  7326  1033  0F72               	incfsz	___llmod@divisor+2,w
  7327  1034  02F6               	subwf	___llmod@dividend+2,f
  7328  1035  0873               	movf	___llmod@divisor+3,w
  7329  1036  1C03               	skipc
  7330  1037  0F73               	incfsz	___llmod@divisor+3,w
  7331  1038  02F7               	subwf	___llmod@dividend+3,f
  7332  1039                     l3146:	
  7333  1039  3001               	movlw	1
  7334  103A                     u5225:	
  7335  103A  1003               	clrc
  7336  103B  0CF3               	rrf	___llmod@divisor+3,f
  7337  103C  0CF2               	rrf	___llmod@divisor+2,f
  7338  103D  0CF1               	rrf	___llmod@divisor+1,f
  7339  103E  0CF0               	rrf	___llmod@divisor,f
  7340  103F  3EFF               	addlw	-1
  7341  1040  1D03               	skipz
  7342  1041  283A               	goto	u5225
  7343  1042  3001               	movlw	1
  7344  1043  02F9               	subwf	___llmod@counter,f
  7345  1044  1D03               	btfss	3,2
  7346  1045  281B               	goto	l3142
  7347  1046                     l3150:	
  7348  1046  0877               	movf	___llmod@dividend+3,w
  7349  1047  00F3               	movwf	?___llmod+3
  7350  1048  0876               	movf	___llmod@dividend+2,w
  7351  1049  00F2               	movwf	?___llmod+2
  7352  104A  0875               	movf	___llmod@dividend+1,w
  7353  104B  00F1               	movwf	?___llmod+1
  7354  104C  0874               	movf	___llmod@dividend,w
  7355  104D  00F0               	movwf	?___llmod
  7356  104E  0008               	return
  7357  104F                     __end_of___llmod:	
  7358                           
  7359                           	psect	text16
  7360  1C5C                     __ptext16:	
  7361 ;; *************** function ___lldiv *****************
  7362 ;; Defined at:
  7363 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  7364 ;; Parameters:    Size  Location     Type
  7365 ;;  divisor         4    0[COMMON] unsigned long 
  7366 ;;  dividend        4    4[COMMON] unsigned long 
  7367 ;; Auto vars:     Size  Location     Type
  7368 ;;  quotient        4    9[COMMON] unsigned long 
  7369 ;;  counter         1   13[COMMON] unsigned char 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  4    0[COMMON] unsigned long 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7379 ;;      Params:         8       0       0       0       0
  7380 ;;      Locals:         5       0       0       0       0
  7381 ;;      Temps:          1       0       0       0       0
  7382 ;;      Totals:        14       0       0       0       0
  7383 ;;Total ram usage:       14 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; This function calls:
  7386 ;;		Nothing
  7387 ;; This function is called by:
  7388 ;;		_sprintf
  7389 ;; This function uses a non-reentrant model
  7390 ;;
  7391                           
  7392                           
  7393                           ;psect for function ___lldiv
  7394  1C5C                     ___lldiv:	
  7395                           
  7396                           ;incstack = 0
  7397                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7398  1C5C  3000               	movlw	0
  7399  1C5D  00FC               	movwf	___lldiv@quotient+3
  7400  1C5E  3000               	movlw	0
  7401  1C5F  00FB               	movwf	___lldiv@quotient+2
  7402  1C60  3000               	movlw	0
  7403  1C61  00FA               	movwf	___lldiv@quotient+1
  7404  1C62  3000               	movlw	0
  7405  1C63  00F9               	movwf	___lldiv@quotient
  7406  1C64  0873               	movf	___lldiv@divisor+3,w
  7407  1C65  0472               	iorwf	___lldiv@divisor+2,w
  7408  1C66  0471               	iorwf	___lldiv@divisor+1,w
  7409  1C67  0470               	iorwf	___lldiv@divisor,w
  7410  1C68  1903               	skipnz
  7411  1C69  2CB1               	goto	l3054
  7412  1C6A  01FD               	clrf	___lldiv@counter
  7413  1C6B  0AFD               	incf	___lldiv@counter,f
  7414  1C6C                     l3040:	
  7415  1C6C  1BF3               	btfsc	___lldiv@divisor+3,7
  7416  1C6D  2C7C               	goto	l3042
  7417  1C6E  3001               	movlw	1
  7418  1C6F  00F8               	movwf	??___lldiv
  7419  1C70                     u4915:	
  7420  1C70  1003               	clrc
  7421  1C71  0DF0               	rlf	___lldiv@divisor,f
  7422  1C72  0DF1               	rlf	___lldiv@divisor+1,f
  7423  1C73  0DF2               	rlf	___lldiv@divisor+2,f
  7424  1C74  0DF3               	rlf	___lldiv@divisor+3,f
  7425  1C75  0BF8               	decfsz	??___lldiv,f
  7426  1C76  2C70               	goto	u4915
  7427  1C77  3001               	movlw	1
  7428  1C78  00F8               	movwf	??___lldiv
  7429  1C79  0878               	movf	??___lldiv,w
  7430  1C7A  07FD               	addwf	___lldiv@counter,f
  7431  1C7B  2C6C               	goto	l3040
  7432  1C7C                     l3042:	
  7433  1C7C  3001               	movlw	1
  7434  1C7D  00F8               	movwf	??___lldiv
  7435  1C7E                     u4935:	
  7436  1C7E  1003               	clrc
  7437  1C7F  0DF9               	rlf	___lldiv@quotient,f
  7438  1C80  0DFA               	rlf	___lldiv@quotient+1,f
  7439  1C81  0DFB               	rlf	___lldiv@quotient+2,f
  7440  1C82  0DFC               	rlf	___lldiv@quotient+3,f
  7441  1C83  0BF8               	decfsz	??___lldiv,f
  7442  1C84  2C7E               	goto	u4935
  7443  1C85  0873               	movf	___lldiv@divisor+3,w
  7444  1C86  0277               	subwf	___lldiv@dividend+3,w
  7445  1C87  1D03               	skipz
  7446  1C88  2C93               	goto	u4945
  7447  1C89  0872               	movf	___lldiv@divisor+2,w
  7448  1C8A  0276               	subwf	___lldiv@dividend+2,w
  7449  1C8B  1D03               	skipz
  7450  1C8C  2C93               	goto	u4945
  7451  1C8D  0871               	movf	___lldiv@divisor+1,w
  7452  1C8E  0275               	subwf	___lldiv@dividend+1,w
  7453  1C8F  1D03               	skipz
  7454  1C90  2C93               	goto	u4945
  7455  1C91  0870               	movf	___lldiv@divisor,w
  7456  1C92  0274               	subwf	___lldiv@dividend,w
  7457  1C93                     u4945:	
  7458  1C93  1C03               	skipc
  7459  1C94  2CA4               	goto	l3050
  7460  1C95  0870               	movf	___lldiv@divisor,w
  7461  1C96  02F4               	subwf	___lldiv@dividend,f
  7462  1C97  0871               	movf	___lldiv@divisor+1,w
  7463  1C98  1C03               	skipc
  7464  1C99  0F71               	incfsz	___lldiv@divisor+1,w
  7465  1C9A  02F5               	subwf	___lldiv@dividend+1,f
  7466  1C9B  0872               	movf	___lldiv@divisor+2,w
  7467  1C9C  1C03               	skipc
  7468  1C9D  0F72               	incfsz	___lldiv@divisor+2,w
  7469  1C9E  02F6               	subwf	___lldiv@dividend+2,f
  7470  1C9F  0873               	movf	___lldiv@divisor+3,w
  7471  1CA0  1C03               	skipc
  7472  1CA1  0F73               	incfsz	___lldiv@divisor+3,w
  7473  1CA2  02F7               	subwf	___lldiv@dividend+3,f
  7474  1CA3  1479               	bsf	___lldiv@quotient,0
  7475  1CA4                     l3050:	
  7476  1CA4  3001               	movlw	1
  7477  1CA5                     u4955:	
  7478  1CA5  1003               	clrc
  7479  1CA6  0CF3               	rrf	___lldiv@divisor+3,f
  7480  1CA7  0CF2               	rrf	___lldiv@divisor+2,f
  7481  1CA8  0CF1               	rrf	___lldiv@divisor+1,f
  7482  1CA9  0CF0               	rrf	___lldiv@divisor,f
  7483  1CAA  3EFF               	addlw	-1
  7484  1CAB  1D03               	skipz
  7485  1CAC  2CA5               	goto	u4955
  7486  1CAD  3001               	movlw	1
  7487  1CAE  02FD               	subwf	___lldiv@counter,f
  7488  1CAF  1D03               	btfss	3,2
  7489  1CB0  2C7C               	goto	l3042
  7490  1CB1                     l3054:	
  7491  1CB1  087C               	movf	___lldiv@quotient+3,w
  7492  1CB2  00F3               	movwf	?___lldiv+3
  7493  1CB3  087B               	movf	___lldiv@quotient+2,w
  7494  1CB4  00F2               	movwf	?___lldiv+2
  7495  1CB5  087A               	movf	___lldiv@quotient+1,w
  7496  1CB6  00F1               	movwf	?___lldiv+1
  7497  1CB7  0879               	movf	___lldiv@quotient,w
  7498  1CB8  00F0               	movwf	?___lldiv
  7499  1CB9  0008               	return
  7500  1CBA                     __end_of___lldiv:	
  7501                           
  7502                           	psect	text17
  7503  1CBA                     __ptext17:	
  7504 ;; *************** function ___fltol *****************
  7505 ;; Defined at:
  7506 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  7507 ;; Parameters:    Size  Location     Type
  7508 ;;  f1              4   49[BANK0 ] unsigned long 
  7509 ;; Auto vars:     Size  Location     Type
  7510 ;;  exp1            1   59[BANK0 ] unsigned char 
  7511 ;;  sign1           1   58[BANK0 ] unsigned char 
  7512 ;; Return value:  Size  Location     Type
  7513 ;;                  4   49[BANK0 ] long 
  7514 ;; Registers used:
  7515 ;;		wreg, status,2, status,0
  7516 ;; Tracked objects:
  7517 ;;		On entry : 0/0
  7518 ;;		On exit  : 0/0
  7519 ;;		Unchanged: 0/0
  7520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7521 ;;      Params:         0       4       0       0       0
  7522 ;;      Locals:         0       2       0       0       0
  7523 ;;      Temps:          0       5       0       0       0
  7524 ;;      Totals:         0      11       0       0       0
  7525 ;;Total ram usage:       11 bytes
  7526 ;; Hardware stack levels used:    1
  7527 ;; This function calls:
  7528 ;;		Nothing
  7529 ;; This function is called by:
  7530 ;;		_sprintf
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           
  7535                           ;psect for function ___fltol
  7536  1CBA                     ___fltol:	
  7537                           
  7538                           ;incstack = 0
  7539                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7540  1CBA  1003               	clrc
  7541  1CBB  1283               	bcf	3,5	;RP0=0, select bank0
  7542  1CBC  1303               	bcf	3,6	;RP1=0, select bank0
  7543  1CBD  0D53               	rlf	___fltol@f1+2,w
  7544  1CBE  0D54               	rlf	___fltol@f1+3,w
  7545  1CBF  00D5               	movwf	??___fltol
  7546  1CC0  0855               	movf	??___fltol,w
  7547  1CC1  00DB               	movwf	___fltol@exp1
  7548  1CC2  085B               	movf	___fltol@exp1,w
  7549  1CC3  1D03               	btfss	3,2
  7550  1CC4  2CCE               	goto	l3104
  7551  1CC5                     l3100:	
  7552  1CC5  3000               	movlw	0
  7553  1CC6  00D4               	movwf	?___fltol+3
  7554  1CC7  3000               	movlw	0
  7555  1CC8  00D3               	movwf	?___fltol+2
  7556  1CC9  3000               	movlw	0
  7557  1CCA  00D2               	movwf	?___fltol+1
  7558  1CCB  3000               	movlw	0
  7559  1CCC  00D1               	movwf	?___fltol
  7560  1CCD  0008               	return
  7561  1CCE                     l3104:	
  7562  1CCE  0851               	movf	___fltol@f1,w
  7563  1CCF  00D5               	movwf	??___fltol
  7564  1CD0  0852               	movf	___fltol@f1+1,w
  7565  1CD1  00D6               	movwf	??___fltol+1
  7566  1CD2  0853               	movf	___fltol@f1+2,w
  7567  1CD3  00D7               	movwf	??___fltol+2
  7568  1CD4  0854               	movf	___fltol@f1+3,w
  7569  1CD5  00D8               	movwf	??___fltol+3
  7570  1CD6  301F               	movlw	31
  7571  1CD7                     u5095:	
  7572  1CD7  1003               	clrc
  7573  1CD8  0CD8               	rrf	??___fltol+3,f
  7574  1CD9  0CD7               	rrf	??___fltol+2,f
  7575  1CDA  0CD6               	rrf	??___fltol+1,f
  7576  1CDB  0CD5               	rrf	??___fltol,f
  7577  1CDC  3EFF               	addlw	-1
  7578  1CDD  1D03               	skipz
  7579  1CDE  2CD7               	goto	u5095
  7580  1CDF  0855               	movf	??___fltol,w
  7581  1CE0  00D9               	movwf	??___fltol+4
  7582  1CE1  0859               	movf	??___fltol+4,w
  7583  1CE2  00DA               	movwf	___fltol@sign1
  7584  1CE3  17D3               	bsf	___fltol@f1+2,7
  7585  1CE4  30FF               	movlw	255
  7586  1CE5  05D1               	andwf	___fltol@f1,f
  7587  1CE6  30FF               	movlw	255
  7588  1CE7  05D2               	andwf	___fltol@f1+1,f
  7589  1CE8  30FF               	movlw	255
  7590  1CE9  05D3               	andwf	___fltol@f1+2,f
  7591  1CEA  3000               	movlw	0
  7592  1CEB  05D4               	andwf	___fltol@f1+3,f
  7593  1CEC  3096               	movlw	150
  7594  1CED  02DB               	subwf	___fltol@exp1,f
  7595  1CEE  1FDB               	btfss	___fltol@exp1,7
  7596  1CEF  2D05               	goto	l3122
  7597  1CF0  085B               	movf	___fltol@exp1,w
  7598  1CF1  3A80               	xorlw	128
  7599  1CF2  3E97               	addlw	151
  7600  1CF3  1C03               	btfss	3,0
  7601  1CF4  2CC5               	goto	l3100
  7602  1CF5                     l3120:	
  7603  1CF5  3001               	movlw	1
  7604  1CF6                     u5125:	
  7605  1CF6  1003               	clrc
  7606  1CF7  0CD4               	rrf	___fltol@f1+3,f
  7607  1CF8  0CD3               	rrf	___fltol@f1+2,f
  7608  1CF9  0CD2               	rrf	___fltol@f1+1,f
  7609  1CFA  0CD1               	rrf	___fltol@f1,f
  7610  1CFB  3EFF               	addlw	-1
  7611  1CFC  1D03               	skipz
  7612  1CFD  2CF6               	goto	u5125
  7613  1CFE  3001               	movlw	1
  7614  1CFF  00D5               	movwf	??___fltol
  7615  1D00  0855               	movf	??___fltol,w
  7616  1D01  07DB               	addwf	___fltol@exp1,f
  7617  1D02  1903               	btfsc	3,2
  7618  1D03  2D18               	goto	l3130
  7619  1D04  2CF5               	goto	l3120
  7620  1D05                     l3122:	
  7621  1D05  3020               	movlw	32
  7622  1D06  025B               	subwf	___fltol@exp1,w
  7623  1D07  1803               	btfsc	3,0
  7624  1D08  2CC5               	goto	l3100
  7625  1D09                     l481:	
  7626  1D09  085B               	movf	___fltol@exp1,w
  7627  1D0A  1903               	btfsc	3,2
  7628  1D0B  2D18               	goto	l3130
  7629  1D0C  3001               	movlw	1
  7630  1D0D  00D5               	movwf	??___fltol
  7631  1D0E                     u5155:	
  7632  1D0E  1003               	clrc
  7633  1D0F  0DD1               	rlf	___fltol@f1,f
  7634  1D10  0DD2               	rlf	___fltol@f1+1,f
  7635  1D11  0DD3               	rlf	___fltol@f1+2,f
  7636  1D12  0DD4               	rlf	___fltol@f1+3,f
  7637  1D13  0BD5               	decfsz	??___fltol,f
  7638  1D14  2D0E               	goto	u5155
  7639  1D15  3001               	movlw	1
  7640  1D16  02DB               	subwf	___fltol@exp1,f
  7641  1D17  2D09               	goto	l481
  7642  1D18                     l3130:	
  7643  1D18  085A               	movf	___fltol@sign1,w
  7644  1D19  1903               	btfsc	3,2
  7645  1D1A  0008               	return
  7646  1D1B  09D1               	comf	___fltol@f1,f
  7647  1D1C  09D2               	comf	___fltol@f1+1,f
  7648  1D1D  09D3               	comf	___fltol@f1+2,f
  7649  1D1E  09D4               	comf	___fltol@f1+3,f
  7650  1D1F  0AD1               	incf	___fltol@f1,f
  7651  1D20  1903               	skipnz
  7652  1D21  0AD2               	incf	___fltol@f1+1,f
  7653  1D22  1903               	skipnz
  7654  1D23  0AD3               	incf	___fltol@f1+2,f
  7655  1D24  1903               	skipnz
  7656  1D25  0AD4               	incf	___fltol@f1+3,f
  7657  1D26  0008               	return
  7658  1D27                     __end_of___fltol:	
  7659                           
  7660                           	psect	text18
  7661  195A                     __ptext18:	
  7662 ;; *************** function ___flsub *****************
  7663 ;; Defined at:
  7664 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7665 ;; Parameters:    Size  Location     Type
  7666 ;;  a               4   70[BANK0 ] long 
  7667 ;;  b               4   74[BANK0 ] long 
  7668 ;; Auto vars:     Size  Location     Type
  7669 ;;		None
  7670 ;; Return value:  Size  Location     Type
  7671 ;;                  4   70[BANK0 ] long 
  7672 ;; Registers used:
  7673 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7674 ;; Tracked objects:
  7675 ;;		On entry : 0/0
  7676 ;;		On exit  : 0/0
  7677 ;;		Unchanged: 0/0
  7678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7679 ;;      Params:         0       8       0       0       0
  7680 ;;      Locals:         0       0       0       0       0
  7681 ;;      Temps:          0       0       0       0       0
  7682 ;;      Totals:         0       8       0       0       0
  7683 ;;Total ram usage:        8 bytes
  7684 ;; Hardware stack levels used:    1
  7685 ;; Hardware stack levels required when called:    1
  7686 ;; This function calls:
  7687 ;;		___fladd
  7688 ;; This function is called by:
  7689 ;;		_main
  7690 ;;		_sprintf
  7691 ;; This function uses a non-reentrant model
  7692 ;;
  7693                           
  7694                           
  7695                           ;psect for function ___flsub
  7696  195A                     ___flsub:	
  7697                           
  7698                           ;incstack = 0
  7699                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7700  195A  3080               	movlw	128
  7701  195B  1283               	bcf	3,5	;RP0=0, select bank0
  7702  195C  1303               	bcf	3,6	;RP1=0, select bank0
  7703  195D  06E9               	xorwf	___flsub@a+3,f
  7704  195E  086D               	movf	___flsub@b+3,w
  7705  195F  00D5               	movwf	___fladd@b+3
  7706  1960  086C               	movf	___flsub@b+2,w
  7707  1961  00D4               	movwf	___fladd@b+2
  7708  1962  086B               	movf	___flsub@b+1,w
  7709  1963  00D3               	movwf	___fladd@b+1
  7710  1964  086A               	movf	___flsub@b,w
  7711  1965  00D2               	movwf	___fladd@b
  7712  1966  0869               	movf	___flsub@a+3,w
  7713  1967  00D9               	movwf	___fladd@a+3
  7714  1968  0868               	movf	___flsub@a+2,w
  7715  1969  00D8               	movwf	___fladd@a+2
  7716  196A  0867               	movf	___flsub@a+1,w
  7717  196B  00D7               	movwf	___fladd@a+1
  7718  196C  0866               	movf	___flsub@a,w
  7719  196D  00D6               	movwf	___fladd@a
  7720  196E  120A  158A  20C2   	fcall	___fladd
  7721  1971  1283               	bcf	3,5	;RP0=0, select bank0
  7722  1972  1303               	bcf	3,6	;RP1=0, select bank0
  7723  1973  0855               	movf	?___fladd+3,w
  7724  1974  00E9               	movwf	?___flsub+3
  7725  1975  0854               	movf	?___fladd+2,w
  7726  1976  00E8               	movwf	?___flsub+2
  7727  1977  0853               	movf	?___fladd+1,w
  7728  1978  00E7               	movwf	?___flsub+1
  7729  1979  0852               	movf	?___fladd,w
  7730  197A  00E6               	movwf	?___flsub
  7731  197B  0008               	return
  7732  197C                     __end_of___flsub:	
  7733                           
  7734                           	psect	text19
  7735  08C2                     __ptext19:	
  7736 ;; *************** function ___fladd *****************
  7737 ;; Defined at:
  7738 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;  b               4   50[BANK0 ] long 
  7741 ;;  a               4   54[BANK0 ] long 
  7742 ;; Auto vars:     Size  Location     Type
  7743 ;;  grs             1   69[BANK0 ] unsigned char 
  7744 ;;  bexp            1   68[BANK0 ] unsigned char 
  7745 ;;  aexp            1   67[BANK0 ] unsigned char 
  7746 ;;  signs           1   66[BANK0 ] unsigned char 
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  4   50[BANK0 ] unsigned char 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2, status,0, btemp+1
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7756 ;;      Params:         0       8       0       0       0
  7757 ;;      Locals:         0       4       0       0       0
  7758 ;;      Temps:          0       8       0       0       0
  7759 ;;      Totals:         0      20       0       0       0
  7760 ;;Total ram usage:       20 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; This function calls:
  7763 ;;		Nothing
  7764 ;; This function is called by:
  7765 ;;		_sprintf
  7766 ;;		___flsub
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           
  7771                           ;psect for function ___fladd
  7772  08C2                     ___fladd:	
  7773                           
  7774                           ;incstack = 0
  7775                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7776  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  7777  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  7778  08C4  0855               	movf	___fladd@b+3,w
  7779  08C5  3980               	andlw	128
  7780  08C6  00DA               	movwf	??___fladd
  7781  08C7  085A               	movf	??___fladd,w
  7782  08C8  00E2               	movwf	___fladd@signs
  7783  08C9  0855               	movf	___fladd@b+3,w
  7784  08CA  00DA               	movwf	??___fladd
  7785  08CB  075A               	addwf	??___fladd,w
  7786  08CC  00DB               	movwf	??___fladd+1
  7787  08CD  085B               	movf	??___fladd+1,w
  7788  08CE  00E4               	movwf	___fladd@bexp
  7789  08CF  1BD4               	btfsc	___fladd@b+2,7
  7790  08D0  1464               	bsf	___fladd@bexp,0
  7791  08D1  0864               	movf	___fladd@bexp,w
  7792  08D2  1903               	btfsc	3,2
  7793  08D3  28E2               	goto	l2488
  7794  08D4  0A64               	incf	___fladd@bexp,w
  7795  08D5  1D03               	btfss	3,2
  7796  08D6  28DF               	goto	l2484
  7797  08D7  3000               	movlw	0
  7798  08D8  00D5               	movwf	___fladd@b+3
  7799  08D9  3000               	movlw	0
  7800  08DA  00D4               	movwf	___fladd@b+2
  7801  08DB  3000               	movlw	0
  7802  08DC  00D3               	movwf	___fladd@b+1
  7803  08DD  3000               	movlw	0
  7804  08DE  00D2               	movwf	___fladd@b
  7805  08DF                     l2484:	
  7806  08DF  17D4               	bsf	___fladd@b+2,7
  7807  08E0  01D5               	clrf	___fladd@b+3
  7808  08E1  28EA               	goto	l2490
  7809  08E2                     l2488:	
  7810  08E2  3000               	movlw	0
  7811  08E3  00D5               	movwf	___fladd@b+3
  7812  08E4  3000               	movlw	0
  7813  08E5  00D4               	movwf	___fladd@b+2
  7814  08E6  3000               	movlw	0
  7815  08E7  00D3               	movwf	___fladd@b+1
  7816  08E8  3000               	movlw	0
  7817  08E9  00D2               	movwf	___fladd@b
  7818  08EA                     l2490:	
  7819  08EA  0859               	movf	___fladd@a+3,w
  7820  08EB  3980               	andlw	128
  7821  08EC  00DA               	movwf	??___fladd
  7822  08ED  085A               	movf	??___fladd,w
  7823  08EE  00E3               	movwf	___fladd@aexp
  7824  08EF  0863               	movf	___fladd@aexp,w
  7825  08F0  0662               	xorwf	___fladd@signs,w
  7826  08F1  1D03               	btfss	3,2
  7827  08F2  1762               	bsf	___fladd@signs,6
  7828  08F3  0859               	movf	___fladd@a+3,w
  7829  08F4  00DA               	movwf	??___fladd
  7830  08F5  075A               	addwf	??___fladd,w
  7831  08F6  00DB               	movwf	??___fladd+1
  7832  08F7  085B               	movf	??___fladd+1,w
  7833  08F8  00E3               	movwf	___fladd@aexp
  7834  08F9  1BD8               	btfsc	___fladd@a+2,7
  7835  08FA  1463               	bsf	___fladd@aexp,0
  7836  08FB  0863               	movf	___fladd@aexp,w
  7837  08FC  1903               	btfsc	3,2
  7838  08FD  290C               	goto	l2512
  7839  08FE  0A63               	incf	___fladd@aexp,w
  7840  08FF  1D03               	btfss	3,2
  7841  0900  2909               	goto	l2508
  7842  0901  3000               	movlw	0
  7843  0902  00D9               	movwf	___fladd@a+3
  7844  0903  3000               	movlw	0
  7845  0904  00D8               	movwf	___fladd@a+2
  7846  0905  3000               	movlw	0
  7847  0906  00D7               	movwf	___fladd@a+1
  7848  0907  3000               	movlw	0
  7849  0908  00D6               	movwf	___fladd@a
  7850  0909                     l2508:	
  7851  0909  17D8               	bsf	___fladd@a+2,7
  7852  090A  01D9               	clrf	___fladd@a+3
  7853  090B  2914               	goto	l598
  7854  090C                     l2512:	
  7855  090C  3000               	movlw	0
  7856  090D  00D9               	movwf	___fladd@a+3
  7857  090E  3000               	movlw	0
  7858  090F  00D8               	movwf	___fladd@a+2
  7859  0910  3000               	movlw	0
  7860  0911  00D7               	movwf	___fladd@a+1
  7861  0912  3000               	movlw	0
  7862  0913  00D6               	movwf	___fladd@a
  7863  0914                     l598:	
  7864  0914  0864               	movf	___fladd@bexp,w
  7865  0915  0263               	subwf	___fladd@aexp,w
  7866  0916  1803               	skipnc
  7867  0917  295A               	goto	l2548
  7868  0918  1F62               	btfss	___fladd@signs,6
  7869  0919  291E               	goto	l2518
  7870  091A  3080               	movlw	128
  7871  091B  00DA               	movwf	??___fladd
  7872  091C  085A               	movf	??___fladd,w
  7873  091D  06E2               	xorwf	___fladd@signs,f
  7874  091E                     l2518:	
  7875  091E  0864               	movf	___fladd@bexp,w
  7876  091F  00DA               	movwf	??___fladd
  7877  0920  085A               	movf	??___fladd,w
  7878  0921  00E5               	movwf	___fladd@grs
  7879  0922  0863               	movf	___fladd@aexp,w
  7880  0923  00DA               	movwf	??___fladd
  7881  0924  085A               	movf	??___fladd,w
  7882  0925  00E4               	movwf	___fladd@bexp
  7883  0926  0865               	movf	___fladd@grs,w
  7884  0927  00DA               	movwf	??___fladd
  7885  0928  085A               	movf	??___fladd,w
  7886  0929  00E3               	movwf	___fladd@aexp
  7887  092A  0852               	movf	___fladd@b,w
  7888  092B  00DA               	movwf	??___fladd
  7889  092C  085A               	movf	??___fladd,w
  7890  092D  00E5               	movwf	___fladd@grs
  7891  092E  0856               	movf	___fladd@a,w
  7892  092F  00DA               	movwf	??___fladd
  7893  0930  085A               	movf	??___fladd,w
  7894  0931  00D2               	movwf	___fladd@b
  7895  0932  0865               	movf	___fladd@grs,w
  7896  0933  00DA               	movwf	??___fladd
  7897  0934  085A               	movf	??___fladd,w
  7898  0935  00D6               	movwf	___fladd@a
  7899  0936  0853               	movf	___fladd@b+1,w
  7900  0937  00DA               	movwf	??___fladd
  7901  0938  085A               	movf	??___fladd,w
  7902  0939  00E5               	movwf	___fladd@grs
  7903  093A  0857               	movf	___fladd@a+1,w
  7904  093B  00DA               	movwf	??___fladd
  7905  093C  085A               	movf	??___fladd,w
  7906  093D  00D3               	movwf	___fladd@b+1
  7907  093E  0865               	movf	___fladd@grs,w
  7908  093F  00DA               	movwf	??___fladd
  7909  0940  085A               	movf	??___fladd,w
  7910  0941  00D7               	movwf	___fladd@a+1
  7911  0942  0854               	movf	___fladd@b+2,w
  7912  0943  00DA               	movwf	??___fladd
  7913  0944  085A               	movf	??___fladd,w
  7914  0945  00E5               	movwf	___fladd@grs
  7915  0946  0858               	movf	___fladd@a+2,w
  7916  0947  00DA               	movwf	??___fladd
  7917  0948  085A               	movf	??___fladd,w
  7918  0949  00D4               	movwf	___fladd@b+2
  7919  094A  0865               	movf	___fladd@grs,w
  7920  094B  00DA               	movwf	??___fladd
  7921  094C  085A               	movf	??___fladd,w
  7922  094D  00D8               	movwf	___fladd@a+2
  7923  094E  0855               	movf	___fladd@b+3,w
  7924  094F  00DA               	movwf	??___fladd
  7925  0950  085A               	movf	??___fladd,w
  7926  0951  00E5               	movwf	___fladd@grs
  7927  0952  0859               	movf	___fladd@a+3,w
  7928  0953  00DA               	movwf	??___fladd
  7929  0954  085A               	movf	??___fladd,w
  7930  0955  00D5               	movwf	___fladd@b+3
  7931  0956  0865               	movf	___fladd@grs,w
  7932  0957  00DA               	movwf	??___fladd
  7933  0958  085A               	movf	??___fladd,w
  7934  0959  00D9               	movwf	___fladd@a+3
  7935  095A                     l2548:	
  7936  095A  01E5               	clrf	___fladd@grs
  7937  095B  0863               	movf	___fladd@aexp,w
  7938  095C  00DA               	movwf	??___fladd
  7939  095D  01DB               	clrf	??___fladd+1
  7940  095E  085B               	movf	??___fladd+1,w
  7941  095F  00DD               	movwf	??___fladd+3
  7942  0960  0864               	movf	___fladd@bexp,w
  7943  0961  025A               	subwf	??___fladd,w
  7944  0962  00DC               	movwf	??___fladd+2
  7945  0963  1C03               	skipc
  7946  0964  03DD               	decf	??___fladd+3,f
  7947  0965  085D               	movf	??___fladd+3,w
  7948  0966  3A80               	xorlw	128
  7949  0967  00FF               	movwf	127
  7950  0968  3080               	movlw	128
  7951  0969  027F               	subwf	127,w
  7952  096A  1D03               	skipz
  7953  096B  296E               	goto	u3565
  7954  096C  301A               	movlw	26
  7955  096D  025C               	subwf	??___fladd+2,w
  7956  096E                     u3565:	
  7957  096E  1C03               	skipc
  7958  096F  29A7               	goto	l2566
  7959  0970  1283               	bcf	3,5	;RP0=0, select bank0
  7960  0971  1303               	bcf	3,6	;RP1=0, select bank0
  7961  0972  0855               	movf	___fladd@b+3,w
  7962  0973  0454               	iorwf	___fladd@b+2,w
  7963  0974  0453               	iorwf	___fladd@b+1,w
  7964  0975  0452               	iorwf	___fladd@b,w
  7965  0976  1903               	btfsc	3,2
  7966  0977  297A               	goto	u3570
  7967  0978  3001               	movlw	1
  7968  0979  297B               	goto	u3580
  7969  097A                     u3570:	
  7970  097A  3000               	movlw	0
  7971  097B                     u3580:	
  7972  097B  00DA               	movwf	??___fladd
  7973  097C  085A               	movf	??___fladd,w
  7974  097D  00E5               	movwf	___fladd@grs
  7975  097E  3000               	movlw	0
  7976  097F  00D5               	movwf	___fladd@b+3
  7977  0980  3000               	movlw	0
  7978  0981  00D4               	movwf	___fladd@b+2
  7979  0982  3000               	movlw	0
  7980  0983  00D3               	movwf	___fladd@b+1
  7981  0984  3000               	movlw	0
  7982  0985  00D2               	movwf	___fladd@b
  7983  0986  0863               	movf	___fladd@aexp,w
  7984  0987  00DA               	movwf	??___fladd
  7985  0988  085A               	movf	??___fladd,w
  7986  0989  00E4               	movwf	___fladd@bexp
  7987  098A  29AD               	goto	l602
  7988  098B                     l604:	
  7989  098B  1C65               	btfss	___fladd@grs,0
  7990  098C  2996               	goto	l2556
  7991  098D  0865               	movf	___fladd@grs,w
  7992  098E  00DA               	movwf	??___fladd
  7993  098F  1003               	clrc
  7994  0990  0C5A               	rrf	??___fladd,w
  7995  0991  3801               	iorlw	1
  7996  0992  00DB               	movwf	??___fladd+1
  7997  0993  085B               	movf	??___fladd+1,w
  7998  0994  00E5               	movwf	___fladd@grs
  7999  0995  2998               	goto	l2558
  8000  0996                     l2556:	
  8001  0996  1003               	clrc
  8002  0997  0CE5               	rrf	___fladd@grs,f
  8003  0998                     l2558:	
  8004  0998  1852               	btfsc	___fladd@b,0
  8005  0999  17E5               	bsf	___fladd@grs,7
  8006  099A  3001               	movlw	1
  8007  099B  00DA               	movwf	??___fladd
  8008  099C                     u3615:	
  8009  099C  0D55               	rlf	___fladd@b+3,w
  8010  099D  0CD5               	rrf	___fladd@b+3,f
  8011  099E  0CD4               	rrf	___fladd@b+2,f
  8012  099F  0CD3               	rrf	___fladd@b+1,f
  8013  09A0  0CD2               	rrf	___fladd@b,f
  8014  09A1  0BDA               	decfsz	??___fladd& (0+127),f
  8015  09A2  299C               	goto	u3615
  8016  09A3  3001               	movlw	1
  8017  09A4  00DA               	movwf	??___fladd
  8018  09A5  085A               	movf	??___fladd,w
  8019  09A6  07E4               	addwf	___fladd@bexp,f
  8020  09A7                     l2566:	
  8021  09A7  1283               	bcf	3,5	;RP0=0, select bank0
  8022  09A8  1303               	bcf	3,6	;RP1=0, select bank0
  8023  09A9  0863               	movf	___fladd@aexp,w
  8024  09AA  0264               	subwf	___fladd@bexp,w
  8025  09AB  1C03               	skipc
  8026  09AC  298B               	goto	l604
  8027  09AD                     l602:	
  8028  09AD  1B62               	btfsc	___fladd@signs,6
  8029  09AE  29EE               	goto	l2592
  8030  09AF  0864               	movf	___fladd@bexp,w
  8031  09B0  1D03               	btfss	3,2
  8032  09B1  29BB               	goto	l2574
  8033  09B2  3000               	movlw	0
  8034  09B3  00D5               	movwf	?___fladd+3
  8035  09B4  3000               	movlw	0
  8036  09B5  00D4               	movwf	?___fladd+2
  8037  09B6  3000               	movlw	0
  8038  09B7  00D3               	movwf	?___fladd+1
  8039  09B8  3000               	movlw	0
  8040  09B9  00D2               	movwf	?___fladd
  8041  09BA  0008               	return
  8042  09BB                     l2574:	
  8043  09BB  0856               	movf	___fladd@a,w
  8044  09BC  07D2               	addwf	___fladd@b,f
  8045  09BD  0857               	movf	___fladd@a+1,w
  8046  09BE  1103               	clrz
  8047  09BF  1803               	skipnc
  8048  09C0  3E01               	addlw	1
  8049  09C1  1D03               	btfss	3,2
  8050  09C2  07D3               	addwf	___fladd@b+1,f
  8051  09C3  0858               	movf	___fladd@a+2,w
  8052  09C4  1103               	clrz
  8053  09C5  1803               	skipnc
  8054  09C6  3E01               	addlw	1
  8055  09C7  1D03               	btfss	3,2
  8056  09C8  07D4               	addwf	___fladd@b+2,f
  8057  09C9  0859               	movf	___fladd@a+3,w
  8058  09CA  1103               	clrz
  8059  09CB  1803               	skipnc
  8060  09CC  3E01               	addlw	1
  8061  09CD  1D03               	btfss	3,2
  8062  09CE  07D5               	addwf	___fladd@b+3,f
  8063  09CF  1C55               	btfss	___fladd@b+3,0
  8064  09D0  2A90               	goto	l2626
  8065  09D1  1C65               	btfss	___fladd@grs,0
  8066  09D2  29DC               	goto	l2582
  8067  09D3  0865               	movf	___fladd@grs,w
  8068  09D4  00DA               	movwf	??___fladd
  8069  09D5  1003               	clrc
  8070  09D6  0C5A               	rrf	??___fladd,w
  8071  09D7  3801               	iorlw	1
  8072  09D8  00DB               	movwf	??___fladd+1
  8073  09D9  085B               	movf	??___fladd+1,w
  8074  09DA  00E5               	movwf	___fladd@grs
  8075  09DB  29DE               	goto	l2584
  8076  09DC                     l2582:	
  8077  09DC  1003               	clrc
  8078  09DD  0CE5               	rrf	___fladd@grs,f
  8079  09DE                     l2584:	
  8080  09DE  1852               	btfsc	___fladd@b,0
  8081  09DF  17E5               	bsf	___fladd@grs,7
  8082  09E0  3001               	movlw	1
  8083  09E1  00DA               	movwf	??___fladd
  8084  09E2                     u3695:	
  8085  09E2  0D55               	rlf	___fladd@b+3,w
  8086  09E3  0CD5               	rrf	___fladd@b+3,f
  8087  09E4  0CD4               	rrf	___fladd@b+2,f
  8088  09E5  0CD3               	rrf	___fladd@b+1,f
  8089  09E6  0CD2               	rrf	___fladd@b,f
  8090  09E7  0BDA               	decfsz	??___fladd& (0+127),f
  8091  09E8  29E2               	goto	u3695
  8092  09E9  3001               	movlw	1
  8093  09EA  00DA               	movwf	??___fladd
  8094  09EB  085A               	movf	??___fladd,w
  8095  09EC  07E4               	addwf	___fladd@bexp,f
  8096  09ED  2A90               	goto	l2626
  8097  09EE                     l2592:	
  8098  09EE  0855               	movf	___fladd@b+3,w
  8099  09EF  3A80               	xorlw	128
  8100  09F0  00FF               	movwf	127
  8101  09F1  0859               	movf	___fladd@a+3,w
  8102  09F2  3A80               	xorlw	128
  8103  09F3  027F               	subwf	127,w
  8104  09F4  1D03               	skipz
  8105  09F5  2A00               	goto	u3703
  8106  09F6  0858               	movf	___fladd@a+2,w
  8107  09F7  0254               	subwf	___fladd@b+2,w
  8108  09F8  1D03               	skipz
  8109  09F9  2A00               	goto	u3703
  8110  09FA  0857               	movf	___fladd@a+1,w
  8111  09FB  0253               	subwf	___fladd@b+1,w
  8112  09FC  1D03               	skipz
  8113  09FD  2A00               	goto	u3703
  8114  09FE  0856               	movf	___fladd@a,w
  8115  09FF  0252               	subwf	___fladd@b,w
  8116  0A00                     u3703:	
  8117  0A00  1803               	skipnc
  8118  0A01  2A58               	goto	l2602
  8119  0A02  30FF               	movlw	255
  8120  0A03  00DA               	movwf	??___fladd
  8121  0A04  30FF               	movlw	255
  8122  0A05  00DB               	movwf	??___fladd+1
  8123  0A06  30FF               	movlw	255
  8124  0A07  00DC               	movwf	??___fladd+2
  8125  0A08  30FF               	movlw	255
  8126  0A09  00DD               	movwf	??___fladd+3
  8127  0A0A  0856               	movf	___fladd@a,w
  8128  0A0B  00DE               	movwf	??___fladd+4
  8129  0A0C  0857               	movf	___fladd@a+1,w
  8130  0A0D  00DF               	movwf	??___fladd+5
  8131  0A0E  0858               	movf	___fladd@a+2,w
  8132  0A0F  00E0               	movwf	??___fladd+6
  8133  0A10  0859               	movf	___fladd@a+3,w
  8134  0A11  00E1               	movwf	??___fladd+7
  8135  0A12  0852               	movf	___fladd@b,w
  8136  0A13  02DE               	subwf	??___fladd+4,f
  8137  0A14  0853               	movf	___fladd@b+1,w
  8138  0A15  1C03               	skipc
  8139  0A16  0F53               	incfsz	___fladd@b+1,w
  8140  0A17  2A19               	goto	u3711
  8141  0A18  2A1A               	goto	u3712
  8142  0A19                     u3711:	
  8143  0A19  02DF               	subwf	??___fladd+5,f
  8144  0A1A                     u3712:	
  8145  0A1A  0854               	movf	___fladd@b+2,w
  8146  0A1B  1C03               	skipc
  8147  0A1C  0F54               	incfsz	___fladd@b+2,w
  8148  0A1D  2A1F               	goto	u3713
  8149  0A1E  2A20               	goto	u3714
  8150  0A1F                     u3713:	
  8151  0A1F  02E0               	subwf	??___fladd+6,f
  8152  0A20                     u3714:	
  8153  0A20  0855               	movf	___fladd@b+3,w
  8154  0A21  1C03               	skipc
  8155  0A22  0F55               	incfsz	___fladd@b+3,w
  8156  0A23  2A25               	goto	u3715
  8157  0A24  2A26               	goto	u3716
  8158  0A25                     u3715:	
  8159  0A25  02E1               	subwf	??___fladd+7,f
  8160  0A26                     u3716:	
  8161  0A26  085E               	movf	??___fladd+4,w
  8162  0A27  07DA               	addwf	??___fladd,f
  8163  0A28  085F               	movf	??___fladd+5,w
  8164  0A29  1803               	skipnc
  8165  0A2A  0F5F               	incfsz	??___fladd+5,w
  8166  0A2B  2A2D               	goto	u3720
  8167  0A2C  2A2E               	goto	u3721
  8168  0A2D                     u3720:	
  8169  0A2D  07DB               	addwf	??___fladd+1,f
  8170  0A2E                     u3721:	
  8171  0A2E  0860               	movf	??___fladd+6,w
  8172  0A2F  1803               	skipnc
  8173  0A30  0F60               	incfsz	??___fladd+6,w
  8174  0A31  2A33               	goto	u3722
  8175  0A32  2A34               	goto	u3723
  8176  0A33                     u3722:	
  8177  0A33  07DC               	addwf	??___fladd+2,f
  8178  0A34                     u3723:	
  8179  0A34  0861               	movf	??___fladd+7,w
  8180  0A35  1803               	skipnc
  8181  0A36  0A61               	incf	??___fladd+7,w
  8182  0A37  07DD               	addwf	??___fladd+3,f
  8183  0A38  085D               	movf	??___fladd+3,w
  8184  0A39  00D5               	movwf	___fladd@b+3
  8185  0A3A  085C               	movf	??___fladd+2,w
  8186  0A3B  00D4               	movwf	___fladd@b+2
  8187  0A3C  085B               	movf	??___fladd+1,w
  8188  0A3D  00D3               	movwf	___fladd@b+1
  8189  0A3E  085A               	movf	??___fladd,w
  8190  0A3F  00D2               	movwf	___fladd@b
  8191  0A40  3080               	movlw	128
  8192  0A41  00DA               	movwf	??___fladd
  8193  0A42  085A               	movf	??___fladd,w
  8194  0A43  06E2               	xorwf	___fladd@signs,f
  8195  0A44  09E5               	comf	___fladd@grs,f
  8196  0A45  0AE5               	incf	___fladd@grs,f
  8197  0A46  0865               	movf	___fladd@grs,w
  8198  0A47  1D03               	btfss	3,2
  8199  0A48  2A66               	goto	l619
  8200  0A49  3001               	movlw	1
  8201  0A4A  07D2               	addwf	___fladd@b,f
  8202  0A4B  3000               	movlw	0
  8203  0A4C  1803               	skipnc
  8204  0A4D  3001               	movlw	1
  8205  0A4E  07D3               	addwf	___fladd@b+1,f
  8206  0A4F  3000               	movlw	0
  8207  0A50  1803               	skipnc
  8208  0A51  3001               	movlw	1
  8209  0A52  07D4               	addwf	___fladd@b+2,f
  8210  0A53  3000               	movlw	0
  8211  0A54  1803               	skipnc
  8212  0A55  3001               	movlw	1
  8213  0A56  07D5               	addwf	___fladd@b+3,f
  8214  0A57  2A66               	goto	l619
  8215  0A58                     l2602:	
  8216  0A58  0856               	movf	___fladd@a,w
  8217  0A59  02D2               	subwf	___fladd@b,f
  8218  0A5A  0857               	movf	___fladd@a+1,w
  8219  0A5B  1C03               	skipc
  8220  0A5C  0F57               	incfsz	___fladd@a+1,w
  8221  0A5D  02D3               	subwf	___fladd@b+1,f
  8222  0A5E  0858               	movf	___fladd@a+2,w
  8223  0A5F  1C03               	skipc
  8224  0A60  0F58               	incfsz	___fladd@a+2,w
  8225  0A61  02D4               	subwf	___fladd@b+2,f
  8226  0A62  0859               	movf	___fladd@a+3,w
  8227  0A63  1C03               	skipc
  8228  0A64  0F59               	incfsz	___fladd@a+3,w
  8229  0A65  02D5               	subwf	___fladd@b+3,f
  8230  0A66                     l619:	
  8231  0A66  0855               	movf	___fladd@b+3,w
  8232  0A67  0454               	iorwf	___fladd@b+2,w
  8233  0A68  0453               	iorwf	___fladd@b+1,w
  8234  0A69  0452               	iorwf	___fladd@b,w
  8235  0A6A  1D03               	skipz
  8236  0A6B  2A8E               	goto	l2624
  8237  0A6C  0865               	movf	___fladd@grs,w
  8238  0A6D  1D03               	btfss	3,2
  8239  0A6E  2A8E               	goto	l2624
  8240  0A6F  3000               	movlw	0
  8241  0A70  00D5               	movwf	?___fladd+3
  8242  0A71  3000               	movlw	0
  8243  0A72  00D4               	movwf	?___fladd+2
  8244  0A73  3000               	movlw	0
  8245  0A74  00D3               	movwf	?___fladd+1
  8246  0A75  3000               	movlw	0
  8247  0A76  00D2               	movwf	?___fladd
  8248  0A77  0008               	return
  8249  0A78                     l2610:	
  8250  0A78  3001               	movlw	1
  8251  0A79  00DA               	movwf	??___fladd
  8252  0A7A                     u3765:	
  8253  0A7A  1003               	clrc
  8254  0A7B  0DD2               	rlf	___fladd@b,f
  8255  0A7C  0DD3               	rlf	___fladd@b+1,f
  8256  0A7D  0DD4               	rlf	___fladd@b+2,f
  8257  0A7E  0DD5               	rlf	___fladd@b+3,f
  8258  0A7F  0BDA               	decfsz	??___fladd,f
  8259  0A80  2A7A               	goto	u3765
  8260  0A81  1BE5               	btfsc	___fladd@grs,7
  8261  0A82  1452               	bsf	___fladd@b,0
  8262  0A83  1C65               	btfss	___fladd@grs,0
  8263  0A84  2A87               	goto	l2618
  8264  0A85  1403               	setc
  8265  0A86  2A88               	goto	L9
  8266  0A87                     l2618:	
  8267  0A87  1003               	clrc
  8268  0A88                     L9:	
  8269  0A88  0DE5               	rlf	___fladd@grs,f
  8270  0A89  0864               	movf	___fladd@bexp,w
  8271  0A8A  1903               	btfsc	3,2
  8272  0A8B  2A8E               	goto	l2624
  8273  0A8C  3001               	movlw	1
  8274  0A8D  02E4               	subwf	___fladd@bexp,f
  8275  0A8E                     l2624:	
  8276  0A8E  1FD4               	btfss	___fladd@b+2,7
  8277  0A8F  2A78               	goto	l2610
  8278  0A90                     l2626:	
  8279  0A90  01E3               	clrf	___fladd@aexp
  8280  0A91  1FE5               	btfss	___fladd@grs,7
  8281  0A92  2A9B               	goto	l2636
  8282  0A93  0865               	movf	___fladd@grs,w
  8283  0A94  397F               	andlw	127
  8284  0A95  1903               	btfsc	3,2
  8285  0A96  1852               	btfsc	___fladd@b,0
  8286  0A97  2A99               	goto	l2632
  8287  0A98  2A9B               	goto	l2636
  8288  0A99                     l2632:	
  8289  0A99  01E3               	clrf	___fladd@aexp
  8290  0A9A  0AE3               	incf	___fladd@aexp,f
  8291  0A9B                     l2636:	
  8292  0A9B  0863               	movf	___fladd@aexp,w
  8293  0A9C  1903               	btfsc	3,2
  8294  0A9D  2ACE               	goto	l632
  8295  0A9E  3001               	movlw	1
  8296  0A9F  07D2               	addwf	___fladd@b,f
  8297  0AA0  3000               	movlw	0
  8298  0AA1  1803               	skipnc
  8299  0AA2  3001               	movlw	1
  8300  0AA3  07D3               	addwf	___fladd@b+1,f
  8301  0AA4  3000               	movlw	0
  8302  0AA5  1803               	skipnc
  8303  0AA6  3001               	movlw	1
  8304  0AA7  07D4               	addwf	___fladd@b+2,f
  8305  0AA8  3000               	movlw	0
  8306  0AA9  1803               	skipnc
  8307  0AAA  3001               	movlw	1
  8308  0AAB  07D5               	addwf	___fladd@b+3,f
  8309  0AAC  1C55               	btfss	___fladd@b+3,0
  8310  0AAD  2ACE               	goto	l632
  8311  0AAE  0852               	movf	___fladd@b,w
  8312  0AAF  00DA               	movwf	??___fladd
  8313  0AB0  0853               	movf	___fladd@b+1,w
  8314  0AB1  00DB               	movwf	??___fladd+1
  8315  0AB2  0854               	movf	___fladd@b+2,w
  8316  0AB3  00DC               	movwf	??___fladd+2
  8317  0AB4  0855               	movf	___fladd@b+3,w
  8318  0AB5  00DD               	movwf	??___fladd+3
  8319  0AB6  3001               	movlw	1
  8320  0AB7  00DE               	movwf	??___fladd+4
  8321  0AB8                     u3865:	
  8322  0AB8  0D5D               	rlf	??___fladd+3,w
  8323  0AB9  0CDD               	rrf	??___fladd+3,f
  8324  0ABA  0CDC               	rrf	??___fladd+2,f
  8325  0ABB  0CDB               	rrf	??___fladd+1,f
  8326  0ABC  0CDA               	rrf	??___fladd,f
  8327  0ABD  0BDE               	decfsz	??___fladd+4,f
  8328  0ABE  2AB8               	goto	u3865
  8329  0ABF  085D               	movf	??___fladd+3,w
  8330  0AC0  00D5               	movwf	___fladd@b+3
  8331  0AC1  085C               	movf	??___fladd+2,w
  8332  0AC2  00D4               	movwf	___fladd@b+2
  8333  0AC3  085B               	movf	??___fladd+1,w
  8334  0AC4  00D3               	movwf	___fladd@b+1
  8335  0AC5  085A               	movf	??___fladd,w
  8336  0AC6  00D2               	movwf	___fladd@b
  8337  0AC7  0A64               	incf	___fladd@bexp,w
  8338  0AC8  1903               	btfsc	3,2
  8339  0AC9  2ACE               	goto	l632
  8340  0ACA  3001               	movlw	1
  8341  0ACB  00DA               	movwf	??___fladd
  8342  0ACC  085A               	movf	??___fladd,w
  8343  0ACD  07E4               	addwf	___fladd@bexp,f
  8344  0ACE                     l632:	
  8345  0ACE  0A64               	incf	___fladd@bexp,w
  8346  0ACF  1D03               	btfss	3,2
  8347  0AD0  0864               	movf	___fladd@bexp,w
  8348  0AD1  1D03               	btfss	3,2
  8349  0AD2  2ADE               	goto	l2654
  8350  0AD3  3000               	movlw	0
  8351  0AD4  00D5               	movwf	___fladd@b+3
  8352  0AD5  3000               	movlw	0
  8353  0AD6  00D4               	movwf	___fladd@b+2
  8354  0AD7  3000               	movlw	0
  8355  0AD8  00D3               	movwf	___fladd@b+1
  8356  0AD9  3000               	movlw	0
  8357  0ADA  00D2               	movwf	___fladd@b
  8358  0ADB  0864               	movf	___fladd@bexp,w
  8359  0ADC  1903               	btfsc	3,2
  8360  0ADD  01E2               	clrf	___fladd@signs
  8361  0ADE                     l2654:	
  8362  0ADE  1C64               	btfss	___fladd@bexp,0
  8363  0ADF  2AE2               	goto	l2658
  8364  0AE0  17D4               	bsf	___fladd@b+2,7
  8365  0AE1  2AE6               	goto	l640
  8366  0AE2                     l2658:	
  8367  0AE2  307F               	movlw	127
  8368  0AE3  00DA               	movwf	??___fladd
  8369  0AE4  085A               	movf	??___fladd,w
  8370  0AE5  05D4               	andwf	___fladd@b+2,f
  8371  0AE6                     l640:	
  8372  0AE6  0864               	movf	___fladd@bexp,w
  8373  0AE7  00DA               	movwf	??___fladd
  8374  0AE8  1003               	clrc
  8375  0AE9  0C5A               	rrf	??___fladd,w
  8376  0AEA  00DB               	movwf	??___fladd+1
  8377  0AEB  085B               	movf	??___fladd+1,w
  8378  0AEC  00D5               	movwf	___fladd@b+3
  8379  0AED  1FE2               	btfss	___fladd@signs,7
  8380  0AEE  0008               	return
  8381  0AEF  17D5               	bsf	___fladd@b+3,7
  8382  0AF0  0008               	return
  8383  0AF1                     __end_of___fladd:	
  8384                           
  8385                           	psect	text20
  8386  08B9                     __ptext20:	
  8387 ;; *************** function ___flneg *****************
  8388 ;; Defined at:
  8389 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  f1              4    0[COMMON] unsigned char 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  4    0[COMMON] unsigned char 
  8396 ;; Registers used:
  8397 ;;		wreg
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         4       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0
  8406 ;;      Totals:         4       0       0       0       0
  8407 ;;Total ram usage:        4 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; This function calls:
  8410 ;;		Nothing
  8411 ;; This function is called by:
  8412 ;;		_sprintf
  8413 ;; This function uses a non-reentrant model
  8414 ;;
  8415                           
  8416                           
  8417                           ;psect for function ___flneg
  8418  08B9                     ___flneg:	
  8419                           
  8420                           ;incstack = 0
  8421                           ; Regs used in ___flneg: [wreg]
  8422  08B9  0873               	movf	___flneg@f1+3,w
  8423  08BA  0472               	iorwf	___flneg@f1+2,w
  8424  08BB  0471               	iorwf	___flneg@f1+1,w
  8425  08BC  0470               	iorwf	___flneg@f1,w
  8426  08BD  1903               	skipnz
  8427  08BE  0008               	return
  8428  08BF  3080               	movlw	128
  8429  08C0  06F3               	xorwf	___flneg@f1+3,f
  8430  08C1  0008               	return
  8431  08C2                     __end_of___flneg:	
  8432                           
  8433                           	psect	text21
  8434  1D27                     __ptext21:	
  8435 ;; *************** function ___flge *****************
  8436 ;; Defined at:
  8437 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;  ff1             4    0[COMMON] unsigned char 
  8440 ;;  ff2             4    4[COMMON] unsigned char 
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;		None               void
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8452 ;;      Params:         8       0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0
  8454 ;;      Temps:          4       0       0       0       0
  8455 ;;      Totals:        12       0       0       0       0
  8456 ;;Total ram usage:       12 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_main
  8462 ;;		_sprintf
  8463 ;; This function uses a non-reentrant model
  8464 ;;
  8465                           
  8466                           
  8467                           ;psect for function ___flge
  8468  1D27                     ___flge:	
  8469                           
  8470                           ;incstack = 0
  8471                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8472  1D27  3000               	movlw	0
  8473  1D28  0570               	andwf	___flge@ff1,w
  8474  1D29  00F8               	movwf	??___flge
  8475  1D2A  3000               	movlw	0
  8476  1D2B  0571               	andwf	___flge@ff1+1,w
  8477  1D2C  00F9               	movwf	??___flge+1
  8478  1D2D  3080               	movlw	128
  8479  1D2E  0572               	andwf	___flge@ff1+2,w
  8480  1D2F  00FA               	movwf	??___flge+2
  8481  1D30  307F               	movlw	127
  8482  1D31  0573               	andwf	___flge@ff1+3,w
  8483  1D32  00FB               	movwf	??___flge+3
  8484  1D33  087B               	movf	??___flge+3,w
  8485  1D34  047A               	iorwf	??___flge+2,w
  8486  1D35  0479               	iorwf	??___flge+1,w
  8487  1D36  0478               	iorwf	??___flge,w
  8488  1D37  1D03               	skipz
  8489  1D38  2D41               	goto	l462
  8490  1D39  3000               	movlw	0
  8491  1D3A  00F3               	movwf	___flge@ff1+3
  8492  1D3B  3000               	movlw	0
  8493  1D3C  00F2               	movwf	___flge@ff1+2
  8494  1D3D  3000               	movlw	0
  8495  1D3E  00F1               	movwf	___flge@ff1+1
  8496  1D3F  3000               	movlw	0
  8497  1D40  00F0               	movwf	___flge@ff1
  8498  1D41                     l462:	
  8499  1D41  3000               	movlw	0
  8500  1D42  0574               	andwf	___flge@ff2,w
  8501  1D43  00F8               	movwf	??___flge
  8502  1D44  3000               	movlw	0
  8503  1D45  0575               	andwf	___flge@ff2+1,w
  8504  1D46  00F9               	movwf	??___flge+1
  8505  1D47  3080               	movlw	128
  8506  1D48  0576               	andwf	___flge@ff2+2,w
  8507  1D49  00FA               	movwf	??___flge+2
  8508  1D4A  307F               	movlw	127
  8509  1D4B  0577               	andwf	___flge@ff2+3,w
  8510  1D4C  00FB               	movwf	??___flge+3
  8511  1D4D  087B               	movf	??___flge+3,w
  8512  1D4E  047A               	iorwf	??___flge+2,w
  8513  1D4F  0479               	iorwf	??___flge+1,w
  8514  1D50  0478               	iorwf	??___flge,w
  8515  1D51  1D03               	skipz
  8516  1D52  2D5B               	goto	l3076
  8517  1D53  3000               	movlw	0
  8518  1D54  00F7               	movwf	___flge@ff2+3
  8519  1D55  3000               	movlw	0
  8520  1D56  00F6               	movwf	___flge@ff2+2
  8521  1D57  3000               	movlw	0
  8522  1D58  00F5               	movwf	___flge@ff2+1
  8523  1D59  3000               	movlw	0
  8524  1D5A  00F4               	movwf	___flge@ff2
  8525  1D5B                     l3076:	
  8526  1D5B  1FF3               	btfss	___flge@ff1+3,7
  8527  1D5C  2D81               	goto	l3080
  8528  1D5D  3000               	movlw	0
  8529  1D5E  00F8               	movwf	??___flge
  8530  1D5F  3000               	movlw	0
  8531  1D60  00F9               	movwf	??___flge+1
  8532  1D61  3000               	movlw	0
  8533  1D62  00FA               	movwf	??___flge+2
  8534  1D63  3080               	movlw	128
  8535  1D64  00FB               	movwf	??___flge+3
  8536  1D65  0870               	movf	___flge@ff1,w
  8537  1D66  02F8               	subwf	??___flge,f
  8538  1D67  0871               	movf	___flge@ff1+1,w
  8539  1D68  1C03               	skipc
  8540  1D69  0F71               	incfsz	___flge@ff1+1,w
  8541  1D6A  2D6C               	goto	u5031
  8542  1D6B  2D6D               	goto	u5032
  8543  1D6C                     u5031:	
  8544  1D6C  02F9               	subwf	??___flge+1,f
  8545  1D6D                     u5032:	
  8546  1D6D  0872               	movf	___flge@ff1+2,w
  8547  1D6E  1C03               	skipc
  8548  1D6F  0F72               	incfsz	___flge@ff1+2,w
  8549  1D70  2D72               	goto	u5033
  8550  1D71  2D73               	goto	u5034
  8551  1D72                     u5033:	
  8552  1D72  02FA               	subwf	??___flge+2,f
  8553  1D73                     u5034:	
  8554  1D73  0873               	movf	___flge@ff1+3,w
  8555  1D74  1C03               	skipc
  8556  1D75  0F73               	incfsz	___flge@ff1+3,w
  8557  1D76  2D78               	goto	u5035
  8558  1D77  2D79               	goto	u5036
  8559  1D78                     u5035:	
  8560  1D78  02FB               	subwf	??___flge+3,f
  8561  1D79                     u5036:	
  8562  1D79  087B               	movf	??___flge+3,w
  8563  1D7A  00F3               	movwf	___flge@ff1+3
  8564  1D7B  087A               	movf	??___flge+2,w
  8565  1D7C  00F2               	movwf	___flge@ff1+2
  8566  1D7D  0879               	movf	??___flge+1,w
  8567  1D7E  00F1               	movwf	___flge@ff1+1
  8568  1D7F  0878               	movf	??___flge,w
  8569  1D80  00F0               	movwf	___flge@ff1
  8570  1D81                     l3080:	
  8571  1D81  1FF7               	btfss	___flge@ff2+3,7
  8572  1D82  2DA7               	goto	l465
  8573  1D83  3000               	movlw	0
  8574  1D84  00F8               	movwf	??___flge
  8575  1D85  3000               	movlw	0
  8576  1D86  00F9               	movwf	??___flge+1
  8577  1D87  3000               	movlw	0
  8578  1D88  00FA               	movwf	??___flge+2
  8579  1D89  3080               	movlw	128
  8580  1D8A  00FB               	movwf	??___flge+3
  8581  1D8B  0874               	movf	___flge@ff2,w
  8582  1D8C  02F8               	subwf	??___flge,f
  8583  1D8D  0875               	movf	___flge@ff2+1,w
  8584  1D8E  1C03               	skipc
  8585  1D8F  0F75               	incfsz	___flge@ff2+1,w
  8586  1D90  2D92               	goto	u5051
  8587  1D91  2D93               	goto	u5052
  8588  1D92                     u5051:	
  8589  1D92  02F9               	subwf	??___flge+1,f
  8590  1D93                     u5052:	
  8591  1D93  0876               	movf	___flge@ff2+2,w
  8592  1D94  1C03               	skipc
  8593  1D95  0F76               	incfsz	___flge@ff2+2,w
  8594  1D96  2D98               	goto	u5053
  8595  1D97  2D99               	goto	u5054
  8596  1D98                     u5053:	
  8597  1D98  02FA               	subwf	??___flge+2,f
  8598  1D99                     u5054:	
  8599  1D99  0877               	movf	___flge@ff2+3,w
  8600  1D9A  1C03               	skipc
  8601  1D9B  0F77               	incfsz	___flge@ff2+3,w
  8602  1D9C  2D9E               	goto	u5055
  8603  1D9D  2D9F               	goto	u5056
  8604  1D9E                     u5055:	
  8605  1D9E  02FB               	subwf	??___flge+3,f
  8606  1D9F                     u5056:	
  8607  1D9F  087B               	movf	??___flge+3,w
  8608  1DA0  00F7               	movwf	___flge@ff2+3
  8609  1DA1  087A               	movf	??___flge+2,w
  8610  1DA2  00F6               	movwf	___flge@ff2+2
  8611  1DA3  0879               	movf	??___flge+1,w
  8612  1DA4  00F5               	movwf	___flge@ff2+1
  8613  1DA5  0878               	movf	??___flge,w
  8614  1DA6  00F4               	movwf	___flge@ff2
  8615  1DA7                     l465:	
  8616  1DA7  3080               	movlw	128
  8617  1DA8  06F3               	xorwf	___flge@ff1+3,f
  8618  1DA9  3080               	movlw	128
  8619  1DAA  06F7               	xorwf	___flge@ff2+3,f
  8620  1DAB  0877               	movf	___flge@ff2+3,w
  8621  1DAC  0273               	subwf	___flge@ff1+3,w
  8622  1DAD  1D03               	skipz
  8623  1DAE  0008               	return
  8624  1DAF  0876               	movf	___flge@ff2+2,w
  8625  1DB0  0272               	subwf	___flge@ff1+2,w
  8626  1DB1  1D03               	skipz
  8627  1DB2  0008               	return
  8628  1DB3  0875               	movf	___flge@ff2+1,w
  8629  1DB4  0271               	subwf	___flge@ff1+1,w
  8630  1DB5  1D03               	skipz
  8631  1DB6  0008               	return
  8632  1DB7  0874               	movf	___flge@ff2,w
  8633  1DB8  0270               	subwf	___flge@ff1,w
  8634  1DB9  0008               	return
  8635  1DBA                     __end_of___flge:	
  8636                           
  8637                           	psect	text22
  8638  1A77                     __ptext22:	
  8639 ;; *************** function ___fleq *****************
  8640 ;; Defined at:
  8641 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  8642 ;; Parameters:    Size  Location     Type
  8643 ;;  ff1             4    0[COMMON] unsigned char 
  8644 ;;  ff2             4    4[COMMON] unsigned char 
  8645 ;; Auto vars:     Size  Location     Type
  8646 ;;		None
  8647 ;; Return value:  Size  Location     Type
  8648 ;;		None               void
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8656 ;;      Params:         8       0       0       0       0
  8657 ;;      Locals:         0       0       0       0       0
  8658 ;;      Temps:          4       0       0       0       0
  8659 ;;      Totals:        12       0       0       0       0
  8660 ;;Total ram usage:       12 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;;		_sprintf
  8667 ;; This function uses a non-reentrant model
  8668 ;;
  8669                           
  8670                           
  8671                           ;psect for function ___fleq
  8672  1A77                     ___fleq:	
  8673                           
  8674                           ;incstack = 0
  8675                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8676  1A77  3000               	movlw	0
  8677  1A78  0570               	andwf	___fleq@ff1,w
  8678  1A79  00F8               	movwf	??___fleq
  8679  1A7A  3000               	movlw	0
  8680  1A7B  0571               	andwf	___fleq@ff1+1,w
  8681  1A7C  00F9               	movwf	??___fleq+1
  8682  1A7D  3080               	movlw	128
  8683  1A7E  0572               	andwf	___fleq@ff1+2,w
  8684  1A7F  00FA               	movwf	??___fleq+2
  8685  1A80  307F               	movlw	127
  8686  1A81  0573               	andwf	___fleq@ff1+3,w
  8687  1A82  00FB               	movwf	??___fleq+3
  8688  1A83  087B               	movf	??___fleq+3,w
  8689  1A84  047A               	iorwf	??___fleq+2,w
  8690  1A85  0479               	iorwf	??___fleq+1,w
  8691  1A86  0478               	iorwf	??___fleq,w
  8692  1A87  1D03               	skipz
  8693  1A88  2A91               	goto	l457
  8694  1A89  3000               	movlw	0
  8695  1A8A  00F3               	movwf	___fleq@ff1+3
  8696  1A8B  3000               	movlw	0
  8697  1A8C  00F2               	movwf	___fleq@ff1+2
  8698  1A8D  3000               	movlw	0
  8699  1A8E  00F1               	movwf	___fleq@ff1+1
  8700  1A8F  3000               	movlw	0
  8701  1A90  00F0               	movwf	___fleq@ff1
  8702  1A91                     l457:	
  8703  1A91  3000               	movlw	0
  8704  1A92  0574               	andwf	___fleq@ff2,w
  8705  1A93  00F8               	movwf	??___fleq
  8706  1A94  3000               	movlw	0
  8707  1A95  0575               	andwf	___fleq@ff2+1,w
  8708  1A96  00F9               	movwf	??___fleq+1
  8709  1A97  3080               	movlw	128
  8710  1A98  0576               	andwf	___fleq@ff2+2,w
  8711  1A99  00FA               	movwf	??___fleq+2
  8712  1A9A  307F               	movlw	127
  8713  1A9B  0577               	andwf	___fleq@ff2+3,w
  8714  1A9C  00FB               	movwf	??___fleq+3
  8715  1A9D  087B               	movf	??___fleq+3,w
  8716  1A9E  047A               	iorwf	??___fleq+2,w
  8717  1A9F  0479               	iorwf	??___fleq+1,w
  8718  1AA0  0478               	iorwf	??___fleq,w
  8719  1AA1  1D03               	skipz
  8720  1AA2  2AAB               	goto	l458
  8721  1AA3  3000               	movlw	0
  8722  1AA4  00F7               	movwf	___fleq@ff2+3
  8723  1AA5  3000               	movlw	0
  8724  1AA6  00F6               	movwf	___fleq@ff2+2
  8725  1AA7  3000               	movlw	0
  8726  1AA8  00F5               	movwf	___fleq@ff2+1
  8727  1AA9  3000               	movlw	0
  8728  1AAA  00F4               	movwf	___fleq@ff2
  8729  1AAB                     l458:	
  8730  1AAB  0877               	movf	___fleq@ff2+3,w
  8731  1AAC  0673               	xorwf	___fleq@ff1+3,w
  8732  1AAD  1D03               	skipz
  8733  1AAE  2AB9               	goto	u4995
  8734  1AAF  0876               	movf	___fleq@ff2+2,w
  8735  1AB0  0672               	xorwf	___fleq@ff1+2,w
  8736  1AB1  1D03               	skipz
  8737  1AB2  2AB9               	goto	u4995
  8738  1AB3  0875               	movf	___fleq@ff2+1,w
  8739  1AB4  0671               	xorwf	___fleq@ff1+1,w
  8740  1AB5  1D03               	skipz
  8741  1AB6  2AB9               	goto	u4995
  8742  1AB7  0874               	movf	___fleq@ff2,w
  8743  1AB8  0670               	xorwf	___fleq@ff1,w
  8744  1AB9                     u4995:	
  8745  1AB9  1903               	skipnz
  8746  1ABA  2ABD               	goto	l3066
  8747  1ABB  1003               	clrc
  8748  1ABC  0008               	return
  8749  1ABD                     l3066:	
  8750  1ABD  1403               	setc
  8751  1ABE  0008               	return
  8752  1ABF                     __end_of___fleq:	
  8753                           
  8754                           	psect	text23
  8755  1E5D                     __ptext23:	
  8756 ;; *************** function ___fldiv *****************
  8757 ;; Defined at:
  8758 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcdiv.c"
  8759 ;; Parameters:    Size  Location     Type
  8760 ;;  a               4    0[BANK1 ] unsigned char 
  8761 ;;  b               4    4[BANK1 ] unsigned char 
  8762 ;; Auto vars:     Size  Location     Type
  8763 ;;  grs             4   20[BANK1 ] unsigned long 
  8764 ;;  rem             4   13[BANK1 ] unsigned long 
  8765 ;;  new_exp         2   18[BANK1 ] int 
  8766 ;;  aexp            1   25[BANK1 ] unsigned char 
  8767 ;;  bexp            1   24[BANK1 ] unsigned char 
  8768 ;;  sign            1   17[BANK1 ] unsigned char 
  8769 ;; Return value:  Size  Location     Type
  8770 ;;                  4    0[BANK1 ] unsigned char 
  8771 ;; Registers used:
  8772 ;;		wreg, status,2, status,0, btemp+1
  8773 ;; Tracked objects:
  8774 ;;		On entry : 0/0
  8775 ;;		On exit  : 0/0
  8776 ;;		Unchanged: 0/0
  8777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8778 ;;      Params:         0       0       8       0       0
  8779 ;;      Locals:         0       0      13       0       0
  8780 ;;      Temps:          0       0       5       0       0
  8781 ;;      Totals:         0       0      26       0       0
  8782 ;;Total ram usage:       26 bytes
  8783 ;; Hardware stack levels used:    1
  8784 ;; This function calls:
  8785 ;;		Nothing
  8786 ;; This function is called by:
  8787 ;;		_main
  8788 ;; This function uses a non-reentrant model
  8789 ;;
  8790                           
  8791                           
  8792                           ;psect for function ___fldiv
  8793  1E5D                     ___fldiv:	
  8794                           
  8795                           ;incstack = 0
  8796                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8797  1E5D  1683               	bsf	3,5	;RP0=1, select bank1
  8798  1E5E  1303               	bcf	3,6	;RP1=0, select bank1
  8799  1E5F  0827               	movf	(___fldiv@b^(0+128)+3),w
  8800  1E60  3980               	andlw	128
  8801  1E61  00A8               	movwf	??___fldiv^(0+128)
  8802  1E62  0828               	movf	??___fldiv^(0+128),w
  8803  1E63  00B1               	movwf	___fldiv@sign^(0+128)
  8804  1E64  0827               	movf	(___fldiv@b^(0+128)+3),w
  8805  1E65  00A8               	movwf	??___fldiv^(0+128)
  8806  1E66  0728               	addwf	??___fldiv^(0+128),w
  8807  1E67  00A9               	movwf	(??___fldiv+1)^(0+128)
  8808  1E68  0829               	movf	(??___fldiv+1)^(0+128),w
  8809  1E69  00B8               	movwf	___fldiv@bexp^(0+128)
  8810  1E6A  1BA6               	btfsc	(___fldiv@b^(0+128)+2),7
  8811  1E6B  1438               	bsf	___fldiv@bexp^(0+128),0
  8812  1E6C  0838               	movf	___fldiv@bexp^(0+128),w
  8813  1E6D  1903               	btfsc	3,2
  8814  1E6E  2E7D               	goto	l3502
  8815  1E6F  0A38               	incf	___fldiv@bexp^(0+128),w
  8816  1E70  1D03               	btfss	3,2
  8817  1E71  2E7A               	goto	l3498
  8818  1E72  3000               	movlw	0
  8819  1E73  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8820  1E74  3000               	movlw	0
  8821  1E75  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8822  1E76  3000               	movlw	0
  8823  1E77  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8824  1E78  3000               	movlw	0
  8825  1E79  00A4               	movwf	___fldiv@b^(0+128)
  8826  1E7A                     l3498:	
  8827  1E7A  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  8828  1E7B  01A7               	clrf	(___fldiv@b^(0+128)+3)
  8829  1E7C  2E85               	goto	l3504
  8830  1E7D                     l3502:	
  8831  1E7D  3000               	movlw	0
  8832  1E7E  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8833  1E7F  3000               	movlw	0
  8834  1E80  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8835  1E81  3000               	movlw	0
  8836  1E82  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8837  1E83  3000               	movlw	0
  8838  1E84  00A4               	movwf	___fldiv@b^(0+128)
  8839  1E85                     l3504:	
  8840  1E85  0823               	movf	(___fldiv@a^(0+128)+3),w
  8841  1E86  3980               	andlw	128
  8842  1E87  00A8               	movwf	??___fldiv^(0+128)
  8843  1E88  0828               	movf	??___fldiv^(0+128),w
  8844  1E89  06B1               	xorwf	___fldiv@sign^(0+128),f
  8845  1E8A  0823               	movf	(___fldiv@a^(0+128)+3),w
  8846  1E8B  00A8               	movwf	??___fldiv^(0+128)
  8847  1E8C  0728               	addwf	??___fldiv^(0+128),w
  8848  1E8D  00A9               	movwf	(??___fldiv+1)^(0+128)
  8849  1E8E  0829               	movf	(??___fldiv+1)^(0+128),w
  8850  1E8F  00B9               	movwf	___fldiv@aexp^(0+128)
  8851  1E90  1BA2               	btfsc	(___fldiv@a^(0+128)+2),7
  8852  1E91  1439               	bsf	___fldiv@aexp^(0+128),0
  8853  1E92  0839               	movf	___fldiv@aexp^(0+128),w
  8854  1E93  1903               	btfsc	3,2
  8855  1E94  2EA3               	goto	l3522
  8856  1E95  0A39               	incf	___fldiv@aexp^(0+128),w
  8857  1E96  1D03               	btfss	3,2
  8858  1E97  2EA0               	goto	l3518
  8859  1E98  3000               	movlw	0
  8860  1E99  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8861  1E9A  3000               	movlw	0
  8862  1E9B  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8863  1E9C  3000               	movlw	0
  8864  1E9D  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8865  1E9E  3000               	movlw	0
  8866  1E9F  00A0               	movwf	___fldiv@a^(0+128)
  8867  1EA0                     l3518:	
  8868  1EA0  17A2               	bsf	(___fldiv@a^(0+128)+2),7
  8869  1EA1  01A3               	clrf	(___fldiv@a^(0+128)+3)
  8870  1EA2  2EAB               	goto	l654
  8871  1EA3                     l3522:	
  8872  1EA3  3000               	movlw	0
  8873  1EA4  00A3               	movwf	(___fldiv@a+3)^(0+128)
  8874  1EA5  3000               	movlw	0
  8875  1EA6  00A2               	movwf	(___fldiv@a+2)^(0+128)
  8876  1EA7  3000               	movlw	0
  8877  1EA8  00A1               	movwf	(___fldiv@a+1)^(0+128)
  8878  1EA9  3000               	movlw	0
  8879  1EAA  00A0               	movwf	___fldiv@a^(0+128)
  8880  1EAB                     l654:	
  8881  1EAB  0823               	movf	(___fldiv@a+3)^(0+128),w
  8882  1EAC  0422               	iorwf	(___fldiv@a+2)^(0+128),w
  8883  1EAD  0421               	iorwf	(___fldiv@a+1)^(0+128),w
  8884  1EAE  0420               	iorwf	___fldiv@a^(0+128),w
  8885  1EAF  1D03               	skipz
  8886  1EB0  2ECA               	goto	l3532
  8887  1EB1  3000               	movlw	0
  8888  1EB2  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8889  1EB3  3000               	movlw	0
  8890  1EB4  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8891  1EB5  3000               	movlw	0
  8892  1EB6  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8893  1EB7  3000               	movlw	0
  8894  1EB8  00A4               	movwf	___fldiv@b^(0+128)
  8895  1EB9  3080               	movlw	128
  8896  1EBA  04A6               	iorwf	(___fldiv@b^(0+128)+2),f
  8897  1EBB  307F               	movlw	127
  8898  1EBC  04A7               	iorwf	((___fldiv@b+1)^(0+128)+2),f
  8899  1EBD                     L11:	
  8900  1EBD  0831               	movf	___fldiv@sign^(0+128),w
  8901  1EBE  00A8               	movwf	??___fldiv^(0+128)
  8902  1EBF  0828               	movf	??___fldiv^(0+128),w
  8903  1EC0  04A7               	iorwf	(___fldiv@b^(0+128)+3),f
  8904  1EC1  0827               	movf	(___fldiv@b+3)^(0+128),w
  8905  1EC2  00A3               	movwf	(?___fldiv+3)^(0+128)
  8906  1EC3  0826               	movf	(___fldiv@b+2)^(0+128),w
  8907  1EC4  00A2               	movwf	(?___fldiv+2)^(0+128)
  8908  1EC5  0825               	movf	(___fldiv@b+1)^(0+128),w
  8909  1EC6  00A1               	movwf	(?___fldiv+1)^(0+128)
  8910  1EC7  0824               	movf	___fldiv@b^(0+128),w
  8911  1EC8  00A0               	movwf	?___fldiv^(0+128)
  8912  1EC9  0008               	return
  8913  1ECA                     l3532:	
  8914  1ECA  0838               	movf	___fldiv@bexp^(0+128),w
  8915  1ECB  1D03               	btfss	3,2
  8916  1ECC  2ED6               	goto	l3538
  8917  1ECD  3000               	movlw	0
  8918  1ECE  00A3               	movwf	(?___fldiv+3)^(0+128)
  8919  1ECF  3000               	movlw	0
  8920  1ED0  00A2               	movwf	(?___fldiv+2)^(0+128)
  8921  1ED1  3000               	movlw	0
  8922  1ED2  00A1               	movwf	(?___fldiv+1)^(0+128)
  8923  1ED3  3000               	movlw	0
  8924  1ED4  00A0               	movwf	?___fldiv^(0+128)
  8925  1ED5  0008               	return
  8926  1ED6                     l3538:	
  8927  1ED6  0838               	movf	___fldiv@bexp^(0+128),w
  8928  1ED7  00A8               	movwf	??___fldiv^(0+128)
  8929  1ED8  01A9               	clrf	(??___fldiv^(0+128)+1)
  8930  1ED9  0829               	movf	(??___fldiv+1)^(0+128),w
  8931  1EDA  00AB               	movwf	((??___fldiv+2)^(0+128)+1)
  8932  1EDB  0839               	movf	___fldiv@aexp^(0+128),w
  8933  1EDC  0228               	subwf	??___fldiv^(0+128),w
  8934  1EDD  00AA               	movwf	(??___fldiv+2)^(0+128)
  8935  1EDE  1C03               	skipc
  8936  1EDF  03AB               	decf	((??___fldiv+2)^(0+128)+1),f
  8937  1EE0  082A               	movf	(??___fldiv+2)^(0+128),w
  8938  1EE1  3E7F               	addlw	127
  8939  1EE2  00B2               	movwf	___fldiv@new_exp^(0+128)
  8940  1EE3  082B               	movf	(??___fldiv+3)^(0+128),w
  8941  1EE4  1803               	skipnc
  8942  1EE5  3E01               	addlw	1
  8943  1EE6  3E00               	addlw	0
  8944  1EE7  00B3               	movwf	(___fldiv@new_exp+1)^(0+128)
  8945  1EE8  0827               	movf	(___fldiv@b+3)^(0+128),w
  8946  1EE9  00B0               	movwf	(___fldiv@rem+3)^(0+128)
  8947  1EEA  0826               	movf	(___fldiv@b+2)^(0+128),w
  8948  1EEB  00AF               	movwf	(___fldiv@rem+2)^(0+128)
  8949  1EEC  0825               	movf	(___fldiv@b+1)^(0+128),w
  8950  1EED  00AE               	movwf	(___fldiv@rem+1)^(0+128)
  8951  1EEE  0824               	movf	___fldiv@b^(0+128),w
  8952  1EEF  00AD               	movwf	___fldiv@rem^(0+128)
  8953  1EF0  3000               	movlw	0
  8954  1EF1  00A7               	movwf	(___fldiv@b+3)^(0+128)
  8955  1EF2  3000               	movlw	0
  8956  1EF3  00A6               	movwf	(___fldiv@b+2)^(0+128)
  8957  1EF4  3000               	movlw	0
  8958  1EF5  00A5               	movwf	(___fldiv@b+1)^(0+128)
  8959  1EF6  3000               	movlw	0
  8960  1EF7  00A4               	movwf	___fldiv@b^(0+128)
  8961  1EF8  3000               	movlw	0
  8962  1EF9  00B7               	movwf	(___fldiv@grs+3)^(0+128)
  8963  1EFA  3000               	movlw	0
  8964  1EFB  00B6               	movwf	(___fldiv@grs+2)^(0+128)
  8965  1EFC  3000               	movlw	0
  8966  1EFD  00B5               	movwf	(___fldiv@grs+1)^(0+128)
  8967  1EFE  3000               	movlw	0
  8968  1EFF  00B4               	movwf	___fldiv@grs^(0+128)
  8969  1F00  01B9               	clrf	___fldiv@aexp^(0+128)
  8970  1F01                     l3566:	
  8971  1F01  301A               	movlw	26
  8972  1F02  0239               	subwf	___fldiv@aexp^(0+128),w
  8973  1F03  1803               	btfsc	3,0
  8974  1F04  2F49               	goto	l3568
  8975  1F05  0839               	movf	___fldiv@aexp^(0+128),w
  8976  1F06  1903               	btfsc	3,2
  8977  1F07  2F25               	goto	l3558
  8978  1F08  3001               	movlw	1
  8979  1F09  00A8               	movwf	??___fldiv^(0+128)
  8980  1F0A                     u5915:	
  8981  1F0A  1003               	clrc
  8982  1F0B  0DAD               	rlf	___fldiv@rem^(0+128),f
  8983  1F0C  0DAE               	rlf	(___fldiv@rem+1)^(0+128),f
  8984  1F0D  0DAF               	rlf	(___fldiv@rem+2)^(0+128),f
  8985  1F0E  0DB0               	rlf	(___fldiv@rem+3)^(0+128),f
  8986  1F0F  0BA8               	decfsz	??___fldiv^(0+128),f
  8987  1F10  2F0A               	goto	u5915
  8988  1F11  3001               	movlw	1
  8989  1F12  00A8               	movwf	??___fldiv^(0+128)
  8990  1F13                     u5925:	
  8991  1F13  1003               	clrc
  8992  1F14  0DA4               	rlf	___fldiv@b^(0+128),f
  8993  1F15  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  8994  1F16  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  8995  1F17  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  8996  1F18  0BA8               	decfsz	??___fldiv^(0+128),f
  8997  1F19  2F13               	goto	u5925
  8998  1F1A  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  8999  1F1B  1424               	bsf	___fldiv@b^(0+128),0
  9000  1F1C  3001               	movlw	1
  9001  1F1D  00A8               	movwf	??___fldiv^(0+128)
  9002  1F1E                     u5945:	
  9003  1F1E  1003               	clrc
  9004  1F1F  0DB4               	rlf	___fldiv@grs^(0+128),f
  9005  1F20  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9006  1F21  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9007  1F22  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9008  1F23  0BA8               	decfsz	??___fldiv^(0+128),f
  9009  1F24  2F1E               	goto	u5945
  9010  1F25                     l3558:	
  9011  1F25  0823               	movf	(___fldiv@a+3)^(0+128),w
  9012  1F26  0230               	subwf	(___fldiv@rem+3)^(0+128),w
  9013  1F27  1D03               	skipz
  9014  1F28  2F33               	goto	u5955
  9015  1F29  0822               	movf	(___fldiv@a+2)^(0+128),w
  9016  1F2A  022F               	subwf	(___fldiv@rem+2)^(0+128),w
  9017  1F2B  1D03               	skipz
  9018  1F2C  2F33               	goto	u5955
  9019  1F2D  0821               	movf	(___fldiv@a+1)^(0+128),w
  9020  1F2E  022E               	subwf	(___fldiv@rem+1)^(0+128),w
  9021  1F2F  1D03               	skipz
  9022  1F30  2F33               	goto	u5955
  9023  1F31  0820               	movf	___fldiv@a^(0+128),w
  9024  1F32  022D               	subwf	___fldiv@rem^(0+128),w
  9025  1F33                     u5955:	
  9026  1F33  1C03               	skipc
  9027  1F34  2F44               	goto	l3564
  9028  1F35  1737               	bsf	(___fldiv@grs^(0+128)+3),6
  9029  1F36  0820               	movf	___fldiv@a^(0+128),w
  9030  1F37  02AD               	subwf	___fldiv@rem^(0+128),f
  9031  1F38  0821               	movf	(___fldiv@a+1)^(0+128),w
  9032  1F39  1C03               	skipc
  9033  1F3A  0F21               	incfsz	(___fldiv@a+1)^(0+128),w
  9034  1F3B  02AE               	subwf	(___fldiv@rem+1)^(0+128),f
  9035  1F3C  0822               	movf	(___fldiv@a+2)^(0+128),w
  9036  1F3D  1C03               	skipc
  9037  1F3E  0F22               	incfsz	(___fldiv@a+2)^(0+128),w
  9038  1F3F  02AF               	subwf	(___fldiv@rem+2)^(0+128),f
  9039  1F40  0823               	movf	(___fldiv@a+3)^(0+128),w
  9040  1F41  1C03               	skipc
  9041  1F42  0F23               	incfsz	(___fldiv@a+3)^(0+128),w
  9042  1F43  02B0               	subwf	(___fldiv@rem+3)^(0+128),f
  9043  1F44                     l3564:	
  9044  1F44  3001               	movlw	1
  9045  1F45  00A8               	movwf	??___fldiv^(0+128)
  9046  1F46  0828               	movf	??___fldiv^(0+128),w
  9047  1F47  07B9               	addwf	___fldiv@aexp^(0+128),f
  9048  1F48  2F01               	goto	l3566
  9049  1F49                     l3568:	
  9050  1F49  0830               	movf	(___fldiv@rem+3)^(0+128),w
  9051  1F4A  042F               	iorwf	(___fldiv@rem+2)^(0+128),w
  9052  1F4B  042E               	iorwf	(___fldiv@rem+1)^(0+128),w
  9053  1F4C  042D               	iorwf	___fldiv@rem^(0+128),w
  9054  1F4D  1D03               	btfss	3,2
  9055  1F4E  1434               	bsf	___fldiv@grs^(0+128),0
  9056  1F4F                     l3582:	
  9057  1F4F  1BA6               	btfsc	(___fldiv@b+2)^(0+128),7
  9058  1F50  2F6C               	goto	l3584
  9059  1F51  3001               	movlw	1
  9060  1F52  00A8               	movwf	??___fldiv^(0+128)
  9061  1F53                     u5985:	
  9062  1F53  1003               	clrc
  9063  1F54  0DA4               	rlf	___fldiv@b^(0+128),f
  9064  1F55  0DA5               	rlf	(___fldiv@b+1)^(0+128),f
  9065  1F56  0DA6               	rlf	(___fldiv@b+2)^(0+128),f
  9066  1F57  0DA7               	rlf	(___fldiv@b+3)^(0+128),f
  9067  1F58  0BA8               	decfsz	??___fldiv^(0+128),f
  9068  1F59  2F53               	goto	u5985
  9069  1F5A  1BB7               	btfsc	(___fldiv@grs+3)^(0+128),7
  9070  1F5B  1424               	bsf	___fldiv@b^(0+128),0
  9071  1F5C  3001               	movlw	1
  9072  1F5D  00A8               	movwf	??___fldiv^(0+128)
  9073  1F5E                     u6005:	
  9074  1F5E  1003               	clrc
  9075  1F5F  0DB4               	rlf	___fldiv@grs^(0+128),f
  9076  1F60  0DB5               	rlf	(___fldiv@grs+1)^(0+128),f
  9077  1F61  0DB6               	rlf	(___fldiv@grs+2)^(0+128),f
  9078  1F62  0DB7               	rlf	(___fldiv@grs+3)^(0+128),f
  9079  1F63  0BA8               	decfsz	??___fldiv^(0+128),f
  9080  1F64  2F5E               	goto	u6005
  9081  1F65  30FF               	movlw	255
  9082  1F66  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9083  1F67  1803               	skipnc
  9084  1F68  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
  9085  1F69  30FF               	movlw	255
  9086  1F6A  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9087  1F6B  2F4F               	goto	l3582
  9088  1F6C                     l3584:	
  9089  1F6C  01B9               	clrf	___fldiv@aexp^(0+128)
  9090  1F6D  1FB7               	btfss	(___fldiv@grs+3)^(0+128),7
  9091  1F6E  2F85               	goto	l3594
  9092  1F6F  30FF               	movlw	255
  9093  1F70  0534               	andwf	___fldiv@grs^(0+128),w
  9094  1F71  00A8               	movwf	??___fldiv^(0+128)
  9095  1F72  30FF               	movlw	255
  9096  1F73  0535               	andwf	(___fldiv@grs+1)^(0+128),w
  9097  1F74  00A9               	movwf	(??___fldiv^(0+128)+1)
  9098  1F75  30FF               	movlw	255
  9099  1F76  0536               	andwf	(___fldiv@grs+2)^(0+128),w
  9100  1F77  00AA               	movwf	(??___fldiv^(0+128)+2)
  9101  1F78  307F               	movlw	127
  9102  1F79  0537               	andwf	(___fldiv@grs+3)^(0+128),w
  9103  1F7A  00AB               	movwf	(??___fldiv^(0+128)+3)
  9104  1F7B  082B               	movf	(??___fldiv+3)^(0+128),w
  9105  1F7C  042A               	iorwf	(??___fldiv+2)^(0+128),w
  9106  1F7D  0429               	iorwf	(??___fldiv+1)^(0+128),w
  9107  1F7E  0428               	iorwf	??___fldiv^(0+128),w
  9108  1F7F  1903               	skipnz
  9109  1F80  1824               	btfsc	___fldiv@b^(0+128),0
  9110  1F81  2F83               	goto	l3590
  9111  1F82  2F85               	goto	l3594
  9112  1F83                     l3590:	
  9113  1F83  01B9               	clrf	___fldiv@aexp^(0+128)
  9114  1F84  0AB9               	incf	___fldiv@aexp^(0+128),f
  9115  1F85                     l3594:	
  9116  1F85  0839               	movf	___fldiv@aexp^(0+128),w
  9117  1F86  1903               	btfsc	3,2
  9118  1F87  2FB7               	goto	l3604
  9119  1F88  3001               	movlw	1
  9120  1F89  07A4               	addwf	___fldiv@b^(0+128),f
  9121  1F8A  3000               	movlw	0
  9122  1F8B  1803               	skipnc
  9123  1F8C  3001               	movlw	1
  9124  1F8D  07A5               	addwf	(___fldiv@b+1)^(0+128),f
  9125  1F8E  3000               	movlw	0
  9126  1F8F  1803               	skipnc
  9127  1F90  3001               	movlw	1
  9128  1F91  07A6               	addwf	(___fldiv@b+2)^(0+128),f
  9129  1F92  3000               	movlw	0
  9130  1F93  1803               	skipnc
  9131  1F94  3001               	movlw	1
  9132  1F95  07A7               	addwf	(___fldiv@b+3)^(0+128),f
  9133  1F96  1C27               	btfss	(___fldiv@b+3)^(0+128),0
  9134  1F97  2FB7               	goto	l3604
  9135  1F98  0824               	movf	___fldiv@b^(0+128),w
  9136  1F99  00A8               	movwf	??___fldiv^(0+128)
  9137  1F9A  0825               	movf	(___fldiv@b+1)^(0+128),w
  9138  1F9B  00A9               	movwf	(??___fldiv^(0+128)+1)
  9139  1F9C  0826               	movf	(___fldiv@b+2)^(0+128),w
  9140  1F9D  00AA               	movwf	(??___fldiv^(0+128)+2)
  9141  1F9E  0827               	movf	(___fldiv@b+3)^(0+128),w
  9142  1F9F  00AB               	movwf	(??___fldiv^(0+128)+3)
  9143  1FA0  3001               	movlw	1
  9144  1FA1  00AC               	movwf	(??___fldiv+4)^(0+128)
  9145  1FA2                     u6075:	
  9146  1FA2  0D2B               	rlf	(??___fldiv^(0+128)+3),w
  9147  1FA3  0CAB               	rrf	(??___fldiv^(0+128)+3),f
  9148  1FA4  0CAA               	rrf	(??___fldiv^(0+128)+2),f
  9149  1FA5  0CA9               	rrf	(??___fldiv^(0+128)+1),f
  9150  1FA6  0CA8               	rrf	??___fldiv^(0+128),f
  9151  1FA7  0BAC               	decfsz	(??___fldiv+4)^(0+128),f
  9152  1FA8  2FA2               	goto	u6075
  9153  1FA9  082B               	movf	(??___fldiv+3)^(0+128),w
  9154  1FAA  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9155  1FAB  082A               	movf	(??___fldiv+2)^(0+128),w
  9156  1FAC  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9157  1FAD  0829               	movf	(??___fldiv+1)^(0+128),w
  9158  1FAE  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9159  1FAF  0828               	movf	??___fldiv^(0+128),w
  9160  1FB0  00A4               	movwf	___fldiv@b^(0+128)
  9161  1FB1  3001               	movlw	1
  9162  1FB2  07B2               	addwf	___fldiv@new_exp^(0+128),f
  9163  1FB3  1803               	skipnc
  9164  1FB4  0AB3               	incf	(___fldiv@new_exp+1)^(0+128),f
  9165  1FB5  3000               	movlw	0
  9166  1FB6  07B3               	addwf	(___fldiv@new_exp+1)^(0+128),f
  9167  1FB7                     l3604:	
  9168  1FB7  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9169  1FB8  3A80               	xorlw	128
  9170  1FB9  00FF               	movwf	127
  9171  1FBA  3080               	movlw	128
  9172  1FBB  027F               	subwf	127,w
  9173  1FBC  1D03               	skipz
  9174  1FBD  2FC0               	goto	u6085
  9175  1FBE  30FF               	movlw	255
  9176  1FBF  0232               	subwf	___fldiv@new_exp^(0+128),w
  9177  1FC0                     u6085:	
  9178  1FC0  1C03               	skipc
  9179  1FC1  2FD0               	goto	l3608
  9180  1FC2  30FF               	movlw	255
  9181  1FC3  1683               	bsf	3,5	;RP0=1, select bank1
  9182  1FC4  1303               	bcf	3,6	;RP1=0, select bank1
  9183  1FC5  00B2               	movwf	___fldiv@new_exp^(0+128)
  9184  1FC6  3000               	movlw	0
  9185  1FC7  00B3               	movwf	(___fldiv@new_exp^(0+128)+1)
  9186  1FC8  3000               	movlw	0
  9187  1FC9  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9188  1FCA  3000               	movlw	0
  9189  1FCB  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9190  1FCC  3000               	movlw	0
  9191  1FCD  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9192  1FCE  3000               	movlw	0
  9193  1FCF  00A4               	movwf	___fldiv@b^(0+128)
  9194  1FD0                     l3608:	
  9195  1FD0  1683               	bsf	3,5	;RP0=1, select bank1
  9196  1FD1  1303               	bcf	3,6	;RP1=0, select bank1
  9197  1FD2  0833               	movf	(___fldiv@new_exp+1)^(0+128),w
  9198  1FD3  3A80               	xorlw	128
  9199  1FD4  00FF               	movwf	127
  9200  1FD5  3080               	movlw	128
  9201  1FD6  027F               	subwf	127,w
  9202  1FD7  1D03               	skipz
  9203  1FD8  2FDB               	goto	u6095
  9204  1FD9  3001               	movlw	1
  9205  1FDA  0232               	subwf	___fldiv@new_exp^(0+128),w
  9206  1FDB                     u6095:	
  9207  1FDB  1803               	skipnc
  9208  1FDC  2FEA               	goto	l676
  9209  1FDD  1683               	bsf	3,5	;RP0=1, select bank1
  9210  1FDE  1303               	bcf	3,6	;RP1=0, select bank1
  9211  1FDF  01B2               	clrf	___fldiv@new_exp^(0+128)
  9212  1FE0  01B3               	clrf	(___fldiv@new_exp+1)^(0+128)
  9213  1FE1  3000               	movlw	0
  9214  1FE2  00A7               	movwf	(___fldiv@b+3)^(0+128)
  9215  1FE3  3000               	movlw	0
  9216  1FE4  00A6               	movwf	(___fldiv@b+2)^(0+128)
  9217  1FE5  3000               	movlw	0
  9218  1FE6  00A5               	movwf	(___fldiv@b+1)^(0+128)
  9219  1FE7  3000               	movlw	0
  9220  1FE8  00A4               	movwf	___fldiv@b^(0+128)
  9221  1FE9  01B1               	clrf	___fldiv@sign^(0+128)
  9222  1FEA                     l676:	
  9223  1FEA  1683               	bsf	3,5	;RP0=1, select bank1
  9224  1FEB  1303               	bcf	3,6	;RP1=0, select bank1
  9225  1FEC  0832               	movf	___fldiv@new_exp^(0+128),w
  9226  1FED  00A8               	movwf	??___fldiv^(0+128)
  9227  1FEE  0828               	movf	??___fldiv^(0+128),w
  9228  1FEF  00B8               	movwf	___fldiv@bexp^(0+128)
  9229  1FF0  1C38               	btfss	___fldiv@bexp^(0+128),0
  9230  1FF1  2FF4               	goto	l3620
  9231  1FF2  17A6               	bsf	(___fldiv@b^(0+128)+2),7
  9232  1FF3  2FF8               	goto	l678
  9233  1FF4                     l3620:	
  9234  1FF4  307F               	movlw	127
  9235  1FF5  00A8               	movwf	??___fldiv^(0+128)
  9236  1FF6  0828               	movf	??___fldiv^(0+128),w
  9237  1FF7  05A6               	andwf	(___fldiv@b^(0+128)+2),f
  9238  1FF8                     l678:	
  9239  1FF8  0838               	movf	___fldiv@bexp^(0+128),w
  9240  1FF9  00A8               	movwf	??___fldiv^(0+128)
  9241  1FFA  1003               	clrc
  9242  1FFB  0C28               	rrf	??___fldiv^(0+128),w
  9243  1FFC  00A9               	movwf	(??___fldiv+1)^(0+128)
  9244  1FFD  0829               	movf	(??___fldiv+1)^(0+128),w
  9245  1FFE  00A7               	movwf	(___fldiv@b^(0+128)+3)
  9246  1FFF  2EBD               	goto	L11
  9247  2000                     __end_of___fldiv:	
  9248                           
  9249                           	psect	text24
  9250  1B54                     __ptext24:	
  9251 ;; *************** function _Lcd_Start *****************
  9252 ;; Defined at:
  9253 ;;		line 91 in file "main.c"
  9254 ;; Parameters:    Size  Location     Type
  9255 ;;		None
  9256 ;; Auto vars:     Size  Location     Type
  9257 ;;  i               2    0        int 
  9258 ;; Return value:  Size  Location     Type
  9259 ;;                  1    wreg      void 
  9260 ;; Registers used:
  9261 ;;		wreg, status,2, status,0, pclath, cstack
  9262 ;; Tracked objects:
  9263 ;;		On entry : 0/0
  9264 ;;		On exit  : 0/0
  9265 ;;		Unchanged: 0/0
  9266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9267 ;;      Params:         0       0       0       0       0
  9268 ;;      Locals:         2       0       0       0       0
  9269 ;;      Temps:          2       0       0       0       0
  9270 ;;      Totals:         4       0       0       0       0
  9271 ;;Total ram usage:        4 bytes
  9272 ;; Hardware stack levels used:    1
  9273 ;; Hardware stack levels required when called:    2
  9274 ;; This function calls:
  9275 ;;		_Lcd_Cmd
  9276 ;;		_Lcd_SetBit
  9277 ;; This function is called by:
  9278 ;;		_main
  9279 ;; This function uses a non-reentrant model
  9280 ;;
  9281                           
  9282                           
  9283                           ;psect for function _Lcd_Start
  9284  1B54                     _Lcd_Start:	
  9285                           
  9286                           ;main.c: 93:   Lcd_SetBit(0x00);
  9287                           
  9288                           ;incstack = 0
  9289                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  9290  1B54  3000               	movlw	0
  9291  1B55  160A  158A  2105  160A  158A  	fcall	_Lcd_SetBit
  9292                           
  9293                           ;main.c: 95:   Lcd_Cmd(0x03);
  9294  1B5A  3003               	movlw	3
  9295  1B5B  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9296                           
  9297                           ;main.c: 96:     _delay((unsigned long)((5)*(4000000/4000.0)));
  9298  1B60  3007               	movlw	7
  9299  1B61  00F5               	movwf	??_Lcd_Start+1
  9300  1B62  307D               	movlw	125
  9301  1B63  00F4               	movwf	??_Lcd_Start
  9302  1B64                     u6157:	
  9303  1B64  0BF4               	decfsz	??_Lcd_Start,f
  9304  1B65  2B64               	goto	u6157
  9305  1B66  0BF5               	decfsz	??_Lcd_Start+1,f
  9306  1B67  2B64               	goto	u6157
  9307                           
  9308                           ;main.c: 97:   Lcd_Cmd(0x03);
  9309  1B68  3003               	movlw	3
  9310  1B69  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9311                           
  9312                           ;main.c: 98:     _delay((unsigned long)((11)*(4000000/4000.0)));
  9313  1B6E  300F               	movlw	15
  9314  1B6F  00F5               	movwf	??_Lcd_Start+1
  9315  1B70  3047               	movlw	71
  9316  1B71  00F4               	movwf	??_Lcd_Start
  9317  1B72                     u6167:	
  9318  1B72  0BF4               	decfsz	??_Lcd_Start,f
  9319  1B73  2B72               	goto	u6167
  9320  1B74  0BF5               	decfsz	??_Lcd_Start+1,f
  9321  1B75  2B72               	goto	u6167
  9322  1B76  2B77               	nop2
  9323                           
  9324                           ;main.c: 99:   Lcd_Cmd(0x03);
  9325  1B77  3003               	movlw	3
  9326  1B78  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9327                           
  9328                           ;main.c: 100:   Lcd_Cmd(0x02);
  9329  1B7D  3002               	movlw	2
  9330  1B7E  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9331                           
  9332                           ;main.c: 101:   Lcd_Cmd(0x02);
  9333  1B83  3002               	movlw	2
  9334  1B84  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9335                           
  9336                           ;main.c: 102:   Lcd_Cmd(0x08);
  9337  1B89  3008               	movlw	8
  9338  1B8A  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9339                           
  9340                           ;main.c: 103:   Lcd_Cmd(0x00);
  9341  1B8F  3000               	movlw	0
  9342  1B90  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9343                           
  9344                           ;main.c: 104:   Lcd_Cmd(0x0C);
  9345  1B95  300C               	movlw	12
  9346  1B96  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9347                           
  9348                           ;main.c: 105:   Lcd_Cmd(0x00);
  9349  1B9B  3000               	movlw	0
  9350  1B9C  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9351                           
  9352                           ;main.c: 106:   Lcd_Cmd(0x06);
  9353  1BA1  3006               	movlw	6
  9354  1BA2  160A  158A  211F   	fcall	_Lcd_Cmd
  9355  1BA5  0008               	return
  9356  1BA6                     __end_of_Lcd_Start:	
  9357                           
  9358                           	psect	text25
  9359  1ABF                     __ptext25:	
  9360 ;; *************** function _Lcd_Set_Cursor *****************
  9361 ;; Defined at:
  9362 ;;		line 70 in file "main.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  a               1    wreg     unsigned char 
  9365 ;;  b               1    4[COMMON] unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  a               1    7[COMMON] unsigned char 
  9368 ;;  temp            1   10[COMMON] unsigned char 
  9369 ;;  y               1    9[COMMON] unsigned char 
  9370 ;;  z               1    8[COMMON] unsigned char 
  9371 ;; Return value:  Size  Location     Type
  9372 ;;                  1    wreg      void 
  9373 ;; Registers used:
  9374 ;;		wreg, status,2, status,0, pclath, cstack
  9375 ;; Tracked objects:
  9376 ;;		On entry : 0/0
  9377 ;;		On exit  : 0/0
  9378 ;;		Unchanged: 0/0
  9379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9380 ;;      Params:         1       0       0       0       0
  9381 ;;      Locals:         4       0       0       0       0
  9382 ;;      Temps:          2       0       0       0       0
  9383 ;;      Totals:         7       0       0       0       0
  9384 ;;Total ram usage:        7 bytes
  9385 ;; Hardware stack levels used:    1
  9386 ;; Hardware stack levels required when called:    2
  9387 ;; This function calls:
  9388 ;;		_Lcd_Cmd
  9389 ;; This function is called by:
  9390 ;;		_main
  9391 ;; This function uses a non-reentrant model
  9392 ;;
  9393                           
  9394                           
  9395                           ;psect for function _Lcd_Set_Cursor
  9396  1ABF                     _Lcd_Set_Cursor:	
  9397                           
  9398                           ;incstack = 0
  9399                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9400                           ;Lcd_Set_Cursor@a stored from wreg
  9401  1ABF  00F7               	movwf	Lcd_Set_Cursor@a
  9402                           
  9403                           ;main.c: 70: void Lcd_Set_Cursor(char a, char b);main.c: 71: {;main.c: 72:     char temp
      +                          ,z,y;;main.c: 73:     if(a== 1)
  9404  1AC0  0377               	decf	Lcd_Set_Cursor@a,w
  9405  1AC1  1D03               	btfss	3,2
  9406  1AC2  2AE4               	goto	l3216
  9407                           
  9408                           ;main.c: 74:     {;main.c: 75:       temp = 0x80 + b - 1;
  9409  1AC3  0874               	movf	Lcd_Set_Cursor@b,w
  9410  1AC4  3E7F               	addlw	127
  9411  1AC5  00F5               	movwf	??_Lcd_Set_Cursor
  9412  1AC6  0875               	movf	??_Lcd_Set_Cursor,w
  9413  1AC7  00FA               	movwf	Lcd_Set_Cursor@temp
  9414                           
  9415                           ;main.c: 76:         z = temp>>4;
  9416  1AC8  087A               	movf	Lcd_Set_Cursor@temp,w
  9417  1AC9  00F5               	movwf	??_Lcd_Set_Cursor
  9418  1ACA  3004               	movlw	4
  9419  1ACB                     u5395:	
  9420  1ACB  1003               	clrc
  9421  1ACC  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9422  1ACD  3EFF               	addlw	-1
  9423  1ACE  1D03               	skipz
  9424  1ACF  2ACB               	goto	u5395
  9425  1AD0  0875               	movf	??_Lcd_Set_Cursor,w
  9426  1AD1  00F6               	movwf	??_Lcd_Set_Cursor+1
  9427  1AD2  0876               	movf	??_Lcd_Set_Cursor+1,w
  9428  1AD3  00F8               	movwf	Lcd_Set_Cursor@z
  9429                           
  9430                           ;main.c: 77:         y = temp & 0x0F;
  9431  1AD4  087A               	movf	Lcd_Set_Cursor@temp,w
  9432  1AD5  390F               	andlw	15
  9433  1AD6  00F5               	movwf	??_Lcd_Set_Cursor
  9434  1AD7  0875               	movf	??_Lcd_Set_Cursor,w
  9435  1AD8  00F9               	movwf	Lcd_Set_Cursor@y
  9436                           
  9437                           ;main.c: 78:         Lcd_Cmd(z);
  9438  1AD9  0878               	movf	Lcd_Set_Cursor@z,w
  9439  1ADA  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9440                           
  9441                           ;main.c: 79:         Lcd_Cmd(y);
  9442  1ADF  0879               	movf	Lcd_Set_Cursor@y,w
  9443  1AE0  160A  158A  211F   	fcall	_Lcd_Cmd
  9444                           
  9445                           ;main.c: 80:     }
  9446  1AE3  0008               	return
  9447  1AE4                     l3216:	
  9448  1AE4  3002               	movlw	2
  9449  1AE5  0677               	xorwf	Lcd_Set_Cursor@a,w
  9450  1AE6  1D03               	btfss	3,2
  9451  1AE7  0008               	return
  9452                           
  9453                           ;main.c: 82:     {;main.c: 83:         temp = 0xC0 + b - 1;
  9454  1AE8  0874               	movf	Lcd_Set_Cursor@b,w
  9455  1AE9  3EBF               	addlw	191
  9456  1AEA  00F5               	movwf	??_Lcd_Set_Cursor
  9457  1AEB  0875               	movf	??_Lcd_Set_Cursor,w
  9458  1AEC  00FA               	movwf	Lcd_Set_Cursor@temp
  9459                           
  9460                           ;main.c: 84:         z = temp>>4;
  9461  1AED  087A               	movf	Lcd_Set_Cursor@temp,w
  9462  1AEE  00F5               	movwf	??_Lcd_Set_Cursor
  9463  1AEF  3004               	movlw	4
  9464  1AF0                     u5415:	
  9465  1AF0  1003               	clrc
  9466  1AF1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  9467  1AF2  3EFF               	addlw	-1
  9468  1AF3  1D03               	skipz
  9469  1AF4  2AF0               	goto	u5415
  9470  1AF5  0875               	movf	??_Lcd_Set_Cursor,w
  9471  1AF6  00F6               	movwf	??_Lcd_Set_Cursor+1
  9472  1AF7  0876               	movf	??_Lcd_Set_Cursor+1,w
  9473  1AF8  00F8               	movwf	Lcd_Set_Cursor@z
  9474                           
  9475                           ;main.c: 85:         y = temp & 0x0F;
  9476  1AF9  087A               	movf	Lcd_Set_Cursor@temp,w
  9477  1AFA  390F               	andlw	15
  9478  1AFB  00F5               	movwf	??_Lcd_Set_Cursor
  9479  1AFC  0875               	movf	??_Lcd_Set_Cursor,w
  9480  1AFD  00F9               	movwf	Lcd_Set_Cursor@y
  9481                           
  9482                           ;main.c: 86:         Lcd_Cmd(z);
  9483  1AFE  0878               	movf	Lcd_Set_Cursor@z,w
  9484  1AFF  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9485                           
  9486                           ;main.c: 87:         Lcd_Cmd(y);
  9487  1B04  0879               	movf	Lcd_Set_Cursor@y,w
  9488  1B05  160A  158A  211F   	fcall	_Lcd_Cmd
  9489  1B08  0008               	return
  9490  1B09                     __end_of_Lcd_Set_Cursor:	
  9491                           
  9492                           	psect	text26
  9493  1A36                     __ptext26:	
  9494 ;; *************** function _Lcd_Print_String *****************
  9495 ;; Defined at:
  9496 ;;		line 125 in file "main.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;  a               2    9[COMMON] PTR unsigned char 
  9499 ;;		 -> main@str(8), STR_4(2), STR_3(11), STR_2(2), 
  9500 ;;		 -> STR_1(2), 
  9501 ;; Auto vars:     Size  Location     Type
  9502 ;;  i               2    0[BANK0 ] int 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  1    wreg      void 
  9505 ;; Registers used:
  9506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9512 ;;      Params:         2       0       0       0       0
  9513 ;;      Locals:         0       2       0       0       0
  9514 ;;      Temps:          3       0       0       0       0
  9515 ;;      Totals:         5       2       0       0       0
  9516 ;;Total ram usage:        7 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    2
  9519 ;; This function calls:
  9520 ;;		_Lcd_Print_Char
  9521 ;; This function is called by:
  9522 ;;		_main
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function _Lcd_Print_String
  9528  1A36                     _Lcd_Print_String:	
  9529                           
  9530                           ;main.c: 125: void Lcd_Print_String(char *a);main.c: 126: {;main.c: 127:     int i;;main
      +                          .c: 128:     for(i=0;a[i]!='\0';i++)
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9534  1A36  1283               	bcf	3,5	;RP0=0, select bank0
  9535  1A37  1303               	bcf	3,6	;RP1=0, select bank0
  9536  1A38  01A0               	clrf	Lcd_Print_String@i
  9537  1A39  01A1               	clrf	Lcd_Print_String@i+1
  9538  1A3A                     l3266:	
  9539  1A3A  0820               	movf	Lcd_Print_String@i,w
  9540  1A3B  0779               	addwf	Lcd_Print_String@a,w
  9541  1A3C  00FC               	movwf	??_Lcd_Print_String+1
  9542  1A3D  087A               	movf	Lcd_Print_String@a+1,w
  9543  1A3E  00FB               	movwf	??_Lcd_Print_String
  9544  1A3F  1803               	skipnc
  9545  1A40  0AFB               	incf	??_Lcd_Print_String,f
  9546  1A41  1BA0               	btfsc	Lcd_Print_String@i,7
  9547  1A42  03FB               	decf	??_Lcd_Print_String,f
  9548  1A43  087B               	movf	??_Lcd_Print_String,w
  9549  1A44  00FD               	movwf	??_Lcd_Print_String+2
  9550  1A45  087D               	movf	??_Lcd_Print_String+2,w
  9551  1A46  1283               	bcf	3,5	;RP0=0, select bank0
  9552  1A47  1303               	bcf	3,6	;RP1=0, select bank0
  9553  1A48  00FF               	movwf	127
  9554  1A49  087C               	movf	??_Lcd_Print_String+1,w
  9555  1A4A  0084               	movwf	4
  9556  1A4B  120A  158A  2000  160A  158A  	fcall	stringtab
  9557  1A50  3A00               	xorlw	0
  9558  1A51  1903               	btfsc	3,2
  9559  1A52  0008               	return
  9560                           
  9561                           ;main.c: 129:        Lcd_Print_Char(a[i]);
  9562  1A53  0820               	movf	Lcd_Print_String@i,w
  9563  1A54  0779               	addwf	Lcd_Print_String@a,w
  9564  1A55  00FC               	movwf	??_Lcd_Print_String+1
  9565  1A56  087A               	movf	Lcd_Print_String@a+1,w
  9566  1A57  00FB               	movwf	??_Lcd_Print_String
  9567  1A58  1803               	skipnc
  9568  1A59  0AFB               	incf	??_Lcd_Print_String,f
  9569  1A5A  1BA0               	btfsc	Lcd_Print_String@i,7
  9570  1A5B  03FB               	decf	??_Lcd_Print_String,f
  9571  1A5C  087B               	movf	??_Lcd_Print_String,w
  9572  1A5D  00FD               	movwf	??_Lcd_Print_String+2
  9573  1A5E  087D               	movf	??_Lcd_Print_String+2,w
  9574  1A5F  1283               	bcf	3,5	;RP0=0, select bank0
  9575  1A60  1303               	bcf	3,6	;RP1=0, select bank0
  9576  1A61  00FF               	movwf	127
  9577  1A62  087C               	movf	??_Lcd_Print_String+1,w
  9578  1A63  0084               	movwf	4
  9579  1A64  120A  158A  2000  160A  158A  	fcall	stringtab
  9580  1A69  160A  158A  23A6  160A  158A  	fcall	_Lcd_Print_Char
  9581  1A6E  3001               	movlw	1
  9582  1A6F  1283               	bcf	3,5	;RP0=0, select bank0
  9583  1A70  1303               	bcf	3,6	;RP1=0, select bank0
  9584  1A71  07A0               	addwf	Lcd_Print_String@i,f
  9585  1A72  1803               	skipnc
  9586  1A73  0AA1               	incf	Lcd_Print_String@i+1,f
  9587  1A74  3000               	movlw	0
  9588  1A75  07A1               	addwf	Lcd_Print_String@i+1,f
  9589  1A76  2A3A               	goto	l3266
  9590  1A77                     __end_of_Lcd_Print_String:	
  9591                           
  9592                           	psect	text27
  9593  1BA6                     __ptext27:	
  9594 ;; *************** function _Lcd_Print_Char *****************
  9595 ;; Defined at:
  9596 ;;		line 109 in file "main.c"
  9597 ;; Parameters:    Size  Location     Type
  9598 ;;  data            1    wreg     unsigned char 
  9599 ;; Auto vars:     Size  Location     Type
  9600 ;;  data            1    4[COMMON] unsigned char 
  9601 ;;  i               2    7[COMMON] int 
  9602 ;;  i               2    5[COMMON] int 
  9603 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  9604 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9614 ;;      Params:         0       0       0       0       0
  9615 ;;      Locals:         7       0       0       0       0
  9616 ;;      Temps:          1       0       0       0       0
  9617 ;;      Totals:         8       0       0       0       0
  9618 ;;Total ram usage:        8 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; Hardware stack levels required when called:    1
  9621 ;; This function calls:
  9622 ;;		_Lcd_SetBit
  9623 ;; This function is called by:
  9624 ;;		_Lcd_Print_String
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           
  9629                           ;psect for function _Lcd_Print_Char
  9630  1BA6                     _Lcd_Print_Char:	
  9631                           
  9632                           ;incstack = 0
  9633                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9634                           ;Lcd_Print_Char@data stored from wreg
  9635  1BA6  00F4               	movwf	Lcd_Print_Char@data
  9636                           
  9637                           ;main.c: 109: void Lcd_Print_Char(char data);main.c: 110: {;main.c: 111:    char Lower_N
      +                          ibble,Upper_Nibble;;main.c: 112:    Lower_Nibble = data&0x0F;
  9638  1BA7  0874               	movf	Lcd_Print_Char@data,w
  9639  1BA8  390F               	andlw	15
  9640  1BA9  00F1               	movwf	??_Lcd_Print_Char
  9641  1BAA  0871               	movf	??_Lcd_Print_Char,w
  9642  1BAB  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  9643                           
  9644                           ;main.c: 113:    Upper_Nibble = data&0xF0;
  9645  1BAC  0874               	movf	Lcd_Print_Char@data,w
  9646  1BAD  39F0               	andlw	240
  9647  1BAE  00F1               	movwf	??_Lcd_Print_Char
  9648  1BAF  0871               	movf	??_Lcd_Print_Char,w
  9649  1BB0  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  9650                           
  9651                           ;main.c: 114:    RB1 = 1;
  9652  1BB1  1283               	bcf	3,5	;RP0=0, select bank0
  9653  1BB2  1303               	bcf	3,6	;RP1=0, select bank0
  9654  1BB3  1486               	bsf	6,1	;volatile
  9655                           
  9656                           ;main.c: 115:    Lcd_SetBit(Upper_Nibble>>4);
  9657  1BB4  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  9658  1BB5  00F1               	movwf	??_Lcd_Print_Char
  9659  1BB6  3004               	movlw	4
  9660  1BB7                     u4305:	
  9661  1BB7  1003               	clrc
  9662  1BB8  0CF1               	rrf	??_Lcd_Print_Char,f
  9663  1BB9  3EFF               	addlw	-1
  9664  1BBA  1D03               	skipz
  9665  1BBB  2BB7               	goto	u4305
  9666  1BBC  0871               	movf	??_Lcd_Print_Char,w
  9667  1BBD  160A  158A  2105  160A  158A  	fcall	_Lcd_SetBit
  9668                           
  9669                           ;main.c: 116:    RB2 = 1;
  9670  1BC2  1283               	bcf	3,5	;RP0=0, select bank0
  9671  1BC3  1303               	bcf	3,6	;RP1=0, select bank0
  9672  1BC4  1506               	bsf	6,2	;volatile
  9673                           
  9674                           ;main.c: 117:    for(int i=2130483; i<=0; i--) __nop();
  9675  1BC5  3033               	movlw	51
  9676  1BC6  00F5               	movwf	Lcd_Print_Char@i
  9677  1BC7  3082               	movlw	130
  9678  1BC8  00F6               	movwf	Lcd_Print_Char@i+1
  9679  1BC9                     l61:	
  9680  1BC9  0000               	nop
  9681  1BCA  30FF               	movlw	255
  9682  1BCB  07F5               	addwf	Lcd_Print_Char@i,f
  9683  1BCC  1803               	skipnc
  9684  1BCD  0AF6               	incf	Lcd_Print_Char@i+1,f
  9685  1BCE  30FF               	movlw	255
  9686  1BCF  07F6               	addwf	Lcd_Print_Char@i+1,f
  9687  1BD0  0876               	movf	Lcd_Print_Char@i+1,w
  9688  1BD1  3A80               	xorlw	128
  9689  1BD2  00FF               	movwf	127
  9690  1BD3  3080               	movlw	128
  9691  1BD4  027F               	subwf	127,w
  9692  1BD5  1D03               	skipz
  9693  1BD6  2BD9               	goto	u4315
  9694  1BD7  3001               	movlw	1
  9695  1BD8  0275               	subwf	Lcd_Print_Char@i,w
  9696  1BD9                     u4315:	
  9697  1BD9  1C03               	skipc
  9698  1BDA  2BC9               	goto	l61
  9699                           
  9700                           ;main.c: 118:    RB2 = 0;
  9701  1BDB  1283               	bcf	3,5	;RP0=0, select bank0
  9702  1BDC  1303               	bcf	3,6	;RP1=0, select bank0
  9703  1BDD  1106               	bcf	6,2	;volatile
  9704                           
  9705                           ;main.c: 119:    Lcd_SetBit(Lower_Nibble);
  9706  1BDE  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  9707  1BDF  160A  158A  2105  160A  158A  	fcall	_Lcd_SetBit
  9708                           
  9709                           ;main.c: 120:    RB2 = 1;
  9710  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
  9711  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
  9712  1BE6  1506               	bsf	6,2	;volatile
  9713                           
  9714                           ;main.c: 121:    for(int i=2130483; i<=0; i--) __nop();
  9715  1BE7  3033               	movlw	51
  9716  1BE8  00F7               	movwf	Lcd_Print_Char@i_70
  9717  1BE9  3082               	movlw	130
  9718  1BEA  00F8               	movwf	Lcd_Print_Char@i_70+1
  9719  1BEB                     l63:	
  9720  1BEB  0000               	nop
  9721  1BEC  30FF               	movlw	255
  9722  1BED  07F7               	addwf	Lcd_Print_Char@i_70,f
  9723  1BEE  1803               	skipnc
  9724  1BEF  0AF8               	incf	Lcd_Print_Char@i_70+1,f
  9725  1BF0  30FF               	movlw	255
  9726  1BF1  07F8               	addwf	Lcd_Print_Char@i_70+1,f
  9727  1BF2  0878               	movf	Lcd_Print_Char@i_70+1,w
  9728  1BF3  3A80               	xorlw	128
  9729  1BF4  00FF               	movwf	127
  9730  1BF5  3080               	movlw	128
  9731  1BF6  027F               	subwf	127,w
  9732  1BF7  1D03               	skipz
  9733  1BF8  2BFB               	goto	u4325
  9734  1BF9  3001               	movlw	1
  9735  1BFA  0277               	subwf	Lcd_Print_Char@i_70,w
  9736  1BFB                     u4325:	
  9737  1BFB  1C03               	skipc
  9738  1BFC  2BEB               	goto	l63
  9739                           
  9740                           ;main.c: 122:    RB2 = 0;
  9741  1BFD  1283               	bcf	3,5	;RP0=0, select bank0
  9742  1BFE  1303               	bcf	3,6	;RP1=0, select bank0
  9743  1BFF  1106               	bcf	6,2	;volatile
  9744  1C00  0008               	return
  9745  1C01                     __end_of_Lcd_Print_Char:	
  9746                           
  9747                           	psect	text28
  9748  18EC                     __ptext28:	
  9749 ;; *************** function _Lcd_Clear *****************
  9750 ;; Defined at:
  9751 ;;		line 64 in file "main.c"
  9752 ;; Parameters:    Size  Location     Type
  9753 ;;		None
  9754 ;; Auto vars:     Size  Location     Type
  9755 ;;		None
  9756 ;; Return value:  Size  Location     Type
  9757 ;;                  2   46[None  ] int 
  9758 ;; Registers used:
  9759 ;;		wreg, status,2, status,0, pclath, cstack
  9760 ;; Tracked objects:
  9761 ;;		On entry : 0/0
  9762 ;;		On exit  : 0/0
  9763 ;;		Unchanged: 0/0
  9764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9765 ;;      Params:         0       0       0       0       0
  9766 ;;      Locals:         0       0       0       0       0
  9767 ;;      Temps:          0       0       0       0       0
  9768 ;;      Totals:         0       0       0       0       0
  9769 ;;Total ram usage:        0 bytes
  9770 ;; Hardware stack levels used:    1
  9771 ;; Hardware stack levels required when called:    2
  9772 ;; This function calls:
  9773 ;;		_Lcd_Cmd
  9774 ;; This function is called by:
  9775 ;;		_main
  9776 ;; This function uses a non-reentrant model
  9777 ;;
  9778                           
  9779                           
  9780                           ;psect for function _Lcd_Clear
  9781  18EC                     _Lcd_Clear:	
  9782                           
  9783                           ;main.c: 66:     Lcd_Cmd(0);
  9784                           
  9785                           ;incstack = 0
  9786                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9787  18EC  3000               	movlw	0
  9788  18ED  160A  158A  211F  160A  158A  	fcall	_Lcd_Cmd
  9789                           
  9790                           ;main.c: 67:     Lcd_Cmd(1);
  9791  18F2  3001               	movlw	1
  9792  18F3  160A  158A  211F   	fcall	_Lcd_Cmd
  9793  18F6  0008               	return
  9794  18F7                     __end_of_Lcd_Clear:	
  9795                           
  9796                           	psect	text29
  9797  191F                     __ptext29:	
  9798 ;; *************** function _Lcd_Cmd *****************
  9799 ;; Defined at:
  9800 ;;		line 55 in file "main.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  a               1    wreg     unsigned char 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  a               1    3[COMMON] unsigned char 
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  1    wreg      void 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0, pclath, cstack
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9814 ;;      Params:         0       0       0       0       0
  9815 ;;      Locals:         1       0       0       0       0
  9816 ;;      Temps:          2       0       0       0       0
  9817 ;;      Totals:         3       0       0       0       0
  9818 ;;Total ram usage:        3 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    1
  9821 ;; This function calls:
  9822 ;;		_Lcd_SetBit
  9823 ;; This function is called by:
  9824 ;;		_Lcd_Clear
  9825 ;;		_Lcd_Set_Cursor
  9826 ;;		_Lcd_Start
  9827 ;; This function uses a non-reentrant model
  9828 ;;
  9829                           
  9830                           
  9831                           ;psect for function _Lcd_Cmd
  9832  191F                     _Lcd_Cmd:	
  9833                           
  9834                           ;incstack = 0
  9835                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9836                           ;Lcd_Cmd@a stored from wreg
  9837  191F  00F3               	movwf	Lcd_Cmd@a
  9838                           
  9839                           ;main.c: 55: void Lcd_Cmd(char a);main.c: 56: {;main.c: 57:     RB1 = 0;
  9840  1920  1283               	bcf	3,5	;RP0=0, select bank0
  9841  1921  1303               	bcf	3,6	;RP1=0, select bank0
  9842  1922  1086               	bcf	6,1	;volatile
  9843                           
  9844                           ;main.c: 58:     Lcd_SetBit(a);
  9845  1923  0873               	movf	Lcd_Cmd@a,w
  9846  1924  160A  158A  2105  160A  158A  	fcall	_Lcd_SetBit
  9847                           
  9848                           ;main.c: 59:     RB2 = 1;
  9849  1929  1283               	bcf	3,5	;RP0=0, select bank0
  9850  192A  1303               	bcf	3,6	;RP1=0, select bank0
  9851  192B  1506               	bsf	6,2	;volatile
  9852                           
  9853                           ;main.c: 60:         _delay((unsigned long)((4)*(4000000/4000.0)));
  9854  192C  3006               	movlw	6
  9855  192D  00F2               	movwf	??_Lcd_Cmd+1
  9856  192E  3030               	movlw	48
  9857  192F  00F1               	movwf	??_Lcd_Cmd
  9858  1930                     u6177:	
  9859  1930  0BF1               	decfsz	??_Lcd_Cmd,f
  9860  1931  2930               	goto	u6177
  9861  1932  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9862  1933  2930               	goto	u6177
  9863  1934  0000               	nop
  9864                           
  9865                           ;main.c: 61:         RB2 = 0;
  9866  1935  1283               	bcf	3,5	;RP0=0, select bank0
  9867  1936  1303               	bcf	3,6	;RP1=0, select bank0
  9868  1937  1106               	bcf	6,2	;volatile
  9869  1938  0008               	return
  9870  1939                     __end_of_Lcd_Cmd:	
  9871                           
  9872                           	psect	text30
  9873  1905                     __ptext30:	
  9874 ;; *************** function _Lcd_SetBit *****************
  9875 ;; Defined at:
  9876 ;;		line 32 in file "main.c"
  9877 ;; Parameters:    Size  Location     Type
  9878 ;;  data_bit        1    wreg     unsigned char 
  9879 ;; Auto vars:     Size  Location     Type
  9880 ;;  data_bit        1    0[COMMON] unsigned char 
  9881 ;; Return value:  Size  Location     Type
  9882 ;;                  1    wreg      void 
  9883 ;; Registers used:
  9884 ;;		wreg
  9885 ;; Tracked objects:
  9886 ;;		On entry : 0/0
  9887 ;;		On exit  : 0/0
  9888 ;;		Unchanged: 0/0
  9889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9890 ;;      Params:         0       0       0       0       0
  9891 ;;      Locals:         1       0       0       0       0
  9892 ;;      Temps:          0       0       0       0       0
  9893 ;;      Totals:         1       0       0       0       0
  9894 ;;Total ram usage:        1 bytes
  9895 ;; Hardware stack levels used:    1
  9896 ;; This function calls:
  9897 ;;		Nothing
  9898 ;; This function is called by:
  9899 ;;		_Lcd_Cmd
  9900 ;;		_Lcd_Start
  9901 ;;		_Lcd_Print_Char
  9902 ;; This function uses a non-reentrant model
  9903 ;;
  9904                           
  9905                           
  9906                           ;psect for function _Lcd_SetBit
  9907  1905                     _Lcd_SetBit:	
  9908                           
  9909                           ;incstack = 0
  9910                           ; Regs used in _Lcd_SetBit: [wreg]
  9911                           ;Lcd_SetBit@data_bit stored from wreg
  9912  1905  00F0               	movwf	Lcd_SetBit@data_bit
  9913                           
  9914                           ;main.c: 32: void Lcd_SetBit(char data_bit);main.c: 33: {;main.c: 34:     if(data_bit& 1
      +                          )
  9915  1906  1C70               	btfss	Lcd_SetBit@data_bit,0
  9916  1907  290C               	goto	l33
  9917                           
  9918                           ;main.c: 35:         RB4 = 1;
  9919  1908  1283               	bcf	3,5	;RP0=0, select bank0
  9920  1909  1303               	bcf	3,6	;RP1=0, select bank0
  9921  190A  1606               	bsf	6,4	;volatile
  9922  190B  290F               	goto	l34
  9923  190C                     l33:	
  9924                           ;main.c: 36:     else
  9925                           
  9926                           
  9927                           ;main.c: 37:         RB4 = 0;
  9928  190C  1283               	bcf	3,5	;RP0=0, select bank0
  9929  190D  1303               	bcf	3,6	;RP1=0, select bank0
  9930  190E  1206               	bcf	6,4	;volatile
  9931  190F                     l34:	
  9932                           
  9933                           ;main.c: 39:     if(data_bit& 2)
  9934  190F  1CF0               	btfss	Lcd_SetBit@data_bit,1
  9935  1910  2913               	goto	l35
  9936                           
  9937                           ;main.c: 40:         RB5 = 1;
  9938  1911  1686               	bsf	6,5	;volatile
  9939  1912  2914               	goto	l36
  9940  1913                     l35:	
  9941                           ;main.c: 41:     else
  9942                           
  9943                           
  9944                           ;main.c: 42:         RB5 = 0;
  9945  1913  1286               	bcf	6,5	;volatile
  9946  1914                     l36:	
  9947                           
  9948                           ;main.c: 44:     if(data_bit& 4)
  9949  1914  1D70               	btfss	Lcd_SetBit@data_bit,2
  9950  1915  2918               	goto	l37
  9951                           
  9952                           ;main.c: 45:         RB6 = 1;
  9953  1916  1706               	bsf	6,6	;volatile
  9954  1917  2919               	goto	l38
  9955  1918                     l37:	
  9956                           ;main.c: 46:     else
  9957                           
  9958                           
  9959                           ;main.c: 47:         RB6 = 0;
  9960  1918  1306               	bcf	6,6	;volatile
  9961  1919                     l38:	
  9962                           
  9963                           ;main.c: 49:     if(data_bit& 8)
  9964  1919  1DF0               	btfss	Lcd_SetBit@data_bit,3
  9965  191A  291D               	goto	l39
  9966                           
  9967                           ;main.c: 50:         RB7 = 1;
  9968  191B  1786               	bsf	6,7	;volatile
  9969  191C  0008               	return
  9970  191D                     l39:	
  9971                           ;main.c: 51:     else
  9972                           
  9973                           
  9974                           ;main.c: 52:         RB7 = 0;
  9975  191D  1386               	bcf	6,7	;volatile
  9976  191E  0008               	return
  9977  191F                     __end_of_Lcd_SetBit:	
  9978                           
  9979                           	psect	text31
  9980  199F                     __ptext31:	
  9981 ;; *************** function _ADC_Read *****************
  9982 ;; Defined at:
  9983 ;;		line 138 in file "main.c"
  9984 ;; Parameters:    Size  Location     Type
  9985 ;;  channel         1    wreg     unsigned char 
  9986 ;; Auto vars:     Size  Location     Type
  9987 ;;  channel         1    4[COMMON] unsigned char 
  9988 ;; Return value:  Size  Location     Type
  9989 ;;                  2    0[COMMON] unsigned int 
  9990 ;; Registers used:
  9991 ;;		wreg, status,2, status,0
  9992 ;; Tracked objects:
  9993 ;;		On entry : 0/0
  9994 ;;		On exit  : 0/0
  9995 ;;		Unchanged: 0/0
  9996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9997 ;;      Params:         2       0       0       0       0
  9998 ;;      Locals:         1       0       0       0       0
  9999 ;;      Temps:          2       0       0       0       0
 10000 ;;      Totals:         5       0       0       0       0
 10001 ;;Total ram usage:        5 bytes
 10002 ;; Hardware stack levels used:    1
 10003 ;; This function calls:
 10004 ;;		Nothing
 10005 ;; This function is called by:
 10006 ;;		_main
 10007 ;; This function uses a non-reentrant model
 10008 ;;
 10009                           
 10010                           
 10011                           ;psect for function _ADC_Read
 10012  199F                     _ADC_Read:	
 10013                           
 10014                           ;incstack = 0
 10015                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
 10016                           ;ADC_Read@channel stored from wreg
 10017  199F  00F4               	movwf	ADC_Read@channel
 10018                           
 10019                           ;main.c: 138: unsigned int ADC_Read(unsigned char channel);main.c: 139: {;main.c: 140:  
      +                           ADCON0 &= 0x11000101;
 10020  19A0  3001               	movlw	1
 10021  19A1  00F2               	movwf	??_ADC_Read
 10022  19A2  0872               	movf	??_ADC_Read,w
 10023  19A3  1283               	bcf	3,5	;RP0=0, select bank0
 10024  19A4  1303               	bcf	3,6	;RP1=0, select bank0
 10025  19A5  059F               	andwf	31,f	;volatile
 10026                           
 10027                           ;main.c: 141:   ADCON0 |= channel<<3;
 10028  19A6  0874               	movf	ADC_Read@channel,w	;volatile
 10029  19A7  00F2               	movwf	??_ADC_Read
 10030  19A8  3002               	movlw	2
 10031  19A9                     u5455:	
 10032  19A9  1003               	clrc
 10033  19AA  0DF2               	rlf	??_ADC_Read,f
 10034  19AB  3EFF               	addlw	-1
 10035  19AC  1D03               	skipz
 10036  19AD  29A9               	goto	u5455
 10037  19AE  1003               	clrc
 10038  19AF  0D72               	rlf	??_ADC_Read,w
 10039  19B0  00F3               	movwf	??_ADC_Read+1
 10040  19B1  0873               	movf	??_ADC_Read+1,w
 10041  19B2  049F               	iorwf	31,f	;volatile
 10042                           
 10043                           ;main.c: 142:   _delay((unsigned long)((2)*(4000000/4000.0)));
 10044  19B3  3003               	movlw	3
 10045  19B4  00F3               	movwf	??_ADC_Read+1
 10046  19B5  3097               	movlw	151
 10047  19B6  00F2               	movwf	??_ADC_Read
 10048  19B7                     u6187:	
 10049  19B7  0BF2               	decfsz	??_ADC_Read,f
 10050  19B8  29B7               	goto	u6187
 10051  19B9  0BF3               	decfsz	??_ADC_Read+1,f
 10052  19BA  29B7               	goto	u6187
 10053  19BB  29BC               	nop2
 10054                           
 10055                           ;main.c: 143:   GO_nDONE = 1;
 10056  19BC  1283               	bcf	3,5	;RP0=0, select bank0
 10057  19BD  1303               	bcf	3,6	;RP1=0, select bank0
 10058  19BE  151F               	bsf	31,2	;volatile
 10059  19BF                     l77:	
 10060                           ;main.c: 144:   while(GO_nDONE);
 10061                           
 10062  19BF  191F               	btfsc	31,2	;volatile
 10063  19C0  29BF               	goto	l77
 10064                           
 10065                           ;main.c: 145:   return ((ADRESH<<8)+ADRESL);
 10066  19C1  081E               	movf	30,w	;volatile
 10067  19C2  00F1               	movwf	?_ADC_Read+1
 10068  19C3  1683               	bsf	3,5	;RP0=1, select bank1
 10069  19C4  1303               	bcf	3,6	;RP1=0, select bank1
 10070  19C5  081E               	movf	30,w	;volatile
 10071  19C6  00F0               	movwf	?_ADC_Read
 10072  19C7  0008               	return
 10073  19C8                     __end_of_ADC_Read:	
 10074                           
 10075                           	psect	text32
 10076  18E3                     __ptext32:	
 10077 ;; *************** function _ADC_Initialize *****************
 10078 ;; Defined at:
 10079 ;;		line 132 in file "main.c"
 10080 ;; Parameters:    Size  Location     Type
 10081 ;;		None
 10082 ;; Auto vars:     Size  Location     Type
 10083 ;;		None
 10084 ;; Return value:  Size  Location     Type
 10085 ;;                  1    wreg      void 
 10086 ;; Registers used:
 10087 ;;		wreg
 10088 ;; Tracked objects:
 10089 ;;		On entry : 0/0
 10090 ;;		On exit  : 0/0
 10091 ;;		Unchanged: 0/0
 10092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10093 ;;      Params:         0       0       0       0       0
 10094 ;;      Locals:         0       0       0       0       0
 10095 ;;      Temps:          0       0       0       0       0
 10096 ;;      Totals:         0       0       0       0       0
 10097 ;;Total ram usage:        0 bytes
 10098 ;; Hardware stack levels used:    1
 10099 ;; This function calls:
 10100 ;;		Nothing
 10101 ;; This function is called by:
 10102 ;;		_main
 10103 ;; This function uses a non-reentrant model
 10104 ;;
 10105                           
 10106                           
 10107                           ;psect for function _ADC_Initialize
 10108  18E3                     _ADC_Initialize:	
 10109                           
 10110                           ;main.c: 134:   ADCON0 = 0b01000001;
 10111                           
 10112                           ;incstack = 0
 10113                           ; Regs used in _ADC_Initialize: [wreg]
 10114  18E3  3041               	movlw	65
 10115  18E4  1283               	bcf	3,5	;RP0=0, select bank0
 10116  18E5  1303               	bcf	3,6	;RP1=0, select bank0
 10117  18E6  009F               	movwf	31	;volatile
 10118                           
 10119                           ;main.c: 135:   ADCON1 = 0b11000000;
 10120  18E7  30C0               	movlw	192
 10121  18E8  1683               	bsf	3,5	;RP0=1, select bank1
 10122  18E9  1303               	bcf	3,6	;RP1=0, select bank1
 10123  18EA  009F               	movwf	31	;volatile
 10124  18EB  0008               	return
 10125  18EC                     __end_of_ADC_Initialize:	
 10126  007E                     btemp	set	126	;btemp
 10127  007E                     wtemp0	set	126


Data Sizes:
    Strings     25
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     77      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[5]), STR_9(CODE[5]), STR_8(CODE[5]), STR_7(CODE[5]), 
		 -> STR_6(CODE[5]), STR_5(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> main@str(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 11
		 -> main@str(BANK1[8]), STR_4(CODE[2]), STR_3(CODE[11]), STR_2(CODE[2]), 
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    ___fldiv->___xxtofl
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _main->___flsub
    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    ___fldiv->___flsub

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                43    43      0   52432
                                             78 BANK0      1     1      0
                                             35 BANK1     42    42      0
                     _ADC_Initialize
                           _ADC_Read
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flsub
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   35374
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8472
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6935
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    5457
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     854
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     942
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     850
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    2641
                                              0 BANK1     26    18      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1    1140
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2    1120
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fleq
   ___flge
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___flsub
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___xxtofl (ARG)
   ___xxtofl
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4F      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     4D      4D       7       96.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Jul 05 19:25:46 2019

              ___fldiv@aexp 00B9                ___fldiv@bexp 00B8                           pc 0002  
              ___fldiv@sign 00B1                 __CFG_CP$OFF 0000                          l33 190C  
                        l34 190F                          l35 1913                          l36 1914  
                        l37 1918                          l61 1BC9                          l38 1919  
                        l39 191D                          l63 1BEB                          l77 19BF  
              ___awdiv@sign 0021                          fsr 0004         ___wmul@multiplicand 0072  
       __Umul8_16@word_mpld 0076                         l220 0273                         l261 07C9  
                       l246 05D7                         l271 1943                         l602 09AD  
                       l604 098B                         l452 118A                         l462 1D41  
                       l640 0AE6                         l632 0ACE                         l457 1A91  
                       l465 1DA7                         l481 1D09                         l458 1AAB  
                       l706 14AA                         l619 0A66                         l732 1DD7  
                       l654 1EAB                         l760 198E                         l745 1E2D  
                       l746 1E37                         l738 1E17                         l499 10E0  
                       l676 1FEA                         l678 1FF8                         l598 0914  
                       _RB1 0031                         _RB2 0032                         _RB4 0034  
                       _RB5 0035                         _RB6 0036                         _RB7 0037  
              __CFG_CPD$OFF 0000                         fsr0 0004                         indf 0000  
              ___awmod@sign 0076                __CFG_FOSC$HS 0000                ___flmul@aexp 0036  
              ___flmul@bexp 0037                 _sprintf$806 00AA                ___flmul@sign 0031  
              ___flmul@temp 003C                ___flmul@prod 0038                __CFG_LVP$OFF 0000  
              ___fltol@exp1 005B                        l3100 1CC5                        l3022 193B  
                      l3006 1176                        l3120 1CF5                        l3104 1CCE  
                      l3040 1C6C                        l3200 1E54                        l3016 1199  
                      l3008 1186                        l2320 1986                        l3130 1D18  
                      l3122 1D05                        l3050 1CA4                        l3042 1C7C  
                      l2410 1B3C                        l3140 100B                        l2404 1B20  
                      l3054 1CB1                        l3142 101B                        l3150 1046  
                      l2406 1B2E                        l2414 1B47                        l3310 0275  
                      l3302 0235                        l3216 1AE4                        l3080 1D81  
                      l2512 090C                        l2440 1A26                        l2432 1A02  
                      l3400 05C2                        l3312 0291                        l3304 026F  
                      l3066 1ABD                        l2610 0A78                        l2602 0A58  
                      l3146 1039                        l2434 1A10                        l2354 1C18  
                      l2418 1B4F                        l3076 1D5B                        l2508 0909  
                      l3172 1DE6                        l2700 11EE                        l2444 1A31  
                      l2380 1C57                        l2372 1C44                        l2364 1C20  
                      l2348 1C0D                        l3412 0639                        l3502 1E7D  
                      l2518 091E                        l3166 1DCF                        l2462 19EA  
                      l2366 1C2E                        l3318 02A1                        l3504 1E85  
                      l2632 0A99                        l2624 0A8E                        l3176 1DEA  
                      l2456 19CE                        l2376 1C4F                        l2392 1B13  
                      l3432 0685                        l3424 0668                        l3360 043F  
                      l3352 03CA                        l3344 0341                        l3328 02E7  
                      l3266 1A3A                        l3522 1EA3                        l2618 0A87  
                      l2626 0A90                        l2490 08EA                        l3186 1E2B  
                      l3178 1DFC                        l2458 19DC                        l2466 19F5  
                      l3418 064C                        l3620 1FF4                        l3604 1FB7  
                      l3532 1ECA                        l2636 0A9B                        l2556 0996  
                      l2548 095A                        l2484 08DF                        l3188 1E1C  
                      l2708 11FC                        l2396 1B1A                        l2900 17D5  
                      l3452 07B4                        l3372 04B2                        l3356 03EB  
                      l3518 1EA0                        l2654 0ADE                        l2582 09DC  
                      l2574 09BB                        l2558 0998                        l2566 09A7  
                      l3446 07A3                        l3382 0500                        l3454 07B9  
                      l3608 1FD0                        l2584 09DE                        l2592 09EE  
                      l2488 08E2                        l2760 13FC                        l2680 11C1  
                      l2912 1903                        l3368 0497                        l3288 0222  
                      l3472 020C                        l3538 1ED6                        l2658 0AE2  
                      l2922 1069                        l2762 1419                        l2682 11C9  
                      l3466 07DF                        l3394 0586                        l3474 07F7  
                      l3714 0E08                        l3564 1F44                        l2772 1432  
                      l2860 01C3                        l3388 0584                        l3590 1F83  
                      l3582 1F4F                        l3558 1F25                        l3566 1F01  
                      l2918 1060                        l2782 1464                        l2678 11BF  
                      l2854 0116                        l3584 1F6C                        l3568 1F49  
                      l2944 10B9                        l2936 1099                        l2792 1493  
                      l2768 1430                        l2696 11E4                        l3728 0EB9  
                      l3594 1F85                        l3498 1E7A                        l2970 1103  
                      l2954 10CC                        l2786 147A                        l2698 11E6  
                      l2882 1634                        l2964 10EF                        l2956 10DC  
                      l2876 15A9                        l3780 0289                        l2974 110C  
                      l2894 174A                        l2886 165F                        l3698 0D3C  
                      l2996 1162                        l2988 113A                        STR_1 08B7  
              __CFG_WDTE$ON 0000                        STR_2 08B5                        STR_3 08A0  
                      STR_4 08B5                        STR_5 08B0                        STR_6 08B0  
                      STR_7 08AB                        STR_8 08B0                        STR_9 08B0  
                      u3205 1C2F                        u3215 1C3B                        u3225 1C45  
                      u3305 1B34                        u3315 1B3D                        u4125 13A5  
                      u5031 1D6C                        u3095 198F                        u4055 12AC  
                      u5032 1D6D                        u4305 1BB7                        u5033 1D72  
                      u4145 13CA                        u3425 19D1                        u3185 1C23  
                      u5034 1D73                        u4315 1BD9                        u5051 1D92  
                      u5035 1D78                        u3355 1A05                        u5052 1D93  
                      u5036 1D79                        u4325 1BFB                        u6005 1F5E  
                      u5053 1D98                        u5125 1CF6                        u4165 13E8  
                      u4085 1309                        u3445 19E2                        u4405 01CE  
                      u3285 1B23                        u5054 1D99                        u5055 1D9E  
                      u3711 0A19                        u3703 0A00                        u3615 099C  
                      u5215 1029                        u4175 1400                        u3375 1A11  
                      u3455 19EB                        u5056 1D9F                        u3720 0A2D  
                      u3712 0A1A                        u3721 0A2E                        u3713 0A1F  
                      u5225 103A                        u4265 144F                        u3385 1A1D  
                      u4345 0028                        u3722 0A33                        u3714 0A20  
                      u3570 097A                        u3723 0A34                        u3715 0A25  
                      u5155 1D0E                        u5315 1E24                        u4275 146D  
                      u4195 140B                        u3395 1A27                        u4355 0082  
                      u4515 1684                        u4435 14E3                        u3716 0A26  
                      u3580 097B                        u3565 096E                        u4285 1485  
                      u4365 00D7                        u4525 16C0                        u4445 151F  
                      u5415 1AF0                        u5095 1CD7                        u4535 170B  
                      u4455 156A                        u4625 109B                        u4385 0137  
                      u6075 1FA2                        u5195 100F                        u5355 1E3F  
                      u5275 1DF3                        u4715 10E5                        u4635 10AC  
                      u4395 0184                        u4555 1762                        u4475 15C1  
                      u6157 1B64                        u6085 1FC0                        u3765 0A7A  
                      u4645 10BA                        u4565 179E                        u4485 15FD  
                      u5455 19A9                        u6167 1B72                        u6095 1FDB  
                      u3695 09E2                        u5295 1E0F                        u4815 1177  
                      u4575 17D8                        u4495 1637                        u5615 0495  
                      u6177 1930                        u3865 0AB8                        u5705 0662  
                      u6187 19B7                        u5395 1ACB                        u4915 1C70  
                      u4755 113C                        u5635 0589                        u4845 118F  
                      u4765 1151                        u4685 10CD                        u5725 0705  
                      u5645 05B8                        u4935 1C7E                        u4775 1164  
                      u5735 076B                        u5575 03F6                        u4945 1C93  
                      u5585 044A                        u5915 1F0A                        u4955 1CA5  
                      u4875 1944                        u5675 05DF                        u5925 1F13  
                      u4885 194B                        u5695 0655                        u5945 1F1E  
                      u5785 07D0                        u5955 1F33                        u4995 1AB9  
                      u5795 07DD                        u5985 1F53                __CFG_WRT$OFF 0000  
                      _main 0AF1                        btemp 007E            __end_of_ADC_Read 19C8  
             __CFG_BOREN$ON 0000                        start 0000          Lcd_Print_Char@i_70 0077  
           ___fldiv@new_exp 00B2          Lcd_Print_Char@data 0074             __end_of_Lcd_Cmd 1939  
                _Lcd_SetBit 1905               ___fltol@sign1 005A             __end_of___fladd 0AF1  
                     ?_main 0070             __end_of___fldiv 2000             __end_of___awdiv 1C5C  
           __end_of___flneg 08C2                       STR_10 08AB             __end_of___awmod 1B54  
           __end_of___flmul 14B7             __end_of___flsub 197C             __end_of___fltol 1D27  
           __end_of___lldiv 1CBA             ___awdiv@divisor 0077             __end_of___llmod 104F  
           __end_of___lwdiv 1A36             __end_of___lwmod 19FA             ___awdiv@counter 0020  
   __size_of_Lcd_Set_Cursor 004A                       _TRISB 0086               __CFG_PWRTE$ON 0000  
           __end_of_dpowers 08A0                       _scale 14B7             __end_of_isdigit 1905  
                     pclath 000A   __size_of_Lcd_Print_String 0041                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07FC     __size_of_Lcd_Print_Char 005B  
           __initialization 07FC                __end_of_main 1000                      ??_main 006E  
        __size_of_Lcd_Clear 000B        __size_of__tdiv_to_l_ 00A9          __size_of_Lcd_Start 0052  
                    _ADCON0 001F                      _ADCON1 009F            ___llmod@dividend 0074  
                    ?_scale 003E                      _ADRESH 001E                      _ADRESL 009E  
          ___awdiv@dividend 0079                   ??_Lcd_Cmd 0071            __end_of___xxtofl 1E5D  
          __end_of__powers_ 0844                      ___flge 1D27                      ___fleq 1A77  
                 ??___fladd 005A                      ___wmul 1939                   ??___fldiv 00A8  
                 ??___awdiv 007B                   ??___flneg 0074                   ??___awmod 0074  
                 ??___flmul 002C                   ??___flsub 007E                   ??___fltol 0055  
                 ??___lldiv 0078                   ??___llmod 0078                   ??___lwdiv 007A  
                 ??___lwmod 0074             ADC_Read@channel 0074                 ?_Lcd_SetBit 0070  
                    _fround 0004            ___awdiv@quotient 0022             ___awmod@divisor 0070  
           ___awmod@counter 0075                   ??_isdigit 0070          __size_of__Umul8_16 0023  
                 ?_ADC_Read 0070                   ??_sprintf 00A5             Lcd_Set_Cursor@a 0077  
           Lcd_Set_Cursor@b 0074             Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078  
                ___flge@ff1 0070                  ___flge@ff2 0074                ___xxtofl@arg 007A  
              ___xxtofl@exp 0079                ___xxtofl@val 0070                  ___fleq@ff1 0070  
                ___fleq@ff2 0074     __end_of__initialization 07FC                  ___flneg@f1 0070  
         __end_of_Lcd_Clear 18F7                  ___fltol@f1 0051           __end_of_Lcd_Start 1BA6  
            __pcstackCOMMON 0070               __end_of_scale 1800              _Lcd_Set_Cursor 1ABF  
                __div_to_l_ 10F8                  ??_ADC_Read 0072             __div_to_l_@exp1 0025  
           __div_to_l_@cntr 0024                     ??_scale 0042             __div_to_l_@quot 0020  
          _Lcd_Print_String 1A36         __size_of_Lcd_SetBit 001A               __div_to_l_@f1 0070  
             __div_to_l_@f2 0074              _Lcd_Print_Char 1BA6           __end_of__Umul8_16 199F  
                __pmaintext 0AF1                     ?___flge 0070                     ?___fleq 0070  
                   ?___wmul 0070                     ?_fround 003E          Lcd_SetBit@data_bit 0070  
    __end_of_Lcd_Set_Cursor 1B09     __size_of_ADC_Initialize 0009                   ?___xxtofl 0070  
      main@current_val_prev 00CB                  __stringtab 0800             Lcd_Print_Char@i 0075  
                   _Lcd_Cmd 191F      __end_of_Lcd_Print_Char 1C01           __end_of__npowers_ 0878  
           __size_of___flge 0093             __size_of___fleq 0048                     ___fladd 08C2  
                   ___fldiv 1E5D                     ___awdiv 1C01                     ___flneg 08B9  
                   ___awmod 1B09                     ___flmul 11A2                     ___flsub 195A  
                   ___fltol 1CBA                     ___lldiv 1C5C             __size_of___wmul 0021  
                   ___llmod 1003                  _fround$803 004D                  _fround$804 0049  
                   ___lwdiv 19FA                     ___lwmod 19C8             __size_of_fround 0201  
           ?_Lcd_Set_Cursor 0074                     __ptext1 0205                     __ptext2 14B7  
                   __ptext3 1B09                     __ptext4 1C01                     __ptext5 18F7  
                   __ptext6 0004                     __ptext7 19C8                     __ptext8 19FA  
                   __ptext9 11A2                 ?__div_to_l_ 0070                     _dpowers 0878  
                   _isdigit 18F7                  ??___xxtofl 0074            ___awmod@dividend 0072  
                   main@adc 00E7                     _sprintf 0205                     main@str 00D3  
      end_of_initialization 07FC             ?_Lcd_Print_Char 0070             ___lldiv@divisor 0070  
           ___lldiv@counter 007D              __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0074  
              ??_Lcd_SetBit 0070               ??__tdiv_to_l_ 0078                 ___fladd@grs 0065  
             ___xxtofl@sign 0078                 ___fldiv@grs 00B4                 ___fldiv@rem 00AD  
         __size_of_ADC_Read 0029                 ___flmul@grs 0032          __end_of_Lcd_SetBit 191F  
       __size_of__div_to_l_ 00AA                   _Lcd_Clear 18EC                   _Lcd_Start 1B54  
            __end_of___flge 1DBA              __end_of___fleq 1ABF              __end_of___wmul 195A  
            _ADC_Initialize 18E3    __end_of_Lcd_Print_String 1A77              __end_of_fround 0205  
       start_initialization 07FC         __end_of__tdiv_to_l_ 10F8             ___llmod@divisor 0070  
         Lcd_Print_String@a 0079           Lcd_Print_String@i 0020             ___llmod@counter 0079  
                ?_Lcd_Clear 0070                    ??___flge 0078                    ??___fleq 0078  
                  ??___wmul 0074                  ?_Lcd_Start 0070      __end_of_ADC_Initialize 18EC  
                 __Umul8_16 197C                    ??_fround 0042  Lcd_Print_Char@Lower_Nibble 0072  
             sprintf@tmpval 00B7                   ___fladd@a 0056                   ___fladd@b 0052  
                fround@prec 0051                   ___fldiv@a 00A0                   ___fldiv@b 00A4  
                 ___flmul@a 0028                   ___flmul@b 0024                   ___flsub@a 0066  
                 ___flsub@b 006A                   ___latbits 0002               __pcstackBANK0 0020  
             __pcstackBANK1 00A0           __size_of___xxtofl 00A3                    ?_Lcd_Cmd 0070  
               sprintf@flag 00AF                 sprintf@eexp 00B5                 sprintf@fval 00BE  
               sprintf@prec 00BB            ___lwdiv@dividend 0078            ??_Lcd_Set_Cursor 0075  
                  ?___fladd 0052                    ?___fldiv 00A0                    ?___awdiv 0077  
                  ?___flneg 0070                    ?___awmod 0070                    ?___flmul 0024  
                  ?___flsub 0066                    ?___fltol 0051                    ?___lldiv 0070  
                  ?___llmod 0070                   __npowers_ 0844                  ?__Umul8_16 0070  
                  ?___lwdiv 0076                    ?___lwmod 0070             ?_ADC_Initialize 0070  
                 __pstrings 0800                 __tdiv_to_l_ 104F                ??__div_to_l_ 0078  
                  ?_isdigit 0070                    _ADC_Read 199F                   _scale$805 004C  
          ??_Lcd_Print_Char 0071            ___lwdiv@quotient 007B                    ?_sprintf 00A0  
            __size_of_scale 0349       main@current_limit_val 00E9              ___wmul@product 0074  
                  Lcd_Cmd@a 0073          __end_of__div_to_l_ 11A2                    _GO_nDONE 00FA  
               ??_Lcd_Clear 0074                 ??_Lcd_Start 0074                 __stringbase 080F  
         ___wmul@multiplier 0070             main@current_val 00E3            __size_of_Lcd_Cmd 001A  
main@current_limit_val_prev 00CF                 ??__Umul8_16 0072            __size_of___fladd 022F  
          __size_of___fldiv 01A3            __size_of___awdiv 005B            __size_of___flneg 0009  
          __size_of___awmod 004B            __size_of___flmul 0315            __size_of___flsub 0022  
          __size_of___fltol 006D            __size_of___lldiv 005E            __size_of___llmod 004C  
          __size_of___lwdiv 003C            __size_of___lwmod 0032          __end_of__stringtab 0810  
               _isdigit$613 0070           ?_Lcd_Print_String 0079                  sprintf@val 00B1  
                  ___xxtofl 1DBA          ??_Lcd_Print_String 007B            __size_of_isdigit 000E  
                  _main$802 00DB             ___lwdiv@divisor 0076             ___lwdiv@counter 007D  
                  __ptext10 197C                    __ptext11 104F                    __ptext20 08B9  
                  __ptext12 10F8                    __ptext21 1D27                    __ptext13 1DBA  
                  __ptext30 1905                    __ptext22 1A77                    __ptext14 1939  
                  __ptext31 199F                    __ptext23 1E5D                    __ptext15 1003  
                  __ptext32 18E3                    __ptext24 1B54                    __ptext16 1C5C  
                  __ptext25 1ABF                    __ptext17 1CBA                    __ptext26 1A36  
                  __ptext18 195A                    __ptext27 1BA6                    __ptext19 08C2  
                  __ptext28 18EC                    __ptext29 191F                    __powers_ 0810  
          __size_of_sprintf 05F7               __size_of_main 050F                    main@RLim 00C3  
Lcd_Print_Char@Upper_Nibble 0073                    isdigit@c 0071                    scale@scl 0050  
                 sprintf@ap 00AE            __tdiv_to_l_@exp1 0025            __tdiv_to_l_@cntr 0024  
                 sprintf@sp 00BD            __tdiv_to_l_@quot 0020            ___lwmod@dividend 0072  
          ___lldiv@dividend 0074            ??_ADC_Initialize 0070                   stringcode 080A  
        Lcd_Set_Cursor@temp 007A                ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070  
                  sprintf@c 00C2                    sprintf@f 00A0            ___lldiv@quotient 0079  
           ___lwmod@divisor 0070             ___lwmod@counter 0075                    stringdir 080A  
                  stringtab 0800               ___fladd@signs 0062        main@voltage_val_prev 00C7  
              ___fladd@aexp 0063                ___fladd@bexp 0064        __Umul8_16@multiplier 0078  
           main@voltage_val 00DF           __Umul8_16@product 0074  
