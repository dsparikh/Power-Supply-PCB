

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Jul 02 21:48:26 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F876A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	text25,local,class=CODE,merge=1,delta=2
    35                           	psect	text26,local,class=CODE,merge=1,delta=2
    36                           	psect	text27,local,class=CODE,merge=1,delta=2
    37                           	psect	text28,local,class=CODE,merge=1,delta=2
    38                           	psect	text29,local,class=CODE,merge=1,delta=2
    39                           	dabs	1,0x7E,2
    40  0000                     
    41                           ; Version 2.05
    42                           ; Generated 20/12/2018 GMT
    43                           ; 
    44                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC16F876A Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     	;# 
    76  0001                     	;# 
    77  0002                     	;# 
    78  0003                     	;# 
    79  0004                     	;# 
    80  0005                     	;# 
    81  0006                     	;# 
    82  0007                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000E                     	;# 
    89  000F                     	;# 
    90  0010                     	;# 
    91  0011                     	;# 
    92  0012                     	;# 
    93  0013                     	;# 
    94  0014                     	;# 
    95  0015                     	;# 
    96  0015                     	;# 
    97  0016                     	;# 
    98  0017                     	;# 
    99  0018                     	;# 
   100  0019                     	;# 
   101  001A                     	;# 
   102  001B                     	;# 
   103  001B                     	;# 
   104  001C                     	;# 
   105  001D                     	;# 
   106  001E                     	;# 
   107  001F                     	;# 
   108  0081                     	;# 
   109  0085                     	;# 
   110  0086                     	;# 
   111  0087                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187                           
   188                           	psect	strings
   189  0800                     __pstrings:	
   190  0800                     stringtab:	
   191  0800                     __stringtab:	
   192                           
   193                           ;	String table - string pointers are 1 byte each
   194  0800  1BFF               	btfsc	btemp+1,7
   195  0801  280A               	ljmp	stringcode
   196  0802  1383               	bcf	3,7
   197  0803  187F               	btfsc	btemp+1,0
   198  0804  1783               	bsf	3,7
   199  0805  0800               	movf	0,w
   200  0806  0A84               	incf	4,f
   201  0807  1903               	skipnz
   202  0808  0AFF               	incf	btemp+1,f
   203  0809  0008               	return
   204  080A                     stringcode:	
   205  080A                     stringdir:	
   206  080A  3008               	movlw	high stringdir
   207  080B  008A               	movwf	10
   208  080C  0804               	movf	4,w
   209  080D  0A84               	incf	4,f
   210  080E  0782               	addwf	2,f
   211  080F                     __stringbase:	
   212  080F  3400               	retlw	0
   213  0810                     __end_of__stringtab:	
   214  0810                     __powers_:	
   215  0810  3400               	retlw	0
   216  0811  3400               	retlw	0
   217  0812  3480               	retlw	128
   218  0813  343F               	retlw	63
   219  0814  3400               	retlw	0
   220  0815  3400               	retlw	0
   221  0816  3420               	retlw	32
   222  0817  3441               	retlw	65
   223  0818  3400               	retlw	0
   224  0819  3400               	retlw	0
   225  081A  34C8               	retlw	200
   226  081B  3442               	retlw	66
   227  081C  3400               	retlw	0
   228  081D  3400               	retlw	0
   229  081E  347A               	retlw	122
   230  081F  3444               	retlw	68
   231  0820  3400               	retlw	0
   232  0821  3440               	retlw	64
   233  0822  341C               	retlw	28
   234  0823  3446               	retlw	70
   235  0824  3400               	retlw	0
   236  0825  3450               	retlw	80
   237  0826  34C3               	retlw	195
   238  0827  3447               	retlw	71
   239  0828  3400               	retlw	0
   240  0829  3424               	retlw	36
   241  082A  3474               	retlw	116
   242  082B  3449               	retlw	73
   243  082C  3480               	retlw	128
   244  082D  3496               	retlw	150
   245  082E  3418               	retlw	24
   246  082F  344B               	retlw	75
   247  0830  3420               	retlw	32
   248  0831  34BC               	retlw	188
   249  0832  34BE               	retlw	190
   250  0833  344C               	retlw	76
   251  0834  3428               	retlw	40
   252  0835  346B               	retlw	107
   253  0836  346E               	retlw	110
   254  0837  344E               	retlw	78
   255  0838  34F9               	retlw	249
   256  0839  3402               	retlw	2
   257  083A  3415               	retlw	21
   258  083B  3450               	retlw	80
   259  083C  34EC               	retlw	236
   260  083D  3478               	retlw	120
   261  083E  34AD               	retlw	173
   262  083F  3460               	retlw	96
   263  0840  34CA               	retlw	202
   264  0841  34F2               	retlw	242
   265  0842  3449               	retlw	73
   266  0843  3471               	retlw	113
   267  0844                     __end_of__powers_:	
   268  0844                     __npowers_:	
   269  0844  3400               	retlw	0
   270  0845  3400               	retlw	0
   271  0846  3480               	retlw	128
   272  0847  343F               	retlw	63
   273  0848  34CD               	retlw	205
   274  0849  34CC               	retlw	204
   275  084A  34CC               	retlw	204
   276  084B  343D               	retlw	61
   277  084C  340A               	retlw	10
   278  084D  34D7               	retlw	215
   279  084E  3423               	retlw	35
   280  084F  343C               	retlw	60
   281  0850  346F               	retlw	111
   282  0851  3412               	retlw	18
   283  0852  3483               	retlw	131
   284  0853  343A               	retlw	58
   285  0854  3417               	retlw	23
   286  0855  34B7               	retlw	183
   287  0856  34D1               	retlw	209
   288  0857  3438               	retlw	56
   289  0858  34AC               	retlw	172
   290  0859  34C5               	retlw	197
   291  085A  3427               	retlw	39
   292  085B  3437               	retlw	55
   293  085C  34BD               	retlw	189
   294  085D  3437               	retlw	55
   295  085E  3486               	retlw	134
   296  085F  3435               	retlw	53
   297  0860  3495               	retlw	149
   298  0861  34BF               	retlw	191
   299  0862  34D6               	retlw	214
   300  0863  3433               	retlw	51
   301  0864  3477               	retlw	119
   302  0865  34CC               	retlw	204
   303  0866  342B               	retlw	43
   304  0867  3432               	retlw	50
   305  0868  345F               	retlw	95
   306  0869  3470               	retlw	112
   307  086A  3489               	retlw	137
   308  086B  3430               	retlw	48
   309  086C  34FF               	retlw	255
   310  086D  34E6               	retlw	230
   311  086E  34DB               	retlw	219
   312  086F  342E               	retlw	46
   313  0870  3408               	retlw	8
   314  0871  34E5               	retlw	229
   315  0872  343C               	retlw	60
   316  0873  341E               	retlw	30
   317  0874  3460               	retlw	96
   318  0875  3442               	retlw	66
   319  0876  34A2               	retlw	162
   320  0877  340D               	retlw	13
   321  0878                     __end_of__npowers_:	
   322  0878                     _dpowers:	
   323  0878  3401               	retlw	1
   324  0879  3400               	retlw	0
   325  087A  3400               	retlw	0
   326  087B  3400               	retlw	0
   327  087C  340A               	retlw	10
   328  087D  3400               	retlw	0
   329  087E  3400               	retlw	0
   330  087F  3400               	retlw	0
   331  0880  3464               	retlw	100
   332  0881  3400               	retlw	0
   333  0882  3400               	retlw	0
   334  0883  3400               	retlw	0
   335  0884  34E8               	retlw	232
   336  0885  3403               	retlw	3
   337  0886  3400               	retlw	0
   338  0887  3400               	retlw	0
   339  0888  3410               	retlw	16
   340  0889  3427               	retlw	39
   341  088A  3400               	retlw	0
   342  088B  3400               	retlw	0
   343  088C  34A0               	retlw	160
   344  088D  3486               	retlw	134
   345  088E  3401               	retlw	1
   346  088F  3400               	retlw	0
   347  0890  3440               	retlw	64
   348  0891  3442               	retlw	66
   349  0892  340F               	retlw	15
   350  0893  3400               	retlw	0
   351  0894  3480               	retlw	128
   352  0895  3496               	retlw	150
   353  0896  3498               	retlw	152
   354  0897  3400               	retlw	0
   355  0898  3400               	retlw	0
   356  0899  34E1               	retlw	225
   357  089A  34F5               	retlw	245
   358  089B  3405               	retlw	5
   359  089C  3400               	retlw	0
   360  089D  34CA               	retlw	202
   361  089E  349A               	retlw	154
   362  089F  343B               	retlw	59
   363  08A0                     __end_of_dpowers:	
   364  0032                     _RB2	set	50
   365  0031                     _RB1	set	49
   366  0037                     _RB7	set	55
   367  0036                     _RB6	set	54
   368  0035                     _RB5	set	53
   369  0034                     _RB4	set	52
   370  0086                     _TRISB	set	134
   371  08A0                     STR_5:	
   372  08A0  3443               	retlw	67	;'C'
   373  08A1  3475               	retlw	117	;'u'
   374  08A2  3472               	retlw	114	;'r'
   375  08A3  3472               	retlw	114	;'r'
   376  08A4  3420               	retlw	32	;' '
   377  08A5  344C               	retlw	76	;'L'
   378  08A6  3469               	retlw	105	;'i'
   379  08A7  346D               	retlw	109	;'m'
   380  08A8  3469               	retlw	105	;'i'
   381  08A9  3474               	retlw	116	;'t'
   382  08AA  3420               	retlw	32	;' '
   383  08AB  3400               	retlw	0
   384  08AC                     STR_6:	
   385  08AC  3425               	retlw	37	;'%'
   386  08AD  342E               	retlw	46	;'.'
   387  08AE  3431               	retlw	49	;'1'
   388  08AF  3466               	retlw	102	;'f'
   389  08B0  3400               	retlw	0
   390  08B1                     STR_1:	
   391  08B1  3425               	retlw	37	;'%'
   392  08B2  342E               	retlw	46	;'.'
   393  08B3  3432               	retlw	50	;'2'
   394  08B4  3466               	retlw	102	;'f'
   395  08B5  3400               	retlw	0
   396  08B6                     STR_4:	
   397  08B6  3420               	retlw	32	;' '
   398  08B7  3441               	retlw	65	;'A'
   399  08B8  3420               	retlw	32	;' '
   400  08B9  3400               	retlw	0
   401  08BA                     STR_2:	
   402  08BA  3420               	retlw	32	;' '
   403  08BB  3456               	retlw	86	;'V'
   404  08BC  3420               	retlw	32	;' '
   405  08BD  3400               	retlw	0
   406  08BE                     STR_7:	
   407  08BE  3420               	retlw	32	;' '
   408  08BF  3441               	retlw	65	;'A'
   409  08C0  3400               	retlw	0
   410  08B1                     
   411                           ; #config settings
   412  0000                     
   413                           	psect	cinit
   414  07FC                     start_initialization:	
   415  07FC                     __initialization:	
   416  07FC                     end_of_initialization:	
   417                           ;End of C runtime variable initialization code
   418                           
   419  07FC                     __end_of__initialization:	
   420  07FC  0183               	clrf	3
   421  07FD  120A  158A  28E3   	ljmp	_main	;jump to C main() function
   422                           
   423                           	psect	cstackBANK1
   424  00A0                     __pcstackBANK1:	
   425  00A0                     ?_sprintf:	
   426  00A0                     sprintf@f:	
   427                           ; 2 bytes @ 0x0
   428                           
   429                           
   430                           ; 1 bytes @ 0x0
   431  00A0                     	ds	5
   432  00A5                     ??_sprintf:	
   433                           
   434                           ; 1 bytes @ 0x5
   435  00A5                     	ds	5
   436  00AA                     _sprintf$784:	
   437                           
   438                           ; 4 bytes @ 0xA
   439  00AA                     	ds	4
   440  00AE                     sprintf@ap:	
   441                           
   442                           ; 1 bytes @ 0xE
   443  00AE                     	ds	1
   444  00AF                     sprintf@flag:	
   445                           
   446                           ; 2 bytes @ 0xF
   447  00AF                     	ds	2
   448  00B1                     sprintf@val:	
   449                           
   450                           ; 4 bytes @ 0x11
   451  00B1                     	ds	4
   452  00B5                     sprintf@eexp:	
   453                           
   454                           ; 2 bytes @ 0x15
   455  00B5                     	ds	2
   456  00B7                     sprintf@tmpval:	
   457                           
   458                           ; 4 bytes @ 0x17
   459  00B7                     	ds	4
   460  00BB                     sprintf@prec:	
   461                           
   462                           ; 2 bytes @ 0x1B
   463  00BB                     	ds	2
   464  00BD                     sprintf@sp:	
   465                           
   466                           ; 1 bytes @ 0x1D
   467  00BD                     	ds	1
   468  00BE                     sprintf@fval:	
   469                           
   470                           ; 4 bytes @ 0x1E
   471  00BE                     	ds	4
   472  00C2                     sprintf@c:	
   473                           
   474                           ; 1 bytes @ 0x22
   475  00C2                     	ds	1
   476  00C3                     ??_main:	
   477                           
   478                           ; 1 bytes @ 0x23
   479  00C3                     	ds	3
   480  00C6                     main@voltage:	
   481                           
   482                           ; 8 bytes @ 0x26
   483  00C6                     	ds	8
   484  00CE                     main@current:	
   485                           
   486                           ; 8 bytes @ 0x2E
   487  00CE                     	ds	8
   488  00D6                     main@current_limit:	
   489                           
   490                           ; 8 bytes @ 0x36
   491  00D6                     	ds	8
   492  00DE                     main@f:	
   493                           
   494                           ; 4 bytes @ 0x3E
   495  00DE                     	ds	4
   496                           
   497                           	psect	cstackCOMMON
   498  0070                     __pcstackCOMMON:	
   499  0070                     ?_isdigit:	
   500  0070                     ?___fleq:	
   501                           ; 1 bit 
   502                           
   503  0070                     ?___flge:	
   504                           ; 1 bit 
   505                           
   506  0070                     ??_isdigit:	
   507                           ; 1 bit 
   508                           
   509  0070                     ?_Lcd_SetBit:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ??_Lcd_SetBit:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_Lcd_Cmd:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Lcd_Start:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_Lcd_Print_Char:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ?__Umul8_16:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_Lcd_Clear:	
   528                           ; 2 bytes @ 0x0
   529                           
   530  0070                     ?_main:	
   531                           ; 2 bytes @ 0x0
   532                           
   533  0070                     ?___wmul:	
   534                           ; 2 bytes @ 0x0
   535                           
   536  0070                     ?___awmod:	
   537                           ; 2 bytes @ 0x0
   538                           
   539  0070                     ?___lwmod:	
   540                           ; 2 bytes @ 0x0
   541                           
   542  0070                     ?__tdiv_to_l_:	
   543                           ; 2 bytes @ 0x0
   544                           
   545  0070                     ?__div_to_l_:	
   546                           ; 4 bytes @ 0x0
   547                           
   548  0070                     ?___lldiv:	
   549                           ; 4 bytes @ 0x0
   550                           
   551  0070                     ?___flneg:	
   552                           ; 4 bytes @ 0x0
   553                           
   554  0070                     ?___llmod:	
   555                           ; 4 bytes @ 0x0
   556                           
   557  0070                     ?___xxtofl:	
   558                           ; 4 bytes @ 0x0
   559                           
   560  0070                     Lcd_SetBit@data_bit:	
   561                           ; 4 bytes @ 0x0
   562                           
   563  0070                     _isdigit$596:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     __Umul8_16@multiplicand:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ___wmul@multiplier:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ___awmod@divisor:	
   573                           ; 2 bytes @ 0x0
   574                           
   575  0070                     ___lwmod@divisor:	
   576                           ; 2 bytes @ 0x0
   577                           
   578  0070                     ___lldiv@divisor:	
   579                           ; 2 bytes @ 0x0
   580                           
   581  0070                     __div_to_l_@f1:	
   582                           ; 4 bytes @ 0x0
   583                           
   584  0070                     ___fleq@ff1:	
   585                           ; 4 bytes @ 0x0
   586                           
   587  0070                     ___flge@ff1:	
   588                           ; 4 bytes @ 0x0
   589                           
   590  0070                     ___flneg@f1:	
   591                           ; 4 bytes @ 0x0
   592                           
   593  0070                     __tdiv_to_l_@f1:	
   594                           ; 4 bytes @ 0x0
   595                           
   596  0070                     ___llmod@divisor:	
   597                           ; 4 bytes @ 0x0
   598                           
   599  0070                     ___xxtofl@val:	
   600                           ; 4 bytes @ 0x0
   601                           
   602                           
   603                           ; 4 bytes @ 0x0
   604  0070                     	ds	1
   605  0071                     ??_Lcd_Cmd:	
   606  0071                     ??_Lcd_Print_Char:	
   607                           ; 1 bytes @ 0x1
   608                           
   609  0071                     isdigit@c:	
   610                           ; 1 bytes @ 0x1
   611                           
   612                           
   613                           ; 1 bytes @ 0x1
   614  0071                     	ds	1
   615  0072                     ??__Umul8_16:	
   616  0072                     Lcd_Print_Char@Lower_Nibble:	
   617                           ; 1 bytes @ 0x2
   618                           
   619  0072                     ___wmul@multiplicand:	
   620                           ; 1 bytes @ 0x2
   621                           
   622  0072                     ___awmod@dividend:	
   623                           ; 2 bytes @ 0x2
   624                           
   625  0072                     ___lwmod@dividend:	
   626                           ; 2 bytes @ 0x2
   627                           
   628                           
   629                           ; 2 bytes @ 0x2
   630  0072                     	ds	1
   631  0073                     Lcd_Cmd@a:	
   632  0073                     Lcd_Print_Char@Upper_Nibble:	
   633                           ; 1 bytes @ 0x3
   634                           
   635                           
   636                           ; 1 bytes @ 0x3
   637  0073                     	ds	1
   638  0074                     ??_Lcd_Clear:	
   639  0074                     ?_Lcd_Set_Cursor:	
   640                           ; 1 bytes @ 0x4
   641                           
   642  0074                     ??_Lcd_Start:	
   643                           ; 1 bytes @ 0x4
   644                           
   645  0074                     ??___wmul:	
   646                           ; 1 bytes @ 0x4
   647                           
   648  0074                     ??___awmod:	
   649                           ; 1 bytes @ 0x4
   650                           
   651  0074                     ??___flneg:	
   652                           ; 1 bytes @ 0x4
   653                           
   654  0074                     ??___lwmod:	
   655                           ; 1 bytes @ 0x4
   656                           
   657  0074                     ??___xxtofl:	
   658                           ; 1 bytes @ 0x4
   659                           
   660  0074                     Lcd_Set_Cursor@b:	
   661                           ; 1 bytes @ 0x4
   662                           
   663  0074                     Lcd_Print_Char@data:	
   664                           ; 1 bytes @ 0x4
   665                           
   666  0074                     ___wmul@product:	
   667                           ; 1 bytes @ 0x4
   668                           
   669  0074                     __Umul8_16@product:	
   670                           ; 2 bytes @ 0x4
   671                           
   672  0074                     ___lldiv@dividend:	
   673                           ; 2 bytes @ 0x4
   674                           
   675  0074                     __div_to_l_@f2:	
   676                           ; 4 bytes @ 0x4
   677                           
   678  0074                     ___fleq@ff2:	
   679                           ; 4 bytes @ 0x4
   680                           
   681  0074                     ___flge@ff2:	
   682                           ; 4 bytes @ 0x4
   683                           
   684  0074                     __tdiv_to_l_@f2:	
   685                           ; 4 bytes @ 0x4
   686                           
   687  0074                     ___llmod@dividend:	
   688                           ; 4 bytes @ 0x4
   689                           
   690                           
   691                           ; 4 bytes @ 0x4
   692  0074                     	ds	1
   693  0075                     ??_Lcd_Set_Cursor:	
   694  0075                     ___awmod@counter:	
   695                           ; 1 bytes @ 0x5
   696                           
   697  0075                     ___lwmod@counter:	
   698                           ; 1 bytes @ 0x5
   699                           
   700  0075                     Lcd_Print_Char@i:	
   701                           ; 1 bytes @ 0x5
   702                           
   703                           
   704                           ; 2 bytes @ 0x5
   705  0075                     	ds	1
   706  0076                     ?___lwdiv:	
   707  0076                     ___awmod@sign:	
   708                           ; 2 bytes @ 0x6
   709                           
   710  0076                     ___lwdiv@divisor:	
   711                           ; 1 bytes @ 0x6
   712                           
   713  0076                     __Umul8_16@word_mpld:	
   714                           ; 2 bytes @ 0x6
   715                           
   716                           
   717                           ; 2 bytes @ 0x6
   718  0076                     	ds	1
   719  0077                     ?___awdiv:	
   720  0077                     Lcd_Set_Cursor@a:	
   721                           ; 2 bytes @ 0x7
   722                           
   723  0077                     Lcd_Print_Char@i_65:	
   724                           ; 1 bytes @ 0x7
   725                           
   726  0077                     ___awdiv@divisor:	
   727                           ; 2 bytes @ 0x7
   728                           
   729                           
   730                           ; 2 bytes @ 0x7
   731  0077                     	ds	1
   732  0078                     ??__tdiv_to_l_:	
   733  0078                     ??__div_to_l_:	
   734                           ; 1 bytes @ 0x8
   735                           
   736  0078                     ??___lldiv:	
   737                           ; 1 bytes @ 0x8
   738                           
   739  0078                     ??___fleq:	
   740                           ; 1 bytes @ 0x8
   741                           
   742  0078                     ??___flge:	
   743                           ; 1 bytes @ 0x8
   744                           
   745  0078                     ??___llmod:	
   746                           ; 1 bytes @ 0x8
   747                           
   748  0078                     Lcd_Set_Cursor@z:	
   749                           ; 1 bytes @ 0x8
   750                           
   751  0078                     ___xxtofl@sign:	
   752                           ; 1 bytes @ 0x8
   753                           
   754  0078                     __Umul8_16@multiplier:	
   755                           ; 1 bytes @ 0x8
   756                           
   757  0078                     ___lwdiv@dividend:	
   758                           ; 1 bytes @ 0x8
   759                           
   760                           
   761                           ; 2 bytes @ 0x8
   762  0078                     	ds	1
   763  0079                     ?_Lcd_Print_String:	
   764  0079                     Lcd_Set_Cursor@y:	
   765                           ; 1 bytes @ 0x9
   766                           
   767  0079                     ___llmod@counter:	
   768                           ; 1 bytes @ 0x9
   769                           
   770  0079                     ___xxtofl@exp:	
   771                           ; 1 bytes @ 0x9
   772                           
   773  0079                     Lcd_Print_String@a:	
   774                           ; 1 bytes @ 0x9
   775                           
   776  0079                     ___awdiv@dividend:	
   777                           ; 2 bytes @ 0x9
   778                           
   779  0079                     ___lldiv@quotient:	
   780                           ; 2 bytes @ 0x9
   781                           
   782                           
   783                           ; 4 bytes @ 0x9
   784  0079                     	ds	1
   785  007A                     ??___lwdiv:	
   786  007A                     Lcd_Set_Cursor@temp:	
   787                           ; 1 bytes @ 0xA
   788                           
   789  007A                     ___xxtofl@arg:	
   790                           ; 1 bytes @ 0xA
   791                           
   792                           
   793                           ; 4 bytes @ 0xA
   794  007A                     	ds	1
   795  007B                     ??_Lcd_Print_String:	
   796  007B                     ??___awdiv:	
   797                           ; 1 bytes @ 0xB
   798                           
   799  007B                     ___lwdiv@quotient:	
   800                           ; 1 bytes @ 0xB
   801                           
   802                           
   803                           ; 2 bytes @ 0xB
   804  007B                     	ds	2
   805  007D                     ___lldiv@counter:	
   806  007D                     ___lwdiv@counter:	
   807                           ; 1 bytes @ 0xD
   808                           
   809                           
   810                           ; 1 bytes @ 0xD
   811  007D                     	ds	1
   812  007E                     ??___flsub:	
   813                           
   814                           	psect	cstackBANK0
   815  0020                     __pcstackBANK0:	
   816                           ; 1 bytes @ 0xE
   817                           
   818  0020                     ___awdiv@counter:	
   819  0020                     Lcd_Print_String@i:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0020                     __div_to_l_@quot:	
   823                           ; 2 bytes @ 0x0
   824                           
   825  0020                     __tdiv_to_l_@quot:	
   826                           ; 4 bytes @ 0x0
   827                           
   828                           
   829                           ; 4 bytes @ 0x0
   830  0020                     	ds	1
   831  0021                     ___awdiv@sign:	
   832                           
   833                           ; 1 bytes @ 0x1
   834  0021                     	ds	1
   835  0022                     ___awdiv@quotient:	
   836                           
   837                           ; 2 bytes @ 0x2
   838  0022                     	ds	2
   839  0024                     ?___flmul:	
   840  0024                     __div_to_l_@cntr:	
   841                           ; 4 bytes @ 0x4
   842                           
   843  0024                     __tdiv_to_l_@cntr:	
   844                           ; 1 bytes @ 0x4
   845                           
   846  0024                     ___flmul@b:	
   847                           ; 1 bytes @ 0x4
   848                           
   849                           
   850                           ; 4 bytes @ 0x4
   851  0024                     	ds	1
   852  0025                     __div_to_l_@exp1:	
   853  0025                     __tdiv_to_l_@exp1:	
   854                           ; 1 bytes @ 0x5
   855                           
   856                           
   857                           ; 1 bytes @ 0x5
   858  0025                     	ds	3
   859  0028                     ___flmul@a:	
   860                           
   861                           ; 4 bytes @ 0x8
   862  0028                     	ds	4
   863  002C                     ??___flmul:	
   864                           
   865                           ; 1 bytes @ 0xC
   866  002C                     	ds	5
   867  0031                     ___flmul@sign:	
   868                           
   869                           ; 1 bytes @ 0x11
   870  0031                     	ds	1
   871  0032                     ___flmul@grs:	
   872                           
   873                           ; 4 bytes @ 0x12
   874  0032                     	ds	4
   875  0036                     ___flmul@aexp:	
   876                           
   877                           ; 1 bytes @ 0x16
   878  0036                     	ds	1
   879  0037                     ___flmul@bexp:	
   880                           
   881                           ; 1 bytes @ 0x17
   882  0037                     	ds	1
   883  0038                     ___flmul@prod:	
   884                           
   885                           ; 4 bytes @ 0x18
   886  0038                     	ds	4
   887  003C                     ___flmul@temp:	
   888                           
   889                           ; 2 bytes @ 0x1C
   890  003C                     	ds	2
   891  003E                     ?_fround:	
   892  003E                     ?_scale:	
   893                           ; 4 bytes @ 0x1E
   894                           
   895                           
   896                           ; 4 bytes @ 0x1E
   897  003E                     	ds	4
   898  0042                     ??_fround:	
   899  0042                     ??_scale:	
   900                           ; 1 bytes @ 0x22
   901                           
   902                           
   903                           ; 1 bytes @ 0x22
   904  0042                     	ds	7
   905  0049                     _fround$782:	
   906                           
   907                           ; 4 bytes @ 0x29
   908  0049                     	ds	3
   909  004C                     _scale$783:	
   910                           
   911                           ; 4 bytes @ 0x2C
   912  004C                     	ds	1
   913  004D                     _fround$781:	
   914                           
   915                           ; 4 bytes @ 0x2D
   916  004D                     	ds	3
   917  0050                     scale@scl:	
   918                           
   919                           ; 1 bytes @ 0x30
   920  0050                     	ds	1
   921  0051                     ?___fltol:	
   922  0051                     fround@prec:	
   923                           ; 4 bytes @ 0x31
   924                           
   925  0051                     ___fltol@f1:	
   926                           ; 1 bytes @ 0x31
   927                           
   928                           
   929                           ; 4 bytes @ 0x31
   930  0051                     	ds	1
   931  0052                     ?___fladd:	
   932  0052                     ___fladd@b:	
   933                           ; 4 bytes @ 0x32
   934                           
   935                           
   936                           ; 4 bytes @ 0x32
   937  0052                     	ds	3
   938  0055                     ??___fltol:	
   939                           
   940                           ; 1 bytes @ 0x35
   941  0055                     	ds	1
   942  0056                     ___fladd@a:	
   943                           
   944                           ; 4 bytes @ 0x36
   945  0056                     	ds	4
   946  005A                     ??___fladd:	
   947  005A                     ___fltol@sign1:	
   948                           ; 1 bytes @ 0x3A
   949                           
   950                           
   951                           ; 1 bytes @ 0x3A
   952  005A                     	ds	1
   953  005B                     ___fltol@exp1:	
   954                           
   955                           ; 1 bytes @ 0x3B
   956  005B                     	ds	7
   957  0062                     ___fladd@signs:	
   958                           
   959                           ; 1 bytes @ 0x42
   960  0062                     	ds	1
   961  0063                     ___fladd@aexp:	
   962                           
   963                           ; 1 bytes @ 0x43
   964  0063                     	ds	1
   965  0064                     ___fladd@bexp:	
   966                           
   967                           ; 1 bytes @ 0x44
   968  0064                     	ds	1
   969  0065                     ___fladd@grs:	
   970                           
   971                           ; 1 bytes @ 0x45
   972  0065                     	ds	1
   973  0066                     ?___flsub:	
   974  0066                     ___flsub@a:	
   975                           ; 4 bytes @ 0x46
   976                           
   977                           
   978                           ; 4 bytes @ 0x46
   979  0066                     	ds	4
   980  006A                     ___flsub@b:	
   981                           
   982                           ; 4 bytes @ 0x4A
   983  006A                     	ds	4
   984                           
   985                           	psect	maintext
   986  08E3                     __pmaintext:	
   987 ;;
   988 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   989 ;;
   990 ;; *************** function _main *****************
   991 ;; Defined at:
   992 ;;		line 132 in file "main.c"
   993 ;; Parameters:    Size  Location     Type
   994 ;;		None
   995 ;; Auto vars:     Size  Location     Type
   996 ;;  f               4   62[BANK1 ] float 
   997 ;;  current_limi    8   54[BANK1 ] unsigned char [8]
   998 ;;  current         8   46[BANK1 ] unsigned char [8]
   999 ;;  voltage         8   38[BANK1 ] unsigned char [8]
  1000 ;;  a               2    0        unsigned int 
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  2   65[None  ] int 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : B00/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0      28       0       0
  1012 ;;      Temps:          0       0       3       0       0
  1013 ;;      Totals:         0       0      31       0       0
  1014 ;;Total ram usage:       31 bytes
  1015 ;; Hardware stack levels required when called:    4
  1016 ;; This function calls:
  1017 ;;		_Lcd_Clear
  1018 ;;		_Lcd_Print_String
  1019 ;;		_Lcd_Set_Cursor
  1020 ;;		_Lcd_Start
  1021 ;;		_sprintf
  1022 ;; This function is called by:
  1023 ;;		Startup code after reset
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function _main
  1029  08E3                     _main:	
  1030                           
  1031                           ;main.c: 134:     unsigned int a;;main.c: 135:     TRISB = 0x00;
  1032                           
  1033                           ;incstack = 0
  1034                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1035  08E3  1683               	bsf	3,5	;RP0=1, select bank1
  1036  08E4  1303               	bcf	3,6	;RP1=0, select bank1
  1037  08E5  0186               	clrf	6	;volatile
  1038                           
  1039                           ;main.c: 136:     Lcd_Start();
  1040  08E6  160A  118A  2175  120A  158A  	fcall	_Lcd_Start
  1041                           
  1042                           ;main.c: 137:     Lcd_Clear();
  1043  08EB  160A  118A  2000  120A  158A  	fcall	_Lcd_Clear
  1044  08F0                     l3215:	
  1045                           
  1046                           ;main.c: 144:     {;main.c: 145:         Lcd_Set_Cursor(1,1);
  1047  08F0  01F4               	clrf	Lcd_Set_Cursor@b
  1048  08F1  0AF4               	incf	Lcd_Set_Cursor@b,f
  1049  08F2  3001               	movlw	1
  1050  08F3  160A  118A  2094  120A  158A  	fcall	_Lcd_Set_Cursor
  1051                           
  1052                           ;main.c: 146:         float f = 12.5;
  1053  08F8  3041               	movlw	65
  1054  08F9  1683               	bsf	3,5	;RP0=1, select bank1
  1055  08FA  1303               	bcf	3,6	;RP1=0, select bank1
  1056  08FB  00E1               	movwf	(main@f+3)^(0+128)
  1057  08FC  3048               	movlw	72
  1058  08FD  00E0               	movwf	(main@f+2)^(0+128)
  1059  08FE  3000               	movlw	0
  1060  08FF  00DF               	movwf	(main@f+1)^(0+128)
  1061  0900  3000               	movlw	0
  1062  0901  00DE               	movwf	main@f^(0+128)
  1063                           
  1064                           ;main.c: 147:         sprintf(voltage, "%.2f", (float) f);
  1065  0902  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1066  0903  00C3               	movwf	??_main^(0+128)
  1067  0904  0843               	movf	??_main^(0+128),w
  1068  0905  00A0               	movwf	sprintf@f^(0+128)
  1069  0906  0861               	movf	(main@f+3)^(0+128),w
  1070  0907  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1071  0908  0860               	movf	(main@f+2)^(0+128),w
  1072  0909  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1073  090A  085F               	movf	(main@f+1)^(0+128),w
  1074  090B  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1075  090C  085E               	movf	main@f^(0+128),w
  1076  090D  00A1               	movwf	(?_sprintf^(0+128)+1)
  1077  090E  30C6               	movlw	(low (main@voltage| 0))& (0+255)
  1078  090F  120A  118A  2205  120A  158A  	fcall	_sprintf
  1079                           
  1080                           ;main.c: 148:         Lcd_Print_String(voltage);
  1081  0914  30C6               	movlw	(low (main@voltage| 0))& (0+255)
  1082  0915  00F9               	movwf	Lcd_Print_String@a
  1083  0916  3000               	movlw	0
  1084  0917  00FA               	movwf	Lcd_Print_String@a+1
  1085  0918  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1086                           
  1087                           ;main.c: 149:         Lcd_Print_String(" V ");
  1088  091D  30AB               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1089  091E  00F9               	movwf	Lcd_Print_String@a
  1090  091F  3080               	movlw	128
  1091  0920  00FA               	movwf	Lcd_Print_String@a+1
  1092  0921  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1093                           
  1094                           ;main.c: 150:         f = 12.5;
  1095  0926  3041               	movlw	65
  1096  0927  1683               	bsf	3,5	;RP0=1, select bank1
  1097  0928  1303               	bcf	3,6	;RP1=0, select bank1
  1098  0929  00E1               	movwf	(main@f+3)^(0+128)
  1099  092A  3048               	movlw	72
  1100  092B  00E0               	movwf	(main@f+2)^(0+128)
  1101  092C  3000               	movlw	0
  1102  092D  00DF               	movwf	(main@f+1)^(0+128)
  1103  092E  3000               	movlw	0
  1104  092F  00DE               	movwf	main@f^(0+128)
  1105                           
  1106                           ;main.c: 151:         sprintf(current, "%.2f", (float) f);
  1107  0930  30A2               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1108  0931  00C3               	movwf	??_main^(0+128)
  1109  0932  0843               	movf	??_main^(0+128),w
  1110  0933  00A0               	movwf	sprintf@f^(0+128)
  1111  0934  0861               	movf	(main@f+3)^(0+128),w
  1112  0935  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1113  0936  0860               	movf	(main@f+2)^(0+128),w
  1114  0937  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1115  0938  085F               	movf	(main@f+1)^(0+128),w
  1116  0939  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1117  093A  085E               	movf	main@f^(0+128),w
  1118  093B  00A1               	movwf	(?_sprintf^(0+128)+1)
  1119  093C  30CE               	movlw	(low (main@current| 0))& (0+255)
  1120  093D  120A  118A  2205  120A  158A  	fcall	_sprintf
  1121                           
  1122                           ;main.c: 152:         Lcd_Print_String(current);
  1123  0942  30CE               	movlw	(low (main@current| 0))& (0+255)
  1124  0943  00F9               	movwf	Lcd_Print_String@a
  1125  0944  3000               	movlw	0
  1126  0945  00FA               	movwf	Lcd_Print_String@a+1
  1127  0946  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1128                           
  1129                           ;main.c: 153:         Lcd_Print_String(" A ");
  1130  094B  30A7               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1131  094C  00F9               	movwf	Lcd_Print_String@a
  1132  094D  3080               	movlw	128
  1133  094E  00FA               	movwf	Lcd_Print_String@a+1
  1134  094F  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1135                           
  1136                           ;main.c: 154:         Lcd_Set_Cursor(2,1);
  1137  0954  01F4               	clrf	Lcd_Set_Cursor@b
  1138  0955  0AF4               	incf	Lcd_Set_Cursor@b,f
  1139  0956  3002               	movlw	2
  1140  0957  160A  118A  2094  120A  158A  	fcall	_Lcd_Set_Cursor
  1141                           
  1142                           ;main.c: 155:         Lcd_Print_String("Curr Limit ");
  1143  095C  3091               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1144  095D  00F9               	movwf	Lcd_Print_String@a
  1145  095E  3080               	movlw	128
  1146  095F  00FA               	movwf	Lcd_Print_String@a+1
  1147  0960  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1148                           
  1149                           ;main.c: 156:         f = 2.5;
  1150  0965  3040               	movlw	64
  1151  0966  1683               	bsf	3,5	;RP0=1, select bank1
  1152  0967  1303               	bcf	3,6	;RP1=0, select bank1
  1153  0968  00E1               	movwf	(main@f+3)^(0+128)
  1154  0969  3020               	movlw	32
  1155  096A  00E0               	movwf	(main@f+2)^(0+128)
  1156  096B  3000               	movlw	0
  1157  096C  00DF               	movwf	(main@f+1)^(0+128)
  1158  096D  3000               	movlw	0
  1159  096E  00DE               	movwf	main@f^(0+128)
  1160                           
  1161                           ;main.c: 157:         sprintf(current_limit, "%.1f", (float) f);
  1162  096F  309D               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1163  0970  00C3               	movwf	??_main^(0+128)
  1164  0971  0843               	movf	??_main^(0+128),w
  1165  0972  00A0               	movwf	sprintf@f^(0+128)
  1166  0973  0861               	movf	(main@f+3)^(0+128),w
  1167  0974  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1168  0975  0860               	movf	(main@f+2)^(0+128),w
  1169  0976  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1170  0977  085F               	movf	(main@f+1)^(0+128),w
  1171  0978  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1172  0979  085E               	movf	main@f^(0+128),w
  1173  097A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1174  097B  30D6               	movlw	(low (main@current_limit| 0))& (0+255)
  1175  097C  120A  118A  2205  120A  158A  	fcall	_sprintf
  1176                           
  1177                           ;main.c: 158:         Lcd_Print_String(current_limit);
  1178  0981  30D6               	movlw	(low (main@current_limit| 0))& (0+255)
  1179  0982  00F9               	movwf	Lcd_Print_String@a
  1180  0983  3000               	movlw	0
  1181  0984  00FA               	movwf	Lcd_Print_String@a+1
  1182  0985  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1183                           
  1184                           ;main.c: 159:         Lcd_Print_String(" A");
  1185  098A  30AF               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1186  098B  00F9               	movwf	Lcd_Print_String@a
  1187  098C  3080               	movlw	128
  1188  098D  00FA               	movwf	Lcd_Print_String@a+1
  1189  098E  160A  118A  200B  120A  158A  	fcall	_Lcd_Print_String
  1190                           
  1191                           ;main.c: 160:         _delay((unsigned long)((2000)*(4000000/4000.0)));
  1192  0993  300B               	movlw	11
  1193  0994  1683               	bsf	3,5	;RP0=1, select bank1
  1194  0995  1303               	bcf	3,6	;RP1=0, select bank1
  1195  0996  00C5               	movwf	(??_main^(0+128)+2)
  1196  0997  3026               	movlw	38
  1197  0998  00C4               	movwf	(??_main^(0+128)+1)
  1198  0999  305D               	movlw	93
  1199  099A  00C3               	movwf	??_main^(0+128)
  1200  099B                     u5457:	
  1201  099B  0BC3               	decfsz	??_main^(0+128),f
  1202  099C  299B               	goto	u5457
  1203  099D  0BC4               	decfsz	(??_main^(0+128)+1),f
  1204  099E  299B               	goto	u5457
  1205  099F  0BC5               	decfsz	(??_main^(0+128)+2),f
  1206  09A0  299B               	goto	u5457
  1207  09A1  28F0               	goto	l3215
  1208  09A2                     __end_of_main:	
  1209                           
  1210                           	psect	text1
  1211  0205                     __ptext1:	
  1212 ;; *************** function _sprintf *****************
  1213 ;; Defined at:
  1214 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  sp              1    wreg     PTR unsigned char 
  1217 ;;		 -> main@current_limit(8), main@current(8), main@voltage(8), 
  1218 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1219 ;;		 -> STR_6(5), STR_3(5), STR_1(5), 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;  sp              1   29[BANK1 ] PTR unsigned char 
  1222 ;;		 -> main@current_limit(8), main@current(8), main@voltage(8), 
  1223 ;;  fval            4   30[BANK1 ] PTR unsigned char 
  1224 ;;  tmpval          4   23[BANK1 ] struct .
  1225 ;;  val             4   17[BANK1 ] unsigned long 
  1226 ;;  prec            2   27[BANK1 ] int 
  1227 ;;  eexp            2   21[BANK1 ] int 
  1228 ;;  flag            2   15[BANK1 ] unsigned short 
  1229 ;;  cp              2    0        PTR const unsigned char 
  1230 ;;  len             2    0        unsigned int 
  1231 ;;  width           2    0        int 
  1232 ;;  c               1   34[BANK1 ] unsigned char 
  1233 ;;  ap              1   14[BANK1 ] PTR void [1]
  1234 ;;		 -> ?_sprintf(2), 
  1235 ;;  d               1    0        unsigned char 
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  2    0[BANK1 ] int 
  1238 ;; Registers used:
  1239 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1245 ;;      Params:         0       0       5       0       0
  1246 ;;      Locals:         0       0      25       0       0
  1247 ;;      Temps:          0       0       5       0       0
  1248 ;;      Totals:         0       0      35       0       0
  1249 ;;Total ram usage:       35 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; Hardware stack levels required when called:    3
  1252 ;; This function calls:
  1253 ;;		___awdiv
  1254 ;;		___fladd
  1255 ;;		___fleq
  1256 ;;		___flge
  1257 ;;		___flmul
  1258 ;;		___flneg
  1259 ;;		___flsub
  1260 ;;		___fltol
  1261 ;;		___lldiv
  1262 ;;		___llmod
  1263 ;;		___wmul
  1264 ;;		___xxtofl
  1265 ;;		__div_to_l_
  1266 ;;		__tdiv_to_l_
  1267 ;;		_fround
  1268 ;;		_isdigit
  1269 ;;		_scale
  1270 ;; This function is called by:
  1271 ;;		_main
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _sprintf
  1277  0205                     _sprintf:	
  1278                           
  1279                           ;incstack = 0
  1280                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1281                           ;sprintf@sp stored from wreg
  1282  0205  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0206  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0207  00BD               	movwf	sprintf@sp^(0+128)
  1285                           
  1286                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 500: sprint
      +                          f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources
      +                          \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\
      +                          common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\source
      +                          s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sour
      +                          ces\c90\common\doprnt.c: 509:  int width;;C:\Program Files (x86)\Microchip\xc8\v2.05\pic
      +                          \sources\c90\common\doprnt.c: 512:  int prec;
  1287  0208  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1288  0209  00A5               	movwf	??_sprintf^(0+128)
  1289  020A  0825               	movf	??_sprintf^(0+128),w
  1290  020B  00AE               	movwf	sprintf@ap^(0+128)
  1291  020C                     l3197:	
  1292                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1293                           
  1294                           
  1295                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 548:  while
      +                          ((c = *f++)) {
  1296  020C  3001               	movlw	1
  1297  020D  07A0               	addwf	sprintf@f^(0+128),f
  1298  020E  30FF               	movlw	-1
  1299  020F  0720               	addwf	sprintf@f^(0+128),w
  1300  0210  0084               	movwf	4
  1301  0211  120A  158A  200A  120A  118A  	fcall	stringdir
  1302  0216  00A5               	movwf	??_sprintf^(0+128)
  1303  0217  0825               	movf	??_sprintf^(0+128),w
  1304  0218  00C2               	movwf	sprintf@c^(0+128)
  1305  0219  0842               	movf	sprintf@c^(0+128),w
  1306  021A  1903               	btfsc	3,2
  1307  021B  2FF7               	goto	l3199
  1308                           
  1309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 550:   if(c
      +                           != '%')
  1310  021C  3025               	movlw	37
  1311  021D  0642               	xorwf	sprintf@c^(0+128),w
  1312  021E  1903               	btfsc	3,2
  1313  021F  2A22               	goto	l3013
  1314                           
  1315                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 552:   {;C:
      +                          \Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
      +                          + = (c)));
  1316  0220  0842               	movf	sprintf@c^(0+128),w
  1317  0221  2FEC               	goto	L6
  1318  0222                     l3013:	
  1319                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 554:    con
      +                          tinue;
  1320                           
  1321                           
  1322                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 560:   flag
      +                           = 0;
  1323  0222  01AF               	clrf	sprintf@flag^(0+128)
  1324  0223  01B0               	clrf	(sprintf@flag+1)^(0+128)
  1325                           
  1326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 623:   if(*
      +                          f == '.') {
  1327  0224  0820               	movf	sprintf@f^(0+128),w
  1328  0225  0084               	movwf	4
  1329  0226  120A  158A  200A  120A  118A  	fcall	stringdir
  1330  022B  3A2E               	xorlw	46
  1331  022C  1D03               	skipz
  1332  022D  2A6F               	goto	l3029
  1333                           
  1334                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 624:    fla
      +                          g |= 0x4000;
  1335  022E  1730               	bsf	(sprintf@flag^(0+128)+1),6
  1336                           
  1337                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 625:    f++
      +                          ;
  1338  022F  3001               	movlw	1
  1339  0230  00A5               	movwf	??_sprintf^(0+128)
  1340  0231  0825               	movf	??_sprintf^(0+128),w
  1341  0232  07A0               	addwf	sprintf@f^(0+128),f
  1342                           
  1343                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 639:    {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 640:     prec
      +                           = 0;
  1344  0233  01BB               	clrf	sprintf@prec^(0+128)
  1345  0234  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1346  0235                     l3027:	
  1347                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1348                           
  1349                           
  1350                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 641:     wh
      +                          ile(isdigit((unsigned)*f))
  1351  0235  0820               	movf	sprintf@f^(0+128),w
  1352  0236  0084               	movwf	4
  1353  0237  120A  158A  200A  120A  118A  	fcall	stringdir
  1354  023C  160A  158A  270C  120A  118A  	fcall	_isdigit
  1355  0241  1C03               	btfss	3,0
  1356  0242  2A75               	goto	l3035
  1357                           
  1358                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 642:      p
      +                          rec = prec*10 + *f++ - '0';
  1359  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1360  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1361  0245  083C               	movf	(sprintf@prec+1)^(0+128),w
  1362  0246  00F1               	movwf	___wmul@multiplier+1
  1363  0247  083B               	movf	sprintf@prec^(0+128),w
  1364  0248  00F0               	movwf	___wmul@multiplier
  1365  0249  300A               	movlw	10
  1366  024A  00F2               	movwf	___wmul@multiplicand
  1367  024B  3000               	movlw	0
  1368  024C  00F3               	movwf	___wmul@multiplicand+1
  1369  024D  160A  158A  274E  120A  118A  	fcall	___wmul
  1370  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0254  0820               	movf	sprintf@f^(0+128),w
  1373  0255  0084               	movwf	4
  1374  0256  120A  158A  200A  120A  118A  	fcall	stringdir
  1375  025B  0770               	addwf	?___wmul,w
  1376  025C  00A5               	movwf	??_sprintf^(0+128)
  1377  025D  3000               	movlw	0
  1378  025E  1803               	skipnc
  1379  025F  3001               	movlw	1
  1380  0260  0771               	addwf	?___wmul+1,w
  1381  0261  00A6               	movwf	(??_sprintf+1)^(0+128)
  1382  0262  0825               	movf	??_sprintf^(0+128),w
  1383  0263  3ED0               	addlw	208
  1384  0264  00BB               	movwf	sprintf@prec^(0+128)
  1385  0265  0826               	movf	(??_sprintf+1)^(0+128),w
  1386  0266  1803               	skipnc
  1387  0267  3E01               	addlw	1
  1388  0268  3EFF               	addlw	255
  1389  0269  00BC               	movwf	(sprintf@prec+1)^(0+128)
  1390  026A  3001               	movlw	1
  1391  026B  00A5               	movwf	??_sprintf^(0+128)
  1392  026C  0825               	movf	??_sprintf^(0+128),w
  1393  026D  07A0               	addwf	sprintf@f^(0+128),f
  1394  026E  2A35               	goto	l3027
  1395  026F                     l3029:	
  1396                           
  1397                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 645:    pre
      +                          c = 0;
  1398  026F  01BB               	clrf	sprintf@prec^(0+128)
  1399  0270  01BC               	clrf	(sprintf@prec+1)^(0+128)
  1400                           
  1401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 647:    fla
      +                          g |= 0x1000;
  1402  0271  1630               	bsf	(sprintf@flag^(0+128)+1),4
  1403  0272  2A75               	goto	l3035
  1404  0273                     l197:	
  1405                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 681:   case
      +                           'f':
  1406                           
  1407                           
  1408                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 682:    fla
      +                          g |= 0x400;
  1409  0273  1530               	bsf	(sprintf@flag^(0+128)+1),2
  1410                           
  1411                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 683:    bre
      +                          ak;
  1412  0274  2A91               	goto	l3037
  1413  0275                     l3035:	
  1414  0275  3001               	movlw	1
  1415  0276  1683               	bsf	3,5	;RP0=1, select bank1
  1416  0277  1303               	bcf	3,6	;RP1=0, select bank1
  1417  0278  07A0               	addwf	sprintf@f^(0+128),f
  1418  0279  30FF               	movlw	-1
  1419  027A  0720               	addwf	sprintf@f^(0+128),w
  1420  027B  0084               	movwf	4
  1421  027C  120A  158A  200A  120A  118A  	fcall	stringdir
  1422  0281  00C2               	movwf	sprintf@c^(0+128)
  1423  0282  00A5               	movwf	??_sprintf^(0+128)
  1424  0283  01A6               	clrf	(??_sprintf^(0+128)+1)
  1425                           
  1426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1427                           ; Switch size 1, requested type "simple"
  1428                           ; Number of cases is 1, Range of values is 0 to 0
  1429                           ; switch strategies available:
  1430                           ; Name         Instructions Cycles
  1431                           ; simple_byte            4     3 (average)
  1432                           ; direct_byte           11     8 (fixed)
  1433                           ; jumptable            260     6 (fixed)
  1434                           ;	Chosen strategy is simple_byte
  1435  0284  0826               	movf	(??_sprintf+1)^(0+128),w
  1436  0285  3A00               	xorlw	0	; case 0
  1437  0286  1903               	skipnz
  1438  0287  2A89               	goto	l3277
  1439  0288  2A0C               	goto	l3197
  1440  0289                     l3277:	
  1441                           
  1442                           ; Switch size 1, requested type "simple"
  1443                           ; Number of cases is 2, Range of values is 0 to 102
  1444                           ; switch strategies available:
  1445                           ; Name         Instructions Cycles
  1446                           ; simple_byte            7     4 (average)
  1447                           ; jumptable            260     6 (fixed)
  1448                           ;	Chosen strategy is simple_byte
  1449  0289  0825               	movf	??_sprintf^(0+128),w
  1450  028A  3A00               	xorlw	0	; case 0
  1451  028B  1903               	skipnz
  1452  028C  2FF7               	goto	l3199
  1453  028D  3A66               	xorlw	102	; case 102
  1454  028E  1903               	skipnz
  1455  028F  2A73               	goto	l197
  1456  0290  2A0C               	goto	l3197
  1457  0291                     l3037:	
  1458                           
  1459                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 844:   if(f
      +                          lag & (0x700)) {
  1460  0291  3000               	movlw	0
  1461  0292  052F               	andwf	sprintf@flag^(0+128),w
  1462  0293  00A5               	movwf	??_sprintf^(0+128)
  1463  0294  3007               	movlw	7
  1464  0295  0530               	andwf	(sprintf@flag+1)^(0+128),w
  1465  0296  00A6               	movwf	(??_sprintf+1)^(0+128)
  1466  0297  0825               	movf	??_sprintf^(0+128),w
  1467  0298  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1468  0299  1903               	btfsc	3,2
  1469  029A  2FB9               	goto	l3179
  1470                           
  1471                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 846:    if(
      +                          flag & 0x1000)
  1472  029B  1E30               	btfss	(sprintf@flag+1)^(0+128),4
  1473  029C  2AA1               	goto	l3043
  1474                           
  1475                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 848:     pr
      +                          ec = 6;
  1476  029D  3006               	movlw	6
  1477  029E  00BB               	movwf	sprintf@prec^(0+128)
  1478  029F  3000               	movlw	0
  1479  02A0  00BC               	movwf	(sprintf@prec^(0+128)+1)
  1480  02A1                     l3043:	
  1481                           
  1482                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 849:    fva
      +                          l = (*(double *)__va_arg((*(double **)ap), (double)0));
  1483  02A1  082E               	movf	sprintf@ap^(0+128),w
  1484  02A2  0084               	movwf	4
  1485  02A3  1383               	bcf	3,7	;select IRP bank0
  1486  02A4  0800               	movf	0,w
  1487  02A5  00BE               	movwf	sprintf@fval^(0+128)
  1488  02A6  0A84               	incf	4,f
  1489  02A7  0800               	movf	0,w
  1490  02A8  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1491  02A9  0A84               	incf	4,f
  1492  02AA  0800               	movf	0,w
  1493  02AB  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1494  02AC  0A84               	incf	4,f
  1495  02AD  0800               	movf	0,w
  1496  02AE  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1497  02AF  3004               	movlw	4
  1498  02B0  00A5               	movwf	??_sprintf^(0+128)
  1499  02B1  0825               	movf	??_sprintf^(0+128),w
  1500  02B2  07AE               	addwf	sprintf@ap^(0+128),f
  1501                           
  1502                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 850:    if(
      +                          fval < 0.0) {
  1503  02B3  0841               	movf	(sprintf@fval+3)^(0+128),w
  1504  02B4  00F3               	movwf	___flge@ff1+3
  1505  02B5  0840               	movf	(sprintf@fval+2)^(0+128),w
  1506  02B6  00F2               	movwf	___flge@ff1+2
  1507  02B7  083F               	movf	(sprintf@fval+1)^(0+128),w
  1508  02B8  00F1               	movwf	___flge@ff1+1
  1509  02B9  083E               	movf	sprintf@fval^(0+128),w
  1510  02BA  00F0               	movwf	___flge@ff1
  1511  02BB  3000               	movlw	0
  1512  02BC  00F7               	movwf	___flge@ff2+3
  1513  02BD  3000               	movlw	0
  1514  02BE  00F6               	movwf	___flge@ff2+2
  1515  02BF  3000               	movlw	0
  1516  02C0  00F5               	movwf	___flge@ff2+1
  1517  02C1  3000               	movlw	0
  1518  02C2  00F4               	movwf	___flge@ff2
  1519  02C3  160A  118A  2348  120A  118A  	fcall	___flge
  1520  02C8  1803               	btfsc	3,0
  1521  02C9  2AE7               	goto	l3053
  1522                           
  1523                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 851:     fv
      +                          al = -fval;
  1524  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  1525  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  1526  02CC  0841               	movf	(sprintf@fval+3)^(0+128),w
  1527  02CD  00F3               	movwf	___flneg@f1+3
  1528  02CE  0840               	movf	(sprintf@fval+2)^(0+128),w
  1529  02CF  00F2               	movwf	___flneg@f1+2
  1530  02D0  083F               	movf	(sprintf@fval+1)^(0+128),w
  1531  02D1  00F1               	movwf	___flneg@f1+1
  1532  02D2  083E               	movf	sprintf@fval^(0+128),w
  1533  02D3  00F0               	movwf	___flneg@f1
  1534  02D4  160A  158A  2703  120A  118A  	fcall	___flneg
  1535  02D9  0873               	movf	?___flneg+3,w
  1536  02DA  1683               	bsf	3,5	;RP0=1, select bank1
  1537  02DB  1303               	bcf	3,6	;RP1=0, select bank1
  1538  02DC  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1539  02DD  0872               	movf	?___flneg+2,w
  1540  02DE  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1541  02DF  0871               	movf	?___flneg+1,w
  1542  02E0  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1543  02E1  0870               	movf	?___flneg,w
  1544  02E2  00BE               	movwf	sprintf@fval^(0+128)
  1545                           
  1546                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 852:     fl
      +                          ag |= 0x03;
  1547  02E3  3003               	movlw	3
  1548  02E4  04AF               	iorwf	sprintf@flag^(0+128),f
  1549  02E5  3000               	movlw	0
  1550  02E6  04B0               	iorwf	(sprintf@flag+1)^(0+128),f
  1551  02E7                     l3053:	
  1552                           
  1553                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 854:    eex
      +                          p = 0;
  1554  02E7  1683               	bsf	3,5	;RP0=1, select bank1
  1555  02E8  1303               	bcf	3,6	;RP1=0, select bank1
  1556  02E9  01B5               	clrf	sprintf@eexp^(0+128)
  1557  02EA  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  1558                           
  1559                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 855:    if(
      +                           fval!=0) {
  1560  02EB  0841               	movf	(sprintf@fval+3)^(0+128),w
  1561  02EC  00F3               	movwf	___fleq@ff1+3
  1562  02ED  0840               	movf	(sprintf@fval+2)^(0+128),w
  1563  02EE  00F2               	movwf	___fleq@ff1+2
  1564  02EF  083F               	movf	(sprintf@fval+1)^(0+128),w
  1565  02F0  00F1               	movwf	___fleq@ff1+1
  1566  02F1  083E               	movf	sprintf@fval^(0+128),w
  1567  02F2  00F0               	movwf	___fleq@ff1
  1568  02F3  3000               	movlw	0
  1569  02F4  00F7               	movwf	___fleq@ff2+3
  1570  02F5  3000               	movlw	0
  1571  02F6  00F6               	movwf	___fleq@ff2+2
  1572  02F7  3000               	movlw	0
  1573  02F8  00F5               	movwf	___fleq@ff2+1
  1574  02F9  3000               	movlw	0
  1575  02FA  00F4               	movwf	___fleq@ff2
  1576  02FB  160A  118A  204C  120A  118A  	fcall	___fleq
  1577  0300  1803               	btfsc	3,0
  1578  0301  2BEB               	goto	l3081
  1579                           
  1580                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 856:     (v
      +                          oid)(*(&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  1581  0302  1003               	clrc
  1582  0303  1683               	bsf	3,5	;RP0=1, select bank1
  1583  0304  1303               	bcf	3,6	;RP1=0, select bank1
  1584  0305  0D40               	rlf	(sprintf@fval+2)^(0+128),w
  1585  0306  0D41               	rlf	(sprintf@fval+3)^(0+128),w
  1586  0307  3E82               	addlw	130
  1587  0308  00B5               	movwf	sprintf@eexp^(0+128)
  1588  0309  30FF               	movlw	255
  1589  030A  1803               	skipnc
  1590  030B  3000               	movlw	0
  1591  030C  00B6               	movwf	(sprintf@eexp^(0+128)+1)
  1592                           
  1593                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 857:     ee
      +                          xp--;
  1594  030D  30FF               	movlw	255
  1595  030E  07B5               	addwf	sprintf@eexp^(0+128),f
  1596  030F  1803               	skipnc
  1597  0310  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1598  0311  30FF               	movlw	255
  1599  0312  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1600                           
  1601                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 858:     ee
      +                          xp *= 3;
  1602  0313  3003               	movlw	3
  1603  0314  00F0               	movwf	___wmul@multiplier
  1604  0315  3000               	movlw	0
  1605  0316  00F1               	movwf	___wmul@multiplier+1
  1606  0317  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1607  0318  00F3               	movwf	___wmul@multiplicand+1
  1608  0319  0835               	movf	sprintf@eexp^(0+128),w
  1609  031A  00F2               	movwf	___wmul@multiplicand
  1610  031B  160A  158A  274E  120A  118A  	fcall	___wmul
  1611  0320  0871               	movf	?___wmul+1,w
  1612  0321  1683               	bsf	3,5	;RP0=1, select bank1
  1613  0322  1303               	bcf	3,6	;RP1=0, select bank1
  1614  0323  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1615  0324  0870               	movf	?___wmul,w
  1616  0325  00B5               	movwf	sprintf@eexp^(0+128)
  1617                           
  1618                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 859:     ee
      +                          xp /= 10;
  1619  0326  300A               	movlw	10
  1620  0327  00F7               	movwf	___awdiv@divisor
  1621  0328  3000               	movlw	0
  1622  0329  00F8               	movwf	___awdiv@divisor+1
  1623  032A  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1624  032B  00FA               	movwf	___awdiv@dividend+1
  1625  032C  0835               	movf	sprintf@eexp^(0+128),w
  1626  032D  00F9               	movwf	___awdiv@dividend
  1627  032E  160A  118A  2222  120A  118A  	fcall	___awdiv
  1628  0333  0878               	movf	?___awdiv+1,w
  1629  0334  1683               	bsf	3,5	;RP0=1, select bank1
  1630  0335  1303               	bcf	3,6	;RP1=0, select bank1
  1631  0336  00B6               	movwf	(sprintf@eexp+1)^(0+128)
  1632  0337  0877               	movf	?___awdiv,w
  1633  0338  00B5               	movwf	sprintf@eexp^(0+128)
  1634                           
  1635                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 860:     if
      +                          (eexp < 0)
  1636  0339  1FB6               	btfss	(sprintf@eexp+1)^(0+128),7
  1637  033A  2B41               	goto	l3069
  1638                           
  1639                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 861:      e
      +                          exp--;
  1640  033B  30FF               	movlw	255
  1641  033C  07B5               	addwf	sprintf@eexp^(0+128),f
  1642  033D  1803               	skipnc
  1643  033E  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1644  033F  30FF               	movlw	255
  1645  0340  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1646  0341                     l3069:	
  1647                           
  1648                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 865:     tm
      +                          pval.integ = scale(-eexp);
  1649  0341  0335               	decf	sprintf@eexp^(0+128),w
  1650  0342  3AFF               	xorlw	255
  1651  0343  120A  158A  24B7  120A  118A  	fcall	_scale
  1652  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1653  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1654  034A  0841               	movf	?_scale+3,w
  1655  034B  1683               	bsf	3,5	;RP0=1, select bank1
  1656  034C  1303               	bcf	3,6	;RP1=0, select bank1
  1657  034D  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1658  034E  1283               	bcf	3,5	;RP0=0, select bank0
  1659  034F  1303               	bcf	3,6	;RP1=0, select bank0
  1660  0350  0840               	movf	?_scale+2,w
  1661  0351  1683               	bsf	3,5	;RP0=1, select bank1
  1662  0352  1303               	bcf	3,6	;RP1=0, select bank1
  1663  0353  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1664  0354  1283               	bcf	3,5	;RP0=0, select bank0
  1665  0355  1303               	bcf	3,6	;RP1=0, select bank0
  1666  0356  083F               	movf	?_scale+1,w
  1667  0357  1683               	bsf	3,5	;RP0=1, select bank1
  1668  0358  1303               	bcf	3,6	;RP1=0, select bank1
  1669  0359  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1670  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1671  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1672  035C  083E               	movf	?_scale,w
  1673  035D  1683               	bsf	3,5	;RP0=1, select bank1
  1674  035E  1303               	bcf	3,6	;RP1=0, select bank1
  1675  035F  00B7               	movwf	sprintf@tmpval^(0+128)
  1676                           
  1677                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 866:     tm
      +                          pval.integ *= fval;
  1678  0360  0841               	movf	(sprintf@fval+3)^(0+128),w
  1679  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1680  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1681  0363  00A7               	movwf	___flmul@b+3
  1682  0364  1683               	bsf	3,5	;RP0=1, select bank1
  1683  0365  1303               	bcf	3,6	;RP1=0, select bank1
  1684  0366  0840               	movf	(sprintf@fval+2)^(0+128),w
  1685  0367  1283               	bcf	3,5	;RP0=0, select bank0
  1686  0368  1303               	bcf	3,6	;RP1=0, select bank0
  1687  0369  00A6               	movwf	___flmul@b+2
  1688  036A  1683               	bsf	3,5	;RP0=1, select bank1
  1689  036B  1303               	bcf	3,6	;RP1=0, select bank1
  1690  036C  083F               	movf	(sprintf@fval+1)^(0+128),w
  1691  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1692  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1693  036F  00A5               	movwf	___flmul@b+1
  1694  0370  1683               	bsf	3,5	;RP0=1, select bank1
  1695  0371  1303               	bcf	3,6	;RP1=0, select bank1
  1696  0372  083E               	movf	sprintf@fval^(0+128),w
  1697  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1698  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1699  0375  00A4               	movwf	___flmul@b
  1700  0376  1683               	bsf	3,5	;RP0=1, select bank1
  1701  0377  1303               	bcf	3,6	;RP1=0, select bank1
  1702  0378  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1703  0379  1283               	bcf	3,5	;RP0=0, select bank0
  1704  037A  1303               	bcf	3,6	;RP1=0, select bank0
  1705  037B  00AB               	movwf	___flmul@a+3
  1706  037C  1683               	bsf	3,5	;RP0=1, select bank1
  1707  037D  1303               	bcf	3,6	;RP1=0, select bank1
  1708  037E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1709  037F  1283               	bcf	3,5	;RP0=0, select bank0
  1710  0380  1303               	bcf	3,6	;RP1=0, select bank0
  1711  0381  00AA               	movwf	___flmul@a+2
  1712  0382  1683               	bsf	3,5	;RP0=1, select bank1
  1713  0383  1303               	bcf	3,6	;RP1=0, select bank1
  1714  0384  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1715  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0387  00A9               	movwf	___flmul@a+1
  1718  0388  1683               	bsf	3,5	;RP0=1, select bank1
  1719  0389  1303               	bcf	3,6	;RP1=0, select bank1
  1720  038A  0837               	movf	sprintf@tmpval^(0+128),w
  1721  038B  1283               	bcf	3,5	;RP0=0, select bank0
  1722  038C  1303               	bcf	3,6	;RP1=0, select bank0
  1723  038D  00A8               	movwf	___flmul@a
  1724  038E  120A  158A  21A2  120A  118A  	fcall	___flmul
  1725  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1727  0395  0827               	movf	?___flmul+3,w
  1728  0396  1683               	bsf	3,5	;RP0=1, select bank1
  1729  0397  1303               	bcf	3,6	;RP1=0, select bank1
  1730  0398  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  1731  0399  1283               	bcf	3,5	;RP0=0, select bank0
  1732  039A  1303               	bcf	3,6	;RP1=0, select bank0
  1733  039B  0826               	movf	?___flmul+2,w
  1734  039C  1683               	bsf	3,5	;RP0=1, select bank1
  1735  039D  1303               	bcf	3,6	;RP1=0, select bank1
  1736  039E  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  1737  039F  1283               	bcf	3,5	;RP0=0, select bank0
  1738  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  1739  03A1  0825               	movf	?___flmul+1,w
  1740  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1741  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1742  03A4  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  1743  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1744  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1745  03A7  0824               	movf	?___flmul,w
  1746  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  1747  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  1748  03AA  00B7               	movwf	sprintf@tmpval^(0+128)
  1749                           
  1750                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 867:     if
      +                          (tmpval.integ < 1.0)
  1751  03AB  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1752  03AC  00F3               	movwf	___flge@ff1+3
  1753  03AD  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1754  03AE  00F2               	movwf	___flge@ff1+2
  1755  03AF  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1756  03B0  00F1               	movwf	___flge@ff1+1
  1757  03B1  0837               	movf	sprintf@tmpval^(0+128),w
  1758  03B2  00F0               	movwf	___flge@ff1
  1759  03B3  303F               	movlw	63
  1760  03B4  00F7               	movwf	___flge@ff2+3
  1761  03B5  3080               	movlw	128
  1762  03B6  00F6               	movwf	___flge@ff2+2
  1763  03B7  3000               	movlw	0
  1764  03B8  00F5               	movwf	___flge@ff2+1
  1765  03B9  3000               	movlw	0
  1766  03BA  00F4               	movwf	___flge@ff2
  1767  03BB  160A  118A  2348  120A  118A  	fcall	___flge
  1768  03C0  1803               	btfsc	3,0
  1769  03C1  2BCA               	goto	l3077
  1770                           
  1771                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 868:      e
      +                          exp--;
  1772  03C2  30FF               	movlw	255
  1773  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1774  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1775  03C5  07B5               	addwf	sprintf@eexp^(0+128),f
  1776  03C6  1803               	skipnc
  1777  03C7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1778  03C8  30FF               	movlw	255
  1779  03C9  2BEA               	goto	L1
  1780  03CA                     l3077:	
  1781  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  1782  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  1783  03CC  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1784  03CD  00F3               	movwf	___flge@ff1+3
  1785  03CE  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1786  03CF  00F2               	movwf	___flge@ff1+2
  1787  03D0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1788  03D1  00F1               	movwf	___flge@ff1+1
  1789  03D2  0837               	movf	sprintf@tmpval^(0+128),w
  1790  03D3  00F0               	movwf	___flge@ff1
  1791  03D4  3041               	movlw	65
  1792  03D5  00F7               	movwf	___flge@ff2+3
  1793  03D6  3020               	movlw	32
  1794  03D7  00F6               	movwf	___flge@ff2+2
  1795  03D8  3000               	movlw	0
  1796  03D9  00F5               	movwf	___flge@ff2+1
  1797  03DA  3000               	movlw	0
  1798  03DB  00F4               	movwf	___flge@ff2
  1799  03DC  160A  118A  2348  120A  118A  	fcall	___flge
  1800  03E1  1C03               	btfss	3,0
  1801  03E2  2BEB               	goto	l3081
  1802                           
  1803                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 870:      e
      +                          exp++;
  1804  03E3  3001               	movlw	1
  1805  03E4  1683               	bsf	3,5	;RP0=1, select bank1
  1806  03E5  1303               	bcf	3,6	;RP1=0, select bank1
  1807  03E6  07B5               	addwf	sprintf@eexp^(0+128),f
  1808  03E7  1803               	skipnc
  1809  03E8  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  1810  03E9  3000               	movlw	0
  1811  03EA                     L1:	
  1812  03EA  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  1813  03EB                     l3081:	
  1814                           
  1815                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1131:      
      +                          if(prec <= 12)
  1816  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  1817  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  1818  03ED  083C               	movf	(sprintf@prec+1)^(0+128),w
  1819  03EE  3A80               	xorlw	128
  1820  03EF  00FF               	movwf	127
  1821  03F0  3080               	movlw	128
  1822  03F1  027F               	subwf	127,w
  1823  03F2  1D03               	skipz
  1824  03F3  2BF6               	goto	u5205
  1825  03F4  300D               	movlw	13
  1826  03F5  023B               	subwf	sprintf@prec^(0+128),w
  1827  03F6                     u5205:	
  1828  03F6  1803               	skipnc
  1829  03F7  2C3F               	goto	l3085
  1830                           
  1831                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1132:      
      +                           fval += fround((unsigned int)prec);
  1832  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  1833  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  1834  03FA  083B               	movf	sprintf@prec^(0+128),w
  1835  03FB  120A  118A  2004  120A  118A  	fcall	_fround
  1836  0400  1283               	bcf	3,5	;RP0=0, select bank0
  1837  0401  1303               	bcf	3,6	;RP1=0, select bank0
  1838  0402  0841               	movf	?_fround+3,w
  1839  0403  00D5               	movwf	___fladd@b+3
  1840  0404  0840               	movf	?_fround+2,w
  1841  0405  00D4               	movwf	___fladd@b+2
  1842  0406  083F               	movf	?_fround+1,w
  1843  0407  00D3               	movwf	___fladd@b+1
  1844  0408  083E               	movf	?_fround,w
  1845  0409  00D2               	movwf	___fladd@b
  1846  040A  1683               	bsf	3,5	;RP0=1, select bank1
  1847  040B  1303               	bcf	3,6	;RP1=0, select bank1
  1848  040C  0841               	movf	(sprintf@fval+3)^(0+128),w
  1849  040D  1283               	bcf	3,5	;RP0=0, select bank0
  1850  040E  1303               	bcf	3,6	;RP1=0, select bank0
  1851  040F  00D9               	movwf	___fladd@a+3
  1852  0410  1683               	bsf	3,5	;RP0=1, select bank1
  1853  0411  1303               	bcf	3,6	;RP1=0, select bank1
  1854  0412  0840               	movf	(sprintf@fval+2)^(0+128),w
  1855  0413  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0414  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0415  00D8               	movwf	___fladd@a+2
  1858  0416  1683               	bsf	3,5	;RP0=1, select bank1
  1859  0417  1303               	bcf	3,6	;RP1=0, select bank1
  1860  0418  083F               	movf	(sprintf@fval+1)^(0+128),w
  1861  0419  1283               	bcf	3,5	;RP0=0, select bank0
  1862  041A  1303               	bcf	3,6	;RP1=0, select bank0
  1863  041B  00D7               	movwf	___fladd@a+1
  1864  041C  1683               	bsf	3,5	;RP0=1, select bank1
  1865  041D  1303               	bcf	3,6	;RP1=0, select bank1
  1866  041E  083E               	movf	sprintf@fval^(0+128),w
  1867  041F  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0420  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0421  00D6               	movwf	___fladd@a
  1870  0422  160A  118A  25D1  120A  118A  	fcall	___fladd
  1871  0427  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0428  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0429  0855               	movf	?___fladd+3,w
  1874  042A  1683               	bsf	3,5	;RP0=1, select bank1
  1875  042B  1303               	bcf	3,6	;RP1=0, select bank1
  1876  042C  00C1               	movwf	(sprintf@fval+3)^(0+128)
  1877  042D  1283               	bcf	3,5	;RP0=0, select bank0
  1878  042E  1303               	bcf	3,6	;RP1=0, select bank0
  1879  042F  0854               	movf	?___fladd+2,w
  1880  0430  1683               	bsf	3,5	;RP0=1, select bank1
  1881  0431  1303               	bcf	3,6	;RP1=0, select bank1
  1882  0432  00C0               	movwf	(sprintf@fval+2)^(0+128)
  1883  0433  1283               	bcf	3,5	;RP0=0, select bank0
  1884  0434  1303               	bcf	3,6	;RP1=0, select bank0
  1885  0435  0853               	movf	?___fladd+1,w
  1886  0436  1683               	bsf	3,5	;RP0=1, select bank1
  1887  0437  1303               	bcf	3,6	;RP1=0, select bank1
  1888  0438  00BF               	movwf	(sprintf@fval+1)^(0+128)
  1889  0439  1283               	bcf	3,5	;RP0=0, select bank0
  1890  043A  1303               	bcf	3,6	;RP1=0, select bank0
  1891  043B  0852               	movf	?___fladd,w
  1892  043C  1683               	bsf	3,5	;RP0=1, select bank1
  1893  043D  1303               	bcf	3,6	;RP1=0, select bank1
  1894  043E  00BE               	movwf	sprintf@fval^(0+128)
  1895  043F                     l3085:	
  1896                           
  1897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1135:     i
      +                          f((eexp > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  1898  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1899  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1900  0441  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1901  0442  3A80               	xorlw	128
  1902  0443  00FF               	movwf	127
  1903  0444  3080               	movlw	128
  1904  0445  027F               	subwf	127,w
  1905  0446  1D03               	skipz
  1906  0447  2C4A               	goto	u5215
  1907  0448  300A               	movlw	10
  1908  0449  0235               	subwf	sprintf@eexp^(0+128),w
  1909  044A                     u5215:	
  1910  044A  1803               	skipnc
  1911  044B  2C97               	goto	l3093
  1912  044C  1683               	bsf	3,5	;RP0=1, select bank1
  1913  044D  1303               	bcf	3,6	;RP1=0, select bank1
  1914  044E  0841               	movf	(sprintf@fval+3)^(0+128),w
  1915  044F  00F3               	movwf	___fleq@ff1+3
  1916  0450  0840               	movf	(sprintf@fval+2)^(0+128),w
  1917  0451  00F2               	movwf	___fleq@ff1+2
  1918  0452  083F               	movf	(sprintf@fval+1)^(0+128),w
  1919  0453  00F1               	movwf	___fleq@ff1+1
  1920  0454  083E               	movf	sprintf@fval^(0+128),w
  1921  0455  00F0               	movwf	___fleq@ff1
  1922  0456  3000               	movlw	0
  1923  0457  00F7               	movwf	___fleq@ff2+3
  1924  0458  3000               	movlw	0
  1925  0459  00F6               	movwf	___fleq@ff2+2
  1926  045A  3000               	movlw	0
  1927  045B  00F5               	movwf	___fleq@ff2+1
  1928  045C  3000               	movlw	0
  1929  045D  00F4               	movwf	___fleq@ff2
  1930  045E  160A  118A  204C  120A  118A  	fcall	___fleq
  1931  0463  1803               	btfsc	3,0
  1932  0464  2D00               	goto	l3107
  1933  0465  1683               	bsf	3,5	;RP0=1, select bank1
  1934  0466  1303               	bcf	3,6	;RP1=0, select bank1
  1935  0467  0841               	movf	(sprintf@fval+3)^(0+128),w
  1936  0468  1283               	bcf	3,5	;RP0=0, select bank0
  1937  0469  1303               	bcf	3,6	;RP1=0, select bank0
  1938  046A  00D4               	movwf	___fltol@f1+3
  1939  046B  1683               	bsf	3,5	;RP0=1, select bank1
  1940  046C  1303               	bcf	3,6	;RP1=0, select bank1
  1941  046D  0840               	movf	(sprintf@fval+2)^(0+128),w
  1942  046E  1283               	bcf	3,5	;RP0=0, select bank0
  1943  046F  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0470  00D3               	movwf	___fltol@f1+2
  1945  0471  1683               	bsf	3,5	;RP0=1, select bank1
  1946  0472  1303               	bcf	3,6	;RP1=0, select bank1
  1947  0473  083F               	movf	(sprintf@fval+1)^(0+128),w
  1948  0474  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0475  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0476  00D2               	movwf	___fltol@f1+1
  1951  0477  1683               	bsf	3,5	;RP0=1, select bank1
  1952  0478  1303               	bcf	3,6	;RP1=0, select bank1
  1953  0479  083E               	movf	sprintf@fval^(0+128),w
  1954  047A  1283               	bcf	3,5	;RP0=0, select bank0
  1955  047B  1303               	bcf	3,6	;RP1=0, select bank0
  1956  047C  00D1               	movwf	___fltol@f1
  1957  047D  160A  118A  22DB  120A  118A  	fcall	___fltol
  1958  0482  1283               	bcf	3,5	;RP0=0, select bank0
  1959  0483  1303               	bcf	3,6	;RP1=0, select bank0
  1960  0484  0854               	movf	?___fltol+3,w
  1961  0485  0453               	iorwf	?___fltol+2,w
  1962  0486  0452               	iorwf	?___fltol+1,w
  1963  0487  0451               	iorwf	?___fltol,w
  1964  0488  1D03               	skipz
  1965  0489  2D00               	goto	l3107
  1966  048A  1683               	bsf	3,5	;RP0=1, select bank1
  1967  048B  1303               	bcf	3,6	;RP1=0, select bank1
  1968  048C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  1969  048D  3A80               	xorlw	128
  1970  048E  00FF               	movwf	127
  1971  048F  3080               	movlw	128
  1972  0490  027F               	subwf	127,w
  1973  0491  1D03               	skipz
  1974  0492  2C95               	goto	u5245
  1975  0493  3002               	movlw	2
  1976  0494  0235               	subwf	sprintf@eexp^(0+128),w
  1977  0495                     u5245:	
  1978  0495  1C03               	skipc
  1979  0496  2D00               	goto	l3107
  1980  0497                     l3093:	
  1981                           
  1982                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1139:      
      +                          if(tmpval.integ < 4.294967296){
  1983  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1984  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1985  0499  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  1986  049A  00F3               	movwf	___flge@ff1+3
  1987  049B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  1988  049C  00F2               	movwf	___flge@ff1+2
  1989  049D  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  1990  049E  00F1               	movwf	___flge@ff1+1
  1991  049F  0837               	movf	sprintf@tmpval^(0+128),w
  1992  04A0  00F0               	movwf	___flge@ff1
  1993  04A1  3040               	movlw	64
  1994  04A2  00F7               	movwf	___flge@ff2+3
  1995  04A3  3089               	movlw	137
  1996  04A4  00F6               	movwf	___flge@ff2+2
  1997  04A5  3070               	movlw	112
  1998  04A6  00F5               	movwf	___flge@ff2+1
  1999  04A7  305F               	movlw	95
  2000  04A8  00F4               	movwf	___flge@ff2
  2001  04A9  160A  118A  2348  120A  118A  	fcall	___flge
  2002  04AE  1803               	btfsc	3,0
  2003  04AF  2CB2               	goto	l3097
  2004                           
  2005                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1140:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-1;
  2006  04B0  30F7               	movlw	247
  2007  04B1  2CB3               	goto	L2
  2008  04B2                     l3097:	
  2009                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1141:      
      +                          }else{
  2010                           
  2011                           
  2012                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1142:      
      +                           eexp -= (sizeof dpowers/sizeof dpowers[0])-2;
  2013  04B2  30F8               	movlw	248
  2014  04B3                     L2:	
  2015  04B3  1683               	bsf	3,5	;RP0=1, select bank1
  2016  04B4  1303               	bcf	3,6	;RP1=0, select bank1
  2017  04B5  07B5               	addwf	sprintf@eexp^(0+128),f
  2018  04B6  1803               	skipnc
  2019  04B7  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2020  04B8  30FF               	movlw	255
  2021  04B9  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2022                           
  2023                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1145:      
      +                          val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.in
      +                          teg));
  2024  04BA  0835               	movf	sprintf@eexp^(0+128),w
  2025  04BB  120A  158A  24B7  120A  118A  	fcall	_scale
  2026  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2027  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2028  04C2  0841               	movf	?_scale+3,w
  2029  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  2030  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  2031  04C5  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2032  04C6  1283               	bcf	3,5	;RP0=0, select bank0
  2033  04C7  1303               	bcf	3,6	;RP1=0, select bank0
  2034  04C8  0840               	movf	?_scale+2,w
  2035  04C9  1683               	bsf	3,5	;RP0=1, select bank1
  2036  04CA  1303               	bcf	3,6	;RP1=0, select bank1
  2037  04CB  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2038  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  2039  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  2040  04CE  083F               	movf	?_scale+1,w
  2041  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2042  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2043  04D1  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2044  04D2  1283               	bcf	3,5	;RP0=0, select bank0
  2045  04D3  1303               	bcf	3,6	;RP1=0, select bank0
  2046  04D4  083E               	movf	?_scale,w
  2047  04D5  1683               	bsf	3,5	;RP0=1, select bank1
  2048  04D6  1303               	bcf	3,6	;RP1=0, select bank1
  2049  04D7  00B7               	movwf	sprintf@tmpval^(0+128)
  2050  04D8  0841               	movf	(sprintf@fval+3)^(0+128),w
  2051  04D9  00F3               	movwf	__div_to_l_@f1+3
  2052  04DA  0840               	movf	(sprintf@fval+2)^(0+128),w
  2053  04DB  00F2               	movwf	__div_to_l_@f1+2
  2054  04DC  083F               	movf	(sprintf@fval+1)^(0+128),w
  2055  04DD  00F1               	movwf	__div_to_l_@f1+1
  2056  04DE  083E               	movf	sprintf@fval^(0+128),w
  2057  04DF  00F0               	movwf	__div_to_l_@f1
  2058  04E0  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2059  04E1  00F7               	movwf	__div_to_l_@f2+3
  2060  04E2  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2061  04E3  00F6               	movwf	__div_to_l_@f2+2
  2062  04E4  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2063  04E5  00F5               	movwf	__div_to_l_@f2+1
  2064  04E6  0837               	movf	sprintf@tmpval^(0+128),w
  2065  04E7  00F4               	movwf	__div_to_l_@f2
  2066  04E8  160A  118A  2527  120A  118A  	fcall	__div_to_l_
  2067  04ED  0873               	movf	?__div_to_l_+3,w
  2068  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  2069  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  2070  04F0  00B4               	movwf	(sprintf@val+3)^(0+128)
  2071  04F1  0872               	movf	?__div_to_l_+2,w
  2072  04F2  00B3               	movwf	(sprintf@val+2)^(0+128)
  2073  04F3  0871               	movf	?__div_to_l_+1,w
  2074  04F4  00B2               	movwf	(sprintf@val+1)^(0+128)
  2075  04F5  0870               	movf	?__div_to_l_,w
  2076  04F6  00B1               	movwf	sprintf@val^(0+128)
  2077                           
  2078                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1148:      
      +                          fval = 0.0;
  2079  04F7  3000               	movlw	0
  2080  04F8  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2081  04F9  3000               	movlw	0
  2082  04FA  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2083  04FB  3000               	movlw	0
  2084  04FC  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2085  04FD  3000               	movlw	0
  2086  04FE  00BE               	movwf	sprintf@fval^(0+128)
  2087                           
  2088                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1149:     }
      +                           else {
  2089  04FF  2D84               	goto	l3113
  2090  0500                     l3107:	
  2091                           
  2092                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1150:      
      +                          val = (unsigned long)fval;
  2093  0500  1683               	bsf	3,5	;RP0=1, select bank1
  2094  0501  1303               	bcf	3,6	;RP1=0, select bank1
  2095  0502  0841               	movf	(sprintf@fval+3)^(0+128),w
  2096  0503  1283               	bcf	3,5	;RP0=0, select bank0
  2097  0504  1303               	bcf	3,6	;RP1=0, select bank0
  2098  0505  00D4               	movwf	___fltol@f1+3
  2099  0506  1683               	bsf	3,5	;RP0=1, select bank1
  2100  0507  1303               	bcf	3,6	;RP1=0, select bank1
  2101  0508  0840               	movf	(sprintf@fval+2)^(0+128),w
  2102  0509  1283               	bcf	3,5	;RP0=0, select bank0
  2103  050A  1303               	bcf	3,6	;RP1=0, select bank0
  2104  050B  00D3               	movwf	___fltol@f1+2
  2105  050C  1683               	bsf	3,5	;RP0=1, select bank1
  2106  050D  1303               	bcf	3,6	;RP1=0, select bank1
  2107  050E  083F               	movf	(sprintf@fval+1)^(0+128),w
  2108  050F  1283               	bcf	3,5	;RP0=0, select bank0
  2109  0510  1303               	bcf	3,6	;RP1=0, select bank0
  2110  0511  00D2               	movwf	___fltol@f1+1
  2111  0512  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0513  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0514  083E               	movf	sprintf@fval^(0+128),w
  2114  0515  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0516  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0517  00D1               	movwf	___fltol@f1
  2117  0518  160A  118A  22DB  120A  118A  	fcall	___fltol
  2118  051D  1283               	bcf	3,5	;RP0=0, select bank0
  2119  051E  1303               	bcf	3,6	;RP1=0, select bank0
  2120  051F  0854               	movf	?___fltol+3,w
  2121  0520  1683               	bsf	3,5	;RP0=1, select bank1
  2122  0521  1303               	bcf	3,6	;RP1=0, select bank1
  2123  0522  00B4               	movwf	(sprintf@val+3)^(0+128)
  2124  0523  1283               	bcf	3,5	;RP0=0, select bank0
  2125  0524  1303               	bcf	3,6	;RP1=0, select bank0
  2126  0525  0853               	movf	?___fltol+2,w
  2127  0526  1683               	bsf	3,5	;RP0=1, select bank1
  2128  0527  1303               	bcf	3,6	;RP1=0, select bank1
  2129  0528  00B3               	movwf	(sprintf@val+2)^(0+128)
  2130  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2131  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2132  052B  0852               	movf	?___fltol+1,w
  2133  052C  1683               	bsf	3,5	;RP0=1, select bank1
  2134  052D  1303               	bcf	3,6	;RP1=0, select bank1
  2135  052E  00B2               	movwf	(sprintf@val+1)^(0+128)
  2136  052F  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0530  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0531  0851               	movf	?___fltol,w
  2139  0532  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0533  1303               	bcf	3,6	;RP1=0, select bank1
  2141  0534  00B1               	movwf	sprintf@val^(0+128)
  2142                           
  2143                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1151:      
      +                          fval -= (double)val;
  2144  0535  0834               	movf	(sprintf@val+3)^(0+128),w
  2145  0536  00F3               	movwf	___xxtofl@val+3
  2146  0537  0833               	movf	(sprintf@val+2)^(0+128),w
  2147  0538  00F2               	movwf	___xxtofl@val+2
  2148  0539  0832               	movf	(sprintf@val+1)^(0+128),w
  2149  053A  00F1               	movwf	___xxtofl@val+1
  2150  053B  0831               	movf	sprintf@val^(0+128),w
  2151  053C  00F0               	movwf	___xxtofl@val
  2152  053D  3000               	movlw	0
  2153  053E  160A  118A  23DB  120A  118A  	fcall	___xxtofl
  2154  0543  0873               	movf	?___xxtofl+3,w
  2155  0544  1283               	bcf	3,5	;RP0=0, select bank0
  2156  0545  1303               	bcf	3,6	;RP1=0, select bank0
  2157  0546  00E9               	movwf	___flsub@a+3
  2158  0547  0872               	movf	?___xxtofl+2,w
  2159  0548  00E8               	movwf	___flsub@a+2
  2160  0549  0871               	movf	?___xxtofl+1,w
  2161  054A  00E7               	movwf	___flsub@a+1
  2162  054B  0870               	movf	?___xxtofl,w
  2163  054C  00E6               	movwf	___flsub@a
  2164  054D  1683               	bsf	3,5	;RP0=1, select bank1
  2165  054E  1303               	bcf	3,6	;RP1=0, select bank1
  2166  054F  0841               	movf	(sprintf@fval+3)^(0+128),w
  2167  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2168  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2169  0552  00ED               	movwf	___flsub@b+3
  2170  0553  1683               	bsf	3,5	;RP0=1, select bank1
  2171  0554  1303               	bcf	3,6	;RP1=0, select bank1
  2172  0555  0840               	movf	(sprintf@fval+2)^(0+128),w
  2173  0556  1283               	bcf	3,5	;RP0=0, select bank0
  2174  0557  1303               	bcf	3,6	;RP1=0, select bank0
  2175  0558  00EC               	movwf	___flsub@b+2
  2176  0559  1683               	bsf	3,5	;RP0=1, select bank1
  2177  055A  1303               	bcf	3,6	;RP1=0, select bank1
  2178  055B  083F               	movf	(sprintf@fval+1)^(0+128),w
  2179  055C  1283               	bcf	3,5	;RP0=0, select bank0
  2180  055D  1303               	bcf	3,6	;RP1=0, select bank0
  2181  055E  00EB               	movwf	___flsub@b+1
  2182  055F  1683               	bsf	3,5	;RP0=1, select bank1
  2183  0560  1303               	bcf	3,6	;RP1=0, select bank1
  2184  0561  083E               	movf	sprintf@fval^(0+128),w
  2185  0562  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0563  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0564  00EA               	movwf	___flsub@b
  2188  0565  120A  158A  20C1  120A  118A  	fcall	___flsub
  2189  056A  1283               	bcf	3,5	;RP0=0, select bank0
  2190  056B  1303               	bcf	3,6	;RP1=0, select bank0
  2191  056C  0869               	movf	?___flsub+3,w
  2192  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2193  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2194  056F  00C1               	movwf	(sprintf@fval+3)^(0+128)
  2195  0570  1283               	bcf	3,5	;RP0=0, select bank0
  2196  0571  1303               	bcf	3,6	;RP1=0, select bank0
  2197  0572  0868               	movf	?___flsub+2,w
  2198  0573  1683               	bsf	3,5	;RP0=1, select bank1
  2199  0574  1303               	bcf	3,6	;RP1=0, select bank1
  2200  0575  00C0               	movwf	(sprintf@fval+2)^(0+128)
  2201  0576  1283               	bcf	3,5	;RP0=0, select bank0
  2202  0577  1303               	bcf	3,6	;RP1=0, select bank0
  2203  0578  0867               	movf	?___flsub+1,w
  2204  0579  1683               	bsf	3,5	;RP0=1, select bank1
  2205  057A  1303               	bcf	3,6	;RP1=0, select bank1
  2206  057B  00BF               	movwf	(sprintf@fval+1)^(0+128)
  2207  057C  1283               	bcf	3,5	;RP0=0, select bank0
  2208  057D  1303               	bcf	3,6	;RP1=0, select bank0
  2209  057E  0866               	movf	?___flsub,w
  2210  057F  1683               	bsf	3,5	;RP0=1, select bank1
  2211  0580  1303               	bcf	3,6	;RP1=0, select bank1
  2212  0581  00BE               	movwf	sprintf@fval^(0+128)
  2213                           
  2214                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1152:      
      +                          eexp = 0;
  2215  0582  01B5               	clrf	sprintf@eexp^(0+128)
  2216  0583  01B6               	clrf	(sprintf@eexp+1)^(0+128)
  2217  0584                     l3113:	
  2218                           
  2219                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1155:     f
      +                          or(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2220  0584  01C2               	clrf	sprintf@c^(0+128)
  2221  0585  0AC2               	incf	sprintf@c^(0+128),f
  2222  0586                     l3119:	
  2223                           
  2224                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1156:      
      +                          if(val < dpowers[c])
  2225  0586  0842               	movf	sprintf@c^(0+128),w
  2226  0587  00A5               	movwf	??_sprintf^(0+128)
  2227  0588  3001               	movlw	1
  2228  0589                     u5265:	
  2229  0589  1003               	clrc
  2230  058A  0DA5               	rlf	??_sprintf^(0+128),f
  2231  058B  3EFF               	addlw	-1
  2232  058C  1D03               	skipz
  2233  058D  2D89               	goto	u5265
  2234  058E  1003               	clrc
  2235  058F  0D25               	rlf	??_sprintf^(0+128),w
  2236  0590  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2237  0591  0084               	movwf	4
  2238  0592  120A  158A  200A  120A  118A  	fcall	stringdir
  2239  0597  00A6               	movwf	(??_sprintf+1)^(0+128)
  2240  0598  120A  158A  200A  120A  118A  	fcall	stringdir
  2241  059D  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2242  059E  120A  158A  200A  120A  118A  	fcall	stringdir
  2243  05A3  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2244  05A4  120A  158A  200A  120A  118A  	fcall	stringdir
  2245  05A9  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2246  05AA  0829               	movf	(??_sprintf+4)^(0+128),w
  2247  05AB  0234               	subwf	(sprintf@val+3)^(0+128),w
  2248  05AC  1D03               	skipz
  2249  05AD  2DB8               	goto	u5275
  2250  05AE  0828               	movf	(??_sprintf+3)^(0+128),w
  2251  05AF  0233               	subwf	(sprintf@val+2)^(0+128),w
  2252  05B0  1D03               	skipz
  2253  05B1  2DB8               	goto	u5275
  2254  05B2  0827               	movf	(??_sprintf+2)^(0+128),w
  2255  05B3  0232               	subwf	(sprintf@val+1)^(0+128),w
  2256  05B4  1D03               	skipz
  2257  05B5  2DB8               	goto	u5275
  2258  05B6  0826               	movf	(??_sprintf+1)^(0+128),w
  2259  05B7  0231               	subwf	sprintf@val^(0+128),w
  2260  05B8                     u5275:	
  2261  05B8  1C03               	btfss	3,0
  2262  05B9  2DC2               	goto	l3125
  2263  05BA  3001               	movlw	1
  2264  05BB  00A5               	movwf	??_sprintf^(0+128)
  2265  05BC  0825               	movf	??_sprintf^(0+128),w
  2266  05BD  07C2               	addwf	sprintf@c^(0+128),f
  2267  05BE  300A               	movlw	10
  2268  05BF  0642               	xorwf	sprintf@c^(0+128),w
  2269  05C0  1D03               	btfss	3,2
  2270  05C1  2D86               	goto	l3119
  2271  05C2                     l3125:	
  2272                           
  2273                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1194:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1207:     i
      +                          f(flag & 0x03)
  2274  05C2  3003               	movlw	3
  2275  05C3  052F               	andwf	sprintf@flag^(0+128),w
  2276  05C4  00A5               	movwf	??_sprintf^(0+128)
  2277  05C5  3000               	movlw	0
  2278  05C6  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2279  05C7  00A6               	movwf	(??_sprintf+1)^(0+128)
  2280  05C8  0825               	movf	??_sprintf^(0+128),w
  2281  05C9  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2282  05CA  1903               	btfsc	3,2
  2283  05CB  2DD7               	goto	l223
  2284                           
  2285                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1209:      
      +                          ((*sp++ = ('-')));
  2286  05CC  302D               	movlw	45
  2287  05CD                     L3:	
  2288  05CD  00A5               	movwf	??_sprintf^(0+128)
  2289  05CE  083D               	movf	sprintf@sp^(0+128),w
  2290  05CF  0084               	movwf	4
  2291  05D0  0825               	movf	??_sprintf^(0+128),w
  2292  05D1  1383               	bcf	3,7	;select IRP bank0
  2293  05D2  0080               	movwf	0
  2294  05D3  3001               	movlw	1
  2295  05D4  00A5               	movwf	??_sprintf^(0+128)
  2296  05D5  0825               	movf	??_sprintf^(0+128),w
  2297  05D6  07BD               	addwf	sprintf@sp^(0+128),f
  2298  05D7                     l223:	
  2299                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1223:     }
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1225:    }
  2300                           
  2301                           
  2302                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1215:    wh
      +                          ile(c--) {
  2303  05D7  3001               	movlw	1
  2304  05D8  02C2               	subwf	sprintf@c^(0+128),f
  2305  05D9  0A42               	incf	sprintf@c^(0+128),w
  2306  05DA  1903               	btfsc	3,2
  2307  05DB  2E4C               	goto	l3143
  2308                           
  2309                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1219:     {
      +                          ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1220:      
      +                          tmpval.vd = val/dpowers[c];
  2310  05DC  0842               	movf	sprintf@c^(0+128),w
  2311  05DD  00A5               	movwf	??_sprintf^(0+128)
  2312  05DE  3001               	movlw	1
  2313  05DF                     u5305:	
  2314  05DF  1003               	clrc
  2315  05E0  0DA5               	rlf	??_sprintf^(0+128),f
  2316  05E1  3EFF               	addlw	-1
  2317  05E2  1D03               	skipz
  2318  05E3  2DDF               	goto	u5305
  2319  05E4  1003               	clrc
  2320  05E5  0D25               	rlf	??_sprintf^(0+128),w
  2321  05E6  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2322  05E7  0084               	movwf	4
  2323  05E8  120A  158A  200A  120A  118A  	fcall	stringdir
  2324  05ED  00F0               	movwf	___lldiv@divisor
  2325  05EE  120A  158A  200A  120A  118A  	fcall	stringdir
  2326  05F3  00F1               	movwf	___lldiv@divisor+1
  2327  05F4  120A  158A  200A  120A  118A  	fcall	stringdir
  2328  05F9  00F2               	movwf	___lldiv@divisor+2
  2329  05FA  120A  158A  200A  120A  118A  	fcall	stringdir
  2330  05FF  00F3               	movwf	___lldiv@divisor+3
  2331  0600  0834               	movf	(sprintf@val+3)^(0+128),w
  2332  0601  00F7               	movwf	___lldiv@dividend+3
  2333  0602  0833               	movf	(sprintf@val+2)^(0+128),w
  2334  0603  00F6               	movwf	___lldiv@dividend+2
  2335  0604  0832               	movf	(sprintf@val+1)^(0+128),w
  2336  0605  00F5               	movwf	___lldiv@dividend+1
  2337  0606  0831               	movf	sprintf@val^(0+128),w
  2338  0607  00F4               	movwf	___lldiv@dividend
  2339  0608  160A  118A  227D  120A  118A  	fcall	___lldiv
  2340  060D  0873               	movf	?___lldiv+3,w
  2341  060E  1683               	bsf	3,5	;RP0=1, select bank1
  2342  060F  1303               	bcf	3,6	;RP1=0, select bank1
  2343  0610  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2344  0611  0872               	movf	?___lldiv+2,w
  2345  0612  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2346  0613  0871               	movf	?___lldiv+1,w
  2347  0614  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2348  0615  0870               	movf	?___lldiv,w
  2349  0616  00B7               	movwf	sprintf@tmpval^(0+128)
  2350                           
  2351                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1221:      
      +                          tmpval.vd %= 10;
  2352  0617  3000               	movlw	0
  2353  0618  00F3               	movwf	___llmod@divisor+3
  2354  0619  3000               	movlw	0
  2355  061A  00F2               	movwf	___llmod@divisor+2
  2356  061B  3000               	movlw	0
  2357  061C  00F1               	movwf	___llmod@divisor+1
  2358  061D  300A               	movlw	10
  2359  061E  00F0               	movwf	___llmod@divisor
  2360  061F  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2361  0620  00F7               	movwf	___llmod@dividend+3
  2362  0621  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2363  0622  00F6               	movwf	___llmod@dividend+2
  2364  0623  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2365  0624  00F5               	movwf	___llmod@dividend+1
  2366  0625  0837               	movf	sprintf@tmpval^(0+128),w
  2367  0626  00F4               	movwf	___llmod@dividend
  2368  0627  160A  118A  2129  120A  118A  	fcall	___llmod
  2369  062C  0873               	movf	?___llmod+3,w
  2370  062D  1683               	bsf	3,5	;RP0=1, select bank1
  2371  062E  1303               	bcf	3,6	;RP1=0, select bank1
  2372  062F  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2373  0630  0872               	movf	?___llmod+2,w
  2374  0631  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2375  0632  0871               	movf	?___llmod+1,w
  2376  0633  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2377  0634  0870               	movf	?___llmod,w
  2378  0635  00B7               	movwf	sprintf@tmpval^(0+128)
  2379                           
  2380                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1222:      
      +                          ((*sp++ = ('0' + tmpval.vd)));
  2381  0636  0837               	movf	sprintf@tmpval^(0+128),w
  2382  0637  3E30               	addlw	48
  2383  0638  2DCD               	goto	L3
  2384  0639                     l3137:	
  2385                           
  2386                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1227:     (
      +                          (*sp++ = ('0')));
  2387  0639  3030               	movlw	48
  2388  063A  1683               	bsf	3,5	;RP0=1, select bank1
  2389  063B  1303               	bcf	3,6	;RP1=0, select bank1
  2390  063C  00A5               	movwf	??_sprintf^(0+128)
  2391  063D  083D               	movf	sprintf@sp^(0+128),w
  2392  063E  0084               	movwf	4
  2393  063F  0825               	movf	??_sprintf^(0+128),w
  2394  0640  1383               	bcf	3,7	;select IRP bank0
  2395  0641  0080               	movwf	0
  2396  0642  3001               	movlw	1
  2397  0643  00A5               	movwf	??_sprintf^(0+128)
  2398  0644  0825               	movf	??_sprintf^(0+128),w
  2399  0645  07BD               	addwf	sprintf@sp^(0+128),f
  2400                           
  2401                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1228:     e
      +                          exp--;
  2402  0646  30FF               	movlw	255
  2403  0647  07B5               	addwf	sprintf@eexp^(0+128),f
  2404  0648  1803               	skipnc
  2405  0649  0AB6               	incf	(sprintf@eexp+1)^(0+128),f
  2406  064A  30FF               	movlw	255
  2407  064B  07B6               	addwf	(sprintf@eexp+1)^(0+128),f
  2408  064C                     l3143:	
  2409                           
  2410                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1226:    wh
      +                          ile(eexp > 0) {
  2411  064C  0836               	movf	(sprintf@eexp+1)^(0+128),w
  2412  064D  3A80               	xorlw	128
  2413  064E  00FF               	movwf	127
  2414  064F  3080               	movlw	128
  2415  0650  027F               	subwf	127,w
  2416  0651  1D03               	skipz
  2417  0652  2E55               	goto	u5325
  2418  0653  3001               	movlw	1
  2419  0654  0235               	subwf	sprintf@eexp^(0+128),w
  2420  0655                     u5325:	
  2421  0655  1803               	skipnc
  2422  0656  2E39               	goto	l3137
  2423                           
  2424                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1230:    if
      +                          (prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  2425  0657  1683               	bsf	3,5	;RP0=1, select bank1
  2426  0658  1303               	bcf	3,6	;RP1=0, select bank1
  2427  0659  083C               	movf	(sprintf@prec+1)^(0+128),w
  2428  065A  3A80               	xorlw	128
  2429  065B  00FF               	movwf	127
  2430  065C  3080               	movlw	128
  2431  065D  027F               	subwf	127,w
  2432  065E  1D03               	skipz
  2433  065F  2E62               	goto	u5335
  2434  0660  3009               	movlw	9
  2435  0661  023B               	subwf	sprintf@prec^(0+128),w
  2436  0662                     u5335:	
  2437  0662  1C03               	skipc
  2438  0663  2E68               	goto	l3149
  2439                           
  2440                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1231:     c
      +                           = (sizeof dpowers/sizeof dpowers[0])-2;
  2441  0664  3008               	movlw	8
  2442  0665  1683               	bsf	3,5	;RP0=1, select bank1
  2443  0666  1303               	bcf	3,6	;RP1=0, select bank1
  2444  0667  2E6B               	goto	L4
  2445  0668                     l3149:	
  2446                           
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1233:     c
      +                           = (char)prec;
  2448  0668  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0669  1303               	bcf	3,6	;RP1=0, select bank1
  2450  066A  083B               	movf	sprintf@prec^(0+128),w
  2451  066B                     L4:	
  2452  066B  00A5               	movwf	??_sprintf^(0+128)
  2453  066C  0825               	movf	??_sprintf^(0+128),w
  2454  066D  00C2               	movwf	sprintf@c^(0+128)
  2455                           
  2456                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1234:    pr
      +                          ec -= (int)c;
  2457  066E  0842               	movf	sprintf@c^(0+128),w
  2458  066F  00A5               	movwf	??_sprintf^(0+128)
  2459  0670  01A6               	clrf	(??_sprintf^(0+128)+1)
  2460  0671  0825               	movf	??_sprintf^(0+128),w
  2461  0672  02BB               	subwf	sprintf@prec^(0+128),f
  2462  0673  0826               	movf	(??_sprintf+1)^(0+128),w
  2463  0674  1C03               	skipc
  2464  0675  03BC               	decf	(sprintf@prec+1)^(0+128),f
  2465  0676  02BC               	subwf	(sprintf@prec+1)^(0+128),f
  2466                           
  2467                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1238:    if
      +                          (c)
  2468  0677  0842               	movf	sprintf@c^(0+128),w
  2469  0678  1903               	btfsc	3,2
  2470  0679  2E85               	goto	l3157
  2471                           
  2472                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1240:     (
      +                          (*sp++ = ('.')));
  2473  067A  302E               	movlw	46
  2474  067B  00A5               	movwf	??_sprintf^(0+128)
  2475  067C  083D               	movf	sprintf@sp^(0+128),w
  2476  067D  0084               	movwf	4
  2477  067E  0825               	movf	??_sprintf^(0+128),w
  2478  067F  1383               	bcf	3,7	;select IRP bank0
  2479  0680  0080               	movwf	0
  2480  0681  3001               	movlw	1
  2481  0682  00A5               	movwf	??_sprintf^(0+128)
  2482  0683  0825               	movf	??_sprintf^(0+128),w
  2483  0684  07BD               	addwf	sprintf@sp^(0+128),f
  2484  0685                     l3157:	
  2485                           
  2486                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2487  0685  0842               	movf	sprintf@c^(0+128),w
  2488  0686  120A  158A  24B7  120A  118A  	fcall	_scale
  2489  068B  1283               	bcf	3,5	;RP0=0, select bank0
  2490  068C  1303               	bcf	3,6	;RP1=0, select bank0
  2491  068D  0841               	movf	?_scale+3,w
  2492  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2493  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2494  0690  00AD               	movwf	(_sprintf$784+3)^(0+128)
  2495  0691  1283               	bcf	3,5	;RP0=0, select bank0
  2496  0692  1303               	bcf	3,6	;RP1=0, select bank0
  2497  0693  0840               	movf	?_scale+2,w
  2498  0694  1683               	bsf	3,5	;RP0=1, select bank1
  2499  0695  1303               	bcf	3,6	;RP1=0, select bank1
  2500  0696  00AC               	movwf	(_sprintf$784+2)^(0+128)
  2501  0697  1283               	bcf	3,5	;RP0=0, select bank0
  2502  0698  1303               	bcf	3,6	;RP1=0, select bank0
  2503  0699  083F               	movf	?_scale+1,w
  2504  069A  1683               	bsf	3,5	;RP0=1, select bank1
  2505  069B  1303               	bcf	3,6	;RP1=0, select bank1
  2506  069C  00AB               	movwf	(_sprintf$784+1)^(0+128)
  2507  069D  1283               	bcf	3,5	;RP0=0, select bank0
  2508  069E  1303               	bcf	3,6	;RP1=0, select bank0
  2509  069F  083E               	movf	?_scale,w
  2510  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2511  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2512  06A2  00AA               	movwf	_sprintf$784^(0+128)
  2513                           
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1246:    va
      +                          l = (unsigned long)(fval * scale((signed char)c));
  2515  06A3  082D               	movf	(_sprintf$784+3)^(0+128),w
  2516  06A4  1283               	bcf	3,5	;RP0=0, select bank0
  2517  06A5  1303               	bcf	3,6	;RP1=0, select bank0
  2518  06A6  00AB               	movwf	___flmul@a+3
  2519  06A7  1683               	bsf	3,5	;RP0=1, select bank1
  2520  06A8  1303               	bcf	3,6	;RP1=0, select bank1
  2521  06A9  082C               	movf	(_sprintf$784+2)^(0+128),w
  2522  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2523  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2524  06AC  00AA               	movwf	___flmul@a+2
  2525  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  2526  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  2527  06AF  082B               	movf	(_sprintf$784+1)^(0+128),w
  2528  06B0  1283               	bcf	3,5	;RP0=0, select bank0
  2529  06B1  1303               	bcf	3,6	;RP1=0, select bank0
  2530  06B2  00A9               	movwf	___flmul@a+1
  2531  06B3  1683               	bsf	3,5	;RP0=1, select bank1
  2532  06B4  1303               	bcf	3,6	;RP1=0, select bank1
  2533  06B5  082A               	movf	_sprintf$784^(0+128),w
  2534  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2535  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2536  06B8  00A8               	movwf	___flmul@a
  2537  06B9  1683               	bsf	3,5	;RP0=1, select bank1
  2538  06BA  1303               	bcf	3,6	;RP1=0, select bank1
  2539  06BB  0841               	movf	(sprintf@fval+3)^(0+128),w
  2540  06BC  1283               	bcf	3,5	;RP0=0, select bank0
  2541  06BD  1303               	bcf	3,6	;RP1=0, select bank0
  2542  06BE  00A7               	movwf	___flmul@b+3
  2543  06BF  1683               	bsf	3,5	;RP0=1, select bank1
  2544  06C0  1303               	bcf	3,6	;RP1=0, select bank1
  2545  06C1  0840               	movf	(sprintf@fval+2)^(0+128),w
  2546  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2547  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2548  06C4  00A6               	movwf	___flmul@b+2
  2549  06C5  1683               	bsf	3,5	;RP0=1, select bank1
  2550  06C6  1303               	bcf	3,6	;RP1=0, select bank1
  2551  06C7  083F               	movf	(sprintf@fval+1)^(0+128),w
  2552  06C8  1283               	bcf	3,5	;RP0=0, select bank0
  2553  06C9  1303               	bcf	3,6	;RP1=0, select bank0
  2554  06CA  00A5               	movwf	___flmul@b+1
  2555  06CB  1683               	bsf	3,5	;RP0=1, select bank1
  2556  06CC  1303               	bcf	3,6	;RP1=0, select bank1
  2557  06CD  083E               	movf	sprintf@fval^(0+128),w
  2558  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2559  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2560  06D0  00A4               	movwf	___flmul@b
  2561  06D1  120A  158A  21A2  120A  118A  	fcall	___flmul
  2562  06D6  1283               	bcf	3,5	;RP0=0, select bank0
  2563  06D7  1303               	bcf	3,6	;RP1=0, select bank0
  2564  06D8  0827               	movf	?___flmul+3,w
  2565  06D9  00D4               	movwf	___fltol@f1+3
  2566  06DA  0826               	movf	?___flmul+2,w
  2567  06DB  00D3               	movwf	___fltol@f1+2
  2568  06DC  0825               	movf	?___flmul+1,w
  2569  06DD  00D2               	movwf	___fltol@f1+1
  2570  06DE  0824               	movf	?___flmul,w
  2571  06DF  00D1               	movwf	___fltol@f1
  2572  06E0  160A  118A  22DB  120A  118A  	fcall	___fltol
  2573  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  2574  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  2575  06E7  0854               	movf	?___fltol+3,w
  2576  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  2577  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  2578  06EA  00B4               	movwf	(sprintf@val+3)^(0+128)
  2579  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  2580  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  2581  06ED  0853               	movf	?___fltol+2,w
  2582  06EE  1683               	bsf	3,5	;RP0=1, select bank1
  2583  06EF  1303               	bcf	3,6	;RP1=0, select bank1
  2584  06F0  00B3               	movwf	(sprintf@val+2)^(0+128)
  2585  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2586  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2587  06F3  0852               	movf	?___fltol+1,w
  2588  06F4  1683               	bsf	3,5	;RP0=1, select bank1
  2589  06F5  1303               	bcf	3,6	;RP1=0, select bank1
  2590  06F6  00B2               	movwf	(sprintf@val+1)^(0+128)
  2591  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  2592  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  2593  06F9  0851               	movf	?___fltol,w
  2594  06FA  1683               	bsf	3,5	;RP0=1, select bank1
  2595  06FB  1303               	bcf	3,6	;RP1=0, select bank1
  2596  06FC                     L5:	
  2597  06FC  00B1               	movwf	sprintf@val^(0+128)
  2598                           
  2599                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2600  06FD  3001               	movlw	1
  2601  06FE  02C2               	subwf	sprintf@c^(0+128),f
  2602  06FF  0A42               	incf	sprintf@c^(0+128),w
  2603  0700  1903               	btfsc	3,2
  2604  0701  2FB4               	goto	l3177
  2605                           
  2606                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1248:     t
      +                          mpval.vd = val/dpowers[c];
  2607                           
  2608                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1247:    wh
      +                          ile(c--) {
  2609  0702  0842               	movf	sprintf@c^(0+128),w
  2610  0703  00A5               	movwf	??_sprintf^(0+128)
  2611  0704  3001               	movlw	1
  2612  0705                     u5355:	
  2613  0705  1003               	clrc
  2614  0706  0DA5               	rlf	??_sprintf^(0+128),f
  2615  0707  3EFF               	addlw	-1
  2616  0708  1D03               	skipz
  2617  0709  2F05               	goto	u5355
  2618  070A  1003               	clrc
  2619  070B  0D25               	rlf	??_sprintf^(0+128),w
  2620  070C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2621  070D  0084               	movwf	4
  2622  070E  120A  158A  200A  120A  118A  	fcall	stringdir
  2623  0713  00F0               	movwf	___lldiv@divisor
  2624  0714  120A  158A  200A  120A  118A  	fcall	stringdir
  2625  0719  00F1               	movwf	___lldiv@divisor+1
  2626  071A  120A  158A  200A  120A  118A  	fcall	stringdir
  2627  071F  00F2               	movwf	___lldiv@divisor+2
  2628  0720  120A  158A  200A  120A  118A  	fcall	stringdir
  2629  0725  00F3               	movwf	___lldiv@divisor+3
  2630  0726  0834               	movf	(sprintf@val+3)^(0+128),w
  2631  0727  00F7               	movwf	___lldiv@dividend+3
  2632  0728  0833               	movf	(sprintf@val+2)^(0+128),w
  2633  0729  00F6               	movwf	___lldiv@dividend+2
  2634  072A  0832               	movf	(sprintf@val+1)^(0+128),w
  2635  072B  00F5               	movwf	___lldiv@dividend+1
  2636  072C  0831               	movf	sprintf@val^(0+128),w
  2637  072D  00F4               	movwf	___lldiv@dividend
  2638  072E  160A  118A  227D  120A  118A  	fcall	___lldiv
  2639  0733  0873               	movf	?___lldiv+3,w
  2640  0734  1683               	bsf	3,5	;RP0=1, select bank1
  2641  0735  1303               	bcf	3,6	;RP1=0, select bank1
  2642  0736  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2643  0737  0872               	movf	?___lldiv+2,w
  2644  0738  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2645  0739  0871               	movf	?___lldiv+1,w
  2646  073A  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2647  073B  0870               	movf	?___lldiv,w
  2648  073C  00B7               	movwf	sprintf@tmpval^(0+128)
  2649                           
  2650                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1249:     t
      +                          mpval.vd %= 10;
  2651  073D  3000               	movlw	0
  2652  073E  00F3               	movwf	___llmod@divisor+3
  2653  073F  3000               	movlw	0
  2654  0740  00F2               	movwf	___llmod@divisor+2
  2655  0741  3000               	movlw	0
  2656  0742  00F1               	movwf	___llmod@divisor+1
  2657  0743  300A               	movlw	10
  2658  0744  00F0               	movwf	___llmod@divisor
  2659  0745  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2660  0746  00F7               	movwf	___llmod@dividend+3
  2661  0747  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2662  0748  00F6               	movwf	___llmod@dividend+2
  2663  0749  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2664  074A  00F5               	movwf	___llmod@dividend+1
  2665  074B  0837               	movf	sprintf@tmpval^(0+128),w
  2666  074C  00F4               	movwf	___llmod@dividend
  2667  074D  160A  118A  2129  120A  118A  	fcall	___llmod
  2668  0752  0873               	movf	?___llmod+3,w
  2669  0753  1683               	bsf	3,5	;RP0=1, select bank1
  2670  0754  1303               	bcf	3,6	;RP1=0, select bank1
  2671  0755  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2672  0756  0872               	movf	?___llmod+2,w
  2673  0757  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2674  0758  0871               	movf	?___llmod+1,w
  2675  0759  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2676  075A  0870               	movf	?___llmod,w
  2677  075B  00B7               	movwf	sprintf@tmpval^(0+128)
  2678                           
  2679                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1250:     (
      +                          (*sp++ = ('0' + tmpval.vd)));
  2680  075C  0837               	movf	sprintf@tmpval^(0+128),w
  2681  075D  3E30               	addlw	48
  2682  075E  00A5               	movwf	??_sprintf^(0+128)
  2683  075F  083D               	movf	sprintf@sp^(0+128),w
  2684  0760  0084               	movwf	4
  2685  0761  0825               	movf	??_sprintf^(0+128),w
  2686  0762  1383               	bcf	3,7	;select IRP bank0
  2687  0763  0080               	movwf	0
  2688  0764  3001               	movlw	1
  2689  0765  00A5               	movwf	??_sprintf^(0+128)
  2690  0766  0825               	movf	??_sprintf^(0+128),w
  2691  0767  07BD               	addwf	sprintf@sp^(0+128),f
  2692                           
  2693                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1251:     v
      +                          al %= dpowers[c];
  2694  0768  0842               	movf	sprintf@c^(0+128),w
  2695  0769  00A5               	movwf	??_sprintf^(0+128)
  2696  076A  3001               	movlw	1
  2697  076B                     u5365:	
  2698  076B  1003               	clrc
  2699  076C  0DA5               	rlf	??_sprintf^(0+128),f
  2700  076D  3EFF               	addlw	-1
  2701  076E  1D03               	skipz
  2702  076F  2F6B               	goto	u5365
  2703  0770  1003               	clrc
  2704  0771  0D25               	rlf	??_sprintf^(0+128),w
  2705  0772  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2706  0773  0084               	movwf	4
  2707  0774  120A  158A  200A  120A  118A  	fcall	stringdir
  2708  0779  00F0               	movwf	___llmod@divisor
  2709  077A  120A  158A  200A  120A  118A  	fcall	stringdir
  2710  077F  00F1               	movwf	___llmod@divisor+1
  2711  0780  120A  158A  200A  120A  118A  	fcall	stringdir
  2712  0785  00F2               	movwf	___llmod@divisor+2
  2713  0786  120A  158A  200A  120A  118A  	fcall	stringdir
  2714  078B  00F3               	movwf	___llmod@divisor+3
  2715  078C  0834               	movf	(sprintf@val+3)^(0+128),w
  2716  078D  00F7               	movwf	___llmod@dividend+3
  2717  078E  0833               	movf	(sprintf@val+2)^(0+128),w
  2718  078F  00F6               	movwf	___llmod@dividend+2
  2719  0790  0832               	movf	(sprintf@val+1)^(0+128),w
  2720  0791  00F5               	movwf	___llmod@dividend+1
  2721  0792  0831               	movf	sprintf@val^(0+128),w
  2722  0793  00F4               	movwf	___llmod@dividend
  2723  0794  160A  118A  2129  120A  118A  	fcall	___llmod
  2724  0799  0873               	movf	?___llmod+3,w
  2725  079A  1683               	bsf	3,5	;RP0=1, select bank1
  2726  079B  1303               	bcf	3,6	;RP1=0, select bank1
  2727  079C  00B4               	movwf	(sprintf@val+3)^(0+128)
  2728  079D  0872               	movf	?___llmod+2,w
  2729  079E  00B3               	movwf	(sprintf@val+2)^(0+128)
  2730  079F  0871               	movf	?___llmod+1,w
  2731  07A0  00B2               	movwf	(sprintf@val+1)^(0+128)
  2732  07A1  0870               	movf	?___llmod,w
  2733  07A2  2EFC               	goto	L5
  2734  07A3                     l3171:	
  2735                           
  2736                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1255:     (
      +                          (*sp++ = ('0')));
  2737  07A3  3030               	movlw	48
  2738  07A4  00A5               	movwf	??_sprintf^(0+128)
  2739  07A5  083D               	movf	sprintf@sp^(0+128),w
  2740  07A6  0084               	movwf	4
  2741  07A7  0825               	movf	??_sprintf^(0+128),w
  2742  07A8  1383               	bcf	3,7	;select IRP bank0
  2743  07A9  0080               	movwf	0
  2744  07AA  3001               	movlw	1
  2745  07AB  00A5               	movwf	??_sprintf^(0+128)
  2746  07AC  0825               	movf	??_sprintf^(0+128),w
  2747  07AD  07BD               	addwf	sprintf@sp^(0+128),f
  2748                           
  2749                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1256:     p
      +                          rec--;
  2750  07AE  30FF               	movlw	255
  2751  07AF  07BB               	addwf	sprintf@prec^(0+128),f
  2752  07B0  1803               	skipnc
  2753  07B1  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  2754  07B2  30FF               	movlw	255
  2755  07B3  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  2756  07B4                     l3177:	
  2757                           
  2758                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1254:    wh
      +                          ile(prec) {
  2759  07B4  083B               	movf	sprintf@prec^(0+128),w
  2760  07B5  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  2761  07B6  1903               	btfsc	3,2
  2762  07B7  2A0C               	goto	l3197
  2763  07B8  2FA3               	goto	l3171
  2764  07B9                     l3179:	
  2765                           
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1309:   if(
      +                          prec == 0 && val == 0)
  2767  07B9  083B               	movf	sprintf@prec^(0+128),w
  2768  07BA  043C               	iorwf	(sprintf@prec+1)^(0+128),w
  2769  07BB  1D03               	btfss	3,2
  2770  07BC  2FC9               	goto	l238
  2771  07BD  0834               	movf	(sprintf@val+3)^(0+128),w
  2772  07BE  0433               	iorwf	(sprintf@val+2)^(0+128),w
  2773  07BF  0432               	iorwf	(sprintf@val+1)^(0+128),w
  2774  07C0  0431               	iorwf	sprintf@val^(0+128),w
  2775  07C1  1D03               	skipz
  2776  07C2  2FC9               	goto	l238
  2777                           
  2778                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1310:    pr
      +                          ec++;
  2779  07C3  3001               	movlw	1
  2780  07C4  07BB               	addwf	sprintf@prec^(0+128),f
  2781  07C5  1803               	skipnc
  2782  07C6  0ABC               	incf	(sprintf@prec+1)^(0+128),f
  2783  07C7  3000               	movlw	0
  2784  07C8  07BC               	addwf	(sprintf@prec+1)^(0+128),f
  2785  07C9                     l238:	
  2786                           
  2787                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1358:   if(
      +                          c < prec)
  2788  07C9  083C               	movf	(sprintf@prec+1)^(0+128),w
  2789  07CA  3A80               	xorlw	128
  2790  07CB  3C80               	sublw	128
  2791  07CC  1D03               	skipz
  2792  07CD  2FD0               	goto	u5415
  2793  07CE  083B               	movf	sprintf@prec^(0+128),w
  2794  07CF  0242               	subwf	sprintf@c^(0+128),w
  2795  07D0                     u5415:	
  2796  07D0  1C03               	btfss	3,0
  2797  07D1  2FDF               	goto	l3191
  2798  07D2  1683               	bsf	3,5	;RP0=1, select bank1
  2799  07D3  1303               	bcf	3,6	;RP1=0, select bank1
  2800  07D4  083C               	movf	(sprintf@prec+1)^(0+128),w
  2801  07D5  3A80               	xorlw	128
  2802  07D6  00A5               	movwf	??_sprintf^(0+128)
  2803  07D7  3080               	movlw	128
  2804  07D8  0225               	subwf	??_sprintf^(0+128),w
  2805  07D9  1D03               	skipz
  2806  07DA  2FDD               	goto	u5425
  2807  07DB  0842               	movf	sprintf@c^(0+128),w
  2808  07DC  023B               	subwf	sprintf@prec^(0+128),w
  2809  07DD                     u5425:	
  2810  07DD  1C03               	btfss	3,0
  2811  07DE  2FDF               	goto	l3191
  2812  07DF                     l3191:	
  2813                           
  2814                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1441:   {;C
      +                          :\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1457:    if(f
      +                          lag & 0x03)
  2815  07DF  3003               	movlw	3
  2816  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  2817  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  2818  07E2  052F               	andwf	sprintf@flag^(0+128),w
  2819  07E3  00A5               	movwf	??_sprintf^(0+128)
  2820  07E4  3000               	movlw	0
  2821  07E5  0530               	andwf	(sprintf@flag+1)^(0+128),w
  2822  07E6  00A6               	movwf	(??_sprintf+1)^(0+128)
  2823  07E7  0825               	movf	??_sprintf^(0+128),w
  2824  07E8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2825  07E9  1903               	btfsc	3,2
  2826  07EA  2A0C               	goto	l3197
  2827                           
  2828                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1458:     (
      +                          (*sp++ = ('-')));
  2829  07EB  302D               	movlw	45
  2830  07EC                     L6:	
  2831  07EC  00A5               	movwf	??_sprintf^(0+128)
  2832  07ED  083D               	movf	sprintf@sp^(0+128),w
  2833  07EE  0084               	movwf	4
  2834  07EF  0825               	movf	??_sprintf^(0+128),w
  2835  07F0  1383               	bcf	3,7	;select IRP bank0
  2836  07F1  0080               	movwf	0
  2837  07F2  3001               	movlw	1
  2838  07F3  00A5               	movwf	??_sprintf^(0+128)
  2839  07F4  0825               	movf	??_sprintf^(0+128),w
  2840  07F5  07BD               	addwf	sprintf@sp^(0+128),f
  2841  07F6  2A0C               	goto	l3197
  2842  07F7                     l3199:	
  2843                           
  2844                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 1557:  *sp 
      +                          = 0;
  2845  07F7  083D               	movf	sprintf@sp^(0+128),w
  2846  07F8  0084               	movwf	4
  2847  07F9  1383               	bcf	3,7	;select IRP bank0
  2848  07FA  0180               	clrf	0
  2849  07FB  0008               	return
  2850  07FC                     __end_of_sprintf:	
  2851                           
  2852                           	psect	text2
  2853  0CB7                     __ptext2:	
  2854 ;; *************** function _scale *****************
  2855 ;; Defined at:
  2856 ;;		line 433 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;  scl             1    wreg     char 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  scl             1   48[BANK0 ] char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  4   30[BANK0 ] char 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       4       0       0       0
  2871 ;;      Locals:         0       5       0       0       0
  2872 ;;      Temps:          0      10       0       0       0
  2873 ;;      Totals:         0      19       0       0       0
  2874 ;;Total ram usage:       19 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    2
  2877 ;; This function calls:
  2878 ;;		___awdiv
  2879 ;;		___awmod
  2880 ;;		___flmul
  2881 ;; This function is called by:
  2882 ;;		_sprintf
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           
  2887                           ;psect for function _scale
  2888  0CB7                     _scale:	
  2889                           
  2890                           ;incstack = 0
  2891                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2892                           ;scale@scl stored from wreg
  2893  0CB7  1283               	bcf	3,5	;RP0=0, select bank0
  2894  0CB8  1303               	bcf	3,6	;RP1=0, select bank0
  2895  0CB9  00D0               	movwf	scale@scl
  2896                           
  2897                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 433: scale(
      +                          signed char scl);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprn
      +                          t.c: 434: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 
      +                          436:  if(scl < 0) {
  2898  0CBA  1FD0               	btfss	scale@scl,7
  2899  0CBB  2E5F               	goto	l2623
  2900                           
  2901                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 437:   scl 
      +                          = -scl;
  2902  0CBC  09D0               	comf	scale@scl,f
  2903  0CBD  0AD0               	incf	scale@scl,f
  2904                           
  2905                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 438:   if(s
      +                          cl>=110)
  2906  0CBE  0850               	movf	scale@scl,w
  2907  0CBF  3A80               	xorlw	128
  2908  0CC0  3E12               	addlw	-238
  2909  0CC1  1C03               	skipc
  2910  0CC2  2DA9               	goto	l2613
  2911                           
  2912                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  2913  0CC3  300A               	movlw	10
  2914  0CC4  00F7               	movwf	___awdiv@divisor
  2915  0CC5  3000               	movlw	0
  2916  0CC6  00F8               	movwf	___awdiv@divisor+1
  2917  0CC7  0850               	movf	scale@scl,w
  2918  0CC8  00F2               	movwf	___awmod@dividend
  2919  0CC9  01F3               	clrf	___awmod@dividend+1
  2920  0CCA  1BF2               	btfsc	___awmod@dividend,7
  2921  0CCB  03F3               	decf	___awmod@dividend+1,f
  2922  0CCC  3064               	movlw	100
  2923  0CCD  00F0               	movwf	___awmod@divisor
  2924  0CCE  3000               	movlw	0
  2925  0CCF  00F1               	movwf	___awmod@divisor+1
  2926  0CD0  160A  118A  20DE  120A  158A  	fcall	___awmod
  2927  0CD5  0871               	movf	?___awmod+1,w
  2928  0CD6  00FA               	movwf	___awdiv@dividend+1
  2929  0CD7  0870               	movf	?___awmod,w
  2930  0CD8  00F9               	movwf	___awdiv@dividend
  2931  0CD9  160A  118A  2222  120A  158A  	fcall	___awdiv
  2932  0CDE  0877               	movf	?___awdiv,w
  2933  0CDF  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0CE0  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0CE1  00C2               	movwf	??_scale
  2936  0CE2  3001               	movlw	1
  2937  0CE3                     u4085:	
  2938  0CE3  1003               	clrc
  2939  0CE4  0DC2               	rlf	??_scale,f
  2940  0CE5  3EFF               	addlw	-1
  2941  0CE6  1D03               	skipz
  2942  0CE7  2CE3               	goto	u4085
  2943  0CE8  1003               	clrc
  2944  0CE9  0D42               	rlf	??_scale,w
  2945  0CEA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2946  0CEB  0084               	movwf	4
  2947  0CEC  120A  158A  200A  120A  158A  	fcall	stringdir
  2948  0CF1  00C3               	movwf	??_scale+1
  2949  0CF2  120A  158A  200A  120A  158A  	fcall	stringdir
  2950  0CF7  00C4               	movwf	??_scale+2
  2951  0CF8  120A  158A  200A  120A  158A  	fcall	stringdir
  2952  0CFD  00C5               	movwf	??_scale+3
  2953  0CFE  120A  158A  200A  120A  158A  	fcall	stringdir
  2954  0D03  00C6               	movwf	??_scale+4
  2955  0D04  0846               	movf	??_scale+4,w
  2956  0D05  00A7               	movwf	___flmul@b+3
  2957  0D06  0845               	movf	??_scale+3,w
  2958  0D07  00A6               	movwf	___flmul@b+2
  2959  0D08  0844               	movf	??_scale+2,w
  2960  0D09  00A5               	movwf	___flmul@b+1
  2961  0D0A  0843               	movf	??_scale+1,w
  2962  0D0B  00A4               	movwf	___flmul@b
  2963  0D0C  3064               	movlw	100
  2964  0D0D  00F7               	movwf	___awdiv@divisor
  2965  0D0E  3000               	movlw	0
  2966  0D0F  00F8               	movwf	___awdiv@divisor+1
  2967  0D10  0850               	movf	scale@scl,w
  2968  0D11  00F9               	movwf	___awdiv@dividend
  2969  0D12  01FA               	clrf	___awdiv@dividend+1
  2970  0D13  1BF9               	btfsc	___awdiv@dividend,7
  2971  0D14  03FA               	decf	___awdiv@dividend+1,f
  2972  0D15  160A  118A  2222  120A  158A  	fcall	___awdiv
  2973  0D1A  0877               	movf	?___awdiv,w
  2974  0D1B  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0D1C  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0D1D  00C7               	movwf	??_scale+5
  2977  0D1E  3001               	movlw	1
  2978  0D1F                     u4095:	
  2979  0D1F  1003               	clrc
  2980  0D20  0DC7               	rlf	??_scale+5,f
  2981  0D21  3EFF               	addlw	-1
  2982  0D22  1D03               	skipz
  2983  0D23  2D1F               	goto	u4095
  2984  0D24  1003               	clrc
  2985  0D25  0D47               	rlf	??_scale+5,w
  2986  0D26  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2987  0D27  0084               	movwf	4
  2988  0D28  120A  158A  200A  120A  158A  	fcall	stringdir
  2989  0D2D  00C8               	movwf	??_scale+6
  2990  0D2E  120A  158A  200A  120A  158A  	fcall	stringdir
  2991  0D33  00C9               	movwf	??_scale+7
  2992  0D34  120A  158A  200A  120A  158A  	fcall	stringdir
  2993  0D39  00CA               	movwf	??_scale+8
  2994  0D3A  120A  158A  200A  120A  158A  	fcall	stringdir
  2995  0D3F  00CB               	movwf	??_scale+9
  2996  0D40  084B               	movf	??_scale+9,w
  2997  0D41  00AB               	movwf	___flmul@a+3
  2998  0D42  084A               	movf	??_scale+8,w
  2999  0D43  00AA               	movwf	___flmul@a+2
  3000  0D44  0849               	movf	??_scale+7,w
  3001  0D45  00A9               	movwf	___flmul@a+1
  3002  0D46  0848               	movf	??_scale+6,w
  3003  0D47  00A8               	movwf	___flmul@a
  3004  0D48  120A  158A  21A2  120A  158A  	fcall	___flmul
  3005  0D4D  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0D4E  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0D4F  0827               	movf	?___flmul+3,w
  3008  0D50  00CF               	movwf	_scale$783+3
  3009  0D51  0826               	movf	?___flmul+2,w
  3010  0D52  00CE               	movwf	_scale$783+2
  3011  0D53  0825               	movf	?___flmul+1,w
  3012  0D54  00CD               	movwf	_scale$783+1
  3013  0D55  0824               	movf	?___flmul,w
  3014  0D56  00CC               	movwf	_scale$783
  3015                           
  3016                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 439:    ret
      +                          urn _npowers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] 
      +                          * _npowers_[(unsigned char)(scl%10)];
  3017  0D57  300A               	movlw	10
  3018  0D58  00F0               	movwf	___awmod@divisor
  3019  0D59  3000               	movlw	0
  3020  0D5A  00F1               	movwf	___awmod@divisor+1
  3021  0D5B  0850               	movf	scale@scl,w
  3022  0D5C  00F2               	movwf	___awmod@dividend
  3023  0D5D  01F3               	clrf	___awmod@dividend+1
  3024  0D5E  1BF2               	btfsc	___awmod@dividend,7
  3025  0D5F  03F3               	decf	___awmod@dividend+1,f
  3026  0D60  160A  118A  20DE  120A  158A  	fcall	___awmod
  3027  0D65  0870               	movf	?___awmod,w
  3028  0D66  1283               	bcf	3,5	;RP0=0, select bank0
  3029  0D67  1303               	bcf	3,6	;RP1=0, select bank0
  3030  0D68  00C2               	movwf	??_scale
  3031  0D69  3001               	movlw	1
  3032  0D6A                     u4105:	
  3033  0D6A  1003               	clrc
  3034  0D6B  0DC2               	rlf	??_scale,f
  3035  0D6C  3EFF               	addlw	-1
  3036  0D6D  1D03               	skipz
  3037  0D6E  2D6A               	goto	u4105
  3038  0D6F  1003               	clrc
  3039  0D70  0D42               	rlf	??_scale,w
  3040  0D71  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3041  0D72  0084               	movwf	4
  3042  0D73  120A  158A  200A  120A  158A  	fcall	stringdir
  3043  0D78  00C3               	movwf	??_scale+1
  3044  0D79  120A  158A  200A  120A  158A  	fcall	stringdir
  3045  0D7E  00C4               	movwf	??_scale+2
  3046  0D7F  120A  158A  200A  120A  158A  	fcall	stringdir
  3047  0D84  00C5               	movwf	??_scale+3
  3048  0D85  120A  158A  200A  120A  158A  	fcall	stringdir
  3049  0D8A  00C6               	movwf	??_scale+4
  3050  0D8B  0846               	movf	??_scale+4,w
  3051  0D8C  00A7               	movwf	___flmul@b+3
  3052  0D8D  0845               	movf	??_scale+3,w
  3053  0D8E  00A6               	movwf	___flmul@b+2
  3054  0D8F  0844               	movf	??_scale+2,w
  3055  0D90  00A5               	movwf	___flmul@b+1
  3056  0D91  0843               	movf	??_scale+1,w
  3057  0D92  00A4               	movwf	___flmul@b
  3058  0D93  084F               	movf	_scale$783+3,w
  3059  0D94  00AB               	movwf	___flmul@a+3
  3060  0D95  084E               	movf	_scale$783+2,w
  3061  0D96  00AA               	movwf	___flmul@a+2
  3062  0D97  084D               	movf	_scale$783+1,w
  3063  0D98  00A9               	movwf	___flmul@a+1
  3064  0D99  084C               	movf	_scale$783,w
  3065  0D9A  00A8               	movwf	___flmul@a
  3066  0D9B  120A  158A  21A2   	fcall	___flmul
  3067  0D9E  1283               	bcf	3,5	;RP0=0, select bank0
  3068  0D9F  1303               	bcf	3,6	;RP1=0, select bank0
  3069  0DA0  0827               	movf	?___flmul+3,w
  3070  0DA1  00C1               	movwf	?_scale+3
  3071  0DA2  0826               	movf	?___flmul+2,w
  3072  0DA3  00C0               	movwf	?_scale+2
  3073  0DA4  0825               	movf	?___flmul+1,w
  3074  0DA5  00BF               	movwf	?_scale+1
  3075  0DA6  0824               	movf	?___flmul,w
  3076  0DA7  00BE               	movwf	?_scale
  3077  0DA8  0008               	return
  3078  0DA9                     l2613:	
  3079  0DA9  0850               	movf	scale@scl,w
  3080  0DAA  3A80               	xorlw	128
  3081  0DAB  3E75               	addlw	-139
  3082  0DAC  1C03               	skipc
  3083  0DAD  2E34               	goto	l2619
  3084                           
  3085                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 441:    ret
      +                          urn _npowers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3086  0DAE  300A               	movlw	10
  3087  0DAF  00F0               	movwf	___awmod@divisor
  3088  0DB0  3000               	movlw	0
  3089  0DB1  00F1               	movwf	___awmod@divisor+1
  3090  0DB2  0850               	movf	scale@scl,w
  3091  0DB3  00F2               	movwf	___awmod@dividend
  3092  0DB4  01F3               	clrf	___awmod@dividend+1
  3093  0DB5  1BF2               	btfsc	___awmod@dividend,7
  3094  0DB6  03F3               	decf	___awmod@dividend+1,f
  3095  0DB7  160A  118A  20DE  120A  158A  	fcall	___awmod
  3096  0DBC  0870               	movf	?___awmod,w
  3097  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  3098  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  3099  0DBF  00C2               	movwf	??_scale
  3100  0DC0  3001               	movlw	1
  3101  0DC1                     u4125:	
  3102  0DC1  1003               	clrc
  3103  0DC2  0DC2               	rlf	??_scale,f
  3104  0DC3  3EFF               	addlw	-1
  3105  0DC4  1D03               	skipz
  3106  0DC5  2DC1               	goto	u4125
  3107  0DC6  1003               	clrc
  3108  0DC7  0D42               	rlf	??_scale,w
  3109  0DC8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3110  0DC9  0084               	movwf	4
  3111  0DCA  120A  158A  200A  120A  158A  	fcall	stringdir
  3112  0DCF  00C3               	movwf	??_scale+1
  3113  0DD0  120A  158A  200A  120A  158A  	fcall	stringdir
  3114  0DD5  00C4               	movwf	??_scale+2
  3115  0DD6  120A  158A  200A  120A  158A  	fcall	stringdir
  3116  0DDB  00C5               	movwf	??_scale+3
  3117  0DDC  120A  158A  200A  120A  158A  	fcall	stringdir
  3118  0DE1  00C6               	movwf	??_scale+4
  3119  0DE2  0846               	movf	??_scale+4,w
  3120  0DE3  00A7               	movwf	___flmul@b+3
  3121  0DE4  0845               	movf	??_scale+3,w
  3122  0DE5  00A6               	movwf	___flmul@b+2
  3123  0DE6  0844               	movf	??_scale+2,w
  3124  0DE7  00A5               	movwf	___flmul@b+1
  3125  0DE8  0843               	movf	??_scale+1,w
  3126  0DE9  00A4               	movwf	___flmul@b
  3127  0DEA  300A               	movlw	10
  3128  0DEB  00F7               	movwf	___awdiv@divisor
  3129  0DEC  3000               	movlw	0
  3130  0DED  00F8               	movwf	___awdiv@divisor+1
  3131  0DEE  0850               	movf	scale@scl,w
  3132  0DEF  00F9               	movwf	___awdiv@dividend
  3133  0DF0  01FA               	clrf	___awdiv@dividend+1
  3134  0DF1  1BF9               	btfsc	___awdiv@dividend,7
  3135  0DF2  03FA               	decf	___awdiv@dividend+1,f
  3136  0DF3  160A  118A  2222  120A  158A  	fcall	___awdiv
  3137  0DF8  0877               	movf	?___awdiv,w
  3138  0DF9  1283               	bcf	3,5	;RP0=0, select bank0
  3139  0DFA  1303               	bcf	3,6	;RP1=0, select bank0
  3140  0DFB  00C7               	movwf	??_scale+5
  3141  0DFC  3001               	movlw	1
  3142  0DFD                     u4135:	
  3143  0DFD  1003               	clrc
  3144  0DFE  0DC7               	rlf	??_scale+5,f
  3145  0DFF  3EFF               	addlw	-1
  3146  0E00  1D03               	skipz
  3147  0E01  2DFD               	goto	u4135
  3148  0E02  1003               	clrc
  3149  0E03  0D47               	rlf	??_scale+5,w
  3150  0E04  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3151  0E05  0084               	movwf	4
  3152  0E06  120A  158A  200A  120A  158A  	fcall	stringdir
  3153  0E0B  00C8               	movwf	??_scale+6
  3154  0E0C  120A  158A  200A  120A  158A  	fcall	stringdir
  3155  0E11  00C9               	movwf	??_scale+7
  3156  0E12  120A  158A  200A  120A  158A  	fcall	stringdir
  3157  0E17  00CA               	movwf	??_scale+8
  3158  0E18  120A  158A  200A  120A  158A  	fcall	stringdir
  3159  0E1D  00CB               	movwf	??_scale+9
  3160  0E1E  084B               	movf	??_scale+9,w
  3161  0E1F  00AB               	movwf	___flmul@a+3
  3162  0E20  084A               	movf	??_scale+8,w
  3163  0E21  00AA               	movwf	___flmul@a+2
  3164  0E22  0849               	movf	??_scale+7,w
  3165  0E23  00A9               	movwf	___flmul@a+1
  3166  0E24  0848               	movf	??_scale+6,w
  3167  0E25  00A8               	movwf	___flmul@a
  3168  0E26  120A  158A  21A2   	fcall	___flmul
  3169  0E29  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0E2B  0827               	movf	?___flmul+3,w
  3172  0E2C  00C1               	movwf	?_scale+3
  3173  0E2D  0826               	movf	?___flmul+2,w
  3174  0E2E  00C0               	movwf	?_scale+2
  3175  0E2F  0825               	movf	?___flmul+1,w
  3176  0E30  00BF               	movwf	?_scale+1
  3177  0E31  0824               	movf	?___flmul,w
  3178  0E32  00BE               	movwf	?_scale
  3179  0E33  0008               	return
  3180  0E34                     l2619:	
  3181                           
  3182                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 442:   retu
      +                          rn _npowers_[(unsigned char)scl];
  3183  0E34  0850               	movf	scale@scl,w
  3184  0E35  00C2               	movwf	??_scale
  3185  0E36  3001               	movlw	1
  3186  0E37                     u4145:	
  3187  0E37  1003               	clrc
  3188  0E38  0DC2               	rlf	??_scale,f
  3189  0E39  3EFF               	addlw	-1
  3190  0E3A  1D03               	skipz
  3191  0E3B  2E37               	goto	u4145
  3192  0E3C  1003               	clrc
  3193  0E3D  0D42               	rlf	??_scale,w
  3194  0E3E  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3195  0E3F  0084               	movwf	4
  3196  0E40  120A  158A  200A  120A  158A  	fcall	stringdir
  3197  0E45  00C3               	movwf	??_scale+1
  3198  0E46  120A  158A  200A  120A  158A  	fcall	stringdir
  3199  0E4B  00C4               	movwf	??_scale+2
  3200  0E4C  120A  158A  200A  120A  158A  	fcall	stringdir
  3201  0E51  00C5               	movwf	??_scale+3
  3202  0E52  120A  158A  200A   	fcall	stringdir
  3203  0E55  00C6               	movwf	??_scale+4
  3204  0E56  0846               	movf	??_scale+4,w
  3205  0E57  00C1               	movwf	?_scale+3
  3206  0E58  0845               	movf	??_scale+3,w
  3207  0E59  00C0               	movwf	?_scale+2
  3208  0E5A  0844               	movf	??_scale+2,w
  3209  0E5B  00BF               	movwf	?_scale+1
  3210  0E5C  0843               	movf	??_scale+1,w
  3211  0E5D  00BE               	movwf	?_scale
  3212  0E5E  0008               	return
  3213  0E5F                     l2623:	
  3214                           
  3215                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 444:  if(sc
      +                          l>=110)
  3216  0E5F  0850               	movf	scale@scl,w
  3217  0E60  3A80               	xorlw	128
  3218  0E61  3E12               	addlw	-238
  3219  0E62  1C03               	skipc
  3220  0E63  2F4A               	goto	l2631
  3221                           
  3222                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3223  0E64  300A               	movlw	10
  3224  0E65  00F7               	movwf	___awdiv@divisor
  3225  0E66  3000               	movlw	0
  3226  0E67  00F8               	movwf	___awdiv@divisor+1
  3227  0E68  0850               	movf	scale@scl,w
  3228  0E69  00F2               	movwf	___awmod@dividend
  3229  0E6A  01F3               	clrf	___awmod@dividend+1
  3230  0E6B  1BF2               	btfsc	___awmod@dividend,7
  3231  0E6C  03F3               	decf	___awmod@dividend+1,f
  3232  0E6D  3064               	movlw	100
  3233  0E6E  00F0               	movwf	___awmod@divisor
  3234  0E6F  3000               	movlw	0
  3235  0E70  00F1               	movwf	___awmod@divisor+1
  3236  0E71  160A  118A  20DE  120A  158A  	fcall	___awmod
  3237  0E76  0871               	movf	?___awmod+1,w
  3238  0E77  00FA               	movwf	___awdiv@dividend+1
  3239  0E78  0870               	movf	?___awmod,w
  3240  0E79  00F9               	movwf	___awdiv@dividend
  3241  0E7A  160A  118A  2222  120A  158A  	fcall	___awdiv
  3242  0E7F  0877               	movf	?___awdiv,w
  3243  0E80  1283               	bcf	3,5	;RP0=0, select bank0
  3244  0E81  1303               	bcf	3,6	;RP1=0, select bank0
  3245  0E82  00C2               	movwf	??_scale
  3246  0E83  3001               	movlw	1
  3247  0E84                     u4165:	
  3248  0E84  1003               	clrc
  3249  0E85  0DC2               	rlf	??_scale,f
  3250  0E86  3EFF               	addlw	-1
  3251  0E87  1D03               	skipz
  3252  0E88  2E84               	goto	u4165
  3253  0E89  1003               	clrc
  3254  0E8A  0D42               	rlf	??_scale,w
  3255  0E8B  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3256  0E8C  0084               	movwf	4
  3257  0E8D  120A  158A  200A  120A  158A  	fcall	stringdir
  3258  0E92  00C3               	movwf	??_scale+1
  3259  0E93  120A  158A  200A  120A  158A  	fcall	stringdir
  3260  0E98  00C4               	movwf	??_scale+2
  3261  0E99  120A  158A  200A  120A  158A  	fcall	stringdir
  3262  0E9E  00C5               	movwf	??_scale+3
  3263  0E9F  120A  158A  200A  120A  158A  	fcall	stringdir
  3264  0EA4  00C6               	movwf	??_scale+4
  3265  0EA5  0846               	movf	??_scale+4,w
  3266  0EA6  00A7               	movwf	___flmul@b+3
  3267  0EA7  0845               	movf	??_scale+3,w
  3268  0EA8  00A6               	movwf	___flmul@b+2
  3269  0EA9  0844               	movf	??_scale+2,w
  3270  0EAA  00A5               	movwf	___flmul@b+1
  3271  0EAB  0843               	movf	??_scale+1,w
  3272  0EAC  00A4               	movwf	___flmul@b
  3273  0EAD  3064               	movlw	100
  3274  0EAE  00F7               	movwf	___awdiv@divisor
  3275  0EAF  3000               	movlw	0
  3276  0EB0  00F8               	movwf	___awdiv@divisor+1
  3277  0EB1  0850               	movf	scale@scl,w
  3278  0EB2  00F9               	movwf	___awdiv@dividend
  3279  0EB3  01FA               	clrf	___awdiv@dividend+1
  3280  0EB4  1BF9               	btfsc	___awdiv@dividend,7
  3281  0EB5  03FA               	decf	___awdiv@dividend+1,f
  3282  0EB6  160A  118A  2222  120A  158A  	fcall	___awdiv
  3283  0EBB  0877               	movf	?___awdiv,w
  3284  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  3285  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0EBE  00C7               	movwf	??_scale+5
  3287  0EBF  3001               	movlw	1
  3288  0EC0                     u4175:	
  3289  0EC0  1003               	clrc
  3290  0EC1  0DC7               	rlf	??_scale+5,f
  3291  0EC2  3EFF               	addlw	-1
  3292  0EC3  1D03               	skipz
  3293  0EC4  2EC0               	goto	u4175
  3294  0EC5  1003               	clrc
  3295  0EC6  0D47               	rlf	??_scale+5,w
  3296  0EC7  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3297  0EC8  0084               	movwf	4
  3298  0EC9  120A  158A  200A  120A  158A  	fcall	stringdir
  3299  0ECE  00C8               	movwf	??_scale+6
  3300  0ECF  120A  158A  200A  120A  158A  	fcall	stringdir
  3301  0ED4  00C9               	movwf	??_scale+7
  3302  0ED5  120A  158A  200A  120A  158A  	fcall	stringdir
  3303  0EDA  00CA               	movwf	??_scale+8
  3304  0EDB  120A  158A  200A  120A  158A  	fcall	stringdir
  3305  0EE0  00CB               	movwf	??_scale+9
  3306  0EE1  084B               	movf	??_scale+9,w
  3307  0EE2  00AB               	movwf	___flmul@a+3
  3308  0EE3  084A               	movf	??_scale+8,w
  3309  0EE4  00AA               	movwf	___flmul@a+2
  3310  0EE5  0849               	movf	??_scale+7,w
  3311  0EE6  00A9               	movwf	___flmul@a+1
  3312  0EE7  0848               	movf	??_scale+6,w
  3313  0EE8  00A8               	movwf	___flmul@a
  3314  0EE9  120A  158A  21A2  120A  158A  	fcall	___flmul
  3315  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  3316  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  3317  0EF0  0827               	movf	?___flmul+3,w
  3318  0EF1  00CF               	movwf	_scale$783+3
  3319  0EF2  0826               	movf	?___flmul+2,w
  3320  0EF3  00CE               	movwf	_scale$783+2
  3321  0EF4  0825               	movf	?___flmul+1,w
  3322  0EF5  00CD               	movwf	_scale$783+1
  3323  0EF6  0824               	movf	?___flmul,w
  3324  0EF7  00CC               	movwf	_scale$783
  3325                           
  3326                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 445:   retu
      +                          rn _powers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _
      +                          powers_[(unsigned char)(scl%10)];
  3327  0EF8  300A               	movlw	10
  3328  0EF9  00F0               	movwf	___awmod@divisor
  3329  0EFA  3000               	movlw	0
  3330  0EFB  00F1               	movwf	___awmod@divisor+1
  3331  0EFC  0850               	movf	scale@scl,w
  3332  0EFD  00F2               	movwf	___awmod@dividend
  3333  0EFE  01F3               	clrf	___awmod@dividend+1
  3334  0EFF  1BF2               	btfsc	___awmod@dividend,7
  3335  0F00  03F3               	decf	___awmod@dividend+1,f
  3336  0F01  160A  118A  20DE  120A  158A  	fcall	___awmod
  3337  0F06  0870               	movf	?___awmod,w
  3338  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  3339  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  3340  0F09  00C2               	movwf	??_scale
  3341  0F0A  3001               	movlw	1
  3342  0F0B                     u4185:	
  3343  0F0B  1003               	clrc
  3344  0F0C  0DC2               	rlf	??_scale,f
  3345  0F0D  3EFF               	addlw	-1
  3346  0F0E  1D03               	skipz
  3347  0F0F  2F0B               	goto	u4185
  3348  0F10  1003               	clrc
  3349  0F11  0D42               	rlf	??_scale,w
  3350  0F12  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3351  0F13  0084               	movwf	4
  3352  0F14  120A  158A  200A  120A  158A  	fcall	stringdir
  3353  0F19  00C3               	movwf	??_scale+1
  3354  0F1A  120A  158A  200A  120A  158A  	fcall	stringdir
  3355  0F1F  00C4               	movwf	??_scale+2
  3356  0F20  120A  158A  200A  120A  158A  	fcall	stringdir
  3357  0F25  00C5               	movwf	??_scale+3
  3358  0F26  120A  158A  200A  120A  158A  	fcall	stringdir
  3359  0F2B  00C6               	movwf	??_scale+4
  3360  0F2C  0846               	movf	??_scale+4,w
  3361  0F2D  00A7               	movwf	___flmul@b+3
  3362  0F2E  0845               	movf	??_scale+3,w
  3363  0F2F  00A6               	movwf	___flmul@b+2
  3364  0F30  0844               	movf	??_scale+2,w
  3365  0F31  00A5               	movwf	___flmul@b+1
  3366  0F32  0843               	movf	??_scale+1,w
  3367  0F33  00A4               	movwf	___flmul@b
  3368  0F34  084F               	movf	_scale$783+3,w
  3369  0F35  00AB               	movwf	___flmul@a+3
  3370  0F36  084E               	movf	_scale$783+2,w
  3371  0F37  00AA               	movwf	___flmul@a+2
  3372  0F38  084D               	movf	_scale$783+1,w
  3373  0F39  00A9               	movwf	___flmul@a+1
  3374  0F3A  084C               	movf	_scale$783,w
  3375  0F3B  00A8               	movwf	___flmul@a
  3376  0F3C  120A  158A  21A2   	fcall	___flmul
  3377  0F3F  1283               	bcf	3,5	;RP0=0, select bank0
  3378  0F40  1303               	bcf	3,6	;RP1=0, select bank0
  3379  0F41  0827               	movf	?___flmul+3,w
  3380  0F42  00C1               	movwf	?_scale+3
  3381  0F43  0826               	movf	?___flmul+2,w
  3382  0F44  00C0               	movwf	?_scale+2
  3383  0F45  0825               	movf	?___flmul+1,w
  3384  0F46  00BF               	movwf	?_scale+1
  3385  0F47  0824               	movf	?___flmul,w
  3386  0F48  00BE               	movwf	?_scale
  3387  0F49  0008               	return
  3388  0F4A                     l2631:	
  3389  0F4A  0850               	movf	scale@scl,w
  3390  0F4B  3A80               	xorlw	128
  3391  0F4C  3E75               	addlw	-139
  3392  0F4D  1C03               	skipc
  3393  0F4E  2FD5               	goto	l2637
  3394                           
  3395                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 447:   retu
      +                          rn _powers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3396  0F4F  300A               	movlw	10
  3397  0F50  00F0               	movwf	___awmod@divisor
  3398  0F51  3000               	movlw	0
  3399  0F52  00F1               	movwf	___awmod@divisor+1
  3400  0F53  0850               	movf	scale@scl,w
  3401  0F54  00F2               	movwf	___awmod@dividend
  3402  0F55  01F3               	clrf	___awmod@dividend+1
  3403  0F56  1BF2               	btfsc	___awmod@dividend,7
  3404  0F57  03F3               	decf	___awmod@dividend+1,f
  3405  0F58  160A  118A  20DE  120A  158A  	fcall	___awmod
  3406  0F5D  0870               	movf	?___awmod,w
  3407  0F5E  1283               	bcf	3,5	;RP0=0, select bank0
  3408  0F5F  1303               	bcf	3,6	;RP1=0, select bank0
  3409  0F60  00C2               	movwf	??_scale
  3410  0F61  3001               	movlw	1
  3411  0F62                     u4205:	
  3412  0F62  1003               	clrc
  3413  0F63  0DC2               	rlf	??_scale,f
  3414  0F64  3EFF               	addlw	-1
  3415  0F65  1D03               	skipz
  3416  0F66  2F62               	goto	u4205
  3417  0F67  1003               	clrc
  3418  0F68  0D42               	rlf	??_scale,w
  3419  0F69  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3420  0F6A  0084               	movwf	4
  3421  0F6B  120A  158A  200A  120A  158A  	fcall	stringdir
  3422  0F70  00C3               	movwf	??_scale+1
  3423  0F71  120A  158A  200A  120A  158A  	fcall	stringdir
  3424  0F76  00C4               	movwf	??_scale+2
  3425  0F77  120A  158A  200A  120A  158A  	fcall	stringdir
  3426  0F7C  00C5               	movwf	??_scale+3
  3427  0F7D  120A  158A  200A  120A  158A  	fcall	stringdir
  3428  0F82  00C6               	movwf	??_scale+4
  3429  0F83  0846               	movf	??_scale+4,w
  3430  0F84  00A7               	movwf	___flmul@b+3
  3431  0F85  0845               	movf	??_scale+3,w
  3432  0F86  00A6               	movwf	___flmul@b+2
  3433  0F87  0844               	movf	??_scale+2,w
  3434  0F88  00A5               	movwf	___flmul@b+1
  3435  0F89  0843               	movf	??_scale+1,w
  3436  0F8A  00A4               	movwf	___flmul@b
  3437  0F8B  300A               	movlw	10
  3438  0F8C  00F7               	movwf	___awdiv@divisor
  3439  0F8D  3000               	movlw	0
  3440  0F8E  00F8               	movwf	___awdiv@divisor+1
  3441  0F8F  0850               	movf	scale@scl,w
  3442  0F90  00F9               	movwf	___awdiv@dividend
  3443  0F91  01FA               	clrf	___awdiv@dividend+1
  3444  0F92  1BF9               	btfsc	___awdiv@dividend,7
  3445  0F93  03FA               	decf	___awdiv@dividend+1,f
  3446  0F94  160A  118A  2222  120A  158A  	fcall	___awdiv
  3447  0F99  0877               	movf	?___awdiv,w
  3448  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  3449  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  3450  0F9C  00C7               	movwf	??_scale+5
  3451  0F9D  3001               	movlw	1
  3452  0F9E                     u4215:	
  3453  0F9E  1003               	clrc
  3454  0F9F  0DC7               	rlf	??_scale+5,f
  3455  0FA0  3EFF               	addlw	-1
  3456  0FA1  1D03               	skipz
  3457  0FA2  2F9E               	goto	u4215
  3458  0FA3  1003               	clrc
  3459  0FA4  0D47               	rlf	??_scale+5,w
  3460  0FA5  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3461  0FA6  0084               	movwf	4
  3462  0FA7  120A  158A  200A  120A  158A  	fcall	stringdir
  3463  0FAC  00C8               	movwf	??_scale+6
  3464  0FAD  120A  158A  200A  120A  158A  	fcall	stringdir
  3465  0FB2  00C9               	movwf	??_scale+7
  3466  0FB3  120A  158A  200A  120A  158A  	fcall	stringdir
  3467  0FB8  00CA               	movwf	??_scale+8
  3468  0FB9  120A  158A  200A  120A  158A  	fcall	stringdir
  3469  0FBE  00CB               	movwf	??_scale+9
  3470  0FBF  084B               	movf	??_scale+9,w
  3471  0FC0  00AB               	movwf	___flmul@a+3
  3472  0FC1  084A               	movf	??_scale+8,w
  3473  0FC2  00AA               	movwf	___flmul@a+2
  3474  0FC3  0849               	movf	??_scale+7,w
  3475  0FC4  00A9               	movwf	___flmul@a+1
  3476  0FC5  0848               	movf	??_scale+6,w
  3477  0FC6  00A8               	movwf	___flmul@a
  3478  0FC7  120A  158A  21A2   	fcall	___flmul
  3479  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3480  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3481  0FCC  0827               	movf	?___flmul+3,w
  3482  0FCD  00C1               	movwf	?_scale+3
  3483  0FCE  0826               	movf	?___flmul+2,w
  3484  0FCF  00C0               	movwf	?_scale+2
  3485  0FD0  0825               	movf	?___flmul+1,w
  3486  0FD1  00BF               	movwf	?_scale+1
  3487  0FD2  0824               	movf	?___flmul,w
  3488  0FD3  00BE               	movwf	?_scale
  3489  0FD4  0008               	return
  3490  0FD5                     l2637:	
  3491                           
  3492                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 448:  retur
      +                          n _powers_[(unsigned char)scl];
  3493  0FD5  0850               	movf	scale@scl,w
  3494  0FD6  00C2               	movwf	??_scale
  3495  0FD7  3001               	movlw	1
  3496  0FD8                     u4225:	
  3497  0FD8  1003               	clrc
  3498  0FD9  0DC2               	rlf	??_scale,f
  3499  0FDA  3EFF               	addlw	-1
  3500  0FDB  1D03               	skipz
  3501  0FDC  2FD8               	goto	u4225
  3502  0FDD  1003               	clrc
  3503  0FDE  0D42               	rlf	??_scale,w
  3504  0FDF  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3505  0FE0  0084               	movwf	4
  3506  0FE1  120A  158A  200A  120A  158A  	fcall	stringdir
  3507  0FE6  00C3               	movwf	??_scale+1
  3508  0FE7  120A  158A  200A  120A  158A  	fcall	stringdir
  3509  0FEC  00C4               	movwf	??_scale+2
  3510  0FED  120A  158A  200A  120A  158A  	fcall	stringdir
  3511  0FF2  00C5               	movwf	??_scale+3
  3512  0FF3  120A  158A  200A   	fcall	stringdir
  3513  0FF6  00C6               	movwf	??_scale+4
  3514  0FF7  0846               	movf	??_scale+4,w
  3515  0FF8  00C1               	movwf	?_scale+3
  3516  0FF9  0845               	movf	??_scale+3,w
  3517  0FFA  00C0               	movwf	?_scale+2
  3518  0FFB  0844               	movf	??_scale+2,w
  3519  0FFC  00BF               	movwf	?_scale+1
  3520  0FFD  0843               	movf	??_scale+1,w
  3521  0FFE  00BE               	movwf	?_scale
  3522  0FFF  0008               	return
  3523  1000                     __end_of_scale:	
  3524                           
  3525                           	psect	text3
  3526  10DE                     __ptext3:	
  3527 ;; *************** function ___awmod *****************
  3528 ;; Defined at:
  3529 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  3530 ;; Parameters:    Size  Location     Type
  3531 ;;  divisor         2    0[COMMON] int 
  3532 ;;  dividend        2    2[COMMON] int 
  3533 ;; Auto vars:     Size  Location     Type
  3534 ;;  sign            1    6[COMMON] unsigned char 
  3535 ;;  counter         1    5[COMMON] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  2    0[COMMON] int 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3545 ;;      Params:         4       0       0       0       0
  3546 ;;      Locals:         2       0       0       0       0
  3547 ;;      Temps:          1       0       0       0       0
  3548 ;;      Totals:         7       0       0       0       0
  3549 ;;Total ram usage:        7 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; This function calls:
  3552 ;;		Nothing
  3553 ;; This function is called by:
  3554 ;;		_scale
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function ___awmod
  3560  10DE                     ___awmod:	
  3561                           
  3562                           ;incstack = 0
  3563                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3564  10DE  01F6               	clrf	___awmod@sign
  3565  10DF  1FF3               	btfss	___awmod@dividend+1,7
  3566  10E0  28E8               	goto	l2129
  3567  10E1  09F2               	comf	___awmod@dividend,f
  3568  10E2  09F3               	comf	___awmod@dividend+1,f
  3569  10E3  0AF2               	incf	___awmod@dividend,f
  3570  10E4  1903               	skipnz
  3571  10E5  0AF3               	incf	___awmod@dividend+1,f
  3572  10E6  01F6               	clrf	___awmod@sign
  3573  10E7  0AF6               	incf	___awmod@sign,f
  3574  10E8                     l2129:	
  3575  10E8  1FF1               	btfss	___awmod@divisor+1,7
  3576  10E9  28EF               	goto	l2133
  3577  10EA  09F0               	comf	___awmod@divisor,f
  3578  10EB  09F1               	comf	___awmod@divisor+1,f
  3579  10EC  0AF0               	incf	___awmod@divisor,f
  3580  10ED  1903               	skipnz
  3581  10EE  0AF1               	incf	___awmod@divisor+1,f
  3582  10EF                     l2133:	
  3583  10EF  0870               	movf	___awmod@divisor,w
  3584  10F0  0471               	iorwf	___awmod@divisor+1,w
  3585  10F1  1903               	btfsc	3,2
  3586  10F2  291C               	goto	l2151
  3587  10F3  01F5               	clrf	___awmod@counter
  3588  10F4  0AF5               	incf	___awmod@counter,f
  3589  10F5                     l2141:	
  3590  10F5  1BF1               	btfsc	___awmod@divisor+1,7
  3591  10F6  2903               	goto	l2143
  3592  10F7  3001               	movlw	1
  3593  10F8                     u2935:	
  3594  10F8  1003               	clrc
  3595  10F9  0DF0               	rlf	___awmod@divisor,f
  3596  10FA  0DF1               	rlf	___awmod@divisor+1,f
  3597  10FB  3EFF               	addlw	-1
  3598  10FC  1D03               	skipz
  3599  10FD  28F8               	goto	u2935
  3600  10FE  3001               	movlw	1
  3601  10FF  00F4               	movwf	??___awmod
  3602  1100  0874               	movf	??___awmod,w
  3603  1101  07F5               	addwf	___awmod@counter,f
  3604  1102  28F5               	goto	l2141
  3605  1103                     l2143:	
  3606  1103  0871               	movf	___awmod@divisor+1,w
  3607  1104  0273               	subwf	___awmod@dividend+1,w
  3608  1105  1D03               	skipz
  3609  1106  2909               	goto	u2955
  3610  1107  0870               	movf	___awmod@divisor,w
  3611  1108  0272               	subwf	___awmod@dividend,w
  3612  1109                     u2955:	
  3613  1109  1C03               	skipc
  3614  110A  2911               	goto	l2147
  3615  110B  0870               	movf	___awmod@divisor,w
  3616  110C  02F2               	subwf	___awmod@dividend,f
  3617  110D  0871               	movf	___awmod@divisor+1,w
  3618  110E  1C03               	skipc
  3619  110F  03F3               	decf	___awmod@dividend+1,f
  3620  1110  02F3               	subwf	___awmod@dividend+1,f
  3621  1111                     l2147:	
  3622  1111  3001               	movlw	1
  3623  1112                     u2965:	
  3624  1112  1003               	clrc
  3625  1113  0CF1               	rrf	___awmod@divisor+1,f
  3626  1114  0CF0               	rrf	___awmod@divisor,f
  3627  1115  3EFF               	addlw	-1
  3628  1116  1D03               	skipz
  3629  1117  2912               	goto	u2965
  3630  1118  3001               	movlw	1
  3631  1119  02F5               	subwf	___awmod@counter,f
  3632  111A  1D03               	btfss	3,2
  3633  111B  2903               	goto	l2143
  3634  111C                     l2151:	
  3635  111C  0876               	movf	___awmod@sign,w
  3636  111D  1903               	btfsc	3,2
  3637  111E  2924               	goto	l2155
  3638  111F  09F2               	comf	___awmod@dividend,f
  3639  1120  09F3               	comf	___awmod@dividend+1,f
  3640  1121  0AF2               	incf	___awmod@dividend,f
  3641  1122  1903               	skipnz
  3642  1123  0AF3               	incf	___awmod@dividend+1,f
  3643  1124                     l2155:	
  3644  1124  0873               	movf	___awmod@dividend+1,w
  3645  1125  00F1               	movwf	?___awmod+1
  3646  1126  0872               	movf	___awmod@dividend,w
  3647  1127  00F0               	movwf	?___awmod
  3648  1128  0008               	return
  3649  1129                     __end_of___awmod:	
  3650                           
  3651                           	psect	text4
  3652  1222                     __ptext4:	
  3653 ;; *************** function ___awdiv *****************
  3654 ;; Defined at:
  3655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  3656 ;; Parameters:    Size  Location     Type
  3657 ;;  divisor         2    7[COMMON] int 
  3658 ;;  dividend        2    9[COMMON] int 
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;  quotient        2    2[BANK0 ] int 
  3661 ;;  sign            1    1[BANK0 ] unsigned char 
  3662 ;;  counter         1    0[BANK0 ] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;                  2    7[COMMON] int 
  3665 ;; Registers used:
  3666 ;;		wreg, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3672 ;;      Params:         4       0       0       0       0
  3673 ;;      Locals:         0       4       0       0       0
  3674 ;;      Temps:          1       0       0       0       0
  3675 ;;      Totals:         5       4       0       0       0
  3676 ;;Total ram usage:        9 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_scale
  3682 ;;		_sprintf
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           
  3687                           ;psect for function ___awdiv
  3688  1222                     ___awdiv:	
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3692  1222  1283               	bcf	3,5	;RP0=0, select bank0
  3693  1223  1303               	bcf	3,6	;RP1=0, select bank0
  3694  1224  01A1               	clrf	___awdiv@sign
  3695  1225  1FF8               	btfss	___awdiv@divisor+1,7
  3696  1226  2A2E               	goto	l2085
  3697  1227  09F7               	comf	___awdiv@divisor,f
  3698  1228  09F8               	comf	___awdiv@divisor+1,f
  3699  1229  0AF7               	incf	___awdiv@divisor,f
  3700  122A  1903               	skipnz
  3701  122B  0AF8               	incf	___awdiv@divisor+1,f
  3702  122C  01A1               	clrf	___awdiv@sign
  3703  122D  0AA1               	incf	___awdiv@sign,f
  3704  122E                     l2085:	
  3705  122E  1FFA               	btfss	___awdiv@dividend+1,7
  3706  122F  2A39               	goto	l2091
  3707  1230  09F9               	comf	___awdiv@dividend,f
  3708  1231  09FA               	comf	___awdiv@dividend+1,f
  3709  1232  0AF9               	incf	___awdiv@dividend,f
  3710  1233  1903               	skipnz
  3711  1234  0AFA               	incf	___awdiv@dividend+1,f
  3712  1235  3001               	movlw	1
  3713  1236  00FB               	movwf	??___awdiv
  3714  1237  087B               	movf	??___awdiv,w
  3715  1238  06A1               	xorwf	___awdiv@sign,f
  3716  1239                     l2091:	
  3717  1239  01A2               	clrf	___awdiv@quotient
  3718  123A  01A3               	clrf	___awdiv@quotient+1
  3719  123B  0877               	movf	___awdiv@divisor,w
  3720  123C  0478               	iorwf	___awdiv@divisor+1,w
  3721  123D  1903               	btfsc	3,2
  3722  123E  2A70               	goto	l2113
  3723  123F  01A0               	clrf	___awdiv@counter
  3724  1240  0AA0               	incf	___awdiv@counter,f
  3725  1241                     l2101:	
  3726  1241  1BF8               	btfsc	___awdiv@divisor+1,7
  3727  1242  2A4F               	goto	l2103
  3728  1243  3001               	movlw	1
  3729  1244                     u2835:	
  3730  1244  1003               	clrc
  3731  1245  0DF7               	rlf	___awdiv@divisor,f
  3732  1246  0DF8               	rlf	___awdiv@divisor+1,f
  3733  1247  3EFF               	addlw	-1
  3734  1248  1D03               	skipz
  3735  1249  2A44               	goto	u2835
  3736  124A  3001               	movlw	1
  3737  124B  00FB               	movwf	??___awdiv
  3738  124C  087B               	movf	??___awdiv,w
  3739  124D  07A0               	addwf	___awdiv@counter,f
  3740  124E  2A41               	goto	l2101
  3741  124F                     l2103:	
  3742  124F  3001               	movlw	1
  3743  1250                     u2855:	
  3744  1250  1003               	clrc
  3745  1251  0DA2               	rlf	___awdiv@quotient,f
  3746  1252  0DA3               	rlf	___awdiv@quotient+1,f
  3747  1253  3EFF               	addlw	-1
  3748  1254  1D03               	skipz
  3749  1255  2A50               	goto	u2855
  3750  1256  0878               	movf	___awdiv@divisor+1,w
  3751  1257  027A               	subwf	___awdiv@dividend+1,w
  3752  1258  1D03               	skipz
  3753  1259  2A5C               	goto	u2865
  3754  125A  0877               	movf	___awdiv@divisor,w
  3755  125B  0279               	subwf	___awdiv@dividend,w
  3756  125C                     u2865:	
  3757  125C  1C03               	skipc
  3758  125D  2A65               	goto	l2109
  3759  125E  0877               	movf	___awdiv@divisor,w
  3760  125F  02F9               	subwf	___awdiv@dividend,f
  3761  1260  0878               	movf	___awdiv@divisor+1,w
  3762  1261  1C03               	skipc
  3763  1262  03FA               	decf	___awdiv@dividend+1,f
  3764  1263  02FA               	subwf	___awdiv@dividend+1,f
  3765  1264  1422               	bsf	___awdiv@quotient,0
  3766  1265                     l2109:	
  3767  1265  3001               	movlw	1
  3768  1266                     u2875:	
  3769  1266  1003               	clrc
  3770  1267  0CF8               	rrf	___awdiv@divisor+1,f
  3771  1268  0CF7               	rrf	___awdiv@divisor,f
  3772  1269  3EFF               	addlw	-1
  3773  126A  1D03               	skipz
  3774  126B  2A66               	goto	u2875
  3775  126C  3001               	movlw	1
  3776  126D  02A0               	subwf	___awdiv@counter,f
  3777  126E  1D03               	btfss	3,2
  3778  126F  2A4F               	goto	l2103
  3779  1270                     l2113:	
  3780  1270  0821               	movf	___awdiv@sign,w
  3781  1271  1903               	btfsc	3,2
  3782  1272  2A78               	goto	l2117
  3783  1273  09A2               	comf	___awdiv@quotient,f
  3784  1274  09A3               	comf	___awdiv@quotient+1,f
  3785  1275  0AA2               	incf	___awdiv@quotient,f
  3786  1276  1903               	skipnz
  3787  1277  0AA3               	incf	___awdiv@quotient+1,f
  3788  1278                     l2117:	
  3789  1278  0823               	movf	___awdiv@quotient+1,w
  3790  1279  00F8               	movwf	?___awdiv+1
  3791  127A  0822               	movf	___awdiv@quotient,w
  3792  127B  00F7               	movwf	?___awdiv
  3793  127C  0008               	return
  3794  127D                     __end_of___awdiv:	
  3795                           
  3796                           	psect	text5
  3797  1F0C                     __ptext5:	
  3798 ;; *************** function _isdigit *****************
  3799 ;; Defined at:
  3800 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\isdigit.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;  c               1    wreg     unsigned char 
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  c               1    1[COMMON] unsigned char 
  3805 ;; Return value:  Size  Location     Type
  3806 ;;		None               void
  3807 ;; Registers used:
  3808 ;;		wreg, status,2, status,0
  3809 ;; Tracked objects:
  3810 ;;		On entry : 0/0
  3811 ;;		On exit  : 0/0
  3812 ;;		Unchanged: 0/0
  3813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3814 ;;      Params:         0       0       0       0       0
  3815 ;;      Locals:         2       0       0       0       0
  3816 ;;      Temps:          0       0       0       0       0
  3817 ;;      Totals:         2       0       0       0       0
  3818 ;;Total ram usage:        2 bytes
  3819 ;; Hardware stack levels used:    1
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_sprintf
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           
  3828                           ;psect for function _isdigit
  3829  1F0C                     _isdigit:	
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3833                           ;isdigit@c stored from wreg
  3834  1F0C  00F1               	movwf	isdigit@c
  3835  1F0D  01F0               	clrf	_isdigit$596
  3836  1F0E  303A               	movlw	58
  3837  1F0F  0271               	subwf	isdigit@c,w
  3838  1F10  1803               	skipnc
  3839  1F11  2F18               	goto	l2649
  3840  1F12  3030               	movlw	48
  3841  1F13  0271               	subwf	isdigit@c,w
  3842  1F14  1C03               	skipc
  3843  1F15  2F18               	goto	l2649
  3844  1F16  01F0               	clrf	_isdigit$596
  3845  1F17  0AF0               	incf	_isdigit$596,f
  3846  1F18                     l2649:	
  3847  1F18  0C70               	rrf	_isdigit$596,w
  3848  1F19  0008               	return
  3849  1F1A                     __end_of_isdigit:	
  3850                           
  3851                           	psect	text6
  3852  0004                     __ptext6:	
  3853 ;; *************** function _fround *****************
  3854 ;; Defined at:
  3855 ;;		line 417 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c"
  3856 ;; Parameters:    Size  Location     Type
  3857 ;;  prec            1    wreg     unsigned char 
  3858 ;; Auto vars:     Size  Location     Type
  3859 ;;  prec            1   49[BANK0 ] unsigned char 
  3860 ;; Return value:  Size  Location     Type
  3861 ;;                  4   30[BANK0 ] unsigned char 
  3862 ;; Registers used:
  3863 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3864 ;; Tracked objects:
  3865 ;;		On entry : 0/0
  3866 ;;		On exit  : 0/0
  3867 ;;		Unchanged: 0/0
  3868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3869 ;;      Params:         0       4       0       0       0
  3870 ;;      Locals:         0       9       0       0       0
  3871 ;;      Temps:          0       7       0       0       0
  3872 ;;      Totals:         0      20       0       0       0
  3873 ;;Total ram usage:       20 bytes
  3874 ;; Hardware stack levels used:    1
  3875 ;; Hardware stack levels required when called:    2
  3876 ;; This function calls:
  3877 ;;		___flmul
  3878 ;;		___lwdiv
  3879 ;;		___lwmod
  3880 ;; This function is called by:
  3881 ;;		_sprintf
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _fround
  3887  0004                     _fround:	
  3888                           
  3889                           ;incstack = 0
  3890                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3891                           ;fround@prec stored from wreg
  3892  0004  1283               	bcf	3,5	;RP0=0, select bank0
  3893  0005  1303               	bcf	3,6	;RP1=0, select bank0
  3894  0006  00D1               	movwf	fround@prec
  3895                           
  3896                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 417: fround
      +                          (unsigned char prec);C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\d
      +                          oprnt.c: 418: {;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt
      +                          .c: 421:  if(prec>=110)
  3897  0007  306E               	movlw	110
  3898  0008  0251               	subwf	fround@prec,w
  3899  0009  1C03               	skipc
  3900  000A  2916               	goto	l2591
  3901                           
  3902                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3903  000B  303F               	movlw	63
  3904  000C  00A7               	movwf	___flmul@b+3
  3905  000D  3000               	movlw	0
  3906  000E  00A6               	movwf	___flmul@b+2
  3907  000F  3000               	movlw	0
  3908  0010  00A5               	movwf	___flmul@b+1
  3909  0011  3000               	movlw	0
  3910  0012  00A4               	movwf	___flmul@b
  3911  0013  3064               	movlw	100
  3912  0014  00F6               	movwf	___lwdiv@divisor
  3913  0015  3000               	movlw	0
  3914  0016  00F7               	movwf	___lwdiv@divisor+1
  3915  0017  0851               	movf	fround@prec,w
  3916  0018  00C2               	movwf	??_fround
  3917  0019  01C3               	clrf	??_fround+1
  3918  001A  0842               	movf	??_fround,w
  3919  001B  00F8               	movwf	___lwdiv@dividend
  3920  001C  0843               	movf	??_fround+1,w
  3921  001D  00F9               	movwf	___lwdiv@dividend+1
  3922  001E  160A  158A  27C4  120A  118A  	fcall	___lwdiv
  3923  0023  0876               	movf	?___lwdiv,w
  3924  0024  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0025  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0026  00C4               	movwf	??_fround+2
  3927  0027  3001               	movlw	1
  3928  0028                     u3995:	
  3929  0028  1003               	clrc
  3930  0029  0DC4               	rlf	??_fround+2,f
  3931  002A  3EFF               	addlw	-1
  3932  002B  1D03               	skipz
  3933  002C  2828               	goto	u3995
  3934  002D  1003               	clrc
  3935  002E  0D44               	rlf	??_fround+2,w
  3936  002F  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3937  0030  0084               	movwf	4
  3938  0031  120A  158A  200A  120A  118A  	fcall	stringdir
  3939  0036  00C5               	movwf	??_fround+3
  3940  0037  120A  158A  200A  120A  118A  	fcall	stringdir
  3941  003C  00C6               	movwf	??_fround+4
  3942  003D  120A  158A  200A  120A  118A  	fcall	stringdir
  3943  0042  00C7               	movwf	??_fround+5
  3944  0043  120A  158A  200A  120A  118A  	fcall	stringdir
  3945  0048  00C8               	movwf	??_fround+6
  3946  0049  0848               	movf	??_fround+6,w
  3947  004A  00AB               	movwf	___flmul@a+3
  3948  004B  0847               	movf	??_fround+5,w
  3949  004C  00AA               	movwf	___flmul@a+2
  3950  004D  0846               	movf	??_fround+4,w
  3951  004E  00A9               	movwf	___flmul@a+1
  3952  004F  0845               	movf	??_fround+3,w
  3953  0050  00A8               	movwf	___flmul@a
  3954  0051  120A  158A  21A2  120A  118A  	fcall	___flmul
  3955  0056  1283               	bcf	3,5	;RP0=0, select bank0
  3956  0057  1303               	bcf	3,6	;RP1=0, select bank0
  3957  0058  0827               	movf	?___flmul+3,w
  3958  0059  00D0               	movwf	_fround$781+3
  3959  005A  0826               	movf	?___flmul+2,w
  3960  005B  00CF               	movwf	_fround$781+2
  3961  005C  0825               	movf	?___flmul+1,w
  3962  005D  00CE               	movwf	_fround$781+1
  3963  005E  0824               	movf	?___flmul,w
  3964  005F  00CD               	movwf	_fround$781
  3965                           
  3966                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3967  0060  300A               	movlw	10
  3968  0061  00F6               	movwf	___lwdiv@divisor
  3969  0062  3000               	movlw	0
  3970  0063  00F7               	movwf	___lwdiv@divisor+1
  3971  0064  0851               	movf	fround@prec,w
  3972  0065  00C2               	movwf	??_fround
  3973  0066  01C3               	clrf	??_fround+1
  3974  0067  0842               	movf	??_fround,w
  3975  0068  00F2               	movwf	___lwmod@dividend
  3976  0069  0843               	movf	??_fround+1,w
  3977  006A  00F3               	movwf	___lwmod@dividend+1
  3978  006B  3064               	movlw	100
  3979  006C  00F0               	movwf	___lwmod@divisor
  3980  006D  3000               	movlw	0
  3981  006E  00F1               	movwf	___lwmod@divisor+1
  3982  006F  160A  158A  2792  120A  118A  	fcall	___lwmod
  3983  0074  0871               	movf	?___lwmod+1,w
  3984  0075  00F9               	movwf	___lwdiv@dividend+1
  3985  0076  0870               	movf	?___lwmod,w
  3986  0077  00F8               	movwf	___lwdiv@dividend
  3987  0078  160A  158A  27C4  120A  118A  	fcall	___lwdiv
  3988  007D  0876               	movf	?___lwdiv,w
  3989  007E  1283               	bcf	3,5	;RP0=0, select bank0
  3990  007F  1303               	bcf	3,6	;RP1=0, select bank0
  3991  0080  00C4               	movwf	??_fround+2
  3992  0081  3001               	movlw	1
  3993  0082                     u4005:	
  3994  0082  1003               	clrc
  3995  0083  0DC4               	rlf	??_fround+2,f
  3996  0084  3EFF               	addlw	-1
  3997  0085  1D03               	skipz
  3998  0086  2882               	goto	u4005
  3999  0087  1003               	clrc
  4000  0088  0D44               	rlf	??_fround+2,w
  4001  0089  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4002  008A  0084               	movwf	4
  4003  008B  120A  158A  200A  120A  118A  	fcall	stringdir
  4004  0090  00C5               	movwf	??_fround+3
  4005  0091  120A  158A  200A  120A  118A  	fcall	stringdir
  4006  0096  00C6               	movwf	??_fround+4
  4007  0097  120A  158A  200A  120A  118A  	fcall	stringdir
  4008  009C  00C7               	movwf	??_fround+5
  4009  009D  120A  158A  200A  120A  118A  	fcall	stringdir
  4010  00A2  00C8               	movwf	??_fround+6
  4011  00A3  0848               	movf	??_fround+6,w
  4012  00A4  00A7               	movwf	___flmul@b+3
  4013  00A5  0847               	movf	??_fround+5,w
  4014  00A6  00A6               	movwf	___flmul@b+2
  4015  00A7  0846               	movf	??_fround+4,w
  4016  00A8  00A5               	movwf	___flmul@b+1
  4017  00A9  0845               	movf	??_fround+3,w
  4018  00AA  00A4               	movwf	___flmul@b
  4019  00AB  0850               	movf	_fround$781+3,w
  4020  00AC  00AB               	movwf	___flmul@a+3
  4021  00AD  084F               	movf	_fround$781+2,w
  4022  00AE  00AA               	movwf	___flmul@a+2
  4023  00AF  084E               	movf	_fround$781+1,w
  4024  00B0  00A9               	movwf	___flmul@a+1
  4025  00B1  084D               	movf	_fround$781,w
  4026  00B2  00A8               	movwf	___flmul@a
  4027  00B3  120A  158A  21A2  120A  118A  	fcall	___flmul
  4028  00B8  1283               	bcf	3,5	;RP0=0, select bank0
  4029  00B9  1303               	bcf	3,6	;RP1=0, select bank0
  4030  00BA  0827               	movf	?___flmul+3,w
  4031  00BB  00CC               	movwf	_fround$782+3
  4032  00BC  0826               	movf	?___flmul+2,w
  4033  00BD  00CB               	movwf	_fround$782+2
  4034  00BE  0825               	movf	?___flmul+1,w
  4035  00BF  00CA               	movwf	_fround$782+1
  4036  00C0  0824               	movf	?___flmul,w
  4037  00C1  00C9               	movwf	_fround$782
  4038                           
  4039                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 422:   retu
      +                          rn 0.5 * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4040  00C2  300A               	movlw	10
  4041  00C3  00F0               	movwf	___lwmod@divisor
  4042  00C4  3000               	movlw	0
  4043  00C5  00F1               	movwf	___lwmod@divisor+1
  4044  00C6  0851               	movf	fround@prec,w
  4045  00C7  00C2               	movwf	??_fround
  4046  00C8  01C3               	clrf	??_fround+1
  4047  00C9  0842               	movf	??_fround,w
  4048  00CA  00F2               	movwf	___lwmod@dividend
  4049  00CB  0843               	movf	??_fround+1,w
  4050  00CC  00F3               	movwf	___lwmod@dividend+1
  4051  00CD  160A  158A  2792  120A  118A  	fcall	___lwmod
  4052  00D2  0870               	movf	?___lwmod,w
  4053  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  4054  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  4055  00D5  00C4               	movwf	??_fround+2
  4056  00D6  3001               	movlw	1
  4057  00D7                     u4015:	
  4058  00D7  1003               	clrc
  4059  00D8  0DC4               	rlf	??_fround+2,f
  4060  00D9  3EFF               	addlw	-1
  4061  00DA  1D03               	skipz
  4062  00DB  28D7               	goto	u4015
  4063  00DC  1003               	clrc
  4064  00DD  0D44               	rlf	??_fround+2,w
  4065  00DE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4066  00DF  0084               	movwf	4
  4067  00E0  120A  158A  200A  120A  118A  	fcall	stringdir
  4068  00E5  00C5               	movwf	??_fround+3
  4069  00E6  120A  158A  200A  120A  118A  	fcall	stringdir
  4070  00EB  00C6               	movwf	??_fround+4
  4071  00EC  120A  158A  200A  120A  118A  	fcall	stringdir
  4072  00F1  00C7               	movwf	??_fround+5
  4073  00F2  120A  158A  200A  120A  118A  	fcall	stringdir
  4074  00F7  00C8               	movwf	??_fround+6
  4075  00F8  0848               	movf	??_fround+6,w
  4076  00F9  00A7               	movwf	___flmul@b+3
  4077  00FA  0847               	movf	??_fround+5,w
  4078  00FB  00A6               	movwf	___flmul@b+2
  4079  00FC  0846               	movf	??_fround+4,w
  4080  00FD  00A5               	movwf	___flmul@b+1
  4081  00FE  0845               	movf	??_fround+3,w
  4082  00FF  00A4               	movwf	___flmul@b
  4083  0100  084C               	movf	_fround$782+3,w
  4084  0101  00AB               	movwf	___flmul@a+3
  4085  0102  084B               	movf	_fround$782+2,w
  4086  0103  00AA               	movwf	___flmul@a+2
  4087  0104  084A               	movf	_fround$782+1,w
  4088  0105  00A9               	movwf	___flmul@a+1
  4089  0106  0849               	movf	_fround$782,w
  4090  0107  00A8               	movwf	___flmul@a
  4091  0108  120A  158A  21A2   	fcall	___flmul
  4092  010B  1283               	bcf	3,5	;RP0=0, select bank0
  4093  010C  1303               	bcf	3,6	;RP1=0, select bank0
  4094  010D  0827               	movf	?___flmul+3,w
  4095  010E  00C1               	movwf	?_fround+3
  4096  010F  0826               	movf	?___flmul+2,w
  4097  0110  00C0               	movwf	?_fround+2
  4098  0111  0825               	movf	?___flmul+1,w
  4099  0112  00BF               	movwf	?_fround+1
  4100  0113  0824               	movf	?___flmul,w
  4101  0114  00BE               	movwf	?_fround
  4102  0115  0008               	return
  4103  0116                     l2591:	
  4104  0116  300B               	movlw	11
  4105  0117  0251               	subwf	fround@prec,w
  4106  0118  1C03               	skipc
  4107  0119  29C3               	goto	l2597
  4108                           
  4109                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4110  011A  303F               	movlw	63
  4111  011B  00A7               	movwf	___flmul@b+3
  4112  011C  3000               	movlw	0
  4113  011D  00A6               	movwf	___flmul@b+2
  4114  011E  3000               	movlw	0
  4115  011F  00A5               	movwf	___flmul@b+1
  4116  0120  3000               	movlw	0
  4117  0121  00A4               	movwf	___flmul@b
  4118  0122  300A               	movlw	10
  4119  0123  00F6               	movwf	___lwdiv@divisor
  4120  0124  3000               	movlw	0
  4121  0125  00F7               	movwf	___lwdiv@divisor+1
  4122  0126  0851               	movf	fround@prec,w
  4123  0127  00C2               	movwf	??_fround
  4124  0128  01C3               	clrf	??_fround+1
  4125  0129  0842               	movf	??_fround,w
  4126  012A  00F8               	movwf	___lwdiv@dividend
  4127  012B  0843               	movf	??_fround+1,w
  4128  012C  00F9               	movwf	___lwdiv@dividend+1
  4129  012D  160A  158A  27C4  120A  118A  	fcall	___lwdiv
  4130  0132  0876               	movf	?___lwdiv,w
  4131  0133  1283               	bcf	3,5	;RP0=0, select bank0
  4132  0134  1303               	bcf	3,6	;RP1=0, select bank0
  4133  0135  00C4               	movwf	??_fround+2
  4134  0136  3001               	movlw	1
  4135  0137                     u4035:	
  4136  0137  1003               	clrc
  4137  0138  0DC4               	rlf	??_fround+2,f
  4138  0139  3EFF               	addlw	-1
  4139  013A  1D03               	skipz
  4140  013B  2937               	goto	u4035
  4141  013C  1003               	clrc
  4142  013D  0D44               	rlf	??_fround+2,w
  4143  013E  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4144  013F  0084               	movwf	4
  4145  0140  120A  158A  200A  120A  118A  	fcall	stringdir
  4146  0145  00C5               	movwf	??_fround+3
  4147  0146  120A  158A  200A  120A  118A  	fcall	stringdir
  4148  014B  00C6               	movwf	??_fround+4
  4149  014C  120A  158A  200A  120A  118A  	fcall	stringdir
  4150  0151  00C7               	movwf	??_fround+5
  4151  0152  120A  158A  200A  120A  118A  	fcall	stringdir
  4152  0157  00C8               	movwf	??_fround+6
  4153  0158  0848               	movf	??_fround+6,w
  4154  0159  00AB               	movwf	___flmul@a+3
  4155  015A  0847               	movf	??_fround+5,w
  4156  015B  00AA               	movwf	___flmul@a+2
  4157  015C  0846               	movf	??_fround+4,w
  4158  015D  00A9               	movwf	___flmul@a+1
  4159  015E  0845               	movf	??_fround+3,w
  4160  015F  00A8               	movwf	___flmul@a
  4161  0160  120A  158A  21A2  120A  118A  	fcall	___flmul
  4162  0165  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0166  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0167  0827               	movf	?___flmul+3,w
  4165  0168  00D0               	movwf	_fround$781+3
  4166  0169  0826               	movf	?___flmul+2,w
  4167  016A  00CF               	movwf	_fround$781+2
  4168  016B  0825               	movf	?___flmul+1,w
  4169  016C  00CE               	movwf	_fround$781+1
  4170  016D  0824               	movf	?___flmul,w
  4171  016E  00CD               	movwf	_fround$781
  4172                           
  4173                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 424:   retu
      +                          rn 0.5 * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4174  016F  300A               	movlw	10
  4175  0170  00F0               	movwf	___lwmod@divisor
  4176  0171  3000               	movlw	0
  4177  0172  00F1               	movwf	___lwmod@divisor+1
  4178  0173  0851               	movf	fround@prec,w
  4179  0174  00C2               	movwf	??_fround
  4180  0175  01C3               	clrf	??_fround+1
  4181  0176  0842               	movf	??_fround,w
  4182  0177  00F2               	movwf	___lwmod@dividend
  4183  0178  0843               	movf	??_fround+1,w
  4184  0179  00F3               	movwf	___lwmod@dividend+1
  4185  017A  160A  158A  2792  120A  118A  	fcall	___lwmod
  4186  017F  0870               	movf	?___lwmod,w
  4187  0180  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0181  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0182  00C4               	movwf	??_fround+2
  4190  0183  3001               	movlw	1
  4191  0184                     u4045:	
  4192  0184  1003               	clrc
  4193  0185  0DC4               	rlf	??_fround+2,f
  4194  0186  3EFF               	addlw	-1
  4195  0187  1D03               	skipz
  4196  0188  2984               	goto	u4045
  4197  0189  1003               	clrc
  4198  018A  0D44               	rlf	??_fround+2,w
  4199  018B  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4200  018C  0084               	movwf	4
  4201  018D  120A  158A  200A  120A  118A  	fcall	stringdir
  4202  0192  00C5               	movwf	??_fround+3
  4203  0193  120A  158A  200A  120A  118A  	fcall	stringdir
  4204  0198  00C6               	movwf	??_fround+4
  4205  0199  120A  158A  200A  120A  118A  	fcall	stringdir
  4206  019E  00C7               	movwf	??_fround+5
  4207  019F  120A  158A  200A  120A  118A  	fcall	stringdir
  4208  01A4  00C8               	movwf	??_fround+6
  4209  01A5  0848               	movf	??_fround+6,w
  4210  01A6  00A7               	movwf	___flmul@b+3
  4211  01A7  0847               	movf	??_fround+5,w
  4212  01A8  00A6               	movwf	___flmul@b+2
  4213  01A9  0846               	movf	??_fround+4,w
  4214  01AA  00A5               	movwf	___flmul@b+1
  4215  01AB  0845               	movf	??_fround+3,w
  4216  01AC  00A4               	movwf	___flmul@b
  4217  01AD  0850               	movf	_fround$781+3,w
  4218  01AE  00AB               	movwf	___flmul@a+3
  4219  01AF  084F               	movf	_fround$781+2,w
  4220  01B0  00AA               	movwf	___flmul@a+2
  4221  01B1  084E               	movf	_fround$781+1,w
  4222  01B2  00A9               	movwf	___flmul@a+1
  4223  01B3  084D               	movf	_fround$781,w
  4224  01B4  00A8               	movwf	___flmul@a
  4225  01B5  120A  158A  21A2   	fcall	___flmul
  4226  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  4227  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  4228  01BA  0827               	movf	?___flmul+3,w
  4229  01BB  00C1               	movwf	?_fround+3
  4230  01BC  0826               	movf	?___flmul+2,w
  4231  01BD  00C0               	movwf	?_fround+2
  4232  01BE  0825               	movf	?___flmul+1,w
  4233  01BF  00BF               	movwf	?_fround+1
  4234  01C0  0824               	movf	?___flmul,w
  4235  01C1  00BE               	movwf	?_fround
  4236  01C2  0008               	return
  4237  01C3                     l2597:	
  4238                           
  4239                           ;C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\doprnt.c: 425:  retur
      +                          n 0.5 * _npowers_[prec];
  4240  01C3  303F               	movlw	63
  4241  01C4  00A7               	movwf	___flmul@b+3
  4242  01C5  3000               	movlw	0
  4243  01C6  00A6               	movwf	___flmul@b+2
  4244  01C7  3000               	movlw	0
  4245  01C8  00A5               	movwf	___flmul@b+1
  4246  01C9  3000               	movlw	0
  4247  01CA  00A4               	movwf	___flmul@b
  4248  01CB  0851               	movf	fround@prec,w
  4249  01CC  00C2               	movwf	??_fround
  4250  01CD  3001               	movlw	1
  4251  01CE                     u4055:	
  4252  01CE  1003               	clrc
  4253  01CF  0DC2               	rlf	??_fround,f
  4254  01D0  3EFF               	addlw	-1
  4255  01D1  1D03               	skipz
  4256  01D2  29CE               	goto	u4055
  4257  01D3  1003               	clrc
  4258  01D4  0D42               	rlf	??_fround,w
  4259  01D5  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4260  01D6  0084               	movwf	4
  4261  01D7  120A  158A  200A  120A  118A  	fcall	stringdir
  4262  01DC  00C3               	movwf	??_fround+1
  4263  01DD  120A  158A  200A  120A  118A  	fcall	stringdir
  4264  01E2  00C4               	movwf	??_fround+2
  4265  01E3  120A  158A  200A  120A  118A  	fcall	stringdir
  4266  01E8  00C5               	movwf	??_fround+3
  4267  01E9  120A  158A  200A  120A  118A  	fcall	stringdir
  4268  01EE  00C6               	movwf	??_fround+4
  4269  01EF  0846               	movf	??_fround+4,w
  4270  01F0  00AB               	movwf	___flmul@a+3
  4271  01F1  0845               	movf	??_fround+3,w
  4272  01F2  00AA               	movwf	___flmul@a+2
  4273  01F3  0844               	movf	??_fround+2,w
  4274  01F4  00A9               	movwf	___flmul@a+1
  4275  01F5  0843               	movf	??_fround+1,w
  4276  01F6  00A8               	movwf	___flmul@a
  4277  01F7  120A  158A  21A2   	fcall	___flmul
  4278  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  4279  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  4280  01FC  0827               	movf	?___flmul+3,w
  4281  01FD  00C1               	movwf	?_fround+3
  4282  01FE  0826               	movf	?___flmul+2,w
  4283  01FF  00C0               	movwf	?_fround+2
  4284  0200  0825               	movf	?___flmul+1,w
  4285  0201  00BF               	movwf	?_fround+1
  4286  0202  0824               	movf	?___flmul,w
  4287  0203  00BE               	movwf	?_fround
  4288  0204  0008               	return
  4289  0205                     __end_of_fround:	
  4290                           
  4291                           	psect	text7
  4292  1F92                     __ptext7:	
  4293 ;; *************** function ___lwmod *****************
  4294 ;; Defined at:
  4295 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwmod.c"
  4296 ;; Parameters:    Size  Location     Type
  4297 ;;  divisor         2    0[COMMON] unsigned int 
  4298 ;;  dividend        2    2[COMMON] unsigned int 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;  counter         1    5[COMMON] unsigned char 
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  2    0[COMMON] unsigned int 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         4       0       0       0       0
  4311 ;;      Locals:         1       0       0       0       0
  4312 ;;      Temps:          1       0       0       0       0
  4313 ;;      Totals:         6       0       0       0       0
  4314 ;;Total ram usage:        6 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_fround
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function ___lwmod
  4325  1F92                     ___lwmod:	
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4329  1F92  0870               	movf	___lwmod@divisor,w
  4330  1F93  0471               	iorwf	___lwmod@divisor+1,w
  4331  1F94  1903               	btfsc	3,2
  4332  1F95  2FBF               	goto	l2203
  4333  1F96  01F5               	clrf	___lwmod@counter
  4334  1F97  0AF5               	incf	___lwmod@counter,f
  4335  1F98                     l2193:	
  4336  1F98  1BF1               	btfsc	___lwmod@divisor+1,7
  4337  1F99  2FA6               	goto	l2195
  4338  1F9A  3001               	movlw	1
  4339  1F9B                     u3075:	
  4340  1F9B  1003               	clrc
  4341  1F9C  0DF0               	rlf	___lwmod@divisor,f
  4342  1F9D  0DF1               	rlf	___lwmod@divisor+1,f
  4343  1F9E  3EFF               	addlw	-1
  4344  1F9F  1D03               	skipz
  4345  1FA0  2F9B               	goto	u3075
  4346  1FA1  3001               	movlw	1
  4347  1FA2  00F4               	movwf	??___lwmod
  4348  1FA3  0874               	movf	??___lwmod,w
  4349  1FA4  07F5               	addwf	___lwmod@counter,f
  4350  1FA5  2F98               	goto	l2193
  4351  1FA6                     l2195:	
  4352  1FA6  0871               	movf	___lwmod@divisor+1,w
  4353  1FA7  0273               	subwf	___lwmod@dividend+1,w
  4354  1FA8  1D03               	skipz
  4355  1FA9  2FAC               	goto	u3095
  4356  1FAA  0870               	movf	___lwmod@divisor,w
  4357  1FAB  0272               	subwf	___lwmod@dividend,w
  4358  1FAC                     u3095:	
  4359  1FAC  1C03               	skipc
  4360  1FAD  2FB4               	goto	l2199
  4361  1FAE  0870               	movf	___lwmod@divisor,w
  4362  1FAF  02F2               	subwf	___lwmod@dividend,f
  4363  1FB0  0871               	movf	___lwmod@divisor+1,w
  4364  1FB1  1C03               	skipc
  4365  1FB2  03F3               	decf	___lwmod@dividend+1,f
  4366  1FB3  02F3               	subwf	___lwmod@dividend+1,f
  4367  1FB4                     l2199:	
  4368  1FB4  3001               	movlw	1
  4369  1FB5                     u3105:	
  4370  1FB5  1003               	clrc
  4371  1FB6  0CF1               	rrf	___lwmod@divisor+1,f
  4372  1FB7  0CF0               	rrf	___lwmod@divisor,f
  4373  1FB8  3EFF               	addlw	-1
  4374  1FB9  1D03               	skipz
  4375  1FBA  2FB5               	goto	u3105
  4376  1FBB  3001               	movlw	1
  4377  1FBC  02F5               	subwf	___lwmod@counter,f
  4378  1FBD  1D03               	btfss	3,2
  4379  1FBE  2FA6               	goto	l2195
  4380  1FBF                     l2203:	
  4381  1FBF  0873               	movf	___lwmod@dividend+1,w
  4382  1FC0  00F1               	movwf	?___lwmod+1
  4383  1FC1  0872               	movf	___lwmod@dividend,w
  4384  1FC2  00F0               	movwf	?___lwmod
  4385  1FC3  0008               	return
  4386  1FC4                     __end_of___lwmod:	
  4387                           
  4388                           	psect	text8
  4389  1FC4                     __ptext8:	
  4390 ;; *************** function ___lwdiv *****************
  4391 ;; Defined at:
  4392 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\lwdiv.c"
  4393 ;; Parameters:    Size  Location     Type
  4394 ;;  divisor         2    6[COMMON] unsigned int 
  4395 ;;  dividend        2    8[COMMON] unsigned int 
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  quotient        2   11[COMMON] unsigned int 
  4398 ;;  counter         1   13[COMMON] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  2    6[COMMON] unsigned int 
  4401 ;; Registers used:
  4402 ;;		wreg, status,2, status,0
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4408 ;;      Params:         4       0       0       0       0
  4409 ;;      Locals:         3       0       0       0       0
  4410 ;;      Temps:          1       0       0       0       0
  4411 ;;      Totals:         8       0       0       0       0
  4412 ;;Total ram usage:        8 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; This function calls:
  4415 ;;		Nothing
  4416 ;; This function is called by:
  4417 ;;		_fround
  4418 ;; This function uses a non-reentrant model
  4419 ;;
  4420                           
  4421                           
  4422                           ;psect for function ___lwdiv
  4423  1FC4                     ___lwdiv:	
  4424                           
  4425                           ;incstack = 0
  4426                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4427  1FC4  01FB               	clrf	___lwdiv@quotient
  4428  1FC5  01FC               	clrf	___lwdiv@quotient+1
  4429  1FC6  0876               	movf	___lwdiv@divisor,w
  4430  1FC7  0477               	iorwf	___lwdiv@divisor+1,w
  4431  1FC8  1903               	btfsc	3,2
  4432  1FC9  2FFB               	goto	l2181
  4433  1FCA  01FD               	clrf	___lwdiv@counter
  4434  1FCB  0AFD               	incf	___lwdiv@counter,f
  4435  1FCC                     l2169:	
  4436  1FCC  1BF7               	btfsc	___lwdiv@divisor+1,7
  4437  1FCD  2FDA               	goto	l2171
  4438  1FCE  3001               	movlw	1
  4439  1FCF                     u3005:	
  4440  1FCF  1003               	clrc
  4441  1FD0  0DF6               	rlf	___lwdiv@divisor,f
  4442  1FD1  0DF7               	rlf	___lwdiv@divisor+1,f
  4443  1FD2  3EFF               	addlw	-1
  4444  1FD3  1D03               	skipz
  4445  1FD4  2FCF               	goto	u3005
  4446  1FD5  3001               	movlw	1
  4447  1FD6  00FA               	movwf	??___lwdiv
  4448  1FD7  087A               	movf	??___lwdiv,w
  4449  1FD8  07FD               	addwf	___lwdiv@counter,f
  4450  1FD9  2FCC               	goto	l2169
  4451  1FDA                     l2171:	
  4452  1FDA  3001               	movlw	1
  4453  1FDB                     u3025:	
  4454  1FDB  1003               	clrc
  4455  1FDC  0DFB               	rlf	___lwdiv@quotient,f
  4456  1FDD  0DFC               	rlf	___lwdiv@quotient+1,f
  4457  1FDE  3EFF               	addlw	-1
  4458  1FDF  1D03               	skipz
  4459  1FE0  2FDB               	goto	u3025
  4460  1FE1  0877               	movf	___lwdiv@divisor+1,w
  4461  1FE2  0279               	subwf	___lwdiv@dividend+1,w
  4462  1FE3  1D03               	skipz
  4463  1FE4  2FE7               	goto	u3035
  4464  1FE5  0876               	movf	___lwdiv@divisor,w
  4465  1FE6  0278               	subwf	___lwdiv@dividend,w
  4466  1FE7                     u3035:	
  4467  1FE7  1C03               	skipc
  4468  1FE8  2FF0               	goto	l2177
  4469  1FE9  0876               	movf	___lwdiv@divisor,w
  4470  1FEA  02F8               	subwf	___lwdiv@dividend,f
  4471  1FEB  0877               	movf	___lwdiv@divisor+1,w
  4472  1FEC  1C03               	skipc
  4473  1FED  03F9               	decf	___lwdiv@dividend+1,f
  4474  1FEE  02F9               	subwf	___lwdiv@dividend+1,f
  4475  1FEF  147B               	bsf	___lwdiv@quotient,0
  4476  1FF0                     l2177:	
  4477  1FF0  3001               	movlw	1
  4478  1FF1                     u3045:	
  4479  1FF1  1003               	clrc
  4480  1FF2  0CF7               	rrf	___lwdiv@divisor+1,f
  4481  1FF3  0CF6               	rrf	___lwdiv@divisor,f
  4482  1FF4  3EFF               	addlw	-1
  4483  1FF5  1D03               	skipz
  4484  1FF6  2FF1               	goto	u3045
  4485  1FF7  3001               	movlw	1
  4486  1FF8  02FD               	subwf	___lwdiv@counter,f
  4487  1FF9  1D03               	btfss	3,2
  4488  1FFA  2FDA               	goto	l2171
  4489  1FFB                     l2181:	
  4490  1FFB  087C               	movf	___lwdiv@quotient+1,w
  4491  1FFC  00F7               	movwf	?___lwdiv+1
  4492  1FFD  087B               	movf	___lwdiv@quotient,w
  4493  1FFE  00F6               	movwf	?___lwdiv
  4494  1FFF  0008               	return
  4495  2000                     __end_of___lwdiv:	
  4496                           
  4497                           	psect	text9
  4498  09A2                     __ptext9:	
  4499 ;; *************** function ___flmul *****************
  4500 ;; Defined at:
  4501 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcmul.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  b               4    4[BANK0 ] unsigned int 
  4504 ;;  a               4    8[BANK0 ] unsigned int 
  4505 ;; Auto vars:     Size  Location     Type
  4506 ;;  prod            4   24[BANK0 ] struct .
  4507 ;;  grs             4   18[BANK0 ] unsigned long 
  4508 ;;  temp            2   28[BANK0 ] struct .
  4509 ;;  bexp            1   23[BANK0 ] unsigned char 
  4510 ;;  aexp            1   22[BANK0 ] unsigned char 
  4511 ;;  sign            1   17[BANK0 ] unsigned char 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  4    4[BANK0 ] unsigned char 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4521 ;;      Params:         0       8       0       0       0
  4522 ;;      Locals:         0      13       0       0       0
  4523 ;;      Temps:          0       5       0       0       0
  4524 ;;      Totals:         0      26       0       0       0
  4525 ;;Total ram usage:       26 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    1
  4528 ;; This function calls:
  4529 ;;		__Umul8_16
  4530 ;; This function is called by:
  4531 ;;		_fround
  4532 ;;		_scale
  4533 ;;		_sprintf
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           
  4538                           ;psect for function ___flmul
  4539  09A2                     ___flmul:	
  4540                           
  4541                           ;incstack = 0
  4542                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4543  09A2  1283               	bcf	3,5	;RP0=0, select bank0
  4544  09A3  1303               	bcf	3,6	;RP1=0, select bank0
  4545  09A4  0827               	movf	___flmul@b+3,w
  4546  09A5  3980               	andlw	128
  4547  09A6  00AC               	movwf	??___flmul
  4548  09A7  082C               	movf	??___flmul,w
  4549  09A8  00B1               	movwf	___flmul@sign
  4550  09A9  0827               	movf	___flmul@b+3,w
  4551  09AA  00AC               	movwf	??___flmul
  4552  09AB  072C               	addwf	??___flmul,w
  4553  09AC  00AD               	movwf	??___flmul+1
  4554  09AD  082D               	movf	??___flmul+1,w
  4555  09AE  00B7               	movwf	___flmul@bexp
  4556  09AF  1BA6               	btfsc	___flmul@b+2,7
  4557  09B0  1437               	bsf	___flmul@bexp,0
  4558  09B1  0837               	movf	___flmul@bexp,w
  4559  09B2  1903               	btfsc	3,2
  4560  09B3  29C1               	goto	l2417
  4561  09B4  0A37               	incf	___flmul@bexp,w
  4562  09B5  1D03               	btfss	3,2
  4563  09B6  29BF               	goto	l2415
  4564  09B7  3000               	movlw	0
  4565  09B8  00A7               	movwf	___flmul@b+3
  4566  09B9  3000               	movlw	0
  4567  09BA  00A6               	movwf	___flmul@b+2
  4568  09BB  3000               	movlw	0
  4569  09BC  00A5               	movwf	___flmul@b+1
  4570  09BD  3000               	movlw	0
  4571  09BE  00A4               	movwf	___flmul@b
  4572  09BF                     l2415:	
  4573  09BF  17A6               	bsf	___flmul@b+2,7
  4574  09C0  29C9               	goto	l2419
  4575  09C1                     l2417:	
  4576  09C1  3000               	movlw	0
  4577  09C2  00A7               	movwf	___flmul@b+3
  4578  09C3  3000               	movlw	0
  4579  09C4  00A6               	movwf	___flmul@b+2
  4580  09C5  3000               	movlw	0
  4581  09C6  00A5               	movwf	___flmul@b+1
  4582  09C7  3000               	movlw	0
  4583  09C8  00A4               	movwf	___flmul@b
  4584  09C9                     l2419:	
  4585  09C9  082B               	movf	___flmul@a+3,w
  4586  09CA  3980               	andlw	128
  4587  09CB  00AC               	movwf	??___flmul
  4588  09CC  082C               	movf	??___flmul,w
  4589  09CD  06B1               	xorwf	___flmul@sign,f
  4590  09CE  082B               	movf	___flmul@a+3,w
  4591  09CF  00AC               	movwf	??___flmul
  4592  09D0  072C               	addwf	??___flmul,w
  4593  09D1  00AD               	movwf	??___flmul+1
  4594  09D2  082D               	movf	??___flmul+1,w
  4595  09D3  00B6               	movwf	___flmul@aexp
  4596  09D4  1BAA               	btfsc	___flmul@a+2,7
  4597  09D5  1436               	bsf	___flmul@aexp,0
  4598  09D6  0836               	movf	___flmul@aexp,w
  4599  09D7  1903               	btfsc	3,2
  4600  09D8  29E6               	goto	l2435
  4601  09D9  0A36               	incf	___flmul@aexp,w
  4602  09DA  1D03               	btfss	3,2
  4603  09DB  29E4               	goto	l2433
  4604  09DC  3000               	movlw	0
  4605  09DD  00AB               	movwf	___flmul@a+3
  4606  09DE  3000               	movlw	0
  4607  09DF  00AA               	movwf	___flmul@a+2
  4608  09E0  3000               	movlw	0
  4609  09E1  00A9               	movwf	___flmul@a+1
  4610  09E2  3000               	movlw	0
  4611  09E3  00A8               	movwf	___flmul@a
  4612  09E4                     l2433:	
  4613  09E4  17AA               	bsf	___flmul@a+2,7
  4614  09E5  29EE               	goto	l2437
  4615  09E6                     l2435:	
  4616  09E6  3000               	movlw	0
  4617  09E7  00AB               	movwf	___flmul@a+3
  4618  09E8  3000               	movlw	0
  4619  09E9  00AA               	movwf	___flmul@a+2
  4620  09EA  3000               	movlw	0
  4621  09EB  00A9               	movwf	___flmul@a+1
  4622  09EC  3000               	movlw	0
  4623  09ED  00A8               	movwf	___flmul@a
  4624  09EE                     l2437:	
  4625  09EE  0836               	movf	___flmul@aexp,w
  4626  09EF  1D03               	btfss	3,2
  4627  09F0  0837               	movf	___flmul@bexp,w
  4628  09F1  1D03               	btfss	3,2
  4629  09F2  29FC               	goto	l2445
  4630  09F3  3000               	movlw	0
  4631  09F4  00A7               	movwf	?___flmul+3
  4632  09F5  3000               	movlw	0
  4633  09F6  00A6               	movwf	?___flmul+2
  4634  09F7  3000               	movlw	0
  4635  09F8  00A5               	movwf	?___flmul+1
  4636  09F9  3000               	movlw	0
  4637  09FA  00A4               	movwf	?___flmul
  4638  09FB  0008               	return
  4639  09FC                     l2445:	
  4640  09FC  0824               	movf	___flmul@b,w
  4641  09FD  00AC               	movwf	??___flmul
  4642  09FE  082C               	movf	??___flmul,w
  4643  09FF  00F0               	movwf	__Umul8_16@multiplicand
  4644  0A00  082A               	movf	___flmul@a+2,w
  4645  0A01  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4646  0A06  0871               	movf	?__Umul8_16+1,w
  4647  0A07  1283               	bcf	3,5	;RP0=0, select bank0
  4648  0A08  1303               	bcf	3,6	;RP1=0, select bank0
  4649  0A09  00BD               	movwf	___flmul@temp+1
  4650  0A0A  0870               	movf	?__Umul8_16,w
  4651  0A0B  00BC               	movwf	___flmul@temp
  4652  0A0C  083C               	movf	___flmul@temp,w
  4653  0A0D  00AC               	movwf	??___flmul
  4654  0A0E  01AD               	clrf	??___flmul+1
  4655  0A0F  01AE               	clrf	??___flmul+2
  4656  0A10  01AF               	clrf	??___flmul+3
  4657  0A11  082F               	movf	??___flmul+3,w
  4658  0A12  00B5               	movwf	___flmul@grs+3
  4659  0A13  082E               	movf	??___flmul+2,w
  4660  0A14  00B4               	movwf	___flmul@grs+2
  4661  0A15  082D               	movf	??___flmul+1,w
  4662  0A16  00B3               	movwf	___flmul@grs+1
  4663  0A17  082C               	movf	??___flmul,w
  4664  0A18  00B2               	movwf	___flmul@grs
  4665  0A19  083D               	movf	___flmul@temp+1,w
  4666  0A1A  00AC               	movwf	??___flmul
  4667  0A1B  01AD               	clrf	??___flmul+1
  4668  0A1C  01AE               	clrf	??___flmul+2
  4669  0A1D  01AF               	clrf	??___flmul+3
  4670  0A1E  082F               	movf	??___flmul+3,w
  4671  0A1F  00BB               	movwf	___flmul@prod+3
  4672  0A20  082E               	movf	??___flmul+2,w
  4673  0A21  00BA               	movwf	___flmul@prod+2
  4674  0A22  082D               	movf	??___flmul+1,w
  4675  0A23  00B9               	movwf	___flmul@prod+1
  4676  0A24  082C               	movf	??___flmul,w
  4677  0A25  00B8               	movwf	___flmul@prod
  4678  0A26  0825               	movf	___flmul@b+1,w
  4679  0A27  00AC               	movwf	??___flmul
  4680  0A28  082C               	movf	??___flmul,w
  4681  0A29  00F0               	movwf	__Umul8_16@multiplicand
  4682  0A2A  0829               	movf	___flmul@a+1,w
  4683  0A2B  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4684  0A30  0871               	movf	?__Umul8_16+1,w
  4685  0A31  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0A32  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0A33  00BD               	movwf	___flmul@temp+1
  4688  0A34  0870               	movf	?__Umul8_16,w
  4689  0A35  00BC               	movwf	___flmul@temp
  4690  0A36  083C               	movf	___flmul@temp,w
  4691  0A37  00AC               	movwf	??___flmul
  4692  0A38  01AD               	clrf	??___flmul+1
  4693  0A39  01AE               	clrf	??___flmul+2
  4694  0A3A  01AF               	clrf	??___flmul+3
  4695  0A3B  082C               	movf	??___flmul,w
  4696  0A3C  07B2               	addwf	___flmul@grs,f
  4697  0A3D  082D               	movf	??___flmul+1,w
  4698  0A3E  1103               	clrz
  4699  0A3F  1803               	skipnc
  4700  0A40  3E01               	addlw	1
  4701  0A41  1D03               	btfss	3,2
  4702  0A42  07B3               	addwf	___flmul@grs+1,f
  4703  0A43  082E               	movf	??___flmul+2,w
  4704  0A44  1103               	clrz
  4705  0A45  1803               	skipnc
  4706  0A46  3E01               	addlw	1
  4707  0A47  1D03               	btfss	3,2
  4708  0A48  07B4               	addwf	___flmul@grs+2,f
  4709  0A49  082F               	movf	??___flmul+3,w
  4710  0A4A  1103               	clrz
  4711  0A4B  1803               	skipnc
  4712  0A4C  3E01               	addlw	1
  4713  0A4D  1D03               	btfss	3,2
  4714  0A4E  07B5               	addwf	___flmul@grs+3,f
  4715  0A4F  083D               	movf	___flmul@temp+1,w
  4716  0A50  00AC               	movwf	??___flmul
  4717  0A51  01AD               	clrf	??___flmul+1
  4718  0A52  01AE               	clrf	??___flmul+2
  4719  0A53  01AF               	clrf	??___flmul+3
  4720  0A54  082C               	movf	??___flmul,w
  4721  0A55  07B8               	addwf	___flmul@prod,f
  4722  0A56  082D               	movf	??___flmul+1,w
  4723  0A57  1103               	clrz
  4724  0A58  1803               	skipnc
  4725  0A59  3E01               	addlw	1
  4726  0A5A  1D03               	btfss	3,2
  4727  0A5B  07B9               	addwf	___flmul@prod+1,f
  4728  0A5C  082E               	movf	??___flmul+2,w
  4729  0A5D  1103               	clrz
  4730  0A5E  1803               	skipnc
  4731  0A5F  3E01               	addlw	1
  4732  0A60  1D03               	btfss	3,2
  4733  0A61  07BA               	addwf	___flmul@prod+2,f
  4734  0A62  082F               	movf	??___flmul+3,w
  4735  0A63  1103               	clrz
  4736  0A64  1803               	skipnc
  4737  0A65  3E01               	addlw	1
  4738  0A66  1D03               	btfss	3,2
  4739  0A67  07BB               	addwf	___flmul@prod+3,f
  4740  0A68  0826               	movf	___flmul@b+2,w
  4741  0A69  00AC               	movwf	??___flmul
  4742  0A6A  082C               	movf	??___flmul,w
  4743  0A6B  00F0               	movwf	__Umul8_16@multiplicand
  4744  0A6C  0828               	movf	___flmul@a,w
  4745  0A6D  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4746  0A72  0871               	movf	?__Umul8_16+1,w
  4747  0A73  1283               	bcf	3,5	;RP0=0, select bank0
  4748  0A74  1303               	bcf	3,6	;RP1=0, select bank0
  4749  0A75  00BD               	movwf	___flmul@temp+1
  4750  0A76  0870               	movf	?__Umul8_16,w
  4751  0A77  00BC               	movwf	___flmul@temp
  4752  0A78  083C               	movf	___flmul@temp,w
  4753  0A79  00AC               	movwf	??___flmul
  4754  0A7A  01AD               	clrf	??___flmul+1
  4755  0A7B  01AE               	clrf	??___flmul+2
  4756  0A7C  01AF               	clrf	??___flmul+3
  4757  0A7D  082C               	movf	??___flmul,w
  4758  0A7E  07B2               	addwf	___flmul@grs,f
  4759  0A7F  082D               	movf	??___flmul+1,w
  4760  0A80  1103               	clrz
  4761  0A81  1803               	skipnc
  4762  0A82  3E01               	addlw	1
  4763  0A83  1D03               	btfss	3,2
  4764  0A84  07B3               	addwf	___flmul@grs+1,f
  4765  0A85  082E               	movf	??___flmul+2,w
  4766  0A86  1103               	clrz
  4767  0A87  1803               	skipnc
  4768  0A88  3E01               	addlw	1
  4769  0A89  1D03               	btfss	3,2
  4770  0A8A  07B4               	addwf	___flmul@grs+2,f
  4771  0A8B  082F               	movf	??___flmul+3,w
  4772  0A8C  1103               	clrz
  4773  0A8D  1803               	skipnc
  4774  0A8E  3E01               	addlw	1
  4775  0A8F  1D03               	btfss	3,2
  4776  0A90  07B5               	addwf	___flmul@grs+3,f
  4777  0A91  083D               	movf	___flmul@temp+1,w
  4778  0A92  00AC               	movwf	??___flmul
  4779  0A93  01AD               	clrf	??___flmul+1
  4780  0A94  01AE               	clrf	??___flmul+2
  4781  0A95  01AF               	clrf	??___flmul+3
  4782  0A96  082C               	movf	??___flmul,w
  4783  0A97  07B8               	addwf	___flmul@prod,f
  4784  0A98  082D               	movf	??___flmul+1,w
  4785  0A99  1103               	clrz
  4786  0A9A  1803               	skipnc
  4787  0A9B  3E01               	addlw	1
  4788  0A9C  1D03               	btfss	3,2
  4789  0A9D  07B9               	addwf	___flmul@prod+1,f
  4790  0A9E  082E               	movf	??___flmul+2,w
  4791  0A9F  1103               	clrz
  4792  0AA0  1803               	skipnc
  4793  0AA1  3E01               	addlw	1
  4794  0AA2  1D03               	btfss	3,2
  4795  0AA3  07BA               	addwf	___flmul@prod+2,f
  4796  0AA4  082F               	movf	??___flmul+3,w
  4797  0AA5  1103               	clrz
  4798  0AA6  1803               	skipnc
  4799  0AA7  3E01               	addlw	1
  4800  0AA8  1D03               	btfss	3,2
  4801  0AA9  07BB               	addwf	___flmul@prod+3,f
  4802  0AAA  3008               	movlw	8
  4803  0AAB  00AC               	movwf	??___flmul
  4804  0AAC                     u3705:	
  4805  0AAC  1003               	clrc
  4806  0AAD  0DB2               	rlf	___flmul@grs,f
  4807  0AAE  0DB3               	rlf	___flmul@grs+1,f
  4808  0AAF  0DB4               	rlf	___flmul@grs+2,f
  4809  0AB0  0DB5               	rlf	___flmul@grs+3,f
  4810  0AB1  0BAC               	decfsz	??___flmul,f
  4811  0AB2  2AAC               	goto	u3705
  4812  0AB3  0825               	movf	___flmul@b+1,w
  4813  0AB4  00AC               	movwf	??___flmul
  4814  0AB5  082C               	movf	??___flmul,w
  4815  0AB6  00F0               	movwf	__Umul8_16@multiplicand
  4816  0AB7  0828               	movf	___flmul@a,w
  4817  0AB8  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4818  0ABD  0871               	movf	?__Umul8_16+1,w
  4819  0ABE  1283               	bcf	3,5	;RP0=0, select bank0
  4820  0ABF  1303               	bcf	3,6	;RP1=0, select bank0
  4821  0AC0  00BD               	movwf	___flmul@temp+1
  4822  0AC1  0870               	movf	?__Umul8_16,w
  4823  0AC2  00BC               	movwf	___flmul@temp
  4824  0AC3  083C               	movf	___flmul@temp,w
  4825  0AC4  00AC               	movwf	??___flmul
  4826  0AC5  083D               	movf	___flmul@temp+1,w
  4827  0AC6  00AD               	movwf	??___flmul+1
  4828  0AC7  01AE               	clrf	??___flmul+2
  4829  0AC8  01AF               	clrf	??___flmul+3
  4830  0AC9  082C               	movf	??___flmul,w
  4831  0ACA  07B2               	addwf	___flmul@grs,f
  4832  0ACB  082D               	movf	??___flmul+1,w
  4833  0ACC  1103               	clrz
  4834  0ACD  1803               	skipnc
  4835  0ACE  3E01               	addlw	1
  4836  0ACF  1D03               	btfss	3,2
  4837  0AD0  07B3               	addwf	___flmul@grs+1,f
  4838  0AD1  082E               	movf	??___flmul+2,w
  4839  0AD2  1103               	clrz
  4840  0AD3  1803               	skipnc
  4841  0AD4  3E01               	addlw	1
  4842  0AD5  1D03               	btfss	3,2
  4843  0AD6  07B4               	addwf	___flmul@grs+2,f
  4844  0AD7  082F               	movf	??___flmul+3,w
  4845  0AD8  1103               	clrz
  4846  0AD9  1803               	skipnc
  4847  0ADA  3E01               	addlw	1
  4848  0ADB  1D03               	btfss	3,2
  4849  0ADC  07B5               	addwf	___flmul@grs+3,f
  4850  0ADD  0824               	movf	___flmul@b,w
  4851  0ADE  00AC               	movwf	??___flmul
  4852  0ADF  082C               	movf	??___flmul,w
  4853  0AE0  00F0               	movwf	__Umul8_16@multiplicand
  4854  0AE1  0829               	movf	___flmul@a+1,w
  4855  0AE2  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4856  0AE7  0871               	movf	?__Umul8_16+1,w
  4857  0AE8  1283               	bcf	3,5	;RP0=0, select bank0
  4858  0AE9  1303               	bcf	3,6	;RP1=0, select bank0
  4859  0AEA  00BD               	movwf	___flmul@temp+1
  4860  0AEB  0870               	movf	?__Umul8_16,w
  4861  0AEC  00BC               	movwf	___flmul@temp
  4862  0AED  083C               	movf	___flmul@temp,w
  4863  0AEE  00AC               	movwf	??___flmul
  4864  0AEF  083D               	movf	___flmul@temp+1,w
  4865  0AF0  00AD               	movwf	??___flmul+1
  4866  0AF1  01AE               	clrf	??___flmul+2
  4867  0AF2  01AF               	clrf	??___flmul+3
  4868  0AF3  082C               	movf	??___flmul,w
  4869  0AF4  07B2               	addwf	___flmul@grs,f
  4870  0AF5  082D               	movf	??___flmul+1,w
  4871  0AF6  1103               	clrz
  4872  0AF7  1803               	skipnc
  4873  0AF8  3E01               	addlw	1
  4874  0AF9  1D03               	btfss	3,2
  4875  0AFA  07B3               	addwf	___flmul@grs+1,f
  4876  0AFB  082E               	movf	??___flmul+2,w
  4877  0AFC  1103               	clrz
  4878  0AFD  1803               	skipnc
  4879  0AFE  3E01               	addlw	1
  4880  0AFF  1D03               	btfss	3,2
  4881  0B00  07B4               	addwf	___flmul@grs+2,f
  4882  0B01  082F               	movf	??___flmul+3,w
  4883  0B02  1103               	clrz
  4884  0B03  1803               	skipnc
  4885  0B04  3E01               	addlw	1
  4886  0B05  1D03               	btfss	3,2
  4887  0B06  07B5               	addwf	___flmul@grs+3,f
  4888  0B07  3008               	movlw	8
  4889  0B08  00AC               	movwf	??___flmul
  4890  0B09                     u3735:	
  4891  0B09  1003               	clrc
  4892  0B0A  0DB2               	rlf	___flmul@grs,f
  4893  0B0B  0DB3               	rlf	___flmul@grs+1,f
  4894  0B0C  0DB4               	rlf	___flmul@grs+2,f
  4895  0B0D  0DB5               	rlf	___flmul@grs+3,f
  4896  0B0E  0BAC               	decfsz	??___flmul,f
  4897  0B0F  2B09               	goto	u3735
  4898  0B10  0824               	movf	___flmul@b,w
  4899  0B11  00AC               	movwf	??___flmul
  4900  0B12  082C               	movf	??___flmul,w
  4901  0B13  00F0               	movwf	__Umul8_16@multiplicand
  4902  0B14  0828               	movf	___flmul@a,w
  4903  0B15  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4904  0B1A  0871               	movf	?__Umul8_16+1,w
  4905  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  4907  0B1D  00BD               	movwf	___flmul@temp+1
  4908  0B1E  0870               	movf	?__Umul8_16,w
  4909  0B1F  00BC               	movwf	___flmul@temp
  4910  0B20  083C               	movf	___flmul@temp,w
  4911  0B21  00AC               	movwf	??___flmul
  4912  0B22  083D               	movf	___flmul@temp+1,w
  4913  0B23  00AD               	movwf	??___flmul+1
  4914  0B24  01AE               	clrf	??___flmul+2
  4915  0B25  01AF               	clrf	??___flmul+3
  4916  0B26  082C               	movf	??___flmul,w
  4917  0B27  07B2               	addwf	___flmul@grs,f
  4918  0B28  082D               	movf	??___flmul+1,w
  4919  0B29  1103               	clrz
  4920  0B2A  1803               	skipnc
  4921  0B2B  3E01               	addlw	1
  4922  0B2C  1D03               	btfss	3,2
  4923  0B2D  07B3               	addwf	___flmul@grs+1,f
  4924  0B2E  082E               	movf	??___flmul+2,w
  4925  0B2F  1103               	clrz
  4926  0B30  1803               	skipnc
  4927  0B31  3E01               	addlw	1
  4928  0B32  1D03               	btfss	3,2
  4929  0B33  07B4               	addwf	___flmul@grs+2,f
  4930  0B34  082F               	movf	??___flmul+3,w
  4931  0B35  1103               	clrz
  4932  0B36  1803               	skipnc
  4933  0B37  3E01               	addlw	1
  4934  0B38  1D03               	btfss	3,2
  4935  0B39  07B5               	addwf	___flmul@grs+3,f
  4936  0B3A  0825               	movf	___flmul@b+1,w
  4937  0B3B  00AC               	movwf	??___flmul
  4938  0B3C  082C               	movf	??___flmul,w
  4939  0B3D  00F0               	movwf	__Umul8_16@multiplicand
  4940  0B3E  082A               	movf	___flmul@a+2,w
  4941  0B3F  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4942  0B44  0871               	movf	?__Umul8_16+1,w
  4943  0B45  1283               	bcf	3,5	;RP0=0, select bank0
  4944  0B46  1303               	bcf	3,6	;RP1=0, select bank0
  4945  0B47  00BD               	movwf	___flmul@temp+1
  4946  0B48  0870               	movf	?__Umul8_16,w
  4947  0B49  00BC               	movwf	___flmul@temp
  4948  0B4A  083C               	movf	___flmul@temp,w
  4949  0B4B  00AC               	movwf	??___flmul
  4950  0B4C  083D               	movf	___flmul@temp+1,w
  4951  0B4D  00AD               	movwf	??___flmul+1
  4952  0B4E  01AE               	clrf	??___flmul+2
  4953  0B4F  01AF               	clrf	??___flmul+3
  4954  0B50  082C               	movf	??___flmul,w
  4955  0B51  07B8               	addwf	___flmul@prod,f
  4956  0B52  082D               	movf	??___flmul+1,w
  4957  0B53  1103               	clrz
  4958  0B54  1803               	skipnc
  4959  0B55  3E01               	addlw	1
  4960  0B56  1D03               	btfss	3,2
  4961  0B57  07B9               	addwf	___flmul@prod+1,f
  4962  0B58  082E               	movf	??___flmul+2,w
  4963  0B59  1103               	clrz
  4964  0B5A  1803               	skipnc
  4965  0B5B  3E01               	addlw	1
  4966  0B5C  1D03               	btfss	3,2
  4967  0B5D  07BA               	addwf	___flmul@prod+2,f
  4968  0B5E  082F               	movf	??___flmul+3,w
  4969  0B5F  1103               	clrz
  4970  0B60  1803               	skipnc
  4971  0B61  3E01               	addlw	1
  4972  0B62  1D03               	btfss	3,2
  4973  0B63  07BB               	addwf	___flmul@prod+3,f
  4974  0B64  0826               	movf	___flmul@b+2,w
  4975  0B65  00AC               	movwf	??___flmul
  4976  0B66  082C               	movf	??___flmul,w
  4977  0B67  00F0               	movwf	__Umul8_16@multiplicand
  4978  0B68  0829               	movf	___flmul@a+1,w
  4979  0B69  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  4980  0B6E  0871               	movf	?__Umul8_16+1,w
  4981  0B6F  1283               	bcf	3,5	;RP0=0, select bank0
  4982  0B70  1303               	bcf	3,6	;RP1=0, select bank0
  4983  0B71  00BD               	movwf	___flmul@temp+1
  4984  0B72  0870               	movf	?__Umul8_16,w
  4985  0B73  00BC               	movwf	___flmul@temp
  4986  0B74  083C               	movf	___flmul@temp,w
  4987  0B75  00AC               	movwf	??___flmul
  4988  0B76  083D               	movf	___flmul@temp+1,w
  4989  0B77  00AD               	movwf	??___flmul+1
  4990  0B78  01AE               	clrf	??___flmul+2
  4991  0B79  01AF               	clrf	??___flmul+3
  4992  0B7A  082C               	movf	??___flmul,w
  4993  0B7B  07B8               	addwf	___flmul@prod,f
  4994  0B7C  082D               	movf	??___flmul+1,w
  4995  0B7D  1103               	clrz
  4996  0B7E  1803               	skipnc
  4997  0B7F  3E01               	addlw	1
  4998  0B80  1D03               	btfss	3,2
  4999  0B81  07B9               	addwf	___flmul@prod+1,f
  5000  0B82  082E               	movf	??___flmul+2,w
  5001  0B83  1103               	clrz
  5002  0B84  1803               	skipnc
  5003  0B85  3E01               	addlw	1
  5004  0B86  1D03               	btfss	3,2
  5005  0B87  07BA               	addwf	___flmul@prod+2,f
  5006  0B88  082F               	movf	??___flmul+3,w
  5007  0B89  1103               	clrz
  5008  0B8A  1803               	skipnc
  5009  0B8B  3E01               	addlw	1
  5010  0B8C  1D03               	btfss	3,2
  5011  0B8D  07BB               	addwf	___flmul@prod+3,f
  5012  0B8E  0826               	movf	___flmul@b+2,w
  5013  0B8F  00AC               	movwf	??___flmul
  5014  0B90  082C               	movf	??___flmul,w
  5015  0B91  00F0               	movwf	__Umul8_16@multiplicand
  5016  0B92  082A               	movf	___flmul@a+2,w
  5017  0B93  160A  158A  276F  120A  158A  	fcall	__Umul8_16
  5018  0B98  0871               	movf	?__Umul8_16+1,w
  5019  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  5020  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  5021  0B9B  00BD               	movwf	___flmul@temp+1
  5022  0B9C  0870               	movf	?__Umul8_16,w
  5023  0B9D  00BC               	movwf	___flmul@temp
  5024  0B9E  083C               	movf	___flmul@temp,w
  5025  0B9F  00AC               	movwf	??___flmul
  5026  0BA0  083D               	movf	___flmul@temp+1,w
  5027  0BA1  00AD               	movwf	??___flmul+1
  5028  0BA2  01AE               	clrf	??___flmul+2
  5029  0BA3  01AF               	clrf	??___flmul+3
  5030  0BA4  3008               	movlw	8
  5031  0BA5                     u3775:	
  5032  0BA5  1003               	clrc
  5033  0BA6  0DAC               	rlf	??___flmul,f
  5034  0BA7  0DAD               	rlf	??___flmul+1,f
  5035  0BA8  0DAE               	rlf	??___flmul+2,f
  5036  0BA9  0DAF               	rlf	??___flmul+3,f
  5037  0BAA  3EFF               	addlw	-1
  5038  0BAB  1D03               	skipz
  5039  0BAC  2BA5               	goto	u3775
  5040  0BAD  082C               	movf	??___flmul,w
  5041  0BAE  07B8               	addwf	___flmul@prod,f
  5042  0BAF  082D               	movf	??___flmul+1,w
  5043  0BB0  1103               	clrz
  5044  0BB1  1803               	skipnc
  5045  0BB2  3E01               	addlw	1
  5046  0BB3  1D03               	btfss	3,2
  5047  0BB4  07B9               	addwf	___flmul@prod+1,f
  5048  0BB5  082E               	movf	??___flmul+2,w
  5049  0BB6  1103               	clrz
  5050  0BB7  1803               	skipnc
  5051  0BB8  3E01               	addlw	1
  5052  0BB9  1D03               	btfss	3,2
  5053  0BBA  07BA               	addwf	___flmul@prod+2,f
  5054  0BBB  082F               	movf	??___flmul+3,w
  5055  0BBC  1103               	clrz
  5056  0BBD  1803               	skipnc
  5057  0BBE  3E01               	addlw	1
  5058  0BBF  1D03               	btfss	3,2
  5059  0BC0  07BB               	addwf	___flmul@prod+3,f
  5060  0BC1  0832               	movf	___flmul@grs,w
  5061  0BC2  00AC               	movwf	??___flmul
  5062  0BC3  0833               	movf	___flmul@grs+1,w
  5063  0BC4  00AD               	movwf	??___flmul+1
  5064  0BC5  0834               	movf	___flmul@grs+2,w
  5065  0BC6  00AE               	movwf	??___flmul+2
  5066  0BC7  0835               	movf	___flmul@grs+3,w
  5067  0BC8  00AF               	movwf	??___flmul+3
  5068  0BC9  3018               	movlw	24
  5069  0BCA                     u3795:	
  5070  0BCA  1003               	clrc
  5071  0BCB  0CAF               	rrf	??___flmul+3,f
  5072  0BCC  0CAE               	rrf	??___flmul+2,f
  5073  0BCD  0CAD               	rrf	??___flmul+1,f
  5074  0BCE  0CAC               	rrf	??___flmul,f
  5075  0BCF  3EFF               	addlw	-1
  5076  0BD0  1D03               	skipz
  5077  0BD1  2BCA               	goto	u3795
  5078  0BD2  082C               	movf	??___flmul,w
  5079  0BD3  07B8               	addwf	___flmul@prod,f
  5080  0BD4  082D               	movf	??___flmul+1,w
  5081  0BD5  1103               	clrz
  5082  0BD6  1803               	skipnc
  5083  0BD7  3E01               	addlw	1
  5084  0BD8  1D03               	btfss	3,2
  5085  0BD9  07B9               	addwf	___flmul@prod+1,f
  5086  0BDA  082E               	movf	??___flmul+2,w
  5087  0BDB  1103               	clrz
  5088  0BDC  1803               	skipnc
  5089  0BDD  3E01               	addlw	1
  5090  0BDE  1D03               	btfss	3,2
  5091  0BDF  07BA               	addwf	___flmul@prod+2,f
  5092  0BE0  082F               	movf	??___flmul+3,w
  5093  0BE1  1103               	clrz
  5094  0BE2  1803               	skipnc
  5095  0BE3  3E01               	addlw	1
  5096  0BE4  1D03               	btfss	3,2
  5097  0BE5  07BB               	addwf	___flmul@prod+3,f
  5098  0BE6  3008               	movlw	8
  5099  0BE7  00AC               	movwf	??___flmul
  5100  0BE8                     u3815:	
  5101  0BE8  1003               	clrc
  5102  0BE9  0DB2               	rlf	___flmul@grs,f
  5103  0BEA  0DB3               	rlf	___flmul@grs+1,f
  5104  0BEB  0DB4               	rlf	___flmul@grs+2,f
  5105  0BEC  0DB5               	rlf	___flmul@grs+3,f
  5106  0BED  0BAC               	decfsz	??___flmul,f
  5107  0BEE  2BE8               	goto	u3815
  5108  0BEF  0837               	movf	___flmul@bexp,w
  5109  0BF0  0736               	addwf	___flmul@aexp,w
  5110  0BF1  00AC               	movwf	??___flmul
  5111  0BF2  01AD               	clrf	??___flmul+1
  5112  0BF3  0DAD               	rlf	??___flmul+1,f
  5113  0BF4  082C               	movf	??___flmul,w
  5114  0BF5  3E82               	addlw	130
  5115  0BF6  00BC               	movwf	___flmul@temp
  5116  0BF7  082D               	movf	??___flmul+1,w
  5117  0BF8  1803               	skipnc
  5118  0BF9  3E01               	addlw	1
  5119  0BFA  3EFF               	addlw	255
  5120  0BFB  00BD               	movwf	___flmul@temp+1
  5121  0BFC                     l2497:	
  5122  0BFC  1BBA               	btfsc	___flmul@prod+2,7
  5123  0BFD  2C19               	goto	l2499
  5124  0BFE  3001               	movlw	1
  5125  0BFF  00AC               	movwf	??___flmul
  5126  0C00                     u3825:	
  5127  0C00  1003               	clrc
  5128  0C01  0DB8               	rlf	___flmul@prod,f
  5129  0C02  0DB9               	rlf	___flmul@prod+1,f
  5130  0C03  0DBA               	rlf	___flmul@prod+2,f
  5131  0C04  0DBB               	rlf	___flmul@prod+3,f
  5132  0C05  0BAC               	decfsz	??___flmul,f
  5133  0C06  2C00               	goto	u3825
  5134  0C07  1BB5               	btfsc	___flmul@grs+3,7
  5135  0C08  1438               	bsf	___flmul@prod,0
  5136  0C09  3001               	movlw	1
  5137  0C0A  00AC               	movwf	??___flmul
  5138  0C0B                     u3845:	
  5139  0C0B  1003               	clrc
  5140  0C0C  0DB2               	rlf	___flmul@grs,f
  5141  0C0D  0DB3               	rlf	___flmul@grs+1,f
  5142  0C0E  0DB4               	rlf	___flmul@grs+2,f
  5143  0C0F  0DB5               	rlf	___flmul@grs+3,f
  5144  0C10  0BAC               	decfsz	??___flmul,f
  5145  0C11  2C0B               	goto	u3845
  5146  0C12  30FF               	movlw	255
  5147  0C13  07BC               	addwf	___flmul@temp,f
  5148  0C14  1803               	skipnc
  5149  0C15  0ABD               	incf	___flmul@temp+1,f
  5150  0C16  30FF               	movlw	255
  5151  0C17  07BD               	addwf	___flmul@temp+1,f
  5152  0C18  2BFC               	goto	l2497
  5153  0C19                     l2499:	
  5154  0C19  01B6               	clrf	___flmul@aexp
  5155  0C1A  1FB5               	btfss	___flmul@grs+3,7
  5156  0C1B  2C32               	goto	l2509
  5157  0C1C  30FF               	movlw	255
  5158  0C1D  0532               	andwf	___flmul@grs,w
  5159  0C1E  00AC               	movwf	??___flmul
  5160  0C1F  30FF               	movlw	255
  5161  0C20  0533               	andwf	___flmul@grs+1,w
  5162  0C21  00AD               	movwf	??___flmul+1
  5163  0C22  30FF               	movlw	255
  5164  0C23  0534               	andwf	___flmul@grs+2,w
  5165  0C24  00AE               	movwf	??___flmul+2
  5166  0C25  307F               	movlw	127
  5167  0C26  0535               	andwf	___flmul@grs+3,w
  5168  0C27  00AF               	movwf	??___flmul+3
  5169  0C28  082F               	movf	??___flmul+3,w
  5170  0C29  042E               	iorwf	??___flmul+2,w
  5171  0C2A  042D               	iorwf	??___flmul+1,w
  5172  0C2B  042C               	iorwf	??___flmul,w
  5173  0C2C  1903               	skipnz
  5174  0C2D  1838               	btfsc	___flmul@prod,0
  5175  0C2E  2C30               	goto	l2505
  5176  0C2F  2C32               	goto	l2509
  5177  0C30                     l2505:	
  5178  0C30  01B6               	clrf	___flmul@aexp
  5179  0C31  0AB6               	incf	___flmul@aexp,f
  5180  0C32                     l2509:	
  5181  0C32  0836               	movf	___flmul@aexp,w
  5182  0C33  1903               	btfsc	3,2
  5183  0C34  2C64               	goto	l2519
  5184  0C35  3001               	movlw	1
  5185  0C36  07B8               	addwf	___flmul@prod,f
  5186  0C37  3000               	movlw	0
  5187  0C38  1803               	skipnc
  5188  0C39  3001               	movlw	1
  5189  0C3A  07B9               	addwf	___flmul@prod+1,f
  5190  0C3B  3000               	movlw	0
  5191  0C3C  1803               	skipnc
  5192  0C3D  3001               	movlw	1
  5193  0C3E  07BA               	addwf	___flmul@prod+2,f
  5194  0C3F  3000               	movlw	0
  5195  0C40  1803               	skipnc
  5196  0C41  3001               	movlw	1
  5197  0C42  07BB               	addwf	___flmul@prod+3,f
  5198  0C43  1C3B               	btfss	___flmul@prod+3,0
  5199  0C44  2C64               	goto	l2519
  5200  0C45  0838               	movf	___flmul@prod,w
  5201  0C46  00AC               	movwf	??___flmul
  5202  0C47  0839               	movf	___flmul@prod+1,w
  5203  0C48  00AD               	movwf	??___flmul+1
  5204  0C49  083A               	movf	___flmul@prod+2,w
  5205  0C4A  00AE               	movwf	??___flmul+2
  5206  0C4B  083B               	movf	___flmul@prod+3,w
  5207  0C4C  00AF               	movwf	??___flmul+3
  5208  0C4D  3001               	movlw	1
  5209  0C4E  00B0               	movwf	??___flmul+4
  5210  0C4F                     u3915:	
  5211  0C4F  0D2F               	rlf	??___flmul+3,w
  5212  0C50  0CAF               	rrf	??___flmul+3,f
  5213  0C51  0CAE               	rrf	??___flmul+2,f
  5214  0C52  0CAD               	rrf	??___flmul+1,f
  5215  0C53  0CAC               	rrf	??___flmul,f
  5216  0C54  0BB0               	decfsz	??___flmul+4,f
  5217  0C55  2C4F               	goto	u3915
  5218  0C56  082F               	movf	??___flmul+3,w
  5219  0C57  00BB               	movwf	___flmul@prod+3
  5220  0C58  082E               	movf	??___flmul+2,w
  5221  0C59  00BA               	movwf	___flmul@prod+2
  5222  0C5A  082D               	movf	??___flmul+1,w
  5223  0C5B  00B9               	movwf	___flmul@prod+1
  5224  0C5C  082C               	movf	??___flmul,w
  5225  0C5D  00B8               	movwf	___flmul@prod
  5226  0C5E  3001               	movlw	1
  5227  0C5F  07BC               	addwf	___flmul@temp,f
  5228  0C60  1803               	skipnc
  5229  0C61  0ABD               	incf	___flmul@temp+1,f
  5230  0C62  3000               	movlw	0
  5231  0C63  07BD               	addwf	___flmul@temp+1,f
  5232  0C64                     l2519:	
  5233  0C64  083D               	movf	___flmul@temp+1,w
  5234  0C65  3A80               	xorlw	128
  5235  0C66  00FF               	movwf	127
  5236  0C67  3080               	movlw	128
  5237  0C68  027F               	subwf	127,w
  5238  0C69  1D03               	skipz
  5239  0C6A  2C6D               	goto	u3925
  5240  0C6B  30FF               	movlw	255
  5241  0C6C  023C               	subwf	___flmul@temp,w
  5242  0C6D                     u3925:	
  5243  0C6D  1C03               	skipc
  5244  0C6E  2C7A               	goto	l2523
  5245  0C6F  307F               	movlw	127
  5246  0C70  1283               	bcf	3,5	;RP0=0, select bank0
  5247  0C71  1303               	bcf	3,6	;RP1=0, select bank0
  5248  0C72  00BB               	movwf	___flmul@prod+3
  5249  0C73  3080               	movlw	128
  5250  0C74  00BA               	movwf	___flmul@prod+2
  5251  0C75  3000               	movlw	0
  5252  0C76  00B9               	movwf	___flmul@prod+1
  5253  0C77  3000               	movlw	0
  5254  0C78  00B8               	movwf	___flmul@prod
  5255  0C79  2CAA               	goto	l683
  5256  0C7A                     l2523:	
  5257  0C7A  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0C7B  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0C7C  083D               	movf	___flmul@temp+1,w
  5260  0C7D  3A80               	xorlw	128
  5261  0C7E  00FF               	movwf	127
  5262  0C7F  3080               	movlw	128
  5263  0C80  027F               	subwf	127,w
  5264  0C81  1D03               	skipz
  5265  0C82  2C85               	goto	u3935
  5266  0C83  3001               	movlw	1
  5267  0C84  023C               	subwf	___flmul@temp,w
  5268  0C85                     u3935:	
  5269  0C85  1803               	skipnc
  5270  0C86  2C93               	goto	l2529
  5271  0C87  3000               	movlw	0
  5272  0C88  1283               	bcf	3,5	;RP0=0, select bank0
  5273  0C89  1303               	bcf	3,6	;RP1=0, select bank0
  5274  0C8A  00BB               	movwf	___flmul@prod+3
  5275  0C8B  3000               	movlw	0
  5276  0C8C  00BA               	movwf	___flmul@prod+2
  5277  0C8D  3000               	movlw	0
  5278  0C8E  00B9               	movwf	___flmul@prod+1
  5279  0C8F  3000               	movlw	0
  5280  0C90  00B8               	movwf	___flmul@prod
  5281  0C91  01B1               	clrf	___flmul@sign
  5282  0C92  2CAA               	goto	l683
  5283  0C93                     l2529:	
  5284  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5285  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5286  0C95  083C               	movf	___flmul@temp,w
  5287  0C96  00AC               	movwf	??___flmul
  5288  0C97  082C               	movf	??___flmul,w
  5289  0C98  00B7               	movwf	___flmul@bexp
  5290  0C99  30FF               	movlw	255
  5291  0C9A  05B8               	andwf	___flmul@prod,f
  5292  0C9B  30FF               	movlw	255
  5293  0C9C  05B9               	andwf	___flmul@prod+1,f
  5294  0C9D  307F               	movlw	127
  5295  0C9E  05BA               	andwf	___flmul@prod+2,f
  5296  0C9F  3000               	movlw	0
  5297  0CA0  05BB               	andwf	___flmul@prod+3,f
  5298  0CA1  1837               	btfsc	___flmul@bexp,0
  5299  0CA2  17BA               	bsf	___flmul@prod+2,7
  5300  0CA3  0837               	movf	___flmul@bexp,w
  5301  0CA4  00AC               	movwf	??___flmul
  5302  0CA5  1003               	clrc
  5303  0CA6  0C2C               	rrf	??___flmul,w
  5304  0CA7  00AD               	movwf	??___flmul+1
  5305  0CA8  082D               	movf	??___flmul+1,w
  5306  0CA9  00BB               	movwf	___flmul@prod+3
  5307  0CAA                     l683:	
  5308  0CAA  0831               	movf	___flmul@sign,w
  5309  0CAB  00AC               	movwf	??___flmul
  5310  0CAC  082C               	movf	??___flmul,w
  5311  0CAD  04BB               	iorwf	___flmul@prod+3,f
  5312  0CAE  083B               	movf	___flmul@prod+3,w
  5313  0CAF  00A7               	movwf	?___flmul+3
  5314  0CB0  083A               	movf	___flmul@prod+2,w
  5315  0CB1  00A6               	movwf	?___flmul+2
  5316  0CB2  0839               	movf	___flmul@prod+1,w
  5317  0CB3  00A5               	movwf	?___flmul+1
  5318  0CB4  0838               	movf	___flmul@prod,w
  5319  0CB5  00A4               	movwf	?___flmul
  5320  0CB6  0008               	return
  5321  0CB7                     __end_of___flmul:	
  5322                           
  5323                           	psect	text10
  5324  1F6F                     __ptext10:	
  5325 ;; *************** function __Umul8_16 *****************
  5326 ;; Defined at:
  5327 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8_16.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;  multiplier      1    wreg     unsigned char 
  5330 ;;  multiplicand    1    0[COMMON] unsigned char 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  multiplier      1    8[COMMON] unsigned char 
  5333 ;;  word_mpld       2    6[COMMON] unsigned int 
  5334 ;;  product         2    4[COMMON] unsigned int 
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  2    0[COMMON] unsigned int 
  5337 ;; Registers used:
  5338 ;;		wreg, status,2, status,0
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5344 ;;      Params:         2       0       0       0       0
  5345 ;;      Locals:         5       0       0       0       0
  5346 ;;      Temps:          2       0       0       0       0
  5347 ;;      Totals:         9       0       0       0       0
  5348 ;;Total ram usage:        9 bytes
  5349 ;; Hardware stack levels used:    1
  5350 ;; This function calls:
  5351 ;;		Nothing
  5352 ;; This function is called by:
  5353 ;;		___flmul
  5354 ;; This function uses a non-reentrant model
  5355 ;;
  5356                           
  5357                           
  5358                           ;psect for function __Umul8_16
  5359  1F6F                     __Umul8_16:	
  5360                           
  5361                           ;incstack = 0
  5362                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5363                           ;__Umul8_16@multiplier stored from wreg
  5364  1F6F  00F8               	movwf	__Umul8_16@multiplier
  5365  1F70  01F4               	clrf	__Umul8_16@product
  5366  1F71  01F5               	clrf	__Umul8_16@product+1
  5367  1F72  0870               	movf	__Umul8_16@multiplicand,w
  5368  1F73  00F2               	movwf	??__Umul8_16
  5369  1F74  01F3               	clrf	??__Umul8_16+1
  5370  1F75  0872               	movf	??__Umul8_16,w
  5371  1F76  00F6               	movwf	__Umul8_16@word_mpld
  5372  1F77  0873               	movf	??__Umul8_16+1,w
  5373  1F78  00F7               	movwf	__Umul8_16@word_mpld+1
  5374  1F79                     l2057:	
  5375  1F79  1C78               	btfss	__Umul8_16@multiplier,0
  5376  1F7A  2F81               	goto	l737
  5377  1F7B  0876               	movf	__Umul8_16@word_mpld,w
  5378  1F7C  07F4               	addwf	__Umul8_16@product,f
  5379  1F7D  1803               	skipnc
  5380  1F7E  0AF5               	incf	__Umul8_16@product+1,f
  5381  1F7F  0877               	movf	__Umul8_16@word_mpld+1,w
  5382  1F80  07F5               	addwf	__Umul8_16@product+1,f
  5383  1F81                     l737:	
  5384  1F81  3001               	movlw	1
  5385  1F82                     u2745:	
  5386  1F82  1003               	clrc
  5387  1F83  0DF6               	rlf	__Umul8_16@word_mpld,f
  5388  1F84  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5389  1F85  3EFF               	addlw	-1
  5390  1F86  1D03               	skipz
  5391  1F87  2F82               	goto	u2745
  5392  1F88  1003               	clrc
  5393  1F89  0CF8               	rrf	__Umul8_16@multiplier,f
  5394  1F8A  0878               	movf	__Umul8_16@multiplier,w
  5395  1F8B  1D03               	btfss	3,2
  5396  1F8C  2F79               	goto	l2057
  5397  1F8D  0875               	movf	__Umul8_16@product+1,w
  5398  1F8E  00F1               	movwf	?__Umul8_16+1
  5399  1F8F  0874               	movf	__Umul8_16@product,w
  5400  1F90  00F0               	movwf	?__Umul8_16
  5401  1F91  0008               	return
  5402  1F92                     __end_of__Umul8_16:	
  5403                           
  5404                           	psect	text11
  5405  147E                     __ptext11:	
  5406 ;; *************** function __tdiv_to_l_ *****************
  5407 ;; Defined at:
  5408 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\ftdivl.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;  f1              4    0[COMMON] float 
  5411 ;;  f2              4    4[COMMON] float 
  5412 ;; Auto vars:     Size  Location     Type
  5413 ;;  quot            4    0[BANK0 ] unsigned long 
  5414 ;;  exp1            1    5[BANK0 ] unsigned char 
  5415 ;;  cntr            1    4[BANK0 ] unsigned char 
  5416 ;; Return value:  Size  Location     Type
  5417 ;;                  4    0[COMMON] unsigned long 
  5418 ;; Registers used:
  5419 ;;		wreg, status,2, status,0
  5420 ;; Tracked objects:
  5421 ;;		On entry : 0/0
  5422 ;;		On exit  : 0/0
  5423 ;;		Unchanged: 0/0
  5424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5425 ;;      Params:         8       0       0       0       0
  5426 ;;      Locals:         0       6       0       0       0
  5427 ;;      Temps:          4       0       0       0       0
  5428 ;;      Totals:        12       6       0       0       0
  5429 ;;Total ram usage:       18 bytes
  5430 ;; Hardware stack levels used:    1
  5431 ;; This function calls:
  5432 ;;		Nothing
  5433 ;; This function is called by:
  5434 ;;		_sprintf
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           
  5439                           ;psect for function __tdiv_to_l_
  5440  147E                     __tdiv_to_l_:	
  5441                           
  5442                           ;incstack = 0
  5443                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5444  147E  0870               	movf	__tdiv_to_l_@f1,w
  5445  147F  00F8               	movwf	??__tdiv_to_l_
  5446  1480  0871               	movf	__tdiv_to_l_@f1+1,w
  5447  1481  00F9               	movwf	??__tdiv_to_l_+1
  5448  1482  0872               	movf	__tdiv_to_l_@f1+2,w
  5449  1483  00FA               	movwf	??__tdiv_to_l_+2
  5450  1484  1003               	clrc
  5451  1485  0D79               	rlf	??__tdiv_to_l_+1,w
  5452  1486  0D7A               	rlf	??__tdiv_to_l_+2,w
  5453  1487  00FB               	movwf	??__tdiv_to_l_+3
  5454  1488  087B               	movf	??__tdiv_to_l_+3,w
  5455  1489  1283               	bcf	3,5	;RP0=0, select bank0
  5456  148A  1303               	bcf	3,6	;RP1=0, select bank0
  5457  148B  00A5               	movwf	__tdiv_to_l_@exp1
  5458  148C  0825               	movf	__tdiv_to_l_@exp1,w
  5459  148D  1D03               	btfss	3,2
  5460  148E  2C98               	goto	l2659
  5461  148F                     l2655:	
  5462  148F  3000               	movlw	0
  5463  1490  00F3               	movwf	?__tdiv_to_l_+3
  5464  1491  3000               	movlw	0
  5465  1492  00F2               	movwf	?__tdiv_to_l_+2
  5466  1493  3000               	movlw	0
  5467  1494  00F1               	movwf	?__tdiv_to_l_+1
  5468  1495  3000               	movlw	0
  5469  1496  00F0               	movwf	?__tdiv_to_l_
  5470  1497  0008               	return
  5471  1498                     l2659:	
  5472  1498  0874               	movf	__tdiv_to_l_@f2,w
  5473  1499  00F8               	movwf	??__tdiv_to_l_
  5474  149A  0875               	movf	__tdiv_to_l_@f2+1,w
  5475  149B  00F9               	movwf	??__tdiv_to_l_+1
  5476  149C  0876               	movf	__tdiv_to_l_@f2+2,w
  5477  149D  00FA               	movwf	??__tdiv_to_l_+2
  5478  149E  1003               	clrc
  5479  149F  0D79               	rlf	??__tdiv_to_l_+1,w
  5480  14A0  0D7A               	rlf	??__tdiv_to_l_+2,w
  5481  14A1  00FB               	movwf	??__tdiv_to_l_+3
  5482  14A2  087B               	movf	??__tdiv_to_l_+3,w
  5483  14A3  00A4               	movwf	__tdiv_to_l_@cntr
  5484  14A4  0824               	movf	__tdiv_to_l_@cntr,w
  5485  14A5  1903               	btfsc	3,2
  5486  14A6  2C8F               	goto	l2655
  5487  14A7  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5488  14A8  30FF               	movlw	255
  5489  14A9  05F0               	andwf	__tdiv_to_l_@f1,f
  5490  14AA  30FF               	movlw	255
  5491  14AB  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5492  14AC  3000               	movlw	0
  5493  14AD  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5494  14AE  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5495  14AF  30FF               	movlw	255
  5496  14B0  05F4               	andwf	__tdiv_to_l_@f2,f
  5497  14B1  30FF               	movlw	255
  5498  14B2  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5499  14B3  3000               	movlw	0
  5500  14B4  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5501  14B5  3000               	movlw	0
  5502  14B6  00A3               	movwf	__tdiv_to_l_@quot+3
  5503  14B7  3000               	movlw	0
  5504  14B8  00A2               	movwf	__tdiv_to_l_@quot+2
  5505  14B9  3000               	movlw	0
  5506  14BA  00A1               	movwf	__tdiv_to_l_@quot+1
  5507  14BB  3000               	movlw	0
  5508  14BC  00A0               	movwf	__tdiv_to_l_@quot
  5509  14BD  307F               	movlw	127
  5510  14BE  02A5               	subwf	__tdiv_to_l_@exp1,f
  5511  14BF  3098               	movlw	152
  5512  14C0  0724               	addwf	__tdiv_to_l_@cntr,w
  5513  14C1  00F8               	movwf	??__tdiv_to_l_
  5514  14C2  0878               	movf	??__tdiv_to_l_,w
  5515  14C3  02A5               	subwf	__tdiv_to_l_@exp1,f
  5516  14C4  3018               	movlw	24
  5517  14C5  00F8               	movwf	??__tdiv_to_l_
  5518  14C6  0878               	movf	??__tdiv_to_l_,w
  5519  14C7  00A4               	movwf	__tdiv_to_l_@cntr
  5520  14C8                     l2673:	
  5521  14C8  3001               	movlw	1
  5522  14C9  00F8               	movwf	??__tdiv_to_l_
  5523  14CA                     u4275:	
  5524  14CA  1003               	clrc
  5525  14CB  0DA0               	rlf	__tdiv_to_l_@quot,f
  5526  14CC  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5527  14CD  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5528  14CE  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5529  14CF  0BF8               	decfsz	??__tdiv_to_l_,f
  5530  14D0  2CCA               	goto	u4275
  5531  14D1  0876               	movf	__tdiv_to_l_@f2+2,w
  5532  14D2  0272               	subwf	__tdiv_to_l_@f1+2,w
  5533  14D3  1D03               	skipz
  5534  14D4  2CDB               	goto	u4285
  5535  14D5  0875               	movf	__tdiv_to_l_@f2+1,w
  5536  14D6  0271               	subwf	__tdiv_to_l_@f1+1,w
  5537  14D7  1D03               	skipz
  5538  14D8  2CDB               	goto	u4285
  5539  14D9  0874               	movf	__tdiv_to_l_@f2,w
  5540  14DA  0270               	subwf	__tdiv_to_l_@f1,w
  5541  14DB                     u4285:	
  5542  14DB  1C03               	skipc
  5543  14DC  2CE8               	goto	l2681
  5544  14DD  0874               	movf	__tdiv_to_l_@f2,w
  5545  14DE  02F0               	subwf	__tdiv_to_l_@f1,f
  5546  14DF  0875               	movf	__tdiv_to_l_@f2+1,w
  5547  14E0  1C03               	skipc
  5548  14E1  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5549  14E2  02F1               	subwf	__tdiv_to_l_@f1+1,f
  5550  14E3  0876               	movf	__tdiv_to_l_@f2+2,w
  5551  14E4  1C03               	skipc
  5552  14E5  0A76               	incf	__tdiv_to_l_@f2+2,w
  5553  14E6  02F2               	subwf	__tdiv_to_l_@f1+2,f
  5554  14E7  1420               	bsf	__tdiv_to_l_@quot,0
  5555  14E8                     l2681:	
  5556  14E8  3001               	movlw	1
  5557  14E9                     u4295:	
  5558  14E9  1003               	clrc
  5559  14EA  0DF0               	rlf	__tdiv_to_l_@f1,f
  5560  14EB  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  5561  14EC  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  5562  14ED  3EFF               	addlw	-1
  5563  14EE  1D03               	skipz
  5564  14EF  2CE9               	goto	u4295
  5565  14F0  3001               	movlw	1
  5566  14F1  02A4               	subwf	__tdiv_to_l_@cntr,f
  5567  14F2  1D03               	btfss	3,2
  5568  14F3  2CC8               	goto	l2673
  5569  14F4  1FA5               	btfss	__tdiv_to_l_@exp1,7
  5570  14F5  2D0B               	goto	l2693
  5571  14F6  0825               	movf	__tdiv_to_l_@exp1,w
  5572  14F7  3A80               	xorlw	128
  5573  14F8  3E97               	addlw	151
  5574  14F9  1C03               	btfss	3,0
  5575  14FA  2C8F               	goto	l2655
  5576  14FB                     l2691:	
  5577  14FB  3001               	movlw	1
  5578  14FC                     u4335:	
  5579  14FC  1003               	clrc
  5580  14FD  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  5581  14FE  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  5582  14FF  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  5583  1500  0CA0               	rrf	__tdiv_to_l_@quot,f
  5584  1501  3EFF               	addlw	-1
  5585  1502  1D03               	skipz
  5586  1503  2CFC               	goto	u4335
  5587  1504  3001               	movlw	1
  5588  1505  00F8               	movwf	??__tdiv_to_l_
  5589  1506  0878               	movf	??__tdiv_to_l_,w
  5590  1507  07A5               	addwf	__tdiv_to_l_@exp1,f
  5591  1508  1903               	btfsc	3,2
  5592  1509  2D1E               	goto	l2701
  5593  150A  2CFB               	goto	l2691
  5594  150B                     l2693:	
  5595  150B  3018               	movlw	24
  5596  150C  0225               	subwf	__tdiv_to_l_@exp1,w
  5597  150D  1803               	btfsc	3,0
  5598  150E  2C8F               	goto	l2655
  5599  150F                     l476:	
  5600  150F  0825               	movf	__tdiv_to_l_@exp1,w
  5601  1510  1903               	btfsc	3,2
  5602  1511  2D1E               	goto	l2701
  5603  1512  3001               	movlw	1
  5604  1513  00F8               	movwf	??__tdiv_to_l_
  5605  1514                     u4365:	
  5606  1514  1003               	clrc
  5607  1515  0DA0               	rlf	__tdiv_to_l_@quot,f
  5608  1516  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5609  1517  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5610  1518  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5611  1519  0BF8               	decfsz	??__tdiv_to_l_,f
  5612  151A  2D14               	goto	u4365
  5613  151B  3001               	movlw	1
  5614  151C  02A5               	subwf	__tdiv_to_l_@exp1,f
  5615  151D  2D0F               	goto	l476
  5616  151E                     l2701:	
  5617  151E  0823               	movf	__tdiv_to_l_@quot+3,w
  5618  151F  00F3               	movwf	?__tdiv_to_l_+3
  5619  1520  0822               	movf	__tdiv_to_l_@quot+2,w
  5620  1521  00F2               	movwf	?__tdiv_to_l_+2
  5621  1522  0821               	movf	__tdiv_to_l_@quot+1,w
  5622  1523  00F1               	movwf	?__tdiv_to_l_+1
  5623  1524  0820               	movf	__tdiv_to_l_@quot,w
  5624  1525  00F0               	movwf	?__tdiv_to_l_
  5625  1526  0008               	return
  5626  1527                     __end_of__tdiv_to_l_:	
  5627                           
  5628                           	psect	text12
  5629  1527                     __ptext12:	
  5630 ;; *************** function __div_to_l_ *****************
  5631 ;; Defined at:
  5632 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fldivl.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  f1              4    0[COMMON] unsigned long 
  5635 ;;  f2              4    4[COMMON] unsigned long 
  5636 ;; Auto vars:     Size  Location     Type
  5637 ;;  quot            4    0[BANK0 ] unsigned long 
  5638 ;;  exp1            1    5[BANK0 ] unsigned char 
  5639 ;;  cntr            1    4[BANK0 ] unsigned char 
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  4    0[COMMON] unsigned long 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5649 ;;      Params:         8       0       0       0       0
  5650 ;;      Locals:         0       6       0       0       0
  5651 ;;      Temps:          1       0       0       0       0
  5652 ;;      Totals:         9       6       0       0       0
  5653 ;;Total ram usage:       15 bytes
  5654 ;; Hardware stack levels used:    1
  5655 ;; This function calls:
  5656 ;;		Nothing
  5657 ;; This function is called by:
  5658 ;;		_sprintf
  5659 ;; This function uses a non-reentrant model
  5660 ;;
  5661                           
  5662                           
  5663                           ;psect for function __div_to_l_
  5664  1527                     __div_to_l_:	
  5665                           
  5666                           ;incstack = 0
  5667                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5668  1527  1003               	clrc
  5669  1528  0D72               	rlf	__div_to_l_@f1+2,w
  5670  1529  0D73               	rlf	__div_to_l_@f1+3,w
  5671  152A  00F8               	movwf	??__div_to_l_
  5672  152B  0878               	movf	??__div_to_l_,w
  5673  152C  1283               	bcf	3,5	;RP0=0, select bank0
  5674  152D  1303               	bcf	3,6	;RP1=0, select bank0
  5675  152E  00A5               	movwf	__div_to_l_@exp1
  5676  152F  0825               	movf	__div_to_l_@exp1,w
  5677  1530  1D03               	btfss	3,2
  5678  1531  2D3B               	goto	l2711
  5679  1532                     l2707:	
  5680  1532  3000               	movlw	0
  5681  1533  00F3               	movwf	?__div_to_l_+3
  5682  1534  3000               	movlw	0
  5683  1535  00F2               	movwf	?__div_to_l_+2
  5684  1536  3000               	movlw	0
  5685  1537  00F1               	movwf	?__div_to_l_+1
  5686  1538  3000               	movlw	0
  5687  1539  00F0               	movwf	?__div_to_l_
  5688  153A  0008               	return
  5689  153B                     l2711:	
  5690  153B  1003               	clrc
  5691  153C  0D76               	rlf	__div_to_l_@f2+2,w
  5692  153D  0D77               	rlf	__div_to_l_@f2+3,w
  5693  153E  00F8               	movwf	??__div_to_l_
  5694  153F  0878               	movf	??__div_to_l_,w
  5695  1540  00A4               	movwf	__div_to_l_@cntr
  5696  1541  0824               	movf	__div_to_l_@cntr,w
  5697  1542  1903               	btfsc	3,2
  5698  1543  2D32               	goto	l2707
  5699  1544  17F2               	bsf	__div_to_l_@f1+2,7
  5700  1545  30FF               	movlw	255
  5701  1546  05F0               	andwf	__div_to_l_@f1,f
  5702  1547  30FF               	movlw	255
  5703  1548  05F1               	andwf	__div_to_l_@f1+1,f
  5704  1549  30FF               	movlw	255
  5705  154A  05F2               	andwf	__div_to_l_@f1+2,f
  5706  154B  3000               	movlw	0
  5707  154C  05F3               	andwf	__div_to_l_@f1+3,f
  5708  154D  17F6               	bsf	__div_to_l_@f2+2,7
  5709  154E  30FF               	movlw	255
  5710  154F  05F4               	andwf	__div_to_l_@f2,f
  5711  1550  30FF               	movlw	255
  5712  1551  05F5               	andwf	__div_to_l_@f2+1,f
  5713  1552  30FF               	movlw	255
  5714  1553  05F6               	andwf	__div_to_l_@f2+2,f
  5715  1554  3000               	movlw	0
  5716  1555  05F7               	andwf	__div_to_l_@f2+3,f
  5717  1556  3000               	movlw	0
  5718  1557  00A3               	movwf	__div_to_l_@quot+3
  5719  1558  3000               	movlw	0
  5720  1559  00A2               	movwf	__div_to_l_@quot+2
  5721  155A  3000               	movlw	0
  5722  155B  00A1               	movwf	__div_to_l_@quot+1
  5723  155C  3000               	movlw	0
  5724  155D  00A0               	movwf	__div_to_l_@quot
  5725  155E  307F               	movlw	127
  5726  155F  02A5               	subwf	__div_to_l_@exp1,f
  5727  1560  30A0               	movlw	160
  5728  1561  0724               	addwf	__div_to_l_@cntr,w
  5729  1562  00F8               	movwf	??__div_to_l_
  5730  1563  0878               	movf	??__div_to_l_,w
  5731  1564  02A5               	subwf	__div_to_l_@exp1,f
  5732  1565  3020               	movlw	32
  5733  1566  00F8               	movwf	??__div_to_l_
  5734  1567  0878               	movf	??__div_to_l_,w
  5735  1568  00A4               	movwf	__div_to_l_@cntr
  5736  1569                     l2725:	
  5737  1569  3001               	movlw	1
  5738  156A  00F8               	movwf	??__div_to_l_
  5739  156B                     u4405:	
  5740  156B  1003               	clrc
  5741  156C  0DA0               	rlf	__div_to_l_@quot,f
  5742  156D  0DA1               	rlf	__div_to_l_@quot+1,f
  5743  156E  0DA2               	rlf	__div_to_l_@quot+2,f
  5744  156F  0DA3               	rlf	__div_to_l_@quot+3,f
  5745  1570  0BF8               	decfsz	??__div_to_l_,f
  5746  1571  2D6B               	goto	u4405
  5747  1572  0877               	movf	__div_to_l_@f2+3,w
  5748  1573  0273               	subwf	__div_to_l_@f1+3,w
  5749  1574  1D03               	skipz
  5750  1575  2D80               	goto	u4415
  5751  1576  0876               	movf	__div_to_l_@f2+2,w
  5752  1577  0272               	subwf	__div_to_l_@f1+2,w
  5753  1578  1D03               	skipz
  5754  1579  2D80               	goto	u4415
  5755  157A  0875               	movf	__div_to_l_@f2+1,w
  5756  157B  0271               	subwf	__div_to_l_@f1+1,w
  5757  157C  1D03               	skipz
  5758  157D  2D80               	goto	u4415
  5759  157E  0874               	movf	__div_to_l_@f2,w
  5760  157F  0270               	subwf	__div_to_l_@f1,w
  5761  1580                     u4415:	
  5762  1580  1C03               	skipc
  5763  1581  2D91               	goto	l2733
  5764  1582  0874               	movf	__div_to_l_@f2,w
  5765  1583  02F0               	subwf	__div_to_l_@f1,f
  5766  1584  0875               	movf	__div_to_l_@f2+1,w
  5767  1585  1C03               	skipc
  5768  1586  0F75               	incfsz	__div_to_l_@f2+1,w
  5769  1587  02F1               	subwf	__div_to_l_@f1+1,f
  5770  1588  0876               	movf	__div_to_l_@f2+2,w
  5771  1589  1C03               	skipc
  5772  158A  0F76               	incfsz	__div_to_l_@f2+2,w
  5773  158B  02F2               	subwf	__div_to_l_@f1+2,f
  5774  158C  0877               	movf	__div_to_l_@f2+3,w
  5775  158D  1C03               	skipc
  5776  158E  0F77               	incfsz	__div_to_l_@f2+3,w
  5777  158F  02F3               	subwf	__div_to_l_@f1+3,f
  5778  1590  1420               	bsf	__div_to_l_@quot,0
  5779  1591                     l2733:	
  5780  1591  3001               	movlw	1
  5781  1592  00F8               	movwf	??__div_to_l_
  5782  1593                     u4425:	
  5783  1593  1003               	clrc
  5784  1594  0DF0               	rlf	__div_to_l_@f1,f
  5785  1595  0DF1               	rlf	__div_to_l_@f1+1,f
  5786  1596  0DF2               	rlf	__div_to_l_@f1+2,f
  5787  1597  0DF3               	rlf	__div_to_l_@f1+3,f
  5788  1598  0BF8               	decfsz	??__div_to_l_,f
  5789  1599  2D93               	goto	u4425
  5790  159A  3001               	movlw	1
  5791  159B  02A4               	subwf	__div_to_l_@cntr,f
  5792  159C  1D03               	btfss	3,2
  5793  159D  2D69               	goto	l2725
  5794  159E  1FA5               	btfss	__div_to_l_@exp1,7
  5795  159F  2DB5               	goto	l2745
  5796  15A0  0825               	movf	__div_to_l_@exp1,w
  5797  15A1  3A80               	xorlw	128
  5798  15A2  3E9F               	addlw	159
  5799  15A3  1C03               	btfss	3,0
  5800  15A4  2D32               	goto	l2707
  5801  15A5                     l2743:	
  5802  15A5  3001               	movlw	1
  5803  15A6                     u4465:	
  5804  15A6  1003               	clrc
  5805  15A7  0CA3               	rrf	__div_to_l_@quot+3,f
  5806  15A8  0CA2               	rrf	__div_to_l_@quot+2,f
  5807  15A9  0CA1               	rrf	__div_to_l_@quot+1,f
  5808  15AA  0CA0               	rrf	__div_to_l_@quot,f
  5809  15AB  3EFF               	addlw	-1
  5810  15AC  1D03               	skipz
  5811  15AD  2DA6               	goto	u4465
  5812  15AE  3001               	movlw	1
  5813  15AF  00F8               	movwf	??__div_to_l_
  5814  15B0  0878               	movf	??__div_to_l_,w
  5815  15B1  07A5               	addwf	__div_to_l_@exp1,f
  5816  15B2  1903               	btfsc	3,2
  5817  15B3  2DC8               	goto	l2753
  5818  15B4  2DA5               	goto	l2743
  5819  15B5                     l2745:	
  5820  15B5  3020               	movlw	32
  5821  15B6  0225               	subwf	__div_to_l_@exp1,w
  5822  15B7  1803               	btfsc	3,0
  5823  15B8  2D32               	goto	l2707
  5824  15B9                     l429:	
  5825  15B9  0825               	movf	__div_to_l_@exp1,w
  5826  15BA  1903               	btfsc	3,2
  5827  15BB  2DC8               	goto	l2753
  5828  15BC  3001               	movlw	1
  5829  15BD  00F8               	movwf	??__div_to_l_
  5830  15BE                     u4495:	
  5831  15BE  1003               	clrc
  5832  15BF  0DA0               	rlf	__div_to_l_@quot,f
  5833  15C0  0DA1               	rlf	__div_to_l_@quot+1,f
  5834  15C1  0DA2               	rlf	__div_to_l_@quot+2,f
  5835  15C2  0DA3               	rlf	__div_to_l_@quot+3,f
  5836  15C3  0BF8               	decfsz	??__div_to_l_,f
  5837  15C4  2DBE               	goto	u4495
  5838  15C5  3001               	movlw	1
  5839  15C6  02A5               	subwf	__div_to_l_@exp1,f
  5840  15C7  2DB9               	goto	l429
  5841  15C8                     l2753:	
  5842  15C8  0823               	movf	__div_to_l_@quot+3,w
  5843  15C9  00F3               	movwf	?__div_to_l_+3
  5844  15CA  0822               	movf	__div_to_l_@quot+2,w
  5845  15CB  00F2               	movwf	?__div_to_l_+2
  5846  15CC  0821               	movf	__div_to_l_@quot+1,w
  5847  15CD  00F1               	movwf	?__div_to_l_+1
  5848  15CE  0820               	movf	__div_to_l_@quot,w
  5849  15CF  00F0               	movwf	?__div_to_l_
  5850  15D0  0008               	return
  5851  15D1                     __end_of__div_to_l_:	
  5852                           
  5853                           	psect	text13
  5854  13DB                     __ptext13:	
  5855 ;; *************** function ___xxtofl *****************
  5856 ;; Defined at:
  5857 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\xxtofl.c"
  5858 ;; Parameters:    Size  Location     Type
  5859 ;;  sign            1    wreg     unsigned char 
  5860 ;;  val             4    0[COMMON] long 
  5861 ;; Auto vars:     Size  Location     Type
  5862 ;;  sign            1    8[COMMON] unsigned char 
  5863 ;;  arg             4   10[COMMON] unsigned long 
  5864 ;;  exp             1    9[COMMON] unsigned char 
  5865 ;; Return value:  Size  Location     Type
  5866 ;;                  4    0[COMMON] unsigned char 
  5867 ;; Registers used:
  5868 ;;		wreg, status,2, status,0
  5869 ;; Tracked objects:
  5870 ;;		On entry : 0/0
  5871 ;;		On exit  : 0/0
  5872 ;;		Unchanged: 0/0
  5873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5874 ;;      Params:         4       0       0       0       0
  5875 ;;      Locals:         6       0       0       0       0
  5876 ;;      Temps:          4       0       0       0       0
  5877 ;;      Totals:        14       0       0       0       0
  5878 ;;Total ram usage:       14 bytes
  5879 ;; Hardware stack levels used:    1
  5880 ;; This function calls:
  5881 ;;		Nothing
  5882 ;; This function is called by:
  5883 ;;		_sprintf
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           
  5888                           ;psect for function ___xxtofl
  5889  13DB                     ___xxtofl:	
  5890                           
  5891                           ;incstack = 0
  5892                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  5893                           ;___xxtofl@sign stored from wreg
  5894  13DB  00F8               	movwf	___xxtofl@sign
  5895  13DC  0878               	movf	___xxtofl@sign,w
  5896  13DD  1D03               	btfss	3,2
  5897  13DE  1FF3               	btfss	___xxtofl@val+3,7
  5898  13DF  2BF0               	goto	l2903
  5899  13E0  0970               	comf	___xxtofl@val,w
  5900  13E1  00FA               	movwf	___xxtofl@arg
  5901  13E2  0971               	comf	___xxtofl@val+1,w
  5902  13E3  00FB               	movwf	___xxtofl@arg+1
  5903  13E4  0972               	comf	___xxtofl@val+2,w
  5904  13E5  00FC               	movwf	___xxtofl@arg+2
  5905  13E6  0973               	comf	___xxtofl@val+3,w
  5906  13E7  00FD               	movwf	___xxtofl@arg+3
  5907  13E8  0AFA               	incf	___xxtofl@arg,f
  5908  13E9  1903               	skipnz
  5909  13EA  0AFB               	incf	___xxtofl@arg+1,f
  5910  13EB  1903               	skipnz
  5911  13EC  0AFC               	incf	___xxtofl@arg+2,f
  5912  13ED  1903               	skipnz
  5913  13EE  0AFD               	incf	___xxtofl@arg+3,f
  5914  13EF  2BF8               	goto	l709
  5915  13F0                     l2903:	
  5916  13F0  0873               	movf	___xxtofl@val+3,w
  5917  13F1  00FD               	movwf	___xxtofl@arg+3
  5918  13F2  0872               	movf	___xxtofl@val+2,w
  5919  13F3  00FC               	movwf	___xxtofl@arg+2
  5920  13F4  0871               	movf	___xxtofl@val+1,w
  5921  13F5  00FB               	movwf	___xxtofl@arg+1
  5922  13F6  0870               	movf	___xxtofl@val,w
  5923  13F7  00FA               	movwf	___xxtofl@arg
  5924  13F8                     l709:	
  5925  13F8  0873               	movf	___xxtofl@val+3,w
  5926  13F9  0472               	iorwf	___xxtofl@val+2,w
  5927  13FA  0471               	iorwf	___xxtofl@val+1,w
  5928  13FB  0470               	iorwf	___xxtofl@val,w
  5929  13FC  1D03               	skipz
  5930  13FD  2C07               	goto	l2909
  5931  13FE  3000               	movlw	0
  5932  13FF  00F3               	movwf	?___xxtofl+3
  5933  1400  3000               	movlw	0
  5934  1401  00F2               	movwf	?___xxtofl+2
  5935  1402  3000               	movlw	0
  5936  1403  00F1               	movwf	?___xxtofl+1
  5937  1404  3000               	movlw	0
  5938  1405  00F0               	movwf	?___xxtofl
  5939  1406  0008               	return
  5940  1407                     l2909:	
  5941  1407  3096               	movlw	150
  5942  1408  00F4               	movwf	??___xxtofl
  5943  1409  0874               	movf	??___xxtofl,w
  5944  140A  00F9               	movwf	___xxtofl@exp
  5945  140B                     l2913:	
  5946  140B  30FE               	movlw	254
  5947  140C  057D               	andwf	___xxtofl@arg+3,w
  5948  140D  1903               	btfsc	3,2
  5949  140E  2C38               	goto	l715
  5950  140F  3001               	movlw	1
  5951  1410  00F4               	movwf	??___xxtofl
  5952  1411  0874               	movf	??___xxtofl,w
  5953  1412  07F9               	addwf	___xxtofl@exp,f
  5954  1413  3001               	movlw	1
  5955  1414                     u4925:	
  5956  1414  1003               	clrc
  5957  1415  0CFD               	rrf	___xxtofl@arg+3,f
  5958  1416  0CFC               	rrf	___xxtofl@arg+2,f
  5959  1417  0CFB               	rrf	___xxtofl@arg+1,f
  5960  1418  0CFA               	rrf	___xxtofl@arg,f
  5961  1419  3EFF               	addlw	-1
  5962  141A  1D03               	skipz
  5963  141B  2C14               	goto	u4925
  5964  141C  2C0B               	goto	l2913
  5965  141D                     l2915:	
  5966  141D  3001               	movlw	1
  5967  141E  00F4               	movwf	??___xxtofl
  5968  141F  0874               	movf	??___xxtofl,w
  5969  1420  07F9               	addwf	___xxtofl@exp,f
  5970  1421  3001               	movlw	1
  5971  1422  07FA               	addwf	___xxtofl@arg,f
  5972  1423  3000               	movlw	0
  5973  1424  1803               	skipnc
  5974  1425  3001               	movlw	1
  5975  1426  07FB               	addwf	___xxtofl@arg+1,f
  5976  1427  3000               	movlw	0
  5977  1428  1803               	skipnc
  5978  1429  3001               	movlw	1
  5979  142A  07FC               	addwf	___xxtofl@arg+2,f
  5980  142B  3000               	movlw	0
  5981  142C  1803               	skipnc
  5982  142D  3001               	movlw	1
  5983  142E  07FD               	addwf	___xxtofl@arg+3,f
  5984  142F  3001               	movlw	1
  5985  1430                     u4945:	
  5986  1430  1003               	clrc
  5987  1431  0CFD               	rrf	___xxtofl@arg+3,f
  5988  1432  0CFC               	rrf	___xxtofl@arg+2,f
  5989  1433  0CFB               	rrf	___xxtofl@arg+1,f
  5990  1434  0CFA               	rrf	___xxtofl@arg,f
  5991  1435  3EFF               	addlw	-1
  5992  1436  1D03               	skipz
  5993  1437  2C30               	goto	u4945
  5994  1438                     l715:	
  5995  1438  30FF               	movlw	255
  5996  1439  057D               	andwf	___xxtofl@arg+3,w
  5997  143A  1903               	btfsc	3,2
  5998  143B  2C4C               	goto	l2923
  5999  143C  2C1D               	goto	l2915
  6000  143D                     l2925:	
  6001  143D  3002               	movlw	2
  6002  143E  0279               	subwf	___xxtofl@exp,w
  6003  143F  1C03               	btfss	3,0
  6004  1440  2C4E               	goto	l722
  6005  1441  3001               	movlw	1
  6006  1442  02F9               	subwf	___xxtofl@exp,f
  6007  1443  3001               	movlw	1
  6008  1444  00F4               	movwf	??___xxtofl
  6009  1445                     u4965:	
  6010  1445  1003               	clrc
  6011  1446  0DFA               	rlf	___xxtofl@arg,f
  6012  1447  0DFB               	rlf	___xxtofl@arg+1,f
  6013  1448  0DFC               	rlf	___xxtofl@arg+2,f
  6014  1449  0DFD               	rlf	___xxtofl@arg+3,f
  6015  144A  0BF4               	decfsz	??___xxtofl,f
  6016  144B  2C45               	goto	u4965
  6017  144C                     l2923:	
  6018  144C  1FFC               	btfss	___xxtofl@arg+2,7
  6019  144D  2C3D               	goto	l2925
  6020  144E                     l722:	
  6021  144E  1879               	btfsc	___xxtofl@exp,0
  6022  144F  2C58               	goto	l723
  6023  1450  30FF               	movlw	255
  6024  1451  05FA               	andwf	___xxtofl@arg,f
  6025  1452  30FF               	movlw	255
  6026  1453  05FB               	andwf	___xxtofl@arg+1,f
  6027  1454  307F               	movlw	127
  6028  1455  05FC               	andwf	___xxtofl@arg+2,f
  6029  1456  30FF               	movlw	255
  6030  1457  05FD               	andwf	___xxtofl@arg+3,f
  6031  1458                     l723:	
  6032  1458  1003               	clrc
  6033  1459  0CF9               	rrf	___xxtofl@exp,f
  6034  145A  0879               	movf	___xxtofl@exp,w
  6035  145B  00F4               	movwf	??___xxtofl
  6036  145C  01F5               	clrf	??___xxtofl+1
  6037  145D  01F6               	clrf	??___xxtofl+2
  6038  145E  01F7               	clrf	??___xxtofl+3
  6039  145F  3018               	movlw	24
  6040  1460                     u5005:	
  6041  1460  1003               	clrc
  6042  1461  0DF4               	rlf	??___xxtofl,f
  6043  1462  0DF5               	rlf	??___xxtofl+1,f
  6044  1463  0DF6               	rlf	??___xxtofl+2,f
  6045  1464  0DF7               	rlf	??___xxtofl+3,f
  6046  1465  3EFF               	addlw	-1
  6047  1466  1D03               	skipz
  6048  1467  2C60               	goto	u5005
  6049  1468  0874               	movf	??___xxtofl,w
  6050  1469  04FA               	iorwf	___xxtofl@arg,f
  6051  146A  0875               	movf	??___xxtofl+1,w
  6052  146B  04FB               	iorwf	___xxtofl@arg+1,f
  6053  146C  0876               	movf	??___xxtofl+2,w
  6054  146D  04FC               	iorwf	___xxtofl@arg+2,f
  6055  146E  0877               	movf	??___xxtofl+3,w
  6056  146F  04FD               	iorwf	___xxtofl@arg+3,f
  6057  1470  0878               	movf	___xxtofl@sign,w
  6058  1471  1D03               	btfss	3,2
  6059  1472  1FF3               	btfss	___xxtofl@val+3,7
  6060  1473  2C75               	goto	l2937
  6061  1474  17FD               	bsf	___xxtofl@arg+3,7
  6062  1475                     l2937:	
  6063  1475  087D               	movf	___xxtofl@arg+3,w
  6064  1476  00F3               	movwf	?___xxtofl+3
  6065  1477  087C               	movf	___xxtofl@arg+2,w
  6066  1478  00F2               	movwf	?___xxtofl+2
  6067  1479  087B               	movf	___xxtofl@arg+1,w
  6068  147A  00F1               	movwf	?___xxtofl+1
  6069  147B  087A               	movf	___xxtofl@arg,w
  6070  147C  00F0               	movwf	?___xxtofl
  6071  147D  0008               	return
  6072  147E                     __end_of___xxtofl:	
  6073                           
  6074                           	psect	text14
  6075  1F4E                     __ptext14:	
  6076 ;; *************** function ___wmul *****************
  6077 ;; Defined at:
  6078 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul16.c"
  6079 ;; Parameters:    Size  Location     Type
  6080 ;;  multiplier      2    0[COMMON] unsigned int 
  6081 ;;  multiplicand    2    2[COMMON] unsigned int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  product         2    4[COMMON] unsigned int 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  2    0[COMMON] unsigned int 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6093 ;;      Params:         4       0       0       0       0
  6094 ;;      Locals:         2       0       0       0       0
  6095 ;;      Temps:          0       0       0       0       0
  6096 ;;      Totals:         6       0       0       0       0
  6097 ;;Total ram usage:        6 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_sprintf
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           
  6107                           ;psect for function ___wmul
  6108  1F4E                     ___wmul:	
  6109                           
  6110                           ;incstack = 0
  6111                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6112  1F4E  01F4               	clrf	___wmul@product
  6113  1F4F  01F5               	clrf	___wmul@product+1
  6114  1F50                     l2759:	
  6115  1F50  1C70               	btfss	___wmul@multiplier,0
  6116  1F51  2F58               	goto	l248
  6117  1F52  0872               	movf	___wmul@multiplicand,w
  6118  1F53  07F4               	addwf	___wmul@product,f
  6119  1F54  1803               	skipnc
  6120  1F55  0AF5               	incf	___wmul@product+1,f
  6121  1F56  0873               	movf	___wmul@multiplicand+1,w
  6122  1F57  07F5               	addwf	___wmul@product+1,f
  6123  1F58                     l248:	
  6124  1F58  3001               	movlw	1
  6125  1F59                     u4525:	
  6126  1F59  1003               	clrc
  6127  1F5A  0DF2               	rlf	___wmul@multiplicand,f
  6128  1F5B  0DF3               	rlf	___wmul@multiplicand+1,f
  6129  1F5C  3EFF               	addlw	-1
  6130  1F5D  1D03               	skipz
  6131  1F5E  2F59               	goto	u4525
  6132  1F5F  3001               	movlw	1
  6133  1F60                     u4535:	
  6134  1F60  1003               	clrc
  6135  1F61  0CF1               	rrf	___wmul@multiplier+1,f
  6136  1F62  0CF0               	rrf	___wmul@multiplier,f
  6137  1F63  3EFF               	addlw	-1
  6138  1F64  1D03               	skipz
  6139  1F65  2F60               	goto	u4535
  6140  1F66  0870               	movf	___wmul@multiplier,w
  6141  1F67  0471               	iorwf	___wmul@multiplier+1,w
  6142  1F68  1D03               	btfss	3,2
  6143  1F69  2F50               	goto	l2759
  6144  1F6A  0875               	movf	___wmul@product+1,w
  6145  1F6B  00F1               	movwf	?___wmul+1
  6146  1F6C  0874               	movf	___wmul@product,w
  6147  1F6D  00F0               	movwf	?___wmul
  6148  1F6E  0008               	return
  6149  1F6F                     __end_of___wmul:	
  6150                           
  6151                           	psect	text15
  6152  1129                     __ptext15:	
  6153 ;; *************** function ___llmod *****************
  6154 ;; Defined at:
  6155 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\llmod.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;  divisor         4    0[COMMON] unsigned long 
  6158 ;;  dividend        4    4[COMMON] unsigned long 
  6159 ;; Auto vars:     Size  Location     Type
  6160 ;;  counter         1    9[COMMON] unsigned char 
  6161 ;; Return value:  Size  Location     Type
  6162 ;;                  4    0[COMMON] unsigned long 
  6163 ;; Registers used:
  6164 ;;		wreg, status,2, status,0
  6165 ;; Tracked objects:
  6166 ;;		On entry : 0/0
  6167 ;;		On exit  : 0/0
  6168 ;;		Unchanged: 0/0
  6169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6170 ;;      Params:         8       0       0       0       0
  6171 ;;      Locals:         1       0       0       0       0
  6172 ;;      Temps:          1       0       0       0       0
  6173 ;;      Totals:        10       0       0       0       0
  6174 ;;Total ram usage:       10 bytes
  6175 ;; Hardware stack levels used:    1
  6176 ;; This function calls:
  6177 ;;		Nothing
  6178 ;; This function is called by:
  6179 ;;		_sprintf
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           
  6184                           ;psect for function ___llmod
  6185  1129                     ___llmod:	
  6186                           
  6187                           ;incstack = 0
  6188                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6189  1129  0873               	movf	___llmod@divisor+3,w
  6190  112A  0472               	iorwf	___llmod@divisor+2,w
  6191  112B  0471               	iorwf	___llmod@divisor+1,w
  6192  112C  0470               	iorwf	___llmod@divisor,w
  6193  112D  1903               	skipnz
  6194  112E  296C               	goto	l2887
  6195  112F  01F9               	clrf	___llmod@counter
  6196  1130  0AF9               	incf	___llmod@counter,f
  6197  1131                     l2877:	
  6198  1131  1BF3               	btfsc	___llmod@divisor+3,7
  6199  1132  2941               	goto	l2879
  6200  1133  3001               	movlw	1
  6201  1134  00F8               	movwf	??___llmod
  6202  1135                     u4845:	
  6203  1135  1003               	clrc
  6204  1136  0DF0               	rlf	___llmod@divisor,f
  6205  1137  0DF1               	rlf	___llmod@divisor+1,f
  6206  1138  0DF2               	rlf	___llmod@divisor+2,f
  6207  1139  0DF3               	rlf	___llmod@divisor+3,f
  6208  113A  0BF8               	decfsz	??___llmod,f
  6209  113B  2935               	goto	u4845
  6210  113C  3001               	movlw	1
  6211  113D  00F8               	movwf	??___llmod
  6212  113E  0878               	movf	??___llmod,w
  6213  113F  07F9               	addwf	___llmod@counter,f
  6214  1140  2931               	goto	l2877
  6215  1141                     l2879:	
  6216  1141  0873               	movf	___llmod@divisor+3,w
  6217  1142  0277               	subwf	___llmod@dividend+3,w
  6218  1143  1D03               	skipz
  6219  1144  294F               	goto	u4865
  6220  1145  0872               	movf	___llmod@divisor+2,w
  6221  1146  0276               	subwf	___llmod@dividend+2,w
  6222  1147  1D03               	skipz
  6223  1148  294F               	goto	u4865
  6224  1149  0871               	movf	___llmod@divisor+1,w
  6225  114A  0275               	subwf	___llmod@dividend+1,w
  6226  114B  1D03               	skipz
  6227  114C  294F               	goto	u4865
  6228  114D  0870               	movf	___llmod@divisor,w
  6229  114E  0274               	subwf	___llmod@dividend,w
  6230  114F                     u4865:	
  6231  114F  1C03               	skipc
  6232  1150  295F               	goto	l2883
  6233  1151  0870               	movf	___llmod@divisor,w
  6234  1152  02F4               	subwf	___llmod@dividend,f
  6235  1153  0871               	movf	___llmod@divisor+1,w
  6236  1154  1C03               	skipc
  6237  1155  0F71               	incfsz	___llmod@divisor+1,w
  6238  1156  02F5               	subwf	___llmod@dividend+1,f
  6239  1157  0872               	movf	___llmod@divisor+2,w
  6240  1158  1C03               	skipc
  6241  1159  0F72               	incfsz	___llmod@divisor+2,w
  6242  115A  02F6               	subwf	___llmod@dividend+2,f
  6243  115B  0873               	movf	___llmod@divisor+3,w
  6244  115C  1C03               	skipc
  6245  115D  0F73               	incfsz	___llmod@divisor+3,w
  6246  115E  02F7               	subwf	___llmod@dividend+3,f
  6247  115F                     l2883:	
  6248  115F  3001               	movlw	1
  6249  1160                     u4875:	
  6250  1160  1003               	clrc
  6251  1161  0CF3               	rrf	___llmod@divisor+3,f
  6252  1162  0CF2               	rrf	___llmod@divisor+2,f
  6253  1163  0CF1               	rrf	___llmod@divisor+1,f
  6254  1164  0CF0               	rrf	___llmod@divisor,f
  6255  1165  3EFF               	addlw	-1
  6256  1166  1D03               	skipz
  6257  1167  2960               	goto	u4875
  6258  1168  3001               	movlw	1
  6259  1169  02F9               	subwf	___llmod@counter,f
  6260  116A  1D03               	btfss	3,2
  6261  116B  2941               	goto	l2879
  6262  116C                     l2887:	
  6263  116C  0877               	movf	___llmod@dividend+3,w
  6264  116D  00F3               	movwf	?___llmod+3
  6265  116E  0876               	movf	___llmod@dividend+2,w
  6266  116F  00F2               	movwf	?___llmod+2
  6267  1170  0875               	movf	___llmod@dividend+1,w
  6268  1171  00F1               	movwf	?___llmod+1
  6269  1172  0874               	movf	___llmod@dividend,w
  6270  1173  00F0               	movwf	?___llmod
  6271  1174  0008               	return
  6272  1175                     __end_of___llmod:	
  6273                           
  6274                           	psect	text16
  6275  127D                     __ptext16:	
  6276 ;; *************** function ___lldiv *****************
  6277 ;; Defined at:
  6278 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\__lldiv.c"
  6279 ;; Parameters:    Size  Location     Type
  6280 ;;  divisor         4    0[COMMON] unsigned long 
  6281 ;;  dividend        4    4[COMMON] unsigned long 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  quotient        4    9[COMMON] unsigned long 
  6284 ;;  counter         1   13[COMMON] unsigned char 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  4    0[COMMON] unsigned long 
  6287 ;; Registers used:
  6288 ;;		wreg, status,2, status,0
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6294 ;;      Params:         8       0       0       0       0
  6295 ;;      Locals:         5       0       0       0       0
  6296 ;;      Temps:          1       0       0       0       0
  6297 ;;      Totals:        14       0       0       0       0
  6298 ;;Total ram usage:       14 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_sprintf
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           
  6308                           ;psect for function ___lldiv
  6309  127D                     ___lldiv:	
  6310                           
  6311                           ;incstack = 0
  6312                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6313  127D  3000               	movlw	0
  6314  127E  00FC               	movwf	___lldiv@quotient+3
  6315  127F  3000               	movlw	0
  6316  1280  00FB               	movwf	___lldiv@quotient+2
  6317  1281  3000               	movlw	0
  6318  1282  00FA               	movwf	___lldiv@quotient+1
  6319  1283  3000               	movlw	0
  6320  1284  00F9               	movwf	___lldiv@quotient
  6321  1285  0873               	movf	___lldiv@divisor+3,w
  6322  1286  0472               	iorwf	___lldiv@divisor+2,w
  6323  1287  0471               	iorwf	___lldiv@divisor+1,w
  6324  1288  0470               	iorwf	___lldiv@divisor,w
  6325  1289  1903               	skipnz
  6326  128A  2AD2               	goto	l2791
  6327  128B  01FD               	clrf	___lldiv@counter
  6328  128C  0AFD               	incf	___lldiv@counter,f
  6329  128D                     l2777:	
  6330  128D  1BF3               	btfsc	___lldiv@divisor+3,7
  6331  128E  2A9D               	goto	l2779
  6332  128F  3001               	movlw	1
  6333  1290  00F8               	movwf	??___lldiv
  6334  1291                     u4565:	
  6335  1291  1003               	clrc
  6336  1292  0DF0               	rlf	___lldiv@divisor,f
  6337  1293  0DF1               	rlf	___lldiv@divisor+1,f
  6338  1294  0DF2               	rlf	___lldiv@divisor+2,f
  6339  1295  0DF3               	rlf	___lldiv@divisor+3,f
  6340  1296  0BF8               	decfsz	??___lldiv,f
  6341  1297  2A91               	goto	u4565
  6342  1298  3001               	movlw	1
  6343  1299  00F8               	movwf	??___lldiv
  6344  129A  0878               	movf	??___lldiv,w
  6345  129B  07FD               	addwf	___lldiv@counter,f
  6346  129C  2A8D               	goto	l2777
  6347  129D                     l2779:	
  6348  129D  3001               	movlw	1
  6349  129E  00F8               	movwf	??___lldiv
  6350  129F                     u4585:	
  6351  129F  1003               	clrc
  6352  12A0  0DF9               	rlf	___lldiv@quotient,f
  6353  12A1  0DFA               	rlf	___lldiv@quotient+1,f
  6354  12A2  0DFB               	rlf	___lldiv@quotient+2,f
  6355  12A3  0DFC               	rlf	___lldiv@quotient+3,f
  6356  12A4  0BF8               	decfsz	??___lldiv,f
  6357  12A5  2A9F               	goto	u4585
  6358  12A6  0873               	movf	___lldiv@divisor+3,w
  6359  12A7  0277               	subwf	___lldiv@dividend+3,w
  6360  12A8  1D03               	skipz
  6361  12A9  2AB4               	goto	u4595
  6362  12AA  0872               	movf	___lldiv@divisor+2,w
  6363  12AB  0276               	subwf	___lldiv@dividend+2,w
  6364  12AC  1D03               	skipz
  6365  12AD  2AB4               	goto	u4595
  6366  12AE  0871               	movf	___lldiv@divisor+1,w
  6367  12AF  0275               	subwf	___lldiv@dividend+1,w
  6368  12B0  1D03               	skipz
  6369  12B1  2AB4               	goto	u4595
  6370  12B2  0870               	movf	___lldiv@divisor,w
  6371  12B3  0274               	subwf	___lldiv@dividend,w
  6372  12B4                     u4595:	
  6373  12B4  1C03               	skipc
  6374  12B5  2AC5               	goto	l2787
  6375  12B6  0870               	movf	___lldiv@divisor,w
  6376  12B7  02F4               	subwf	___lldiv@dividend,f
  6377  12B8  0871               	movf	___lldiv@divisor+1,w
  6378  12B9  1C03               	skipc
  6379  12BA  0F71               	incfsz	___lldiv@divisor+1,w
  6380  12BB  02F5               	subwf	___lldiv@dividend+1,f
  6381  12BC  0872               	movf	___lldiv@divisor+2,w
  6382  12BD  1C03               	skipc
  6383  12BE  0F72               	incfsz	___lldiv@divisor+2,w
  6384  12BF  02F6               	subwf	___lldiv@dividend+2,f
  6385  12C0  0873               	movf	___lldiv@divisor+3,w
  6386  12C1  1C03               	skipc
  6387  12C2  0F73               	incfsz	___lldiv@divisor+3,w
  6388  12C3  02F7               	subwf	___lldiv@dividend+3,f
  6389  12C4  1479               	bsf	___lldiv@quotient,0
  6390  12C5                     l2787:	
  6391  12C5  3001               	movlw	1
  6392  12C6                     u4605:	
  6393  12C6  1003               	clrc
  6394  12C7  0CF3               	rrf	___lldiv@divisor+3,f
  6395  12C8  0CF2               	rrf	___lldiv@divisor+2,f
  6396  12C9  0CF1               	rrf	___lldiv@divisor+1,f
  6397  12CA  0CF0               	rrf	___lldiv@divisor,f
  6398  12CB  3EFF               	addlw	-1
  6399  12CC  1D03               	skipz
  6400  12CD  2AC6               	goto	u4605
  6401  12CE  3001               	movlw	1
  6402  12CF  02FD               	subwf	___lldiv@counter,f
  6403  12D0  1D03               	btfss	3,2
  6404  12D1  2A9D               	goto	l2779
  6405  12D2                     l2791:	
  6406  12D2  087C               	movf	___lldiv@quotient+3,w
  6407  12D3  00F3               	movwf	?___lldiv+3
  6408  12D4  087B               	movf	___lldiv@quotient+2,w
  6409  12D5  00F2               	movwf	?___lldiv+2
  6410  12D6  087A               	movf	___lldiv@quotient+1,w
  6411  12D7  00F1               	movwf	?___lldiv+1
  6412  12D8  0879               	movf	___lldiv@quotient,w
  6413  12D9  00F0               	movwf	?___lldiv
  6414  12DA  0008               	return
  6415  12DB                     __end_of___lldiv:	
  6416                           
  6417                           	psect	text17
  6418  12DB                     __ptext17:	
  6419 ;; *************** function ___fltol *****************
  6420 ;; Defined at:
  6421 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fltol.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  f1              4   49[BANK0 ] unsigned long 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  exp1            1   59[BANK0 ] unsigned char 
  6426 ;;  sign1           1   58[BANK0 ] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  4   49[BANK0 ] long 
  6429 ;; Registers used:
  6430 ;;		wreg, status,2, status,0
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6436 ;;      Params:         0       4       0       0       0
  6437 ;;      Locals:         0       2       0       0       0
  6438 ;;      Temps:          0       5       0       0       0
  6439 ;;      Totals:         0      11       0       0       0
  6440 ;;Total ram usage:       11 bytes
  6441 ;; Hardware stack levels used:    1
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_sprintf
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           
  6450                           ;psect for function ___fltol
  6451  12DB                     ___fltol:	
  6452                           
  6453                           ;incstack = 0
  6454                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6455  12DB  1003               	clrc
  6456  12DC  1283               	bcf	3,5	;RP0=0, select bank0
  6457  12DD  1303               	bcf	3,6	;RP1=0, select bank0
  6458  12DE  0D53               	rlf	___fltol@f1+2,w
  6459  12DF  0D54               	rlf	___fltol@f1+3,w
  6460  12E0  00D5               	movwf	??___fltol
  6461  12E1  0855               	movf	??___fltol,w
  6462  12E2  00DB               	movwf	___fltol@exp1
  6463  12E3  085B               	movf	___fltol@exp1,w
  6464  12E4  1D03               	btfss	3,2
  6465  12E5  2AEF               	goto	l2841
  6466  12E6                     l2837:	
  6467  12E6  3000               	movlw	0
  6468  12E7  00D4               	movwf	?___fltol+3
  6469  12E8  3000               	movlw	0
  6470  12E9  00D3               	movwf	?___fltol+2
  6471  12EA  3000               	movlw	0
  6472  12EB  00D2               	movwf	?___fltol+1
  6473  12EC  3000               	movlw	0
  6474  12ED  00D1               	movwf	?___fltol
  6475  12EE  0008               	return
  6476  12EF                     l2841:	
  6477  12EF  0851               	movf	___fltol@f1,w
  6478  12F0  00D5               	movwf	??___fltol
  6479  12F1  0852               	movf	___fltol@f1+1,w
  6480  12F2  00D6               	movwf	??___fltol+1
  6481  12F3  0853               	movf	___fltol@f1+2,w
  6482  12F4  00D7               	movwf	??___fltol+2
  6483  12F5  0854               	movf	___fltol@f1+3,w
  6484  12F6  00D8               	movwf	??___fltol+3
  6485  12F7  301F               	movlw	31
  6486  12F8                     u4745:	
  6487  12F8  1003               	clrc
  6488  12F9  0CD8               	rrf	??___fltol+3,f
  6489  12FA  0CD7               	rrf	??___fltol+2,f
  6490  12FB  0CD6               	rrf	??___fltol+1,f
  6491  12FC  0CD5               	rrf	??___fltol,f
  6492  12FD  3EFF               	addlw	-1
  6493  12FE  1D03               	skipz
  6494  12FF  2AF8               	goto	u4745
  6495  1300  0855               	movf	??___fltol,w
  6496  1301  00D9               	movwf	??___fltol+4
  6497  1302  0859               	movf	??___fltol+4,w
  6498  1303  00DA               	movwf	___fltol@sign1
  6499  1304  17D3               	bsf	___fltol@f1+2,7
  6500  1305  30FF               	movlw	255
  6501  1306  05D1               	andwf	___fltol@f1,f
  6502  1307  30FF               	movlw	255
  6503  1308  05D2               	andwf	___fltol@f1+1,f
  6504  1309  30FF               	movlw	255
  6505  130A  05D3               	andwf	___fltol@f1+2,f
  6506  130B  3000               	movlw	0
  6507  130C  05D4               	andwf	___fltol@f1+3,f
  6508  130D  3096               	movlw	150
  6509  130E  02DB               	subwf	___fltol@exp1,f
  6510  130F  1FDB               	btfss	___fltol@exp1,7
  6511  1310  2B26               	goto	l2859
  6512  1311  085B               	movf	___fltol@exp1,w
  6513  1312  3A80               	xorlw	128
  6514  1313  3E97               	addlw	151
  6515  1314  1C03               	btfss	3,0
  6516  1315  2AE6               	goto	l2837
  6517  1316                     l2857:	
  6518  1316  3001               	movlw	1
  6519  1317                     u4775:	
  6520  1317  1003               	clrc
  6521  1318  0CD4               	rrf	___fltol@f1+3,f
  6522  1319  0CD3               	rrf	___fltol@f1+2,f
  6523  131A  0CD2               	rrf	___fltol@f1+1,f
  6524  131B  0CD1               	rrf	___fltol@f1,f
  6525  131C  3EFF               	addlw	-1
  6526  131D  1D03               	skipz
  6527  131E  2B17               	goto	u4775
  6528  131F  3001               	movlw	1
  6529  1320  00D5               	movwf	??___fltol
  6530  1321  0855               	movf	??___fltol,w
  6531  1322  07DB               	addwf	___fltol@exp1,f
  6532  1323  1903               	btfsc	3,2
  6533  1324  2B39               	goto	l2867
  6534  1325  2B16               	goto	l2857
  6535  1326                     l2859:	
  6536  1326  3020               	movlw	32
  6537  1327  025B               	subwf	___fltol@exp1,w
  6538  1328  1803               	btfsc	3,0
  6539  1329  2AE6               	goto	l2837
  6540  132A                     l458:	
  6541  132A  085B               	movf	___fltol@exp1,w
  6542  132B  1903               	btfsc	3,2
  6543  132C  2B39               	goto	l2867
  6544  132D  3001               	movlw	1
  6545  132E  00D5               	movwf	??___fltol
  6546  132F                     u4805:	
  6547  132F  1003               	clrc
  6548  1330  0DD1               	rlf	___fltol@f1,f
  6549  1331  0DD2               	rlf	___fltol@f1+1,f
  6550  1332  0DD3               	rlf	___fltol@f1+2,f
  6551  1333  0DD4               	rlf	___fltol@f1+3,f
  6552  1334  0BD5               	decfsz	??___fltol,f
  6553  1335  2B2F               	goto	u4805
  6554  1336  3001               	movlw	1
  6555  1337  02DB               	subwf	___fltol@exp1,f
  6556  1338  2B2A               	goto	l458
  6557  1339                     l2867:	
  6558  1339  085A               	movf	___fltol@sign1,w
  6559  133A  1903               	btfsc	3,2
  6560  133B  0008               	return
  6561  133C  09D1               	comf	___fltol@f1,f
  6562  133D  09D2               	comf	___fltol@f1+1,f
  6563  133E  09D3               	comf	___fltol@f1+2,f
  6564  133F  09D4               	comf	___fltol@f1+3,f
  6565  1340  0AD1               	incf	___fltol@f1,f
  6566  1341  1903               	skipnz
  6567  1342  0AD2               	incf	___fltol@f1+1,f
  6568  1343  1903               	skipnz
  6569  1344  0AD3               	incf	___fltol@f1+2,f
  6570  1345  1903               	skipnz
  6571  1346  0AD4               	incf	___fltol@f1+3,f
  6572  1347  0008               	return
  6573  1348                     __end_of___fltol:	
  6574                           
  6575                           	psect	text18
  6576  08C1                     __ptext18:	
  6577 ;; *************** function ___flsub *****************
  6578 ;; Defined at:
  6579 ;;		line 242 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6580 ;; Parameters:    Size  Location     Type
  6581 ;;  a               4   70[BANK0 ] long 
  6582 ;;  b               4   74[BANK0 ] long 
  6583 ;; Auto vars:     Size  Location     Type
  6584 ;;		None
  6585 ;; Return value:  Size  Location     Type
  6586 ;;                  4   70[BANK0 ] long 
  6587 ;; Registers used:
  6588 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6589 ;; Tracked objects:
  6590 ;;		On entry : 0/0
  6591 ;;		On exit  : 0/0
  6592 ;;		Unchanged: 0/0
  6593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6594 ;;      Params:         0       8       0       0       0
  6595 ;;      Locals:         0       0       0       0       0
  6596 ;;      Temps:          0       0       0       0       0
  6597 ;;      Totals:         0       8       0       0       0
  6598 ;;Total ram usage:        8 bytes
  6599 ;; Hardware stack levels used:    1
  6600 ;; Hardware stack levels required when called:    1
  6601 ;; This function calls:
  6602 ;;		___fladd
  6603 ;; This function is called by:
  6604 ;;		_sprintf
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           
  6609                           ;psect for function ___flsub
  6610  08C1                     ___flsub:	
  6611                           
  6612                           ;incstack = 0
  6613                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6614  08C1  3080               	movlw	128
  6615  08C2  1283               	bcf	3,5	;RP0=0, select bank0
  6616  08C3  1303               	bcf	3,6	;RP1=0, select bank0
  6617  08C4  06E9               	xorwf	___flsub@a+3,f
  6618  08C5  086D               	movf	___flsub@b+3,w
  6619  08C6  00D5               	movwf	___fladd@b+3
  6620  08C7  086C               	movf	___flsub@b+2,w
  6621  08C8  00D4               	movwf	___fladd@b+2
  6622  08C9  086B               	movf	___flsub@b+1,w
  6623  08CA  00D3               	movwf	___fladd@b+1
  6624  08CB  086A               	movf	___flsub@b,w
  6625  08CC  00D2               	movwf	___fladd@b
  6626  08CD  0869               	movf	___flsub@a+3,w
  6627  08CE  00D9               	movwf	___fladd@a+3
  6628  08CF  0868               	movf	___flsub@a+2,w
  6629  08D0  00D8               	movwf	___fladd@a+2
  6630  08D1  0867               	movf	___flsub@a+1,w
  6631  08D2  00D7               	movwf	___fladd@a+1
  6632  08D3  0866               	movf	___flsub@a,w
  6633  08D4  00D6               	movwf	___fladd@a
  6634  08D5  160A  118A  25D1   	fcall	___fladd
  6635  08D8  1283               	bcf	3,5	;RP0=0, select bank0
  6636  08D9  1303               	bcf	3,6	;RP1=0, select bank0
  6637  08DA  0855               	movf	?___fladd+3,w
  6638  08DB  00E9               	movwf	?___flsub+3
  6639  08DC  0854               	movf	?___fladd+2,w
  6640  08DD  00E8               	movwf	?___flsub+2
  6641  08DE  0853               	movf	?___fladd+1,w
  6642  08DF  00E7               	movwf	?___flsub+1
  6643  08E0  0852               	movf	?___fladd,w
  6644  08E1  00E6               	movwf	?___flsub
  6645  08E2  0008               	return
  6646  08E3                     __end_of___flsub:	
  6647                           
  6648                           	psect	text19
  6649  15D1                     __ptext19:	
  6650 ;; *************** function ___fladd *****************
  6651 ;; Defined at:
  6652 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\sprcadd.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  b               4   50[BANK0 ] long 
  6655 ;;  a               4   54[BANK0 ] long 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  grs             1   69[BANK0 ] unsigned char 
  6658 ;;  bexp            1   68[BANK0 ] unsigned char 
  6659 ;;  aexp            1   67[BANK0 ] unsigned char 
  6660 ;;  signs           1   66[BANK0 ] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  4   50[BANK0 ] unsigned char 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0, btemp+1
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6670 ;;      Params:         0       8       0       0       0
  6671 ;;      Locals:         0       4       0       0       0
  6672 ;;      Temps:          0       8       0       0       0
  6673 ;;      Totals:         0      20       0       0       0
  6674 ;;Total ram usage:       20 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_sprintf
  6680 ;;		___flsub
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           
  6685                           ;psect for function ___fladd
  6686  15D1                     ___fladd:	
  6687                           
  6688                           ;incstack = 0
  6689                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6690  15D1  1283               	bcf	3,5	;RP0=0, select bank0
  6691  15D2  1303               	bcf	3,6	;RP1=0, select bank0
  6692  15D3  0855               	movf	___fladd@b+3,w
  6693  15D4  3980               	andlw	128
  6694  15D5  00DA               	movwf	??___fladd
  6695  15D6  085A               	movf	??___fladd,w
  6696  15D7  00E2               	movwf	___fladd@signs
  6697  15D8  0855               	movf	___fladd@b+3,w
  6698  15D9  00DA               	movwf	??___fladd
  6699  15DA  075A               	addwf	??___fladd,w
  6700  15DB  00DB               	movwf	??___fladd+1
  6701  15DC  085B               	movf	??___fladd+1,w
  6702  15DD  00E4               	movwf	___fladd@bexp
  6703  15DE  1BD4               	btfsc	___fladd@b+2,7
  6704  15DF  1464               	bsf	___fladd@bexp,0
  6705  15E0  0864               	movf	___fladd@bexp,w
  6706  15E1  1903               	btfsc	3,2
  6707  15E2  2DF1               	goto	l2225
  6708  15E3  0A64               	incf	___fladd@bexp,w
  6709  15E4  1D03               	btfss	3,2
  6710  15E5  2DEE               	goto	l2221
  6711  15E6  3000               	movlw	0
  6712  15E7  00D5               	movwf	___fladd@b+3
  6713  15E8  3000               	movlw	0
  6714  15E9  00D4               	movwf	___fladd@b+2
  6715  15EA  3000               	movlw	0
  6716  15EB  00D3               	movwf	___fladd@b+1
  6717  15EC  3000               	movlw	0
  6718  15ED  00D2               	movwf	___fladd@b
  6719  15EE                     l2221:	
  6720  15EE  17D4               	bsf	___fladd@b+2,7
  6721  15EF  01D5               	clrf	___fladd@b+3
  6722  15F0  2DF9               	goto	l2227
  6723  15F1                     l2225:	
  6724  15F1  3000               	movlw	0
  6725  15F2  00D5               	movwf	___fladd@b+3
  6726  15F3  3000               	movlw	0
  6727  15F4  00D4               	movwf	___fladd@b+2
  6728  15F5  3000               	movlw	0
  6729  15F6  00D3               	movwf	___fladd@b+1
  6730  15F7  3000               	movlw	0
  6731  15F8  00D2               	movwf	___fladd@b
  6732  15F9                     l2227:	
  6733  15F9  0859               	movf	___fladd@a+3,w
  6734  15FA  3980               	andlw	128
  6735  15FB  00DA               	movwf	??___fladd
  6736  15FC  085A               	movf	??___fladd,w
  6737  15FD  00E3               	movwf	___fladd@aexp
  6738  15FE  0863               	movf	___fladd@aexp,w
  6739  15FF  0662               	xorwf	___fladd@signs,w
  6740  1600  1D03               	btfss	3,2
  6741  1601  1762               	bsf	___fladd@signs,6
  6742  1602  0859               	movf	___fladd@a+3,w
  6743  1603  00DA               	movwf	??___fladd
  6744  1604  075A               	addwf	??___fladd,w
  6745  1605  00DB               	movwf	??___fladd+1
  6746  1606  085B               	movf	??___fladd+1,w
  6747  1607  00E3               	movwf	___fladd@aexp
  6748  1608  1BD8               	btfsc	___fladd@a+2,7
  6749  1609  1463               	bsf	___fladd@aexp,0
  6750  160A  0863               	movf	___fladd@aexp,w
  6751  160B  1903               	btfsc	3,2
  6752  160C  2E1B               	goto	l2249
  6753  160D  0A63               	incf	___fladd@aexp,w
  6754  160E  1D03               	btfss	3,2
  6755  160F  2E18               	goto	l2245
  6756  1610  3000               	movlw	0
  6757  1611  00D9               	movwf	___fladd@a+3
  6758  1612  3000               	movlw	0
  6759  1613  00D8               	movwf	___fladd@a+2
  6760  1614  3000               	movlw	0
  6761  1615  00D7               	movwf	___fladd@a+1
  6762  1616  3000               	movlw	0
  6763  1617  00D6               	movwf	___fladd@a
  6764  1618                     l2245:	
  6765  1618  17D8               	bsf	___fladd@a+2,7
  6766  1619  01D9               	clrf	___fladd@a+3
  6767  161A  2E23               	goto	l575
  6768  161B                     l2249:	
  6769  161B  3000               	movlw	0
  6770  161C  00D9               	movwf	___fladd@a+3
  6771  161D  3000               	movlw	0
  6772  161E  00D8               	movwf	___fladd@a+2
  6773  161F  3000               	movlw	0
  6774  1620  00D7               	movwf	___fladd@a+1
  6775  1621  3000               	movlw	0
  6776  1622  00D6               	movwf	___fladd@a
  6777  1623                     l575:	
  6778  1623  0864               	movf	___fladd@bexp,w
  6779  1624  0263               	subwf	___fladd@aexp,w
  6780  1625  1803               	skipnc
  6781  1626  2E69               	goto	l2285
  6782  1627  1F62               	btfss	___fladd@signs,6
  6783  1628  2E2D               	goto	l2255
  6784  1629  3080               	movlw	128
  6785  162A  00DA               	movwf	??___fladd
  6786  162B  085A               	movf	??___fladd,w
  6787  162C  06E2               	xorwf	___fladd@signs,f
  6788  162D                     l2255:	
  6789  162D  0864               	movf	___fladd@bexp,w
  6790  162E  00DA               	movwf	??___fladd
  6791  162F  085A               	movf	??___fladd,w
  6792  1630  00E5               	movwf	___fladd@grs
  6793  1631  0863               	movf	___fladd@aexp,w
  6794  1632  00DA               	movwf	??___fladd
  6795  1633  085A               	movf	??___fladd,w
  6796  1634  00E4               	movwf	___fladd@bexp
  6797  1635  0865               	movf	___fladd@grs,w
  6798  1636  00DA               	movwf	??___fladd
  6799  1637  085A               	movf	??___fladd,w
  6800  1638  00E3               	movwf	___fladd@aexp
  6801  1639  0852               	movf	___fladd@b,w
  6802  163A  00DA               	movwf	??___fladd
  6803  163B  085A               	movf	??___fladd,w
  6804  163C  00E5               	movwf	___fladd@grs
  6805  163D  0856               	movf	___fladd@a,w
  6806  163E  00DA               	movwf	??___fladd
  6807  163F  085A               	movf	??___fladd,w
  6808  1640  00D2               	movwf	___fladd@b
  6809  1641  0865               	movf	___fladd@grs,w
  6810  1642  00DA               	movwf	??___fladd
  6811  1643  085A               	movf	??___fladd,w
  6812  1644  00D6               	movwf	___fladd@a
  6813  1645  0853               	movf	___fladd@b+1,w
  6814  1646  00DA               	movwf	??___fladd
  6815  1647  085A               	movf	??___fladd,w
  6816  1648  00E5               	movwf	___fladd@grs
  6817  1649  0857               	movf	___fladd@a+1,w
  6818  164A  00DA               	movwf	??___fladd
  6819  164B  085A               	movf	??___fladd,w
  6820  164C  00D3               	movwf	___fladd@b+1
  6821  164D  0865               	movf	___fladd@grs,w
  6822  164E  00DA               	movwf	??___fladd
  6823  164F  085A               	movf	??___fladd,w
  6824  1650  00D7               	movwf	___fladd@a+1
  6825  1651  0854               	movf	___fladd@b+2,w
  6826  1652  00DA               	movwf	??___fladd
  6827  1653  085A               	movf	??___fladd,w
  6828  1654  00E5               	movwf	___fladd@grs
  6829  1655  0858               	movf	___fladd@a+2,w
  6830  1656  00DA               	movwf	??___fladd
  6831  1657  085A               	movf	??___fladd,w
  6832  1658  00D4               	movwf	___fladd@b+2
  6833  1659  0865               	movf	___fladd@grs,w
  6834  165A  00DA               	movwf	??___fladd
  6835  165B  085A               	movf	??___fladd,w
  6836  165C  00D8               	movwf	___fladd@a+2
  6837  165D  0855               	movf	___fladd@b+3,w
  6838  165E  00DA               	movwf	??___fladd
  6839  165F  085A               	movf	??___fladd,w
  6840  1660  00E5               	movwf	___fladd@grs
  6841  1661  0859               	movf	___fladd@a+3,w
  6842  1662  00DA               	movwf	??___fladd
  6843  1663  085A               	movf	??___fladd,w
  6844  1664  00D5               	movwf	___fladd@b+3
  6845  1665  0865               	movf	___fladd@grs,w
  6846  1666  00DA               	movwf	??___fladd
  6847  1667  085A               	movf	??___fladd,w
  6848  1668  00D9               	movwf	___fladd@a+3
  6849  1669                     l2285:	
  6850  1669  01E5               	clrf	___fladd@grs
  6851  166A  0863               	movf	___fladd@aexp,w
  6852  166B  00DA               	movwf	??___fladd
  6853  166C  01DB               	clrf	??___fladd+1
  6854  166D  085B               	movf	??___fladd+1,w
  6855  166E  00DD               	movwf	??___fladd+3
  6856  166F  0864               	movf	___fladd@bexp,w
  6857  1670  025A               	subwf	??___fladd,w
  6858  1671  00DC               	movwf	??___fladd+2
  6859  1672  1C03               	skipc
  6860  1673  03DD               	decf	??___fladd+3,f
  6861  1674  085D               	movf	??___fladd+3,w
  6862  1675  3A80               	xorlw	128
  6863  1676  00FF               	movwf	127
  6864  1677  3080               	movlw	128
  6865  1678  027F               	subwf	127,w
  6866  1679  1D03               	skipz
  6867  167A  2E7D               	goto	u3215
  6868  167B  301A               	movlw	26
  6869  167C  025C               	subwf	??___fladd+2,w
  6870  167D                     u3215:	
  6871  167D  1C03               	skipc
  6872  167E  2EB6               	goto	l2303
  6873  167F  1283               	bcf	3,5	;RP0=0, select bank0
  6874  1680  1303               	bcf	3,6	;RP1=0, select bank0
  6875  1681  0855               	movf	___fladd@b+3,w
  6876  1682  0454               	iorwf	___fladd@b+2,w
  6877  1683  0453               	iorwf	___fladd@b+1,w
  6878  1684  0452               	iorwf	___fladd@b,w
  6879  1685  1903               	btfsc	3,2
  6880  1686  2E89               	goto	u3220
  6881  1687  3001               	movlw	1
  6882  1688  2E8A               	goto	u3230
  6883  1689                     u3220:	
  6884  1689  3000               	movlw	0
  6885  168A                     u3230:	
  6886  168A  00DA               	movwf	??___fladd
  6887  168B  085A               	movf	??___fladd,w
  6888  168C  00E5               	movwf	___fladd@grs
  6889  168D  3000               	movlw	0
  6890  168E  00D5               	movwf	___fladd@b+3
  6891  168F  3000               	movlw	0
  6892  1690  00D4               	movwf	___fladd@b+2
  6893  1691  3000               	movlw	0
  6894  1692  00D3               	movwf	___fladd@b+1
  6895  1693  3000               	movlw	0
  6896  1694  00D2               	movwf	___fladd@b
  6897  1695  0863               	movf	___fladd@aexp,w
  6898  1696  00DA               	movwf	??___fladd
  6899  1697  085A               	movf	??___fladd,w
  6900  1698  00E4               	movwf	___fladd@bexp
  6901  1699  2EBC               	goto	l579
  6902  169A                     l581:	
  6903  169A  1C65               	btfss	___fladd@grs,0
  6904  169B  2EA5               	goto	l2293
  6905  169C  0865               	movf	___fladd@grs,w
  6906  169D  00DA               	movwf	??___fladd
  6907  169E  1003               	clrc
  6908  169F  0C5A               	rrf	??___fladd,w
  6909  16A0  3801               	iorlw	1
  6910  16A1  00DB               	movwf	??___fladd+1
  6911  16A2  085B               	movf	??___fladd+1,w
  6912  16A3  00E5               	movwf	___fladd@grs
  6913  16A4  2EA7               	goto	l2295
  6914  16A5                     l2293:	
  6915  16A5  1003               	clrc
  6916  16A6  0CE5               	rrf	___fladd@grs,f
  6917  16A7                     l2295:	
  6918  16A7  1852               	btfsc	___fladd@b,0
  6919  16A8  17E5               	bsf	___fladd@grs,7
  6920  16A9  3001               	movlw	1
  6921  16AA  00DA               	movwf	??___fladd
  6922  16AB                     u3265:	
  6923  16AB  0D55               	rlf	___fladd@b+3,w
  6924  16AC  0CD5               	rrf	___fladd@b+3,f
  6925  16AD  0CD4               	rrf	___fladd@b+2,f
  6926  16AE  0CD3               	rrf	___fladd@b+1,f
  6927  16AF  0CD2               	rrf	___fladd@b,f
  6928  16B0  0BDA               	decfsz	??___fladd& (0+127),f
  6929  16B1  2EAB               	goto	u3265
  6930  16B2  3001               	movlw	1
  6931  16B3  00DA               	movwf	??___fladd
  6932  16B4  085A               	movf	??___fladd,w
  6933  16B5  07E4               	addwf	___fladd@bexp,f
  6934  16B6                     l2303:	
  6935  16B6  1283               	bcf	3,5	;RP0=0, select bank0
  6936  16B7  1303               	bcf	3,6	;RP1=0, select bank0
  6937  16B8  0863               	movf	___fladd@aexp,w
  6938  16B9  0264               	subwf	___fladd@bexp,w
  6939  16BA  1C03               	skipc
  6940  16BB  2E9A               	goto	l581
  6941  16BC                     l579:	
  6942  16BC  1B62               	btfsc	___fladd@signs,6
  6943  16BD  2EFD               	goto	l2329
  6944  16BE  0864               	movf	___fladd@bexp,w
  6945  16BF  1D03               	btfss	3,2
  6946  16C0  2ECA               	goto	l2311
  6947  16C1  3000               	movlw	0
  6948  16C2  00D5               	movwf	?___fladd+3
  6949  16C3  3000               	movlw	0
  6950  16C4  00D4               	movwf	?___fladd+2
  6951  16C5  3000               	movlw	0
  6952  16C6  00D3               	movwf	?___fladd+1
  6953  16C7  3000               	movlw	0
  6954  16C8  00D2               	movwf	?___fladd
  6955  16C9  0008               	return
  6956  16CA                     l2311:	
  6957  16CA  0856               	movf	___fladd@a,w
  6958  16CB  07D2               	addwf	___fladd@b,f
  6959  16CC  0857               	movf	___fladd@a+1,w
  6960  16CD  1103               	clrz
  6961  16CE  1803               	skipnc
  6962  16CF  3E01               	addlw	1
  6963  16D0  1D03               	btfss	3,2
  6964  16D1  07D3               	addwf	___fladd@b+1,f
  6965  16D2  0858               	movf	___fladd@a+2,w
  6966  16D3  1103               	clrz
  6967  16D4  1803               	skipnc
  6968  16D5  3E01               	addlw	1
  6969  16D6  1D03               	btfss	3,2
  6970  16D7  07D4               	addwf	___fladd@b+2,f
  6971  16D8  0859               	movf	___fladd@a+3,w
  6972  16D9  1103               	clrz
  6973  16DA  1803               	skipnc
  6974  16DB  3E01               	addlw	1
  6975  16DC  1D03               	btfss	3,2
  6976  16DD  07D5               	addwf	___fladd@b+3,f
  6977  16DE  1C55               	btfss	___fladd@b+3,0
  6978  16DF  2F9F               	goto	l2363
  6979  16E0  1C65               	btfss	___fladd@grs,0
  6980  16E1  2EEB               	goto	l2319
  6981  16E2  0865               	movf	___fladd@grs,w
  6982  16E3  00DA               	movwf	??___fladd
  6983  16E4  1003               	clrc
  6984  16E5  0C5A               	rrf	??___fladd,w
  6985  16E6  3801               	iorlw	1
  6986  16E7  00DB               	movwf	??___fladd+1
  6987  16E8  085B               	movf	??___fladd+1,w
  6988  16E9  00E5               	movwf	___fladd@grs
  6989  16EA  2EED               	goto	l2321
  6990  16EB                     l2319:	
  6991  16EB  1003               	clrc
  6992  16EC  0CE5               	rrf	___fladd@grs,f
  6993  16ED                     l2321:	
  6994  16ED  1852               	btfsc	___fladd@b,0
  6995  16EE  17E5               	bsf	___fladd@grs,7
  6996  16EF  3001               	movlw	1
  6997  16F0  00DA               	movwf	??___fladd
  6998  16F1                     u3345:	
  6999  16F1  0D55               	rlf	___fladd@b+3,w
  7000  16F2  0CD5               	rrf	___fladd@b+3,f
  7001  16F3  0CD4               	rrf	___fladd@b+2,f
  7002  16F4  0CD3               	rrf	___fladd@b+1,f
  7003  16F5  0CD2               	rrf	___fladd@b,f
  7004  16F6  0BDA               	decfsz	??___fladd& (0+127),f
  7005  16F7  2EF1               	goto	u3345
  7006  16F8  3001               	movlw	1
  7007  16F9  00DA               	movwf	??___fladd
  7008  16FA  085A               	movf	??___fladd,w
  7009  16FB  07E4               	addwf	___fladd@bexp,f
  7010  16FC  2F9F               	goto	l2363
  7011  16FD                     l2329:	
  7012  16FD  0855               	movf	___fladd@b+3,w
  7013  16FE  3A80               	xorlw	128
  7014  16FF  00FF               	movwf	127
  7015  1700  0859               	movf	___fladd@a+3,w
  7016  1701  3A80               	xorlw	128
  7017  1702  027F               	subwf	127,w
  7018  1703  1D03               	skipz
  7019  1704  2F0F               	goto	u3353
  7020  1705  0858               	movf	___fladd@a+2,w
  7021  1706  0254               	subwf	___fladd@b+2,w
  7022  1707  1D03               	skipz
  7023  1708  2F0F               	goto	u3353
  7024  1709  0857               	movf	___fladd@a+1,w
  7025  170A  0253               	subwf	___fladd@b+1,w
  7026  170B  1D03               	skipz
  7027  170C  2F0F               	goto	u3353
  7028  170D  0856               	movf	___fladd@a,w
  7029  170E  0252               	subwf	___fladd@b,w
  7030  170F                     u3353:	
  7031  170F  1803               	skipnc
  7032  1710  2F67               	goto	l2339
  7033  1711  30FF               	movlw	255
  7034  1712  00DA               	movwf	??___fladd
  7035  1713  30FF               	movlw	255
  7036  1714  00DB               	movwf	??___fladd+1
  7037  1715  30FF               	movlw	255
  7038  1716  00DC               	movwf	??___fladd+2
  7039  1717  30FF               	movlw	255
  7040  1718  00DD               	movwf	??___fladd+3
  7041  1719  0856               	movf	___fladd@a,w
  7042  171A  00DE               	movwf	??___fladd+4
  7043  171B  0857               	movf	___fladd@a+1,w
  7044  171C  00DF               	movwf	??___fladd+5
  7045  171D  0858               	movf	___fladd@a+2,w
  7046  171E  00E0               	movwf	??___fladd+6
  7047  171F  0859               	movf	___fladd@a+3,w
  7048  1720  00E1               	movwf	??___fladd+7
  7049  1721  0852               	movf	___fladd@b,w
  7050  1722  02DE               	subwf	??___fladd+4,f
  7051  1723  0853               	movf	___fladd@b+1,w
  7052  1724  1C03               	skipc
  7053  1725  0F53               	incfsz	___fladd@b+1,w
  7054  1726  2F28               	goto	u3361
  7055  1727  2F29               	goto	u3362
  7056  1728                     u3361:	
  7057  1728  02DF               	subwf	??___fladd+5,f
  7058  1729                     u3362:	
  7059  1729  0854               	movf	___fladd@b+2,w
  7060  172A  1C03               	skipc
  7061  172B  0F54               	incfsz	___fladd@b+2,w
  7062  172C  2F2E               	goto	u3363
  7063  172D  2F2F               	goto	u3364
  7064  172E                     u3363:	
  7065  172E  02E0               	subwf	??___fladd+6,f
  7066  172F                     u3364:	
  7067  172F  0855               	movf	___fladd@b+3,w
  7068  1730  1C03               	skipc
  7069  1731  0F55               	incfsz	___fladd@b+3,w
  7070  1732  2F34               	goto	u3365
  7071  1733  2F35               	goto	u3366
  7072  1734                     u3365:	
  7073  1734  02E1               	subwf	??___fladd+7,f
  7074  1735                     u3366:	
  7075  1735  085E               	movf	??___fladd+4,w
  7076  1736  07DA               	addwf	??___fladd,f
  7077  1737  085F               	movf	??___fladd+5,w
  7078  1738  1803               	skipnc
  7079  1739  0F5F               	incfsz	??___fladd+5,w
  7080  173A  2F3C               	goto	u3370
  7081  173B  2F3D               	goto	u3371
  7082  173C                     u3370:	
  7083  173C  07DB               	addwf	??___fladd+1,f
  7084  173D                     u3371:	
  7085  173D  0860               	movf	??___fladd+6,w
  7086  173E  1803               	skipnc
  7087  173F  0F60               	incfsz	??___fladd+6,w
  7088  1740  2F42               	goto	u3372
  7089  1741  2F43               	goto	u3373
  7090  1742                     u3372:	
  7091  1742  07DC               	addwf	??___fladd+2,f
  7092  1743                     u3373:	
  7093  1743  0861               	movf	??___fladd+7,w
  7094  1744  1803               	skipnc
  7095  1745  0A61               	incf	??___fladd+7,w
  7096  1746  07DD               	addwf	??___fladd+3,f
  7097  1747  085D               	movf	??___fladd+3,w
  7098  1748  00D5               	movwf	___fladd@b+3
  7099  1749  085C               	movf	??___fladd+2,w
  7100  174A  00D4               	movwf	___fladd@b+2
  7101  174B  085B               	movf	??___fladd+1,w
  7102  174C  00D3               	movwf	___fladd@b+1
  7103  174D  085A               	movf	??___fladd,w
  7104  174E  00D2               	movwf	___fladd@b
  7105  174F  3080               	movlw	128
  7106  1750  00DA               	movwf	??___fladd
  7107  1751  085A               	movf	??___fladd,w
  7108  1752  06E2               	xorwf	___fladd@signs,f
  7109  1753  09E5               	comf	___fladd@grs,f
  7110  1754  0AE5               	incf	___fladd@grs,f
  7111  1755  0865               	movf	___fladd@grs,w
  7112  1756  1D03               	btfss	3,2
  7113  1757  2F75               	goto	l596
  7114  1758  3001               	movlw	1
  7115  1759  07D2               	addwf	___fladd@b,f
  7116  175A  3000               	movlw	0
  7117  175B  1803               	skipnc
  7118  175C  3001               	movlw	1
  7119  175D  07D3               	addwf	___fladd@b+1,f
  7120  175E  3000               	movlw	0
  7121  175F  1803               	skipnc
  7122  1760  3001               	movlw	1
  7123  1761  07D4               	addwf	___fladd@b+2,f
  7124  1762  3000               	movlw	0
  7125  1763  1803               	skipnc
  7126  1764  3001               	movlw	1
  7127  1765  07D5               	addwf	___fladd@b+3,f
  7128  1766  2F75               	goto	l596
  7129  1767                     l2339:	
  7130  1767  0856               	movf	___fladd@a,w
  7131  1768  02D2               	subwf	___fladd@b,f
  7132  1769  0857               	movf	___fladd@a+1,w
  7133  176A  1C03               	skipc
  7134  176B  0F57               	incfsz	___fladd@a+1,w
  7135  176C  02D3               	subwf	___fladd@b+1,f
  7136  176D  0858               	movf	___fladd@a+2,w
  7137  176E  1C03               	skipc
  7138  176F  0F58               	incfsz	___fladd@a+2,w
  7139  1770  02D4               	subwf	___fladd@b+2,f
  7140  1771  0859               	movf	___fladd@a+3,w
  7141  1772  1C03               	skipc
  7142  1773  0F59               	incfsz	___fladd@a+3,w
  7143  1774  02D5               	subwf	___fladd@b+3,f
  7144  1775                     l596:	
  7145  1775  0855               	movf	___fladd@b+3,w
  7146  1776  0454               	iorwf	___fladd@b+2,w
  7147  1777  0453               	iorwf	___fladd@b+1,w
  7148  1778  0452               	iorwf	___fladd@b,w
  7149  1779  1D03               	skipz
  7150  177A  2F9D               	goto	l2361
  7151  177B  0865               	movf	___fladd@grs,w
  7152  177C  1D03               	btfss	3,2
  7153  177D  2F9D               	goto	l2361
  7154  177E  3000               	movlw	0
  7155  177F  00D5               	movwf	?___fladd+3
  7156  1780  3000               	movlw	0
  7157  1781  00D4               	movwf	?___fladd+2
  7158  1782  3000               	movlw	0
  7159  1783  00D3               	movwf	?___fladd+1
  7160  1784  3000               	movlw	0
  7161  1785  00D2               	movwf	?___fladd
  7162  1786  0008               	return
  7163  1787                     l2347:	
  7164  1787  3001               	movlw	1
  7165  1788  00DA               	movwf	??___fladd
  7166  1789                     u3415:	
  7167  1789  1003               	clrc
  7168  178A  0DD2               	rlf	___fladd@b,f
  7169  178B  0DD3               	rlf	___fladd@b+1,f
  7170  178C  0DD4               	rlf	___fladd@b+2,f
  7171  178D  0DD5               	rlf	___fladd@b+3,f
  7172  178E  0BDA               	decfsz	??___fladd,f
  7173  178F  2F89               	goto	u3415
  7174  1790  1BE5               	btfsc	___fladd@grs,7
  7175  1791  1452               	bsf	___fladd@b,0
  7176  1792  1C65               	btfss	___fladd@grs,0
  7177  1793  2F96               	goto	l2355
  7178  1794  1403               	setc
  7179  1795  2F97               	goto	L7
  7180  1796                     l2355:	
  7181  1796  1003               	clrc
  7182  1797                     L7:	
  7183  1797  0DE5               	rlf	___fladd@grs,f
  7184  1798  0864               	movf	___fladd@bexp,w
  7185  1799  1903               	btfsc	3,2
  7186  179A  2F9D               	goto	l2361
  7187  179B  3001               	movlw	1
  7188  179C  02E4               	subwf	___fladd@bexp,f
  7189  179D                     l2361:	
  7190  179D  1FD4               	btfss	___fladd@b+2,7
  7191  179E  2F87               	goto	l2347
  7192  179F                     l2363:	
  7193  179F  01E3               	clrf	___fladd@aexp
  7194  17A0  1FE5               	btfss	___fladd@grs,7
  7195  17A1  2FAA               	goto	l2373
  7196  17A2  0865               	movf	___fladd@grs,w
  7197  17A3  397F               	andlw	127
  7198  17A4  1903               	btfsc	3,2
  7199  17A5  1852               	btfsc	___fladd@b,0
  7200  17A6  2FA8               	goto	l2369
  7201  17A7  2FAA               	goto	l2373
  7202  17A8                     l2369:	
  7203  17A8  01E3               	clrf	___fladd@aexp
  7204  17A9  0AE3               	incf	___fladd@aexp,f
  7205  17AA                     l2373:	
  7206  17AA  0863               	movf	___fladd@aexp,w
  7207  17AB  1903               	btfsc	3,2
  7208  17AC  2FDD               	goto	l609
  7209  17AD  3001               	movlw	1
  7210  17AE  07D2               	addwf	___fladd@b,f
  7211  17AF  3000               	movlw	0
  7212  17B0  1803               	skipnc
  7213  17B1  3001               	movlw	1
  7214  17B2  07D3               	addwf	___fladd@b+1,f
  7215  17B3  3000               	movlw	0
  7216  17B4  1803               	skipnc
  7217  17B5  3001               	movlw	1
  7218  17B6  07D4               	addwf	___fladd@b+2,f
  7219  17B7  3000               	movlw	0
  7220  17B8  1803               	skipnc
  7221  17B9  3001               	movlw	1
  7222  17BA  07D5               	addwf	___fladd@b+3,f
  7223  17BB  1C55               	btfss	___fladd@b+3,0
  7224  17BC  2FDD               	goto	l609
  7225  17BD  0852               	movf	___fladd@b,w
  7226  17BE  00DA               	movwf	??___fladd
  7227  17BF  0853               	movf	___fladd@b+1,w
  7228  17C0  00DB               	movwf	??___fladd+1
  7229  17C1  0854               	movf	___fladd@b+2,w
  7230  17C2  00DC               	movwf	??___fladd+2
  7231  17C3  0855               	movf	___fladd@b+3,w
  7232  17C4  00DD               	movwf	??___fladd+3
  7233  17C5  3001               	movlw	1
  7234  17C6  00DE               	movwf	??___fladd+4
  7235  17C7                     u3515:	
  7236  17C7  0D5D               	rlf	??___fladd+3,w
  7237  17C8  0CDD               	rrf	??___fladd+3,f
  7238  17C9  0CDC               	rrf	??___fladd+2,f
  7239  17CA  0CDB               	rrf	??___fladd+1,f
  7240  17CB  0CDA               	rrf	??___fladd,f
  7241  17CC  0BDE               	decfsz	??___fladd+4,f
  7242  17CD  2FC7               	goto	u3515
  7243  17CE  085D               	movf	??___fladd+3,w
  7244  17CF  00D5               	movwf	___fladd@b+3
  7245  17D0  085C               	movf	??___fladd+2,w
  7246  17D1  00D4               	movwf	___fladd@b+2
  7247  17D2  085B               	movf	??___fladd+1,w
  7248  17D3  00D3               	movwf	___fladd@b+1
  7249  17D4  085A               	movf	??___fladd,w
  7250  17D5  00D2               	movwf	___fladd@b
  7251  17D6  0A64               	incf	___fladd@bexp,w
  7252  17D7  1903               	btfsc	3,2
  7253  17D8  2FDD               	goto	l609
  7254  17D9  3001               	movlw	1
  7255  17DA  00DA               	movwf	??___fladd
  7256  17DB  085A               	movf	??___fladd,w
  7257  17DC  07E4               	addwf	___fladd@bexp,f
  7258  17DD                     l609:	
  7259  17DD  0A64               	incf	___fladd@bexp,w
  7260  17DE  1D03               	btfss	3,2
  7261  17DF  0864               	movf	___fladd@bexp,w
  7262  17E0  1D03               	btfss	3,2
  7263  17E1  2FED               	goto	l2391
  7264  17E2  3000               	movlw	0
  7265  17E3  00D5               	movwf	___fladd@b+3
  7266  17E4  3000               	movlw	0
  7267  17E5  00D4               	movwf	___fladd@b+2
  7268  17E6  3000               	movlw	0
  7269  17E7  00D3               	movwf	___fladd@b+1
  7270  17E8  3000               	movlw	0
  7271  17E9  00D2               	movwf	___fladd@b
  7272  17EA  0864               	movf	___fladd@bexp,w
  7273  17EB  1903               	btfsc	3,2
  7274  17EC  01E2               	clrf	___fladd@signs
  7275  17ED                     l2391:	
  7276  17ED  1C64               	btfss	___fladd@bexp,0
  7277  17EE  2FF1               	goto	l2395
  7278  17EF  17D4               	bsf	___fladd@b+2,7
  7279  17F0  2FF5               	goto	l617
  7280  17F1                     l2395:	
  7281  17F1  307F               	movlw	127
  7282  17F2  00DA               	movwf	??___fladd
  7283  17F3  085A               	movf	??___fladd,w
  7284  17F4  05D4               	andwf	___fladd@b+2,f
  7285  17F5                     l617:	
  7286  17F5  0864               	movf	___fladd@bexp,w
  7287  17F6  00DA               	movwf	??___fladd
  7288  17F7  1003               	clrc
  7289  17F8  0C5A               	rrf	??___fladd,w
  7290  17F9  00DB               	movwf	??___fladd+1
  7291  17FA  085B               	movf	??___fladd+1,w
  7292  17FB  00D5               	movwf	___fladd@b+3
  7293  17FC  1FE2               	btfss	___fladd@signs,7
  7294  17FD  0008               	return
  7295  17FE  17D5               	bsf	___fladd@b+3,7
  7296  17FF  0008               	return
  7297  1800                     __end_of___fladd:	
  7298                           
  7299                           	psect	text20
  7300  1F03                     __ptext20:	
  7301 ;; *************** function ___flneg *****************
  7302 ;; Defined at:
  7303 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flneg.c"
  7304 ;; Parameters:    Size  Location     Type
  7305 ;;  f1              4    0[COMMON] unsigned char 
  7306 ;; Auto vars:     Size  Location     Type
  7307 ;;		None
  7308 ;; Return value:  Size  Location     Type
  7309 ;;                  4    0[COMMON] unsigned char 
  7310 ;; Registers used:
  7311 ;;		wreg
  7312 ;; Tracked objects:
  7313 ;;		On entry : 0/0
  7314 ;;		On exit  : 0/0
  7315 ;;		Unchanged: 0/0
  7316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7317 ;;      Params:         4       0       0       0       0
  7318 ;;      Locals:         0       0       0       0       0
  7319 ;;      Temps:          0       0       0       0       0
  7320 ;;      Totals:         4       0       0       0       0
  7321 ;;Total ram usage:        4 bytes
  7322 ;; Hardware stack levels used:    1
  7323 ;; This function calls:
  7324 ;;		Nothing
  7325 ;; This function is called by:
  7326 ;;		_sprintf
  7327 ;; This function uses a non-reentrant model
  7328 ;;
  7329                           
  7330                           
  7331                           ;psect for function ___flneg
  7332  1F03                     ___flneg:	
  7333                           
  7334                           ;incstack = 0
  7335                           ; Regs used in ___flneg: [wreg]
  7336  1F03  0873               	movf	___flneg@f1+3,w
  7337  1F04  0472               	iorwf	___flneg@f1+2,w
  7338  1F05  0471               	iorwf	___flneg@f1+1,w
  7339  1F06  0470               	iorwf	___flneg@f1,w
  7340  1F07  1903               	skipnz
  7341  1F08  0008               	return
  7342  1F09  3080               	movlw	128
  7343  1F0A  06F3               	xorwf	___flneg@f1+3,f
  7344  1F0B  0008               	return
  7345  1F0C                     __end_of___flneg:	
  7346                           
  7347                           	psect	text21
  7348  1348                     __ptext21:	
  7349 ;; *************** function ___flge *****************
  7350 ;; Defined at:
  7351 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\flge.c"
  7352 ;; Parameters:    Size  Location     Type
  7353 ;;  ff1             4    0[COMMON] unsigned char 
  7354 ;;  ff2             4    4[COMMON] unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;		None               void
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7366 ;;      Params:         8       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0
  7368 ;;      Temps:          4       0       0       0       0
  7369 ;;      Totals:        12       0       0       0       0
  7370 ;;Total ram usage:       12 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; This function calls:
  7373 ;;		Nothing
  7374 ;; This function is called by:
  7375 ;;		_sprintf
  7376 ;; This function uses a non-reentrant model
  7377 ;;
  7378                           
  7379                           
  7380                           ;psect for function ___flge
  7381  1348                     ___flge:	
  7382                           
  7383                           ;incstack = 0
  7384                           ; Regs used in ___flge: [wreg+status,2+status,0]
  7385  1348  3000               	movlw	0
  7386  1349  0570               	andwf	___flge@ff1,w
  7387  134A  00F8               	movwf	??___flge
  7388  134B  3000               	movlw	0
  7389  134C  0571               	andwf	___flge@ff1+1,w
  7390  134D  00F9               	movwf	??___flge+1
  7391  134E  3080               	movlw	128
  7392  134F  0572               	andwf	___flge@ff1+2,w
  7393  1350  00FA               	movwf	??___flge+2
  7394  1351  307F               	movlw	127
  7395  1352  0573               	andwf	___flge@ff1+3,w
  7396  1353  00FB               	movwf	??___flge+3
  7397  1354  087B               	movf	??___flge+3,w
  7398  1355  047A               	iorwf	??___flge+2,w
  7399  1356  0479               	iorwf	??___flge+1,w
  7400  1357  0478               	iorwf	??___flge,w
  7401  1358  1D03               	skipz
  7402  1359  2B62               	goto	l439
  7403  135A  3000               	movlw	0
  7404  135B  00F3               	movwf	___flge@ff1+3
  7405  135C  3000               	movlw	0
  7406  135D  00F2               	movwf	___flge@ff1+2
  7407  135E  3000               	movlw	0
  7408  135F  00F1               	movwf	___flge@ff1+1
  7409  1360  3000               	movlw	0
  7410  1361  00F0               	movwf	___flge@ff1
  7411  1362                     l439:	
  7412  1362  3000               	movlw	0
  7413  1363  0574               	andwf	___flge@ff2,w
  7414  1364  00F8               	movwf	??___flge
  7415  1365  3000               	movlw	0
  7416  1366  0575               	andwf	___flge@ff2+1,w
  7417  1367  00F9               	movwf	??___flge+1
  7418  1368  3080               	movlw	128
  7419  1369  0576               	andwf	___flge@ff2+2,w
  7420  136A  00FA               	movwf	??___flge+2
  7421  136B  307F               	movlw	127
  7422  136C  0577               	andwf	___flge@ff2+3,w
  7423  136D  00FB               	movwf	??___flge+3
  7424  136E  087B               	movf	??___flge+3,w
  7425  136F  047A               	iorwf	??___flge+2,w
  7426  1370  0479               	iorwf	??___flge+1,w
  7427  1371  0478               	iorwf	??___flge,w
  7428  1372  1D03               	skipz
  7429  1373  2B7C               	goto	l2813
  7430  1374  3000               	movlw	0
  7431  1375  00F7               	movwf	___flge@ff2+3
  7432  1376  3000               	movlw	0
  7433  1377  00F6               	movwf	___flge@ff2+2
  7434  1378  3000               	movlw	0
  7435  1379  00F5               	movwf	___flge@ff2+1
  7436  137A  3000               	movlw	0
  7437  137B  00F4               	movwf	___flge@ff2
  7438  137C                     l2813:	
  7439  137C  1FF3               	btfss	___flge@ff1+3,7
  7440  137D  2BA2               	goto	l2817
  7441  137E  3000               	movlw	0
  7442  137F  00F8               	movwf	??___flge
  7443  1380  3000               	movlw	0
  7444  1381  00F9               	movwf	??___flge+1
  7445  1382  3000               	movlw	0
  7446  1383  00FA               	movwf	??___flge+2
  7447  1384  3080               	movlw	128
  7448  1385  00FB               	movwf	??___flge+3
  7449  1386  0870               	movf	___flge@ff1,w
  7450  1387  02F8               	subwf	??___flge,f
  7451  1388  0871               	movf	___flge@ff1+1,w
  7452  1389  1C03               	skipc
  7453  138A  0F71               	incfsz	___flge@ff1+1,w
  7454  138B  2B8D               	goto	u4681
  7455  138C  2B8E               	goto	u4682
  7456  138D                     u4681:	
  7457  138D  02F9               	subwf	??___flge+1,f
  7458  138E                     u4682:	
  7459  138E  0872               	movf	___flge@ff1+2,w
  7460  138F  1C03               	skipc
  7461  1390  0F72               	incfsz	___flge@ff1+2,w
  7462  1391  2B93               	goto	u4683
  7463  1392  2B94               	goto	u4684
  7464  1393                     u4683:	
  7465  1393  02FA               	subwf	??___flge+2,f
  7466  1394                     u4684:	
  7467  1394  0873               	movf	___flge@ff1+3,w
  7468  1395  1C03               	skipc
  7469  1396  0F73               	incfsz	___flge@ff1+3,w
  7470  1397  2B99               	goto	u4685
  7471  1398  2B9A               	goto	u4686
  7472  1399                     u4685:	
  7473  1399  02FB               	subwf	??___flge+3,f
  7474  139A                     u4686:	
  7475  139A  087B               	movf	??___flge+3,w
  7476  139B  00F3               	movwf	___flge@ff1+3
  7477  139C  087A               	movf	??___flge+2,w
  7478  139D  00F2               	movwf	___flge@ff1+2
  7479  139E  0879               	movf	??___flge+1,w
  7480  139F  00F1               	movwf	___flge@ff1+1
  7481  13A0  0878               	movf	??___flge,w
  7482  13A1  00F0               	movwf	___flge@ff1
  7483  13A2                     l2817:	
  7484  13A2  1FF7               	btfss	___flge@ff2+3,7
  7485  13A3  2BC8               	goto	l442
  7486  13A4  3000               	movlw	0
  7487  13A5  00F8               	movwf	??___flge
  7488  13A6  3000               	movlw	0
  7489  13A7  00F9               	movwf	??___flge+1
  7490  13A8  3000               	movlw	0
  7491  13A9  00FA               	movwf	??___flge+2
  7492  13AA  3080               	movlw	128
  7493  13AB  00FB               	movwf	??___flge+3
  7494  13AC  0874               	movf	___flge@ff2,w
  7495  13AD  02F8               	subwf	??___flge,f
  7496  13AE  0875               	movf	___flge@ff2+1,w
  7497  13AF  1C03               	skipc
  7498  13B0  0F75               	incfsz	___flge@ff2+1,w
  7499  13B1  2BB3               	goto	u4701
  7500  13B2  2BB4               	goto	u4702
  7501  13B3                     u4701:	
  7502  13B3  02F9               	subwf	??___flge+1,f
  7503  13B4                     u4702:	
  7504  13B4  0876               	movf	___flge@ff2+2,w
  7505  13B5  1C03               	skipc
  7506  13B6  0F76               	incfsz	___flge@ff2+2,w
  7507  13B7  2BB9               	goto	u4703
  7508  13B8  2BBA               	goto	u4704
  7509  13B9                     u4703:	
  7510  13B9  02FA               	subwf	??___flge+2,f
  7511  13BA                     u4704:	
  7512  13BA  0877               	movf	___flge@ff2+3,w
  7513  13BB  1C03               	skipc
  7514  13BC  0F77               	incfsz	___flge@ff2+3,w
  7515  13BD  2BBF               	goto	u4705
  7516  13BE  2BC0               	goto	u4706
  7517  13BF                     u4705:	
  7518  13BF  02FB               	subwf	??___flge+3,f
  7519  13C0                     u4706:	
  7520  13C0  087B               	movf	??___flge+3,w
  7521  13C1  00F7               	movwf	___flge@ff2+3
  7522  13C2  087A               	movf	??___flge+2,w
  7523  13C3  00F6               	movwf	___flge@ff2+2
  7524  13C4  0879               	movf	??___flge+1,w
  7525  13C5  00F5               	movwf	___flge@ff2+1
  7526  13C6  0878               	movf	??___flge,w
  7527  13C7  00F4               	movwf	___flge@ff2
  7528  13C8                     l442:	
  7529  13C8  3080               	movlw	128
  7530  13C9  06F3               	xorwf	___flge@ff1+3,f
  7531  13CA  3080               	movlw	128
  7532  13CB  06F7               	xorwf	___flge@ff2+3,f
  7533  13CC  0877               	movf	___flge@ff2+3,w
  7534  13CD  0273               	subwf	___flge@ff1+3,w
  7535  13CE  1D03               	skipz
  7536  13CF  0008               	return
  7537  13D0  0876               	movf	___flge@ff2+2,w
  7538  13D1  0272               	subwf	___flge@ff1+2,w
  7539  13D2  1D03               	skipz
  7540  13D3  0008               	return
  7541  13D4  0875               	movf	___flge@ff2+1,w
  7542  13D5  0271               	subwf	___flge@ff1+1,w
  7543  13D6  1D03               	skipz
  7544  13D7  0008               	return
  7545  13D8  0874               	movf	___flge@ff2,w
  7546  13D9  0270               	subwf	___flge@ff1,w
  7547  13DA  0008               	return
  7548  13DB                     __end_of___flge:	
  7549                           
  7550                           	psect	text22
  7551  104C                     __ptext22:	
  7552 ;; *************** function ___fleq *****************
  7553 ;; Defined at:
  7554 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\fleq.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  ff1             4    0[COMMON] unsigned char 
  7557 ;;  ff2             4    4[COMMON] unsigned char 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;		None               void
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         8       0       0       0       0
  7570 ;;      Locals:         0       0       0       0       0
  7571 ;;      Temps:          4       0       0       0       0
  7572 ;;      Totals:        12       0       0       0       0
  7573 ;;Total ram usage:       12 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; This function calls:
  7576 ;;		Nothing
  7577 ;; This function is called by:
  7578 ;;		_sprintf
  7579 ;; This function uses a non-reentrant model
  7580 ;;
  7581                           
  7582                           
  7583                           ;psect for function ___fleq
  7584  104C                     ___fleq:	
  7585                           
  7586                           ;incstack = 0
  7587                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  7588  104C  3000               	movlw	0
  7589  104D  0570               	andwf	___fleq@ff1,w
  7590  104E  00F8               	movwf	??___fleq
  7591  104F  3000               	movlw	0
  7592  1050  0571               	andwf	___fleq@ff1+1,w
  7593  1051  00F9               	movwf	??___fleq+1
  7594  1052  3080               	movlw	128
  7595  1053  0572               	andwf	___fleq@ff1+2,w
  7596  1054  00FA               	movwf	??___fleq+2
  7597  1055  307F               	movlw	127
  7598  1056  0573               	andwf	___fleq@ff1+3,w
  7599  1057  00FB               	movwf	??___fleq+3
  7600  1058  087B               	movf	??___fleq+3,w
  7601  1059  047A               	iorwf	??___fleq+2,w
  7602  105A  0479               	iorwf	??___fleq+1,w
  7603  105B  0478               	iorwf	??___fleq,w
  7604  105C  1D03               	skipz
  7605  105D  2866               	goto	l434
  7606  105E  3000               	movlw	0
  7607  105F  00F3               	movwf	___fleq@ff1+3
  7608  1060  3000               	movlw	0
  7609  1061  00F2               	movwf	___fleq@ff1+2
  7610  1062  3000               	movlw	0
  7611  1063  00F1               	movwf	___fleq@ff1+1
  7612  1064  3000               	movlw	0
  7613  1065  00F0               	movwf	___fleq@ff1
  7614  1066                     l434:	
  7615  1066  3000               	movlw	0
  7616  1067  0574               	andwf	___fleq@ff2,w
  7617  1068  00F8               	movwf	??___fleq
  7618  1069  3000               	movlw	0
  7619  106A  0575               	andwf	___fleq@ff2+1,w
  7620  106B  00F9               	movwf	??___fleq+1
  7621  106C  3080               	movlw	128
  7622  106D  0576               	andwf	___fleq@ff2+2,w
  7623  106E  00FA               	movwf	??___fleq+2
  7624  106F  307F               	movlw	127
  7625  1070  0577               	andwf	___fleq@ff2+3,w
  7626  1071  00FB               	movwf	??___fleq+3
  7627  1072  087B               	movf	??___fleq+3,w
  7628  1073  047A               	iorwf	??___fleq+2,w
  7629  1074  0479               	iorwf	??___fleq+1,w
  7630  1075  0478               	iorwf	??___fleq,w
  7631  1076  1D03               	skipz
  7632  1077  2880               	goto	l435
  7633  1078  3000               	movlw	0
  7634  1079  00F7               	movwf	___fleq@ff2+3
  7635  107A  3000               	movlw	0
  7636  107B  00F6               	movwf	___fleq@ff2+2
  7637  107C  3000               	movlw	0
  7638  107D  00F5               	movwf	___fleq@ff2+1
  7639  107E  3000               	movlw	0
  7640  107F  00F4               	movwf	___fleq@ff2
  7641  1080                     l435:	
  7642  1080  0877               	movf	___fleq@ff2+3,w
  7643  1081  0673               	xorwf	___fleq@ff1+3,w
  7644  1082  1D03               	skipz
  7645  1083  288E               	goto	u4645
  7646  1084  0876               	movf	___fleq@ff2+2,w
  7647  1085  0672               	xorwf	___fleq@ff1+2,w
  7648  1086  1D03               	skipz
  7649  1087  288E               	goto	u4645
  7650  1088  0875               	movf	___fleq@ff2+1,w
  7651  1089  0671               	xorwf	___fleq@ff1+1,w
  7652  108A  1D03               	skipz
  7653  108B  288E               	goto	u4645
  7654  108C  0874               	movf	___fleq@ff2,w
  7655  108D  0670               	xorwf	___fleq@ff1,w
  7656  108E                     u4645:	
  7657  108E  1903               	skipnz
  7658  108F  2892               	goto	l2803
  7659  1090  1003               	clrc
  7660  1091  0008               	return
  7661  1092                     l2803:	
  7662  1092  1403               	setc
  7663  1093  0008               	return
  7664  1094                     __end_of___fleq:	
  7665                           
  7666                           	psect	text23
  7667  1175                     __ptext23:	
  7668 ;; *************** function _Lcd_Start *****************
  7669 ;; Defined at:
  7670 ;;		line 90 in file "main.c"
  7671 ;; Parameters:    Size  Location     Type
  7672 ;;		None
  7673 ;; Auto vars:     Size  Location     Type
  7674 ;;  i               2    0        int 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, status,2, status,0, pclath, cstack
  7679 ;; Tracked objects:
  7680 ;;		On entry : 0/0
  7681 ;;		On exit  : 0/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7684 ;;      Params:         0       0       0       0       0
  7685 ;;      Locals:         2       0       0       0       0
  7686 ;;      Temps:          2       0       0       0       0
  7687 ;;      Totals:         4       0       0       0       0
  7688 ;;Total ram usage:        4 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    2
  7691 ;; This function calls:
  7692 ;;		_Lcd_Cmd
  7693 ;;		_Lcd_SetBit
  7694 ;; This function is called by:
  7695 ;;		_main
  7696 ;; This function uses a non-reentrant model
  7697 ;;
  7698                           
  7699                           
  7700                           ;psect for function _Lcd_Start
  7701  1175                     _Lcd_Start:	
  7702                           
  7703                           ;main.c: 92:   Lcd_SetBit(0x00);
  7704                           
  7705                           ;incstack = 0
  7706                           ; Regs used in _Lcd_Start: [wreg+status,2+status,0+pclath+cstack]
  7707  1175  3000               	movlw	0
  7708  1176  160A  158A  271A  160A  118A  	fcall	_Lcd_SetBit
  7709                           
  7710                           ;main.c: 94:   Lcd_Cmd(0x03);
  7711  117B  3003               	movlw	3
  7712  117C  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7713                           
  7714                           ;main.c: 95:     _delay((unsigned long)((5)*(4000000/4000.0)));
  7715  1181  3007               	movlw	7
  7716  1182  00F5               	movwf	??_Lcd_Start+1
  7717  1183  307D               	movlw	125
  7718  1184  00F4               	movwf	??_Lcd_Start
  7719  1185                     u5467:	
  7720  1185  0BF4               	decfsz	??_Lcd_Start,f
  7721  1186  2985               	goto	u5467
  7722  1187  0BF5               	decfsz	??_Lcd_Start+1,f
  7723  1188  2985               	goto	u5467
  7724                           
  7725                           ;main.c: 96:   Lcd_Cmd(0x03);
  7726  1189  3003               	movlw	3
  7727  118A  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7728                           
  7729                           ;main.c: 97:     _delay((unsigned long)((11)*(4000000/4000.0)));
  7730  118F  300F               	movlw	15
  7731  1190  00F5               	movwf	??_Lcd_Start+1
  7732  1191  3047               	movlw	71
  7733  1192  00F4               	movwf	??_Lcd_Start
  7734  1193                     u5477:	
  7735  1193  0BF4               	decfsz	??_Lcd_Start,f
  7736  1194  2993               	goto	u5477
  7737  1195  0BF5               	decfsz	??_Lcd_Start+1,f
  7738  1196  2993               	goto	u5477
  7739  1197  2998               	nop2
  7740                           
  7741                           ;main.c: 98:   Lcd_Cmd(0x03);
  7742  1198  3003               	movlw	3
  7743  1199  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7744                           
  7745                           ;main.c: 99:   Lcd_Cmd(0x02);
  7746  119E  3002               	movlw	2
  7747  119F  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7748                           
  7749                           ;main.c: 100:   Lcd_Cmd(0x02);
  7750  11A4  3002               	movlw	2
  7751  11A5  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7752                           
  7753                           ;main.c: 101:   Lcd_Cmd(0x08);
  7754  11AA  3008               	movlw	8
  7755  11AB  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7756                           
  7757                           ;main.c: 102:   Lcd_Cmd(0x00);
  7758  11B0  3000               	movlw	0
  7759  11B1  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7760                           
  7761                           ;main.c: 103:   Lcd_Cmd(0x0C);
  7762  11B6  300C               	movlw	12
  7763  11B7  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7764                           
  7765                           ;main.c: 104:   Lcd_Cmd(0x00);
  7766  11BC  3000               	movlw	0
  7767  11BD  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7768                           
  7769                           ;main.c: 105:   Lcd_Cmd(0x06);
  7770  11C2  3006               	movlw	6
  7771  11C3  160A  158A  2734   	fcall	_Lcd_Cmd
  7772  11C6  0008               	return
  7773  11C7                     __end_of_Lcd_Start:	
  7774                           
  7775                           	psect	text24
  7776  1094                     __ptext24:	
  7777 ;; *************** function _Lcd_Set_Cursor *****************
  7778 ;; Defined at:
  7779 ;;		line 69 in file "main.c"
  7780 ;; Parameters:    Size  Location     Type
  7781 ;;  a               1    wreg     unsigned char 
  7782 ;;  b               1    4[COMMON] unsigned char 
  7783 ;; Auto vars:     Size  Location     Type
  7784 ;;  a               1    7[COMMON] unsigned char 
  7785 ;;  temp            1   10[COMMON] unsigned char 
  7786 ;;  y               1    9[COMMON] unsigned char 
  7787 ;;  z               1    8[COMMON] unsigned char 
  7788 ;; Return value:  Size  Location     Type
  7789 ;;                  1    wreg      void 
  7790 ;; Registers used:
  7791 ;;		wreg, status,2, status,0, pclath, cstack
  7792 ;; Tracked objects:
  7793 ;;		On entry : 0/0
  7794 ;;		On exit  : 0/0
  7795 ;;		Unchanged: 0/0
  7796 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7797 ;;      Params:         1       0       0       0       0
  7798 ;;      Locals:         4       0       0       0       0
  7799 ;;      Temps:          2       0       0       0       0
  7800 ;;      Totals:         7       0       0       0       0
  7801 ;;Total ram usage:        7 bytes
  7802 ;; Hardware stack levels used:    1
  7803 ;; Hardware stack levels required when called:    2
  7804 ;; This function calls:
  7805 ;;		_Lcd_Cmd
  7806 ;; This function is called by:
  7807 ;;		_main
  7808 ;; This function uses a non-reentrant model
  7809 ;;
  7810                           
  7811                           
  7812                           ;psect for function _Lcd_Set_Cursor
  7813  1094                     _Lcd_Set_Cursor:	
  7814                           
  7815                           ;incstack = 0
  7816                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  7817                           ;Lcd_Set_Cursor@a stored from wreg
  7818  1094  00F7               	movwf	Lcd_Set_Cursor@a
  7819                           
  7820                           ;main.c: 69: void Lcd_Set_Cursor(char a, char b);main.c: 70: {;main.c: 71:     char temp
      +                          ,z,y;;main.c: 72:     if(a== 1)
  7821  1095  0377               	decf	Lcd_Set_Cursor@a,w
  7822  1096  1D03               	btfss	3,2
  7823  1097  28B9               	goto	l2953
  7824                           
  7825                           ;main.c: 73:     {;main.c: 74:       temp = 0x80 + b - 1;
  7826  1098  0874               	movf	Lcd_Set_Cursor@b,w
  7827  1099  3E7F               	addlw	127
  7828  109A  00F5               	movwf	??_Lcd_Set_Cursor
  7829  109B  0875               	movf	??_Lcd_Set_Cursor,w
  7830  109C  00FA               	movwf	Lcd_Set_Cursor@temp
  7831                           
  7832                           ;main.c: 75:         z = temp>>4;
  7833  109D  087A               	movf	Lcd_Set_Cursor@temp,w
  7834  109E  00F5               	movwf	??_Lcd_Set_Cursor
  7835  109F  3004               	movlw	4
  7836  10A0                     u5045:	
  7837  10A0  1003               	clrc
  7838  10A1  0CF5               	rrf	??_Lcd_Set_Cursor,f
  7839  10A2  3EFF               	addlw	-1
  7840  10A3  1D03               	skipz
  7841  10A4  28A0               	goto	u5045
  7842  10A5  0875               	movf	??_Lcd_Set_Cursor,w
  7843  10A6  00F6               	movwf	??_Lcd_Set_Cursor+1
  7844  10A7  0876               	movf	??_Lcd_Set_Cursor+1,w
  7845  10A8  00F8               	movwf	Lcd_Set_Cursor@z
  7846                           
  7847                           ;main.c: 76:         y = temp & 0x0F;
  7848  10A9  087A               	movf	Lcd_Set_Cursor@temp,w
  7849  10AA  390F               	andlw	15
  7850  10AB  00F5               	movwf	??_Lcd_Set_Cursor
  7851  10AC  0875               	movf	??_Lcd_Set_Cursor,w
  7852  10AD  00F9               	movwf	Lcd_Set_Cursor@y
  7853                           
  7854                           ;main.c: 77:         Lcd_Cmd(z);
  7855  10AE  0878               	movf	Lcd_Set_Cursor@z,w
  7856  10AF  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7857                           
  7858                           ;main.c: 78:         Lcd_Cmd(y);
  7859  10B4  0879               	movf	Lcd_Set_Cursor@y,w
  7860  10B5  160A  158A  2734   	fcall	_Lcd_Cmd
  7861                           
  7862                           ;main.c: 79:     }
  7863  10B8  0008               	return
  7864  10B9                     l2953:	
  7865  10B9  3002               	movlw	2
  7866  10BA  0677               	xorwf	Lcd_Set_Cursor@a,w
  7867  10BB  1D03               	btfss	3,2
  7868  10BC  0008               	return
  7869                           
  7870                           ;main.c: 81:     {;main.c: 82:         temp = 0xC0 + b - 1;
  7871  10BD  0874               	movf	Lcd_Set_Cursor@b,w
  7872  10BE  3EBF               	addlw	191
  7873  10BF  00F5               	movwf	??_Lcd_Set_Cursor
  7874  10C0  0875               	movf	??_Lcd_Set_Cursor,w
  7875  10C1  00FA               	movwf	Lcd_Set_Cursor@temp
  7876                           
  7877                           ;main.c: 83:         z = temp>>4;
  7878  10C2  087A               	movf	Lcd_Set_Cursor@temp,w
  7879  10C3  00F5               	movwf	??_Lcd_Set_Cursor
  7880  10C4  3004               	movlw	4
  7881  10C5                     u5065:	
  7882  10C5  1003               	clrc
  7883  10C6  0CF5               	rrf	??_Lcd_Set_Cursor,f
  7884  10C7  3EFF               	addlw	-1
  7885  10C8  1D03               	skipz
  7886  10C9  28C5               	goto	u5065
  7887  10CA  0875               	movf	??_Lcd_Set_Cursor,w
  7888  10CB  00F6               	movwf	??_Lcd_Set_Cursor+1
  7889  10CC  0876               	movf	??_Lcd_Set_Cursor+1,w
  7890  10CD  00F8               	movwf	Lcd_Set_Cursor@z
  7891                           
  7892                           ;main.c: 84:         y = temp & 0x0F;
  7893  10CE  087A               	movf	Lcd_Set_Cursor@temp,w
  7894  10CF  390F               	andlw	15
  7895  10D0  00F5               	movwf	??_Lcd_Set_Cursor
  7896  10D1  0875               	movf	??_Lcd_Set_Cursor,w
  7897  10D2  00F9               	movwf	Lcd_Set_Cursor@y
  7898                           
  7899                           ;main.c: 85:         Lcd_Cmd(z);
  7900  10D3  0878               	movf	Lcd_Set_Cursor@z,w
  7901  10D4  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  7902                           
  7903                           ;main.c: 86:         Lcd_Cmd(y);
  7904  10D9  0879               	movf	Lcd_Set_Cursor@y,w
  7905  10DA  160A  158A  2734   	fcall	_Lcd_Cmd
  7906  10DD  0008               	return
  7907  10DE                     __end_of_Lcd_Set_Cursor:	
  7908                           
  7909                           	psect	text25
  7910  100B                     __ptext25:	
  7911 ;; *************** function _Lcd_Print_String *****************
  7912 ;; Defined at:
  7913 ;;		line 124 in file "main.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;  a               2    9[COMMON] PTR unsigned char 
  7916 ;;		 -> STR_7(3), main@current_limit(8), STR_5(12), STR_4(4), 
  7917 ;;		 -> main@current(8), STR_2(4), main@voltage(8), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  i               2    0[BANK0 ] int 
  7920 ;; Return value:  Size  Location     Type
  7921 ;;                  1    wreg      void 
  7922 ;; Registers used:
  7923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7924 ;; Tracked objects:
  7925 ;;		On entry : 0/0
  7926 ;;		On exit  : 0/0
  7927 ;;		Unchanged: 0/0
  7928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7929 ;;      Params:         2       0       0       0       0
  7930 ;;      Locals:         0       2       0       0       0
  7931 ;;      Temps:          3       0       0       0       0
  7932 ;;      Totals:         5       2       0       0       0
  7933 ;;Total ram usage:        7 bytes
  7934 ;; Hardware stack levels used:    1
  7935 ;; Hardware stack levels required when called:    2
  7936 ;; This function calls:
  7937 ;;		_Lcd_Print_Char
  7938 ;; This function is called by:
  7939 ;;		_main
  7940 ;; This function uses a non-reentrant model
  7941 ;;
  7942                           
  7943                           
  7944                           ;psect for function _Lcd_Print_String
  7945  100B                     _Lcd_Print_String:	
  7946                           
  7947                           ;main.c: 124: void Lcd_Print_String(char *a);main.c: 125: {;main.c: 126:     int i;;main
      +                          .c: 127:     for(i=0;a[i]!='\0';i++)
  7948                           
  7949                           ;incstack = 0
  7950                           ; Regs used in _Lcd_Print_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7951  100B  1283               	bcf	3,5	;RP0=0, select bank0
  7952  100C  1303               	bcf	3,6	;RP1=0, select bank0
  7953  100D  01A0               	clrf	Lcd_Print_String@i
  7954  100E  01A1               	clrf	Lcd_Print_String@i+1
  7955  100F                     l3003:	
  7956  100F  0820               	movf	Lcd_Print_String@i,w
  7957  1010  0779               	addwf	Lcd_Print_String@a,w
  7958  1011  00FC               	movwf	??_Lcd_Print_String+1
  7959  1012  087A               	movf	Lcd_Print_String@a+1,w
  7960  1013  00FB               	movwf	??_Lcd_Print_String
  7961  1014  1803               	skipnc
  7962  1015  0AFB               	incf	??_Lcd_Print_String,f
  7963  1016  1BA0               	btfsc	Lcd_Print_String@i,7
  7964  1017  03FB               	decf	??_Lcd_Print_String,f
  7965  1018  087B               	movf	??_Lcd_Print_String,w
  7966  1019  00FD               	movwf	??_Lcd_Print_String+2
  7967  101A  087D               	movf	??_Lcd_Print_String+2,w
  7968  101B  1283               	bcf	3,5	;RP0=0, select bank0
  7969  101C  1303               	bcf	3,6	;RP1=0, select bank0
  7970  101D  00FF               	movwf	127
  7971  101E  087C               	movf	??_Lcd_Print_String+1,w
  7972  101F  0084               	movwf	4
  7973  1020  120A  158A  2000  160A  118A  	fcall	stringtab
  7974  1025  3A00               	xorlw	0
  7975  1026  1903               	btfsc	3,2
  7976  1027  0008               	return
  7977                           
  7978                           ;main.c: 128:        Lcd_Print_Char(a[i]);
  7979  1028  0820               	movf	Lcd_Print_String@i,w
  7980  1029  0779               	addwf	Lcd_Print_String@a,w
  7981  102A  00FC               	movwf	??_Lcd_Print_String+1
  7982  102B  087A               	movf	Lcd_Print_String@a+1,w
  7983  102C  00FB               	movwf	??_Lcd_Print_String
  7984  102D  1803               	skipnc
  7985  102E  0AFB               	incf	??_Lcd_Print_String,f
  7986  102F  1BA0               	btfsc	Lcd_Print_String@i,7
  7987  1030  03FB               	decf	??_Lcd_Print_String,f
  7988  1031  087B               	movf	??_Lcd_Print_String,w
  7989  1032  00FD               	movwf	??_Lcd_Print_String+2
  7990  1033  087D               	movf	??_Lcd_Print_String+2,w
  7991  1034  1283               	bcf	3,5	;RP0=0, select bank0
  7992  1035  1303               	bcf	3,6	;RP1=0, select bank0
  7993  1036  00FF               	movwf	127
  7994  1037  087C               	movf	??_Lcd_Print_String+1,w
  7995  1038  0084               	movwf	4
  7996  1039  120A  158A  2000  160A  118A  	fcall	stringtab
  7997  103E  160A  118A  21C7  160A  118A  	fcall	_Lcd_Print_Char
  7998  1043  3001               	movlw	1
  7999  1044  1283               	bcf	3,5	;RP0=0, select bank0
  8000  1045  1303               	bcf	3,6	;RP1=0, select bank0
  8001  1046  07A0               	addwf	Lcd_Print_String@i,f
  8002  1047  1803               	skipnc
  8003  1048  0AA1               	incf	Lcd_Print_String@i+1,f
  8004  1049  3000               	movlw	0
  8005  104A  07A1               	addwf	Lcd_Print_String@i+1,f
  8006  104B  280F               	goto	l3003
  8007  104C                     __end_of_Lcd_Print_String:	
  8008                           
  8009                           	psect	text26
  8010  11C7                     __ptext26:	
  8011 ;; *************** function _Lcd_Print_Char *****************
  8012 ;; Defined at:
  8013 ;;		line 108 in file "main.c"
  8014 ;; Parameters:    Size  Location     Type
  8015 ;;  data            1    wreg     unsigned char 
  8016 ;; Auto vars:     Size  Location     Type
  8017 ;;  data            1    4[COMMON] unsigned char 
  8018 ;;  i               2    7[COMMON] int 
  8019 ;;  i               2    5[COMMON] int 
  8020 ;;  Upper_Nibble    1    3[COMMON] unsigned char 
  8021 ;;  Lower_Nibble    1    2[COMMON] unsigned char 
  8022 ;; Return value:  Size  Location     Type
  8023 ;;                  1    wreg      void 
  8024 ;; Registers used:
  8025 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8026 ;; Tracked objects:
  8027 ;;		On entry : 0/0
  8028 ;;		On exit  : 0/0
  8029 ;;		Unchanged: 0/0
  8030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8031 ;;      Params:         0       0       0       0       0
  8032 ;;      Locals:         7       0       0       0       0
  8033 ;;      Temps:          1       0       0       0       0
  8034 ;;      Totals:         8       0       0       0       0
  8035 ;;Total ram usage:        8 bytes
  8036 ;; Hardware stack levels used:    1
  8037 ;; Hardware stack levels required when called:    1
  8038 ;; This function calls:
  8039 ;;		_Lcd_SetBit
  8040 ;; This function is called by:
  8041 ;;		_Lcd_Print_String
  8042 ;; This function uses a non-reentrant model
  8043 ;;
  8044                           
  8045                           
  8046                           ;psect for function _Lcd_Print_Char
  8047  11C7                     _Lcd_Print_Char:	
  8048                           
  8049                           ;incstack = 0
  8050                           ; Regs used in _Lcd_Print_Char: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8051                           ;Lcd_Print_Char@data stored from wreg
  8052  11C7  00F4               	movwf	Lcd_Print_Char@data
  8053                           
  8054                           ;main.c: 108: void Lcd_Print_Char(char data);main.c: 109: {;main.c: 110:    char Lower_N
      +                          ibble,Upper_Nibble;;main.c: 111:    Lower_Nibble = data&0x0F;
  8055  11C8  0874               	movf	Lcd_Print_Char@data,w
  8056  11C9  390F               	andlw	15
  8057  11CA  00F1               	movwf	??_Lcd_Print_Char
  8058  11CB  0871               	movf	??_Lcd_Print_Char,w
  8059  11CC  00F2               	movwf	Lcd_Print_Char@Lower_Nibble
  8060                           
  8061                           ;main.c: 112:    Upper_Nibble = data&0xF0;
  8062  11CD  0874               	movf	Lcd_Print_Char@data,w
  8063  11CE  39F0               	andlw	240
  8064  11CF  00F1               	movwf	??_Lcd_Print_Char
  8065  11D0  0871               	movf	??_Lcd_Print_Char,w
  8066  11D1  00F3               	movwf	Lcd_Print_Char@Upper_Nibble
  8067                           
  8068                           ;main.c: 113:    RB1 = 1;
  8069  11D2  1283               	bcf	3,5	;RP0=0, select bank0
  8070  11D3  1303               	bcf	3,6	;RP1=0, select bank0
  8071  11D4  1486               	bsf	6,1	;volatile
  8072                           
  8073                           ;main.c: 114:    Lcd_SetBit(Upper_Nibble>>4);
  8074  11D5  0873               	movf	Lcd_Print_Char@Upper_Nibble,w
  8075  11D6  00F1               	movwf	??_Lcd_Print_Char
  8076  11D7  3004               	movlw	4
  8077  11D8                     u3955:	
  8078  11D8  1003               	clrc
  8079  11D9  0CF1               	rrf	??_Lcd_Print_Char,f
  8080  11DA  3EFF               	addlw	-1
  8081  11DB  1D03               	skipz
  8082  11DC  29D8               	goto	u3955
  8083  11DD  0871               	movf	??_Lcd_Print_Char,w
  8084  11DE  160A  158A  271A  160A  118A  	fcall	_Lcd_SetBit
  8085                           
  8086                           ;main.c: 115:    RB2 = 1;
  8087  11E3  1283               	bcf	3,5	;RP0=0, select bank0
  8088  11E4  1303               	bcf	3,6	;RP1=0, select bank0
  8089  11E5  1506               	bsf	6,2	;volatile
  8090                           
  8091                           ;main.c: 116:    for(int i=2130483; i<=0; i--) __nop();
  8092  11E6  3033               	movlw	51
  8093  11E7  00F5               	movwf	Lcd_Print_Char@i
  8094  11E8  3082               	movlw	130
  8095  11E9  00F6               	movwf	Lcd_Print_Char@i+1
  8096  11EA                     l51:	
  8097  11EA  0000               	nop
  8098  11EB  30FF               	movlw	255
  8099  11EC  07F5               	addwf	Lcd_Print_Char@i,f
  8100  11ED  1803               	skipnc
  8101  11EE  0AF6               	incf	Lcd_Print_Char@i+1,f
  8102  11EF  30FF               	movlw	255
  8103  11F0  07F6               	addwf	Lcd_Print_Char@i+1,f
  8104  11F1  0876               	movf	Lcd_Print_Char@i+1,w
  8105  11F2  3A80               	xorlw	128
  8106  11F3  00FF               	movwf	127
  8107  11F4  3080               	movlw	128
  8108  11F5  027F               	subwf	127,w
  8109  11F6  1D03               	skipz
  8110  11F7  29FA               	goto	u3965
  8111  11F8  3001               	movlw	1
  8112  11F9  0275               	subwf	Lcd_Print_Char@i,w
  8113  11FA                     u3965:	
  8114  11FA  1C03               	skipc
  8115  11FB  29EA               	goto	l51
  8116                           
  8117                           ;main.c: 117:    RB2 = 0;
  8118  11FC  1283               	bcf	3,5	;RP0=0, select bank0
  8119  11FD  1303               	bcf	3,6	;RP1=0, select bank0
  8120  11FE  1106               	bcf	6,2	;volatile
  8121                           
  8122                           ;main.c: 118:    Lcd_SetBit(Lower_Nibble);
  8123  11FF  0872               	movf	Lcd_Print_Char@Lower_Nibble,w
  8124  1200  160A  158A  271A  160A  118A  	fcall	_Lcd_SetBit
  8125                           
  8126                           ;main.c: 119:    RB2 = 1;
  8127  1205  1283               	bcf	3,5	;RP0=0, select bank0
  8128  1206  1303               	bcf	3,6	;RP1=0, select bank0
  8129  1207  1506               	bsf	6,2	;volatile
  8130                           
  8131                           ;main.c: 120:    for(int i=2130483; i<=0; i--) __nop();
  8132  1208  3033               	movlw	51
  8133  1209  00F7               	movwf	Lcd_Print_Char@i_65
  8134  120A  3082               	movlw	130
  8135  120B  00F8               	movwf	Lcd_Print_Char@i_65+1
  8136  120C                     l53:	
  8137  120C  0000               	nop
  8138  120D  30FF               	movlw	255
  8139  120E  07F7               	addwf	Lcd_Print_Char@i_65,f
  8140  120F  1803               	skipnc
  8141  1210  0AF8               	incf	Lcd_Print_Char@i_65+1,f
  8142  1211  30FF               	movlw	255
  8143  1212  07F8               	addwf	Lcd_Print_Char@i_65+1,f
  8144  1213  0878               	movf	Lcd_Print_Char@i_65+1,w
  8145  1214  3A80               	xorlw	128
  8146  1215  00FF               	movwf	127
  8147  1216  3080               	movlw	128
  8148  1217  027F               	subwf	127,w
  8149  1218  1D03               	skipz
  8150  1219  2A1C               	goto	u3975
  8151  121A  3001               	movlw	1
  8152  121B  0277               	subwf	Lcd_Print_Char@i_65,w
  8153  121C                     u3975:	
  8154  121C  1C03               	skipc
  8155  121D  2A0C               	goto	l53
  8156                           
  8157                           ;main.c: 121:    RB2 = 0;
  8158  121E  1283               	bcf	3,5	;RP0=0, select bank0
  8159  121F  1303               	bcf	3,6	;RP1=0, select bank0
  8160  1220  1106               	bcf	6,2	;volatile
  8161  1221  0008               	return
  8162  1222                     __end_of_Lcd_Print_Char:	
  8163                           
  8164                           	psect	text27
  8165  1000                     __ptext27:	
  8166 ;; *************** function _Lcd_Clear *****************
  8167 ;; Defined at:
  8168 ;;		line 63 in file "main.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;		None
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;		None
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  2   36[None  ] int 
  8175 ;; Registers used:
  8176 ;;		wreg, status,2, status,0, pclath, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8182 ;;      Params:         0       0       0       0       0
  8183 ;;      Locals:         0       0       0       0       0
  8184 ;;      Temps:          0       0       0       0       0
  8185 ;;      Totals:         0       0       0       0       0
  8186 ;;Total ram usage:        0 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    2
  8189 ;; This function calls:
  8190 ;;		_Lcd_Cmd
  8191 ;; This function is called by:
  8192 ;;		_main
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function _Lcd_Clear
  8198  1000                     _Lcd_Clear:	
  8199                           
  8200                           ;main.c: 65:     Lcd_Cmd(0);
  8201                           
  8202                           ;incstack = 0
  8203                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  8204  1000  3000               	movlw	0
  8205  1001  160A  158A  2734  160A  118A  	fcall	_Lcd_Cmd
  8206                           
  8207                           ;main.c: 66:     Lcd_Cmd(1);
  8208  1006  3001               	movlw	1
  8209  1007  160A  158A  2734   	fcall	_Lcd_Cmd
  8210  100A  0008               	return
  8211  100B                     __end_of_Lcd_Clear:	
  8212                           
  8213                           	psect	text28
  8214  1F34                     __ptext28:	
  8215 ;; *************** function _Lcd_Cmd *****************
  8216 ;; Defined at:
  8217 ;;		line 54 in file "main.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;  a               1    wreg     unsigned char 
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;  a               1    3[COMMON] unsigned char 
  8222 ;; Return value:  Size  Location     Type
  8223 ;;                  1    wreg      void 
  8224 ;; Registers used:
  8225 ;;		wreg, status,2, status,0, pclath, cstack
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8231 ;;      Params:         0       0       0       0       0
  8232 ;;      Locals:         1       0       0       0       0
  8233 ;;      Temps:          2       0       0       0       0
  8234 ;;      Totals:         3       0       0       0       0
  8235 ;;Total ram usage:        3 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; Hardware stack levels required when called:    1
  8238 ;; This function calls:
  8239 ;;		_Lcd_SetBit
  8240 ;; This function is called by:
  8241 ;;		_Lcd_Clear
  8242 ;;		_Lcd_Set_Cursor
  8243 ;;		_Lcd_Start
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           
  8248                           ;psect for function _Lcd_Cmd
  8249  1F34                     _Lcd_Cmd:	
  8250                           
  8251                           ;incstack = 0
  8252                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8253                           ;Lcd_Cmd@a stored from wreg
  8254  1F34  00F3               	movwf	Lcd_Cmd@a
  8255                           
  8256                           ;main.c: 54: void Lcd_Cmd(char a);main.c: 55: {;main.c: 56:     RB1 = 0;
  8257  1F35  1283               	bcf	3,5	;RP0=0, select bank0
  8258  1F36  1303               	bcf	3,6	;RP1=0, select bank0
  8259  1F37  1086               	bcf	6,1	;volatile
  8260                           
  8261                           ;main.c: 57:     Lcd_SetBit(a);
  8262  1F38  0873               	movf	Lcd_Cmd@a,w
  8263  1F39  160A  158A  271A  160A  158A  	fcall	_Lcd_SetBit
  8264                           
  8265                           ;main.c: 58:     RB2 = 1;
  8266  1F3E  1283               	bcf	3,5	;RP0=0, select bank0
  8267  1F3F  1303               	bcf	3,6	;RP1=0, select bank0
  8268  1F40  1506               	bsf	6,2	;volatile
  8269                           
  8270                           ;main.c: 59:         _delay((unsigned long)((4)*(4000000/4000.0)));
  8271  1F41  3006               	movlw	6
  8272  1F42  00F2               	movwf	??_Lcd_Cmd+1
  8273  1F43  3030               	movlw	48
  8274  1F44  00F1               	movwf	??_Lcd_Cmd
  8275  1F45                     u5487:	
  8276  1F45  0BF1               	decfsz	??_Lcd_Cmd,f
  8277  1F46  2F45               	goto	u5487
  8278  1F47  0BF2               	decfsz	??_Lcd_Cmd+1,f
  8279  1F48  2F45               	goto	u5487
  8280  1F49  0000               	nop
  8281                           
  8282                           ;main.c: 60:         RB2 = 0;
  8283  1F4A  1283               	bcf	3,5	;RP0=0, select bank0
  8284  1F4B  1303               	bcf	3,6	;RP1=0, select bank0
  8285  1F4C  1106               	bcf	6,2	;volatile
  8286  1F4D  0008               	return
  8287  1F4E                     __end_of_Lcd_Cmd:	
  8288                           
  8289                           	psect	text29
  8290  1F1A                     __ptext29:	
  8291 ;; *************** function _Lcd_SetBit *****************
  8292 ;; Defined at:
  8293 ;;		line 31 in file "main.c"
  8294 ;; Parameters:    Size  Location     Type
  8295 ;;  data_bit        1    wreg     unsigned char 
  8296 ;; Auto vars:     Size  Location     Type
  8297 ;;  data_bit        1    0[COMMON] unsigned char 
  8298 ;; Return value:  Size  Location     Type
  8299 ;;                  1    wreg      void 
  8300 ;; Registers used:
  8301 ;;		wreg
  8302 ;; Tracked objects:
  8303 ;;		On entry : 0/0
  8304 ;;		On exit  : 0/0
  8305 ;;		Unchanged: 0/0
  8306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8307 ;;      Params:         0       0       0       0       0
  8308 ;;      Locals:         1       0       0       0       0
  8309 ;;      Temps:          0       0       0       0       0
  8310 ;;      Totals:         1       0       0       0       0
  8311 ;;Total ram usage:        1 bytes
  8312 ;; Hardware stack levels used:    1
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_Lcd_Cmd
  8317 ;;		_Lcd_Start
  8318 ;;		_Lcd_Print_Char
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _Lcd_SetBit
  8324  1F1A                     _Lcd_SetBit:	
  8325                           
  8326                           ;incstack = 0
  8327                           ; Regs used in _Lcd_SetBit: [wreg]
  8328                           ;Lcd_SetBit@data_bit stored from wreg
  8329  1F1A  00F0               	movwf	Lcd_SetBit@data_bit
  8330                           
  8331                           ;main.c: 31: void Lcd_SetBit(char data_bit);main.c: 32: {;main.c: 33:     if(data_bit& 1
      +                          )
  8332  1F1B  1C70               	btfss	Lcd_SetBit@data_bit,0
  8333  1F1C  2F21               	goto	l23
  8334                           
  8335                           ;main.c: 34:         RB4 = 1;
  8336  1F1D  1283               	bcf	3,5	;RP0=0, select bank0
  8337  1F1E  1303               	bcf	3,6	;RP1=0, select bank0
  8338  1F1F  1606               	bsf	6,4	;volatile
  8339  1F20  2F24               	goto	l24
  8340  1F21                     l23:	
  8341                           ;main.c: 35:     else
  8342                           
  8343                           
  8344                           ;main.c: 36:         RB4 = 0;
  8345  1F21  1283               	bcf	3,5	;RP0=0, select bank0
  8346  1F22  1303               	bcf	3,6	;RP1=0, select bank0
  8347  1F23  1206               	bcf	6,4	;volatile
  8348  1F24                     l24:	
  8349                           
  8350                           ;main.c: 38:     if(data_bit& 2)
  8351  1F24  1CF0               	btfss	Lcd_SetBit@data_bit,1
  8352  1F25  2F28               	goto	l25
  8353                           
  8354                           ;main.c: 39:         RB5 = 1;
  8355  1F26  1686               	bsf	6,5	;volatile
  8356  1F27  2F29               	goto	l26
  8357  1F28                     l25:	
  8358                           ;main.c: 40:     else
  8359                           
  8360                           
  8361                           ;main.c: 41:         RB5 = 0;
  8362  1F28  1286               	bcf	6,5	;volatile
  8363  1F29                     l26:	
  8364                           
  8365                           ;main.c: 43:     if(data_bit& 4)
  8366  1F29  1D70               	btfss	Lcd_SetBit@data_bit,2
  8367  1F2A  2F2D               	goto	l27
  8368                           
  8369                           ;main.c: 44:         RB6 = 1;
  8370  1F2B  1706               	bsf	6,6	;volatile
  8371  1F2C  2F2E               	goto	l28
  8372  1F2D                     l27:	
  8373                           ;main.c: 45:     else
  8374                           
  8375                           
  8376                           ;main.c: 46:         RB6 = 0;
  8377  1F2D  1306               	bcf	6,6	;volatile
  8378  1F2E                     l28:	
  8379                           
  8380                           ;main.c: 48:     if(data_bit& 8)
  8381  1F2E  1DF0               	btfss	Lcd_SetBit@data_bit,3
  8382  1F2F  2F32               	goto	l29
  8383                           
  8384                           ;main.c: 49:         RB7 = 1;
  8385  1F30  1786               	bsf	6,7	;volatile
  8386  1F31  0008               	return
  8387  1F32                     l29:	
  8388                           ;main.c: 50:     else
  8389                           
  8390                           
  8391                           ;main.c: 51:         RB7 = 0;
  8392  1F32  1386               	bcf	6,7	;volatile
  8393  1F33  0008               	return
  8394  1F34                     __end_of_Lcd_SetBit:	
  8395  007E                     btemp	set	126	;btemp
  8396  007E                     wtemp0	set	126


Data Sizes:
    Strings     33
    Constant    144
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      78
    BANK1            80     66      66
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_6(CODE[5]), STR_3(CODE[5]), STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> main@current_limit(BANK1[8]), main@current(BANK1[8]), main@voltage(BANK1[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Print_String@a	PTR unsigned char  size(2) Largest target is 12
		 -> STR_7(CODE[3]), main@current_limit(BANK1[8]), STR_5(CODE[12]), STR_4(CODE[4]), 
		 -> main@current(BANK1[8]), STR_2(CODE[4]), main@voltage(BANK1[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Print_String
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _Lcd_Start->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Print_String->_Lcd_Print_Char
    _Lcd_Print_Char->_Lcd_SetBit
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_SetBit

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                33    33      0   32678
                                             35 BANK1     31    31      0
                          _Lcd_Clear
                   _Lcd_Print_String
                     _Lcd_Set_Cursor
                          _Lcd_Start
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   30639
                                              0 BANK1     35    30      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     396
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _Lcd_Start                                            4     4      0     244
                                              4 COMMON     4     4      0
                            _Lcd_Cmd
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     532
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Print_String                                     7     5      2     892
                                              9 COMMON     5     3      2
                                              0 BANK0      2     2      0
                     _Lcd_Print_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Print_Char                                       8     8      0     270
                                              1 COMMON     8     8      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                         _Lcd_SetBit
 ---------------------------------------------------------------------------------
 (2) _Lcd_SetBit                                           1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Print_String
     _Lcd_Print_Char
       _Lcd_SetBit
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_SetBit
   _Lcd_Start
     _Lcd_Cmd
       _Lcd_SetBit
     _Lcd_SetBit
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      4E       5       97.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     42      42       7       82.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Jul 02 21:48:26 2019

                         pc 0002                 __CFG_CP$OFF 0000                          l23 1F21  
                        l24 1F24                          l25 1F28                          l26 1F29  
                        l27 1F2D                          l51 11EA                          l28 1F2E  
                        l29 1F32                          l53 120C                ___awdiv@sign 0021  
                        fsr 0004         ___wmul@multiplicand 0072         __Umul8_16@word_mpld 0076  
                       l223 05D7                         l238 07C9                         l248 1F58  
                       l434 1066                         l442 13C8                         l435 1080  
                       l429 15B9                         l197 0273                         l439 1362  
                       l617 17F5                         l609 17DD                         l458 132A  
                       l722 144E                         l723 1458                         l715 1438  
                       l476 150F                         l581 169A                         l709 13F8  
                       l575 1623                         l737 1F81                         l579 16BC  
                       l683 0CAA                         l596 1775                         _RB1 0031  
                       _RB2 0032                         _RB4 0034                         _RB5 0035  
                       _RB6 0036                         _RB7 0037                __CFG_CPD$OFF 0000  
                       fsr0 0004                         indf 0000                ___awmod@sign 0076  
              __CFG_FOSC$HS 0000                ___flmul@aexp 0036                ___flmul@bexp 0037  
               _sprintf$784 00AA                ___flmul@sign 0031                ___flmul@temp 003C  
              ___flmul@prod 0038                __CFG_LVP$OFF 0000                ___fltol@exp1 005B  
                      l2101 1241                        l2103 124F                        l2113 1270  
                      l3003 100F                        l2203 1FBF                        l2221 15EE  
                      l2117 1278                        l2109 1265                        l2141 10F5  
                      l2133 10EF                        l3013 0222                        l2311 16CA  
                      l2303 16B6                        l2143 1103                        l2151 111C  
                      l2321 16ED                        l2225 15F1                        l2057 1F79  
                      l2129 10E8                        l3113 0584                        l2227 15F9  
                      l2171 1FDA                        l2091 1239                        l2155 1124  
                      l2147 1111                        l3107 0500                        l3043 02A1  
                      l3035 0275                        l3027 0235                        l2245 1618  
                      l2181 1FFB                        l2085 122E                        l3125 05C2  
                      l3053 02E7                        l3037 0291                        l3029 026F  
                      l2319 16EB                        l2255 162D                        l2415 09BF  
                      l3143 064C                        l3119 0586                        l3215 08F0  
                      l2361 179D                        l2329 16FD                        l2249 161B  
                      l2505 0C30                        l2433 09E4                        l2417 09C1  
                      l2177 1FF0                        l2169 1FCC                        l2193 1F98  
                      l3137 0639                        l3081 03EB                        l2355 1796  
                      l2347 1787                        l2339 1767                        l2363 179F  
                      l2523 0C7A                        l2435 09E6                        l2419 09C9  
                      l2195 1FA6                        l3171 07A3                        l2373 17AA  
                      l2293 16A5                        l2285 1669                        l2701 151E  
                      l2509 0C32                        l2445 09FC                        l2437 09EE  
                      l2613 0DA9                        l3157 0685                        l3149 0668  
                      l3093 0497                        l3085 043F                        l3077 03CA  
                      l3069 0341                        l2391 17ED                        l2295 16A7  
                      l2711 153B                        l2519 0C64                        l2199 1FB4  
                      l2631 0F4A                        l2623 0E5F                        l3191 07DF  
                      l2369 17A8                        l2529 0C93                        l3177 07B4  
                      l3097 04B2                        l2803 1092                        l2395 17F1  
                      l2707 1532                        l2619 0E34                        l3179 07B9  
                      l2813 137C                        l2733 1591                        l2725 1569  
                      l2637 0FD5                        l3277 0289                        l3197 020C  
                      l2903 13F0                        l2743 15A5                        l2655 148F  
                      l2591 0116                        l3199 07F7                        l2817 13A2  
                      l2841 12EF                        l2913 140B                        l2753 15C8  
                      l2745 15B5                        l2681 14E8                        l2673 14C8  
                      l2497 0BFC                        l2649 1F18                        l2923 144C  
                      l2915 141D                        l2691 14FB                        l2659 1498  
                      l2499 0C19                        l2837 12E6                        l2925 143D  
                      l2909 1407                        l2693 150B                        l2597 01C3  
                      l2791 12D2                        l2759 1F50                        l2953 10B9  
                      l2857 1316                        l2777 128D                        l2937 1475  
                      l2867 1339                        l2859 1326                        l2787 12C5  
                      l2779 129D                        l2883 115F                        l2877 1131  
                      l2879 1141                        l2887 116C                        STR_1 08B1  
              __CFG_WDTE$ON 0000                        STR_2 08BA                        STR_3 08B1  
                      STR_4 08B6                        STR_5 08A0                        STR_6 08AC  
                      STR_7 08BE           main@current_limit 00D6                        u3005 1FCF  
                      u3025 1FDB                        u3105 1FB5                        u3035 1FE7  
                      u3220 1689                        u3045 1FF1                        u4005 0082  
                      u3230 168A                        u3215 167D                        u4015 00D7  
                      u4105 0D6A                        u3075 1F9B                        u4035 0137  
                      u5005 1460                        u4045 0184                        u4205 0F62  
                      u4125 0DC1                        u3415 1789                        u3095 1FAC  
                      u4055 01CE                        u4215 0F9E                        u4135 0DFD  
                      u3361 1728                        u3353 170F                        u3345 16F1  
                      u3265 16AB                        u4225 0FD8                        u4145 0E37  
                      u3370 173C                        u3362 1729                        u3515 17C7  
                      u3371 173D                        u3363 172E                        u3372 1742  
                      u3364 172F                        u5045 10A0                        u3373 1743  
                      u3365 1734                        u4405 156B                        u4165 0E84  
                      u4085 0CE3                        u5205 03F6                        u3366 1735  
                      u4415 1580                        u4335 14FC                        u4175 0EC0  
                      u4095 0D1F                        u5215 044A                        u5065 10C5  
                      u4425 1593                        u2745 1F82                        u3705 0AAC  
                      u4185 0F0B                        u5305 05DF                        u4275 14CA  
                      u2835 1244                        u4701 13B3                        u4605 12C6  
                      u4525 1F59                        u4365 1514                        u4285 14DB  
                      u5325 0655                        u5245 0495                        u4702 13B4  
                      u4703 13B9                        u4535 1F60                        u4295 14E9  
                      u3815 0BE8                        u3735 0B09                        u2855 1250  
                      u2935 10F8                        u5415 07D0                        u5335 0662  
                      u4704 13BA                        u4705 13BF                        u4465 15A6  
                      u3825 0C00                        u2865 125C                        u5425 07DD  
                      u5265 0589                        u4706 13C0                        u3915 0C4F  
                      u2875 1266                        u2955 1109                        u5355 0705  
                      u5275 05B8                        u4645 108E                        u4805 132F  
                      u4565 1291                        u3925 0C6D                        u3845 0C0B  
                      u2965 1112                        u5365 076B                        u4495 15BE  
                      u3935 0C85                        u3775 0BA5                        u4681 138D  
                      u4745 12F8                        u4585 129F                        u5457 099B  
                      u4682 138E                        u3955 11D8                        u5467 1185  
                      u4683 1393                        u4595 12B4                        u3795 0BCA  
                      u4684 1394                        u3965 11FA                        u5477 1193  
                      u4685 1399                        u4845 1135                        u4925 1414  
                      u4686 139A                        u5487 1F45                        u3975 121C  
                      u4775 1317                        u4865 114F                        u4945 1430  
                      u4875 1160                        u3995 0028                        u4965 1445  
               main@current 00CE                __CFG_WRT$OFF 0000                        _main 08E3  
                      btemp 007E               __CFG_BOREN$ON 0000                        start 0000  
        Lcd_Print_Char@i_65 0077          Lcd_Print_Char@data 0074                 main@voltage 00C6  
           __end_of_Lcd_Cmd 1F4E                  _Lcd_SetBit 1F1A               ___fltol@sign1 005A  
           __end_of___fladd 1800                       ?_main 0070             __end_of___awdiv 127D  
           __end_of___flneg 1F0C             __end_of___awmod 1129             __end_of___flmul 0CB7  
           __end_of___flsub 08E3             __end_of___fltol 1348             __end_of___lldiv 12DB  
           ___awdiv@divisor 0077             __end_of___llmod 1175             __end_of___lwdiv 2000  
           __end_of___lwmod 1FC4             ___awdiv@counter 0020     __size_of_Lcd_Set_Cursor 004A  
                     _TRISB 0086               __CFG_PWRTE$ON 0000             __end_of_dpowers 08A0  
                     _scale 0CB7             __end_of_isdigit 1F1A                       main@f 00DE  
                     pclath 000A   __size_of_Lcd_Print_String 0041                       status 0003  
                     wtemp0 007E             __end_of_sprintf 07FC     __size_of_Lcd_Print_Char 005B  
           __initialization 07FC                __end_of_main 09A2                      ??_main 00C3  
        __size_of_Lcd_Clear 000B        __size_of__tdiv_to_l_ 00A9          __size_of_Lcd_Start 0052  
          ___llmod@dividend 0074                      ?_scale 003E            ___awdiv@dividend 0079  
                 ??_Lcd_Cmd 0071            __end_of___xxtofl 147E            __end_of__powers_ 0844  
                    ___flge 1348                      ___fleq 104C                   ??___fladd 005A  
                    ___wmul 1F4E                   ??___awdiv 007B                   ??___flneg 0074  
                 ??___awmod 0074                   ??___flmul 002C                   ??___flsub 007E  
                 ??___fltol 0055                   ??___lldiv 0078                   ??___llmod 0078  
                 ??___lwdiv 007A                   ??___lwmod 0074                 ?_Lcd_SetBit 0070  
                    _fround 0004            ___awdiv@quotient 0022             ___awmod@divisor 0070  
           ___awmod@counter 0075                   ??_isdigit 0070          __size_of__Umul8_16 0023  
                 ??_sprintf 00A5             Lcd_Set_Cursor@a 0077             Lcd_Set_Cursor@b 0074  
           Lcd_Set_Cursor@y 0079             Lcd_Set_Cursor@z 0078                  ___flge@ff1 0070  
                ___flge@ff2 0074                ___xxtofl@arg 007A                ___xxtofl@exp 0079  
              ___xxtofl@val 0070                  ___fleq@ff1 0070                  ___fleq@ff2 0074  
   __end_of__initialization 07FC                  ___flneg@f1 0070           __end_of_Lcd_Clear 100B  
                ___fltol@f1 0051           __end_of_Lcd_Start 11C7              __pcstackCOMMON 0070  
             __end_of_scale 1000              _Lcd_Set_Cursor 1094                  __div_to_l_ 1527  
           __div_to_l_@exp1 0025             __div_to_l_@cntr 0024                     ??_scale 0042  
           __div_to_l_@quot 0020            _Lcd_Print_String 100B         __size_of_Lcd_SetBit 001A  
             __div_to_l_@f1 0070               __div_to_l_@f2 0074              _Lcd_Print_Char 11C7  
         __end_of__Umul8_16 1F92                  __pmaintext 08E3                     ?___flge 0070  
                   ?___fleq 0070                     ?___wmul 0070                     ?_fround 003E  
        Lcd_SetBit@data_bit 0070      __end_of_Lcd_Set_Cursor 10DE                   ?___xxtofl 0070  
                __stringtab 0800             Lcd_Print_Char@i 0075                     _Lcd_Cmd 1F34  
    __end_of_Lcd_Print_Char 1222           __end_of__npowers_ 0878             __size_of___flge 0093  
           __size_of___fleq 0048                     ___fladd 15D1                     ___awdiv 1222  
                   ___flneg 1F03                     ___awmod 10DE                     ___flmul 09A2  
                   ___flsub 08C1                     ___fltol 12DB                     ___lldiv 127D  
           __size_of___wmul 0021                     ___llmod 1129                     ___lwdiv 1FC4  
                _fround$781 004D                  _fround$782 0049                     ___lwmod 1F92  
           __size_of_fround 0201             ?_Lcd_Set_Cursor 0074                     __ptext1 0205  
                   __ptext2 0CB7                     __ptext3 10DE                     __ptext4 1222  
                   __ptext5 1F0C                     __ptext6 0004                     __ptext7 1F92  
                   __ptext8 1FC4                     __ptext9 09A2                 ?__div_to_l_ 0070  
                   _dpowers 0878                     _isdigit 1F0C                  ??___xxtofl 0074  
          ___awmod@dividend 0072                     _sprintf 0205        end_of_initialization 07FC  
           ?_Lcd_Print_Char 0070             ___lldiv@divisor 0070             ___lldiv@counter 007D  
            __tdiv_to_l_@f1 0070              __tdiv_to_l_@f2 0074                ??_Lcd_SetBit 0070  
             ??__tdiv_to_l_ 0078                 ___fladd@grs 0065               ___xxtofl@sign 0078  
               ___flmul@grs 0032          __end_of_Lcd_SetBit 1F34         __size_of__div_to_l_ 00AA  
                 _Lcd_Clear 1000                   _Lcd_Start 1175              __end_of___flge 13DB  
            __end_of___fleq 1094              __end_of___wmul 1F6F    __end_of_Lcd_Print_String 104C  
            __end_of_fround 0205         start_initialization 07FC         __end_of__tdiv_to_l_ 1527  
           ___llmod@divisor 0070           Lcd_Print_String@a 0079           Lcd_Print_String@i 0020  
           ___llmod@counter 0079                  ?_Lcd_Clear 0070                    ??___flge 0078  
                  ??___fleq 0078                    ??___wmul 0074                  ?_Lcd_Start 0070  
                 __Umul8_16 1F6F                    ??_fround 0042  Lcd_Print_Char@Lower_Nibble 0072  
             sprintf@tmpval 00B7                   ___fladd@a 0056                   ___fladd@b 0052  
                fround@prec 0051                   ___flmul@a 0028                   ___flmul@b 0024  
                 ___flsub@a 0066                   ___flsub@b 006A                   ___latbits 0002  
             __pcstackBANK0 0020               __pcstackBANK1 00A0           __size_of___xxtofl 00A3  
                  ?_Lcd_Cmd 0070                 sprintf@flag 00AF                 sprintf@eexp 00B5  
               sprintf@fval 00BE                 sprintf@prec 00BB            ___lwdiv@dividend 0078  
          ??_Lcd_Set_Cursor 0075                    ?___fladd 0052                    ?___awdiv 0077  
                  ?___flneg 0070                    ?___awmod 0070                    ?___flmul 0024  
                  ?___flsub 0066                    ?___fltol 0051                    ?___lldiv 0070  
                  ?___llmod 0070                   __npowers_ 0844                  ?__Umul8_16 0070  
                  ?___lwdiv 0076                    ?___lwmod 0070                   __pstrings 0800  
               __tdiv_to_l_ 147E                ??__div_to_l_ 0078                    ?_isdigit 0070  
                 _scale$783 004C            ??_Lcd_Print_Char 0071            ___lwdiv@quotient 007B  
                  ?_sprintf 00A0              __size_of_scale 0349              ___wmul@product 0074  
                  Lcd_Cmd@a 0073          __end_of__div_to_l_ 15D1                 ??_Lcd_Clear 0074  
               ??_Lcd_Start 0074                 __stringbase 080F           ___wmul@multiplier 0070  
          __size_of_Lcd_Cmd 001A                 ??__Umul8_16 0072            __size_of___fladd 022F  
          __size_of___awdiv 005B            __size_of___flneg 0009            __size_of___awmod 004B  
          __size_of___flmul 0315            __size_of___flsub 0022            __size_of___fltol 006D  
          __size_of___lldiv 005E            __size_of___llmod 004C            __size_of___lwdiv 003C  
          __size_of___lwmod 0032          __end_of__stringtab 0810                 _isdigit$596 0070  
         ?_Lcd_Print_String 0079                  sprintf@val 00B1                    ___xxtofl 13DB  
        ??_Lcd_Print_String 007B            __size_of_isdigit 000E             ___lwdiv@divisor 0076  
           ___lwdiv@counter 007D                    __ptext10 1F6F                    __ptext11 147E  
                  __ptext20 1F03                    __ptext12 1527                    __ptext21 1348  
                  __ptext13 13DB                    __ptext22 104C                    __ptext14 1F4E  
                  __ptext23 1175                    __ptext15 1129                    __ptext24 1094  
                  __ptext16 127D                    __ptext25 100B                    __ptext17 12DB  
                  __ptext26 11C7                    __ptext18 08C1                    __ptext27 1000  
                  __ptext19 15D1                    __ptext28 1F34                    __ptext29 1F1A  
                  __powers_ 0810            __size_of_sprintf 05F7               __size_of_main 00BF  
Lcd_Print_Char@Upper_Nibble 0073                    isdigit@c 0071                    scale@scl 0050  
                 sprintf@ap 00AE            __tdiv_to_l_@exp1 0025            __tdiv_to_l_@cntr 0024  
                 sprintf@sp 00BD            __tdiv_to_l_@quot 0020            ___lwmod@dividend 0072  
          ___lldiv@dividend 0074                   stringcode 080A          Lcd_Set_Cursor@temp 007A  
              ?__tdiv_to_l_ 0070      __Umul8_16@multiplicand 0070                    sprintf@c 00C2  
                  sprintf@f 00A0            ___lldiv@quotient 0079             ___lwmod@divisor 0070  
           ___lwmod@counter 0075                    stringdir 080A                    stringtab 0800  
             ___fladd@signs 0062                ___fladd@aexp 0063                ___fladd@bexp 0064  
      __Umul8_16@multiplier 0078           __Umul8_16@product 0074  
